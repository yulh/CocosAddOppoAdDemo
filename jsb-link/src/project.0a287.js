window.__require = function e(t, i, o) {
function n(a, c) {
if (!i[a]) {
if (!t[a]) {
var r = a.split("/");
r = r[r.length - 1];
if (!t[r]) {
var l = "function" == typeof __require && __require;
if (!c && l) return l(r, !0);
if (s) return s(r, !0);
throw new Error("Cannot find module '" + a + "'");
}
a = r;
}
var d = i[a] = {
exports: {}
};
t[a][0].call(d.exports, function(e) {
return n(t[a][1][e] || e);
}, d, d.exports, e, t, i, o);
}
return i[a].exports;
}
for (var s = "function" == typeof __require && __require, a = 0; a < o.length; a++) n(o[a]);
return n;
}({
ASCAd: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5d499SFLOdGA7IAL4qDpSs3", "ASCAd");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("./network/Network"), n = e("./tools/SdkTools"), s = e("./ads/bannerAd/BannerController"), a = e("./ads/IntersAd/IntersController"), c = e("./ads/videoAd/VideoController"), r = e("./navigate/NavigateController"), l = e("./ads/nativeAd/NativeController"), d = e("./tools/OtherFunctions"), h = e("./recordShare/RecordAndShare"), u = e("./ads/boxAd/BoxController"), w = e("./ads/blockAd/BlockController"), m = e("./ui/CocosUI"), g = e("./sdkConfig"), p = function() {
function e() {
this.hasBeenInit = !1;
this.channelArray = [ "OPPO", "VIVO", "Tiktok", "QQ", "Test", "Android", "IOS", "WX", "KS", "HW", "XM" ];
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.initAd = function(e) {
console.log("ASCSDK", "initAd");
console.log("ASCSDK", "当前SDKVersion：" + g.default.SDKVersion);
console.log("ASCSDK", "当前渠道：" + this.channelArray[n.default.getPlatform()]);
if (this.hasBeenInit) console.log("ASCSDK", "重复初始化initAd return================"); else {
this.hasBeenInit = !0;
n.default.getPlatform() != n.Game_Platform.GP_Test ? o.default.getInstance().login(function(t) {
t && (e ? o.default.getInstance().getSDKOnlineConfig(e) : o.default.getInstance().getSDKOnlineConfig());
}) : e && e(!0);
}
};
e.prototype.showBanner = function() {
console.log("ASCSDK", "showBanner");
s.default.getInstance().showBanner();
};
e.prototype.hideBanner = function() {
console.log("ASCSDK", "hideBanner");
s.default.getInstance().hideBanner();
};
e.prototype.getIntersFlag = function() {
console.log("ASCSDK", "getIntersFlag:" + a.default.getInstance().getIntersFlag());
return a.default.getInstance().getIntersFlag();
};
e.prototype.showInters = function() {
console.log("ASCSDK", "showInters");
a.default.getInstance().showInters();
};
e.prototype.getVideoFlag = function() {
console.log("ASCSDK", "getVideoFlag:" + c.default.getInstance().getVideoFlag());
return c.default.getInstance().getVideoFlag();
};
e.prototype.showVideo = function(e) {
console.log("ASCSDK", "showVideo");
c.default.getInstance().showVideo(e);
};
e.prototype.getNativeIconFlag = function() {
console.log("ASCSDK", "getNativeIconFlag:" + l.default.getInstance().getIconNativeFlag());
return l.default.getInstance().getIconNativeFlag();
};
e.prototype.showNativeIcon = function(e, t, i, o) {
console.log("ASCSDK", "showNativeICON");
l.default.getInstance().showNativeIcon(e, t, i, o);
};
e.prototype.hideNativeIcon = function() {
console.log("ASCSDK", "hideNativeIcon");
l.default.getInstance().hideNativeIcon();
};
e.prototype.getImageNativeFlag = function() {
console.log("ASCSDK", "getImageNativeFlag:" + l.default.getInstance().getImageNativeFlag());
return l.default.getInstance().getImageNativeFlag();
};
e.prototype.showNativeImage = function(e, t, i, o) {
console.log("ASCSDK", "showNativeImage");
l.default.getInstance().showNativeImage(e, t, i, o);
};
e.prototype.hideNativeImage = function() {
console.log("ASCSDK", "hideNativeImage");
l.default.getInstance().hideNativeImage();
};
e.prototype.getNativeInfo = function() {
console.log("ASCSDK", "getNativeInfo");
console.log(JSON.stringify(l.default.getInstance().getNativeInfo()));
return l.default.getInstance().getNativeInfo();
};
e.prototype.reportNative = function(e) {
console.log("ASCSDK", "reportNativeShow");
l.default.getInstance().reportNativeShow(e);
};
e.prototype.nativeClick = function(e) {
console.log("ASCSDK", "reportNativeClick");
l.default.getInstance().reportNativeClick(e);
};
e.prototype.getNavigateIconFlag = function() {
console.log("ASCSDK", "getNavigateIconFlag:" + r.default.getInstance().getNavigateIconFlag());
return r.default.getInstance().getNavigateIconFlag();
};
e.prototype.showNavigateIcon = function(e, t, i, o) {
console.log("ASCSDK", "showNavigateIcon");
r.default.getInstance().showNavigateIcon(e, t, i, o);
};
e.prototype.hideNavigateIcon = function() {
console.log("ASCSDK", "hideNavigateIcon");
r.default.getInstance().hideNavigateIcon();
};
e.prototype.getNavigateGroupFlag = function() {
console.log("ASCSDK", "getNavigateGroupFlag:" + r.default.getInstance().getNavigateGroupFlag());
return r.default.getInstance().getNavigateGroupFlag();
};
e.prototype.showNavigateGroup = function(e, t) {
console.log("ASCSDK", "showNavigateGroup");
r.default.getInstance().showNavigateGroup(e, t);
};
e.prototype.hideNavigateGroup = function() {
console.log("ASCSDK", "hideNavigateGroup");
r.default.getInstance().hideNavigateGroup();
};
e.prototype.getNavigateSettleFlag = function() {
console.log("ASCSDK", "getNavigateSettleFlag:" + r.default.getInstance().getNavigateSettleFlag());
return r.default.getInstance().getNavigateSettleFlag();
};
e.prototype.showNavigateSettle = function(e, t, i) {
console.log("ASCSDK", "showNavigateSettle");
r.default.getInstance().showNavigateSettle(e, t, i);
};
e.prototype.hideNavigateSettle = function() {
console.log("ASCSDK", "hideNavigateSettle");
r.default.getInstance().hideNavigateSettle();
};
e.prototype.getNavigateBoxBannerFlag = function() {
console.log("ASCSDK", "getNavigateBoxBannerFlag:" + r.default.getInstance().getNavigateBoxBannerFlag());
return r.default.getInstance().getNavigateBoxBannerFlag();
};
e.prototype.showNavigateBoxBanner = function() {
console.log("ASCSDK", "showNavigateBoxBanner");
r.default.getInstance().showNavigateBoxBanner();
};
e.prototype.hideNavigateBoxBanner = function() {
console.log("ASCSDK", "hideNavigateBoxBanner");
r.default.getInstance().hideNavigateBoxBanner();
};
e.prototype.getNavigateBoxPortalFlag = function() {
console.log("ASCSDK", "getNavigateBoxPortalFlag:" + r.default.getInstance().getNavigateBoxPortalFlag());
return r.default.getInstance().getNavigateBoxPortalFlag();
};
e.prototype.showNavigateBoxPortal = function() {
console.log("ASCSDK", "showNavigateBoxPortal");
r.default.getInstance().showNavigateBoxPortal();
};
e.prototype.setGroup = function(e) {
console.log("ASCSDK", "setGroup");
m.default.getInstance().setGroup(e);
};
e.prototype.getDeskTopFlag = function(e) {
console.log("ASCSDK", "getDeskTopFlag");
return d.default.getInstance().getDeskTopFlag(e);
};
e.prototype.addDeskTop = function(e) {
console.log("ASCSDK", "addDeskTop");
d.default.getInstance().addDeskTop(e);
};
e.prototype.showToast = function(e) {
console.log("ASCSDK", "showToast");
d.default.getInstance().showToast(e);
};
e.prototype.phoneVibrate = function(e) {
console.log("ASCSDK", "phoneVibrate", e);
d.default.getInstance().phoneVibrate(e);
};
e.prototype.reportMonitor = function() {
console.log("ASCSDK", "reportMonitor");
d.default.getInstance().reportMonitor();
};
e.prototype.share = function(e) {
console.log("ASCSDK", "share", e);
h.default.getInstance().share(e);
};
e.prototype.startGameVideo = function(e) {
console.log("ASCSDK", "startGameVideo", e);
h.default.getInstance().startGameVideo(e);
};
e.prototype.pauseGameVideo = function() {
console.log("ASCSDK", "pauseGameVideo");
h.default.getInstance().pauseGameVideo();
};
e.prototype.resumeGameVideo = function() {
console.log("ASCSDK", "resumeGameVideo");
h.default.getInstance().resumeGameVideo();
};
e.prototype.stopGameVideo = function(e) {
console.log("ASCSDK", "stopGameVideo");
h.default.getInstance().stopGameVideo(e);
};
e.prototype.shareVideo = function(e, t, i, o, n) {
console.log("ASCSDK", "shareVideo");
h.default.getInstance().shareVideo(e, t, i, o, n);
};
e.prototype.recordClip = function(e, t) {
console.log("ASCSDK", "recordClip");
h.default.getInstance().recordClip(e, t);
};
e.prototype.clipVideo = function(e, t) {
console.log("ASCSDK", "clipVideo");
h.default.getInstance().clipVideo(e, t);
};
e.prototype.showMoreGames = function(e, t, i, o, n) {
console.log("ASCSDK", "showMoreGames");
h.default.getInstance().showMoreGames(e, t, i, o, n);
};
e.prototype.hideMoreGames = function() {
console.log("ASCSDK", "hideMoreGames");
h.default.getInstance().hideMoreGames();
};
e.prototype.showMoreGamesModal = function() {
console.log("ASCSDK", "showMoreGamesModal");
h.default.getInstance().showMoreGamesModal();
};
e.prototype.showMoreGamesBanner = function() {
console.log("ASCSDK", "showMoreGamesBanner");
h.default.getInstance().showMoreGamesBanner();
};
e.prototype.hideMoreGamesBanner = function() {
console.log("ASCSDK", "hideMoreGamesBanner");
h.default.getInstance().hideMoreGamesBanner();
};
e.prototype.showFavoriteGuide = function(e, t, i) {
console.log("ASCSDK", "showFavoriteGuide");
h.default.getInstance().showFavoriteGuide(e, t, i);
};
e.prototype.getUserData = function(e) {
console.log("ASCSDK", "getUserData");
o.default.getInstance().getUserData(e);
};
e.prototype.getUserInfo = function(e) {
console.log("ASCSDK", "getUserInfo");
o.default.getInstance().getUserInfo(e);
};
e.prototype.mustLogin = function(e) {
console.log("ASCSDK", "mustLogin");
o.default.getInstance().mustLogin(e);
};
e.prototype.getBoxFlag = function() {
console.log("ASCSDK", "getBoxFlag:" + u.default.getInstance().getBoxFlag());
return u.default.getInstance().getBoxFlag();
};
e.prototype.showAppBox = function() {
console.log("ASCSDK", "showAppBox");
u.default.getInstance().showAppBox();
};
e.prototype.getBlockFlag = function() {
console.log("ASCSDK", "getBlockFlag:" + w.default.getInstance().getBlockFlag());
return w.default.getInstance().getBlockFlag();
};
e.prototype.showBlock = function(e, t, i, o) {
console.log("ASCSDK", "showBlock");
w.default.getInstance().showBlock(e, t, i, o);
};
e.prototype.hideBlock = function() {
console.log("ASCSDK", "hideBlock");
w.default.getInstance().hideBlock();
};
e.prototype.getVideoIntersFlag = function() {
console.log("ASCSDK", "getVideoIntersFlag:" + c.default.getInstance().getVideoIntersFlag());
return c.default.getInstance().getVideoIntersFlag();
};
e.prototype.showVideoInters = function(e) {
console.log("ASCSDK", "showVideoInters");
c.default.getInstance().showVideoInters(e);
};
e.prototype.exitTheGame = function() {
console.log("ASCSDK", "exitTheGame");
d.default.getInstance().exitTheGame();
};
e.prototype.reportAnalytics = function(e, t) {
console.log("ASCSDK", "reportAnalytics");
d.default.getInstance().reportAnalytics(e, t);
};
e.prototype.showAuthentication = function(e) {
console.log("ASCSDK", "showAuthentication");
d.default.getInstance().showAuthentication(e);
};
e.prototype.TouristModel = function(e) {
console.log("ASCSDK", "TouristModel");
d.default.getInstance().TouristModel(e);
};
e.prototype.showNativeAd = function(e, t, i, o) {
console.log("ASCSDK", "showNativeAd");
l.default.getInstance().showNativeAd(e, t, i, o);
};
e.prototype.getShowMoreGameFlag = function() {
console.log("ASCSDK", "getShowMoreGameFlag");
return d.default.getInstance().getShowMoreGameFlag();
};
e.prototype.showOPPOMoreGame = function() {
console.log("ASCSDK", "showOPPOMoreGame");
d.default.getInstance().showOPPOMoreGame();
};
e.prototype.hasNetwork = function(e) {
console.log("ASCSDK", "hasNetwork:" + d.default.getInstance().hasNetwork(e));
d.default.getInstance().hasNetwork(e);
};
e.prototype.showReviewAlert = function() {
console.log("ASCSDK", "showReviewAlert");
d.default.getInstance().showReviewAlert();
};
return e;
}();
i.default = p;
cc._RF.pop();
}, {
"./ads/IntersAd/IntersController": "IntersController",
"./ads/bannerAd/BannerController": "BannerController",
"./ads/blockAd/BlockController": "BlockController",
"./ads/boxAd/BoxController": "BoxController",
"./ads/nativeAd/NativeController": "NativeController",
"./ads/videoAd/VideoController": "VideoController",
"./navigate/NavigateController": "NavigateController",
"./network/Network": "Network",
"./recordShare/RecordAndShare": "RecordAndShare",
"./sdkConfig": "sdkConfig",
"./tools/OtherFunctions": "OtherFunctions",
"./tools/SdkTools": "SdkTools",
"./ui/CocosUI": "CocosUI"
} ],
AchieveNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b170dzQE4FDyppOw/h0/S68", "AchieveNodeJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
achievebg: cc.Prefab
},
onLoad: function() {
this.node.setContentSize(window.screenWidth, window.screenHight);
this.view = this.node.getChildByName("scrollview").getChildByName("view");
this.content = this.view.getChildByName("content");
this.lamp = this.node.getChildByName("line").getChildByName("lamp");
this.cunt = 0;
this.schedule(function() {
this.cunt++;
this.cunt >= 4 && (this.cunt = 0);
this.lamp.getComponent(cc.Sprite).spriteFrame = window.AchieveLamp[this.cunt];
}, .5);
this.creatAchieve();
},
onEnable: function() {
o.default.getInstance().reportAnalytics("View_Show_V2", "AchievementUI_Show", 1);
5 == window.platform && window.Parent.hidePushicon();
},
start: function() {
this.reFlash();
},
close: function(e) {
0 != e && window.Parent.ButtonSounds();
if (window.Parent.hasvideoinsert()) {
window.Parent.audioEngine.setVolume(0);
window.isShowingVideoInsert = !0;
window.videoInsertCallBack = function() {
window.Parent.audioEngine.setVolume(1);
window.isShowingVideoInsert = !1;
};
}
window.Parent.showInsertAD();
window.Home.isshowBlockAd = !1;
this.node.active = !1;
this.scheduleOnce(function() {
this.node.destroy();
}, 2);
5 == window.platform && window.Parent.showPushicon(256, 256, 200, 1500);
},
creatAchieve: function() {
this.AchieveArr = [];
this.SortArr = [];
this.content.height = 280 * window.AchieveTable.length + 400;
this.Tablenum = window.AchieveTable.length;
3 != window.platform && (this.Tablenum = window.AchieveTable.length - 1);
for (var e = 0; e < this.Tablenum; e++) {
var t = cc.instantiate(this.achievebg);
t.setPosition(0, -220 - 280 * e);
t.getChildByName("title").getComponent(cc.Sprite).spriteFrame = window.title[e];
t.getComponent("achievebgJS").Number = e;
t.getComponent("achievebgJS").Achieve = this;
this.content.addChild(t);
this.AchieveArr[e] = t;
this.SortArr[e] = t;
}
},
reFlash: function() {
for (var e = 0; e < this.Tablenum; e++) {
this.AchieveArr[e].active = !1;
this.AchieveArr[e].active = !0;
}
this.sortBygetButton();
},
sortBygetButton: function() {
for (var e = this.Tablenum; e > 0; ) {
for (var t = this.SortArr.length - 1; t > 0; t--) {
var i = this.SortArr[t].getChildByName("getButton").active, o = this.SortArr[t - 1].getChildByName("getButton").active;
if (i && !o) {
var n = this.SortArr[t].y;
this.SortArr[t].y = this.SortArr[t - 1].y;
this.SortArr[t - 1].y = n;
n = this.SortArr[t];
this.SortArr[t] = this.SortArr[t - 1];
this.SortArr[t - 1] = n;
}
}
e--;
}
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
AndroidSDK: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "76eecaDkjZGPK/Ct5q26oc0", "AndroidSDK");
cc.Class({
extends: cc.Component,
properties: {},
usePropEvent: function(e, t, i) {
cc.sys.platform == cc.sys.ANDROID && 2 == window.platform && jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"userUseBoosterInfo","calling_method_params":{"booster_item":' + e + '"booster_num":' + t + '"booster_price":' + i + "}}");
},
showVideo: function(e) {
if (cc.sys.platform == cc.sys.ANDROID && 2 == window.platform) {
console.log("播放视屏广告");
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"showVideo","calling_method_params":' + e + "}");
}
},
hasVideo: function() {
if (cc.sys.platform == cc.sys.ANDROID && 2 == window.platform) return jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "SendMessageGetAdFlag", "(Ljava/lang/String;)Z", "getVideoFlag");
},
hasInsert: function() {
if (cc.sys.platform == cc.sys.ANDROID && 2 == window.platform) return jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "SendMessageGetAdFlag", "(Ljava/lang/String;)Z", "getIntersFlag");
},
showInters: function() {
cc.sys.platform == cc.sys.ANDROID && 2 == window.platform && jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", "{'calling_method_name':'showInters','calling_method_params':0}");
},
exitTheGame: function() {
if (cc.sys.platform == cc.sys.ANDROID && 2 == window.platform) {
console.log("exit");
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", "{'calling_method_name':'exit'}");
}
},
shakePhone: function(e) {
cc.sys.platform == cc.sys.ANDROID && 2 == window.platform && jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"shakePhone","calling_method_params":' + e + "}");
}
});
cc._RF.pop();
}, {} ],
AppNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0a772HViUVNJINBhmtqZuR2", "AppNodeJS");
(function(e) {
e && e.__esModule;
})(e("./../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
appSP: cc.Node,
curAppSp: cc.SpriteFrame
},
onEnable: function() {},
UpdateSP: function() {
this.appSP.getComponent(cc.Sprite).spriteFrame = this.curAppSp;
},
OnClickMore: function() {
window.Parent.reportAnalytics("hutui_Click");
if (3 == window.platform) {
this.isWin;
"ios" !== tt.getSystemInfoSync().platform && tt.showMoreGamesModal({
appLaunchOptions: [ {
appId: "ttXXXXXX",
query: "foo=bar&baz=qux",
extraData: {}
} ],
success: function(e) {
console.log("success", e.errMsg);
},
fail: function(e) {
console.log("fail", e.errMsg);
}
});
}
}
});
cc._RF.pop();
}, {
"./../Help/reportAnalytics": "reportAnalytics"
} ],
AudioSourcesMamager: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "30992zhI0hM4JPWSg7+eqwD", "AudioSourcesMamager");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var c = e.length - 1; c >= 0; c--) (n = e[c]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./../Help/DonaldManager"), a = e("./../Help/audioEngineMamager"), c = cc._decorator, r = c.ccclass, l = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.Fanye_AU = null;
t.button_AU = null;
t.OpenLight_AU = null;
t.star_AU = null;
t.diamond_AU = null;
t.score_AU = null;
t.time_AU = null;
t.faill_AU = null;
t.Bubole_AU = null;
t.Lottery_AU = null;
t.Wow_AU = null;
t.Unlock_AU = null;
t.bagClick_AU = null;
t.qiehuan_AU = null;
t.ios_video = null;
t.GetRole_AU = null;
t.NewWOW2_AU = null;
t.ElectricityAU = null;
t.LockShowAU = null;
t.LockBreakAU = null;
t.LockVideoAU = null;
t.startGame_AU = null;
t.MyMusic_AU2 = null;
t.soundsName = [ "Fanye_AU", "button_AU", "OpenLight_AU", "star_AU", "diamond_AU", "score_AU", "time_AU", "faill_AU", "Bubole_AU", "Lottery_AU", "Wow_AU", "Unlock_AU", "bagClick_AU", "qiehuan_AU", "ios_video", "GetRole_AU", "NewWOW2_AU", "ElectricityAU", "LockShowAU", "LockBreakAU", "LockVideoAU", "startGame_AU", "MyMusic_AU2" ];
return t;
}
i = t;
t.getInstance = function() {
i.instance || (i.instance = new i());
return i.instance;
};
t.prototype.SoundsInit = function() {
for (var e = 0; e < this.soundsName.length; e++) this.DonaldSounds(this.soundsName[e]);
};
t.prototype.DonaldSounds = function(e) {
var t = this;
s.default.getInstance().LoadMusic("https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/AudioMgr2/" + e + ".mp3", "" + e, function(i) {
t[e] = i;
console.log(e, "下载成功");
});
};
t.prototype.Fanye_AUSounds = function() {
null != this.Fanye_AU && a.default.getInstance().playEffect(this.Fanye_AU, 1, !1);
};
t.prototype.button_AUSounds = function() {
null != this.button_AU && a.default.getInstance().playEffect(this.button_AU, 1, !1);
};
t.prototype.OpenLight_AUSounds = function() {
null != this.OpenLight_AU && a.default.getInstance().playEffect(this.OpenLight_AU, 1, !1);
};
t.prototype.star_AUSounds = function() {
null != this.star_AU && a.default.getInstance().playEffect(this.star_AU, 1, !1);
};
t.prototype.diamond_AUSounds = function() {
null != this.diamond_AU && a.default.getInstance().playEffect(this.diamond_AU, 1, !1);
};
t.prototype.score_AUSounds = function() {
null != this.score_AU && a.default.getInstance().playEffect(this.score_AU, 1, !1);
};
t.prototype.time_AUSounds = function() {
null != this.time_AU && (this.Timesound = a.default.getInstance().playEffect(this.time_AU, 1, !1));
};
t.prototype.faill_AUSounds = function() {
null != this.faill_AU && a.default.getInstance().playEffect(this.faill_AU, 1, !1);
};
t.prototype.Bubole_AUSounds = function() {
null != this.Bubole_AU && a.default.getInstance().playEffect(this.Bubole_AU, 1, !1);
};
t.prototype.Lottery_AUSounds = function() {
null != this.Lottery_AU && a.default.getInstance().playEffect(this.Lottery_AU, 1, !1);
};
t.prototype.Wow_AUSounds = function() {
null != this.Wow_AU && a.default.getInstance().playEffect(this.Wow_AU, 1, !1);
};
t.prototype.Unlock_AUSounds = function() {
null != this.Unlock_AU && a.default.getInstance().playEffect(this.Unlock_AU, 1, !1);
};
t.prototype.bagClick_AUSounds = function() {
null != this.bagClick_AU && a.default.getInstance().playEffect(this.bagClick_AU, 1, !1);
};
t.prototype.qiehuan_AUSounds = function() {
null != this.qiehuan_AU && a.default.getInstance().playEffect(this.qiehuan_AU, 1, !1);
};
t.prototype.ios_videoSounds = function() {
null != this.ios_video && a.default.getInstance().playEffect(this.ios_video, 1, !1);
};
t.prototype.getrole_Sounds = function() {
null != this.GetRole_AU && a.default.getInstance().playEffect(this.GetRole_AU, 1, !1);
};
t.prototype.newWowSounds = function() {
null != this.NewWOW2_AU && a.default.getInstance().playEffect(this.NewWOW2_AU, 1, !1);
};
t.prototype.electricitySounds = function() {
null != this.ElectricityAU && a.default.getInstance().playEffect(this.ElectricityAU, 1, !1);
};
t.prototype.lockShowSounds = function() {
null != this.LockShowAU && a.default.getInstance().playEffect(this.LockShowAU, 1, !1);
};
t.prototype.lockBreakSounds = function() {
null != this.LockBreakAU && a.default.getInstance().playEffect(this.LockBreakAU, 1, !1);
};
t.prototype.LockVideoAUSounds = function() {
null != this.LockVideoAU && a.default.getInstance().playEffect(this.LockVideoAU, 1, !1);
};
t.prototype.StartGameAUSounds = function() {
null != this.startGame_AU && a.default.getInstance().playEffect(this.startGame_AU, 1, !1);
};
t.prototype.MyMusicAUSounds = function() {
null != this.MyMusic_AU2 && (this.myMusic = a.default.getInstance().playEffect(this.MyMusic_AU2, 1, !0));
};
var i;
return t = i = n([ r ], t);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {
"./../Help/DonaldManager": "DonaldManager",
"./../Help/audioEngineMamager": "audioEngineMamager"
} ],
BannerController: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "84ec5nu6UtGPoRR9Gggxlgo", "BannerController");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../tools/SdkTools"), n = e("./BannerOppo"), s = e("./BannerVivo"), a = e("./BannerTest"), c = e("../nativeAd/NativeController"), r = e("../nativeAd/NativeOppo"), l = e("../nativeAd/NativeVivo"), d = e("../../navigate/NavigateController"), h = e("./BannerTiktok"), u = e("./BannerQQ"), w = e("../../ui/CocosUI"), m = e("./BannerWX"), g = e("../nativeAd/NativeHW"), p = function() {
function e() {
this.ID_BannerId = "";
this.SW_SystemBannerSwitch = !1;
this.SW_SystemBannerFirst = !0;
this.isLoadSystemeBanner = !1;
this.NUM_BannerUpdateTime = 30;
this.NUM_BannerMostShowTimes = 1e4;
this.SW_NativeBannerSwitch = !1;
this.bannerUpdateInterval = null;
this.bannerCloseTime = 0;
this.isLoadBanner = !1;
this.loadBannerCheck = null;
this.hasShowBanner = !1;
this.testBannerShow = !1;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createSystemBanner = function() {
if (this.SW_SystemBannerSwitch) switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
n.default.getInstance().createSystemBanner(this.ID_BannerId);
break;

case o.Game_Platform.GP_Vivo:
s.default.getInstance().createSystemBanner(this.ID_BannerId);
break;

case o.Game_Platform.GP_Tiktok:
h.default.getInstance().createSystemBanner(this.ID_BannerId);
break;

case o.Game_Platform.GP_QQ:
u.default.getInstance().createSystemBanner(this.ID_BannerId);
break;

case o.Game_Platform.GP_WX:
m.default.getInstance().createSystemBanner(this.ID_BannerId);
} else console.log("ASCSDK", "系统Banner开关关闭");
};
e.prototype.getSystemBannerFlag = function() {
return this.isLoadSystemeBanner;
};
e.prototype.checkLoadSucc = function() {
var e = this;
console.log("ASCSDK", "查询banner是否加载完成.");
this.loadBannerCheck && clearTimeout(this.loadBannerCheck);
if (this.SW_SystemBannerSwitch && this.SW_NativeBannerSwitch && (this.getSystemBannerFlag() || c.default.getInstance().getIconNativeFlag() || c.default.getInstance().getImageNativeFlag())) {
this.isLoadBanner = !0;
this.showBanner();
} else if (this.SW_SystemBannerSwitch && !this.SW_NativeBannerSwitch && this.getSystemBannerFlag()) {
this.isLoadBanner = !0;
this.showBanner();
} else if (!this.SW_SystemBannerSwitch && this.SW_NativeBannerSwitch && (c.default.getInstance().getIconNativeFlag() || c.default.getInstance().getImageNativeFlag())) {
this.isLoadBanner = !0;
this.showBanner();
} else {
console.log("ASCSDK", "banner未加载完成");
this.loadBannerCheck = setTimeout(function() {
e.checkLoadSucc();
}, 5e3);
}
};
e.prototype.showBanner = function() {
if (o.default.getPlatform() != o.Game_Platform.GP_Test) if (o.default.getPlatform() != o.Game_Platform.GP_Android) if (o.default.getPlatform() != o.Game_Platform.GP_IOS) if (this.isLoadBanner) if (this.NUM_BannerMostShowTimes <= this.bannerCloseTime) {
this.bannerUpdateInterval && clearInterval(this.bannerUpdateInterval);
console.log("ASCSDK", "banner展示次数(最大关闭次数)已达上限 return");
} else switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
case o.Game_Platform.GP_Vivo:
if (d.default.getInstance().isNavigateSettleShow) {
console.log("ASCSDK", "结算互推正在展示,请先关闭再showBanner");
return;
}
this.hasShowBanner = !0;
if (this.SW_SystemBannerSwitch && this.SW_NativeBannerSwitch) if (this.SW_SystemBannerFirst) {
console.log("ASCSDK", "系统banner优先");
if (this.getSystemBannerFlag()) {
console.log("ASCSDK", "系统Banner可以展示");
this.showSystemBanner();
} else {
console.log("ASCSDK", "系统Banner没有加载完成");
if (c.default.getInstance().getIconNativeFlag() || c.default.getInstance().getImageNativeFlag()) {
console.log("ASCSDK", "改为展示原生Banner");
this.showNativeBanner();
}
}
} else {
console.log("ASCSDK", "原生banner优先");
if (c.default.getInstance().getIconNativeFlag() || c.default.getInstance().getImageNativeFlag()) {
console.log("ASCSDK", "原生Banner可以展示");
this.showNativeBanner();
} else {
console.log("ASCSDK", "原生Banner没有加载到");
if (this.getSystemBannerFlag()) {
console.log("ASCSDK", "改为展示系统banner");
this.showSystemBanner();
}
}
} else if (this.SW_SystemBannerSwitch) {
console.log("ASCSDK", "只打开了系统Banner");
this.showSystemBanner();
} else {
if (!this.SW_NativeBannerSwitch) {
console.log("ASCSDK", "系统banner开关和原生banner开关都没有打开");
return;
}
console.log("ASCSDK", "只打开了原生Banner");
this.showNativeBanner();
}
this.updateBanner();
break;

case o.Game_Platform.GP_Tiktok:
case o.Game_Platform.GP_QQ:
case o.Game_Platform.GP_WX:
if (this.SW_SystemBannerSwitch) {
this.showSystemBanner();
this.updateBanner();
}
break;

case o.Game_Platform.GP_HW:
if (this.SW_NativeBannerSwitch) {
this.showNativeBanner();
this.updateBanner();
}
} else this.checkLoadSucc(); else jsb.reflection.callStaticMethod("DJADManagerVC", "showBanner"); else jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"showBanner","calling_method_params":0}'); else {
if (d.default.getInstance().isNavigateSettleShow) {
console.log("ASCSDK", "测试结算互推正在展示,请先关闭再showBanner");
return;
}
this.testBannerShow = !0;
a.default.getInstance().showBanner();
}
};
e.prototype.showSystemBanner = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
n.default.getInstance().showSystemBanner();
break;

case o.Game_Platform.GP_Vivo:
s.default.getInstance().showSystemBanner();
break;

case o.Game_Platform.GP_Tiktok:
h.default.getInstance().showSystemBanner();
break;

case o.Game_Platform.GP_QQ:
u.default.getInstance().showSystemBanner();
break;

case o.Game_Platform.GP_WX:
m.default.getInstance().showSystemBanner();
}
};
e.prototype.updateBanner = function() {
var e = this;
if (this.NUM_BannerMostShowTimes <= this.bannerCloseTime) {
this.bannerUpdateInterval && clearInterval(this.bannerUpdateInterval);
console.log("ASCSDK", "banner展示次数(最大关闭次数)已达上限 return");
} else switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
case o.Game_Platform.GP_Vivo:
this.bannerUpdateInterval && clearInterval(this.bannerUpdateInterval);
this.bannerUpdateInterval = setInterval(function() {
if (e.NUM_BannerMostShowTimes <= e.bannerCloseTime) {
e.bannerUpdateInterval && clearInterval(e.bannerUpdateInterval);
console.log("ASCSDK", "banner展示次数(最大关闭次数)已达上限 return");
} else if (e.SW_SystemBannerSwitch && e.SW_NativeBannerSwitch) if (e.SW_SystemBannerFirst) {
console.log("ASCSDK", "系统banner优先");
if (e.getSystemBannerFlag()) {
console.log("ASCSDK", "刷新系统Banner");
w.default.getInstance().hideNativeBannerUI();
e.updateSystemBanner();
} else {
console.log("ASCSDK", "系统Banner没有加载完成");
if (c.default.getInstance().getIconNativeFlag() || c.default.getInstance().getImageNativeFlag()) {
console.log("ASCSDK", "改为刷新原生Banner");
n.default.getInstance().bannerAd && n.default.getInstance().hideSystemBanner();
s.default.getInstance().bannerAd && s.default.getInstance().hideSystemBanner();
e.updateNativeBanner();
}
}
} else {
console.log("ASCSDK", "原生banner优先");
if (c.default.getInstance().getIconNativeFlag() || c.default.getInstance().getImageNativeFlag()) {
console.log("ASCSDK", "刷新原生Banner");
n.default.getInstance().bannerAd && n.default.getInstance().hideSystemBanner();
s.default.getInstance().bannerAd && s.default.getInstance().hideSystemBanner();
e.updateNativeBanner();
} else {
console.log("ASCSDK", "原生Banner没有加载到");
if (e.getSystemBannerFlag()) {
console.log("ASCSDK", "改为刷新系统banner");
w.default.getInstance().hideNativeBannerUI();
e.updateSystemBanner();
}
}
} else if (e.SW_SystemBannerSwitch) {
console.log("ASCSDK", "只打开了系统Banner");
e.showSystemBanner();
} else if (e.SW_NativeBannerSwitch) {
console.log("ASCSDK", "只打开了原生Banner");
e.showNativeBanner();
} else console.log("ASCSDK", "系统banner开关和原生banner开关都没有打开");
}, 1e3 * this.NUM_BannerUpdateTime);
break;

case o.Game_Platform.GP_Tiktok:
case o.Game_Platform.GP_QQ:
case o.Game_Platform.GP_WX:
this.SW_SystemBannerSwitch && this.updateSystemBanner();
break;

case o.Game_Platform.GP_HW:
this.bannerUpdateInterval && clearInterval(this.bannerUpdateInterval);
this.bannerUpdateInterval = setInterval(function() {
if (e.NUM_BannerMostShowTimes <= e.bannerCloseTime) {
e.bannerUpdateInterval && clearInterval(e.bannerUpdateInterval);
console.log("ASCSDK", "banner展示次数(最大关闭次数)已达上限 return");
} else e.SW_NativeBannerSwitch && e.updateNativeBanner();
}, 1e3 * this.NUM_BannerUpdateTime);
}
};
e.prototype.updateSystemBanner = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
n.default.getInstance().updateSytemBanner();
break;

case o.Game_Platform.GP_Vivo:
s.default.getInstance().updateSytemBanner();
break;

case o.Game_Platform.GP_Tiktok:
h.default.getInstance().updateSytemBanner();
break;

case o.Game_Platform.GP_QQ:
u.default.getInstance().updateSytemBanner();
break;

case o.Game_Platform.GP_WX:
m.default.getInstance().updateSytemBanner();
}
};
e.prototype.updateNativeBanner = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
r.default.getInstance().updateNativeBanner();
break;

case o.Game_Platform.GP_Vivo:
l.default.getInstance().updateNativeBanner();
break;

case o.Game_Platform.GP_HW:
g.default.getInstance().updateNativeBanner();
}
};
e.prototype.hideBanner = function() {
if (o.default.getPlatform() != o.Game_Platform.GP_Test) if (o.default.getPlatform() != o.Game_Platform.GP_Android) if (o.default.getPlatform() != o.Game_Platform.GP_IOS) {
this.loadBannerCheck && clearTimeout(this.loadBannerCheck);
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
this.hasShowBanner = !1;
if (this.bannerUpdateInterval) {
clearInterval(this.bannerUpdateInterval);
this.bannerUpdateInterval = null;
}
n.default.getInstance().hideSystemBanner();
r.default.getInstance().hideNativeBaner();
break;

case o.Game_Platform.GP_Vivo:
if (this.bannerUpdateInterval) {
clearInterval(this.bannerUpdateInterval);
this.bannerUpdateInterval = null;
}
s.default.getInstance().hideSystemBanner();
l.default.getInstance().hideNativeBaner();
break;

case o.Game_Platform.GP_Tiktok:
h.default.getInstance().hideSystemBanner();
break;

case o.Game_Platform.GP_QQ:
u.default.getInstance().hideSystemBanner();
break;

case o.Game_Platform.GP_WX:
m.default.getInstance().hideSystemBanner();
break;

case o.Game_Platform.GP_HW:
if (this.bannerUpdateInterval) {
clearInterval(this.bannerUpdateInterval);
this.bannerUpdateInterval = null;
}
g.default.getInstance().hideNativeBaner();
}
} else jsb.reflection.callStaticMethod("DJADManagerVC", "hideBanner"); else jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"hideBanner",\'calling_method_params\':0}'); else {
this.testBannerShow = !1;
a.default.getInstance().hideBanner();
}
};
e.prototype.showNativeBanner = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
r.default.getInstance().showNativeBanner();
break;

case o.Game_Platform.GP_Vivo:
l.default.getInstance().showNativeBanner();
break;

case o.Game_Platform.GP_HW:
g.default.getInstance().showNativeBanner();
}
};
e.prototype.bannerClose = function() {
this.bannerCloseTime++;
};
return e;
}();
i.default = p;
cc._RF.pop();
}, {
"../../navigate/NavigateController": "NavigateController",
"../../tools/SdkTools": "SdkTools",
"../../ui/CocosUI": "CocosUI",
"../nativeAd/NativeController": "NativeController",
"../nativeAd/NativeHW": "NativeHW",
"../nativeAd/NativeOppo": "NativeOppo",
"../nativeAd/NativeVivo": "NativeVivo",
"./BannerOppo": "BannerOppo",
"./BannerQQ": "BannerQQ",
"./BannerTest": "BannerTest",
"./BannerTiktok": "BannerTiktok",
"./BannerVivo": "BannerVivo",
"./BannerWX": "BannerWX"
} ],
BannerOppo: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d2f66t5TsZJlK2+TZXN05b3", "BannerOppo");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("./BannerController"), n = e("../../navigate/NavigateController"), s = function() {
function e() {
this.bannerAd = null;
this.systemBannerOnShow = !1;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createSystemBanner = function(e) {
if (e) {
console.log("ASCSDK", "OPPO Banner广告初始化", e);
var t = this;
this.bannerAd = qg.createBannerAd({
adUnitId: e,
style: {}
});
o.default.getInstance().isLoadSystemeBanner = !0;
this.bannerAd.onLoad(function() {
t.systemBannerOnShow = !0;
console.log("ASCSDK", "OPPO 系统banner展示中===================");
});
this.bannerAd.onError(function(e) {
console.log("ASCSDK", "OPPO 系统banner加载失败：", JSON.stringify(e));
if ("adItemList is null." == e.msg) {
o.default.getInstance().isLoadSystemeBanner = !1;
t.hideSystemBanner();
o.default.getInstance().showBanner();
}
});
this.bannerAd.onHide(function() {
console.log("ASCSDK", "OPPO 系统banner关闭", o.default.getInstance().NUM_BannerUpdateTime + "S之后再次刷新");
t.systemBannerOnShow = !1;
o.default.getInstance().updateBanner();
});
} else console.log("ASCSDK", "OPPO bannerId为空");
};
e.prototype.showSystemBanner = function() {
if (n.default.getInstance().isNavigateSettleShow) console.log("ASCSDK", "OPPO 正在展示结算互推 return"); else {
console.log("ASCSDK", "OPPO showSystemBanner ========================");
this.bannerAd.show();
}
};
e.prototype.updateSytemBanner = function() {
if (n.default.getInstance().isNavigateSettleShow) console.log("ASCSDK", "OPPO 正在展示结算互推 return"); else {
console.log("ASCSDK", "OPPO updateSystemBanner ========================");
this.bannerAd.show();
}
};
e.prototype.hideSystemBanner = function() {
if (this.bannerAd) {
console.log("ASCSDK", "OPPO hideSystemBanner ========================");
this.bannerAd.offHide();
this.bannerAd.hide();
this.systemBannerOnShow = !1;
} else console.log("ASCSDK", "OPPO 不存在系统banner");
};
return e;
}();
i.default = s;
cc._RF.pop();
}, {
"../../navigate/NavigateController": "NavigateController",
"./BannerController": "BannerController"
} ],
BannerQQ: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b5013R3/VNDC7vxxiPQs9FC", "BannerQQ");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("./BannerController"), n = function() {
function e() {
this.bannerAd = null;
this.systemBannerOnShow = !1;
this.bannerShow = !1;
this.updateBanner = null;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createSystemBanner = function(e) {
if (e) {
console.log("ASCSDK", "QQ Banner广告初始化", e);
var t = this, i = Number(qq.getSystemInfoSync().windowWidth), n = Number(qq.getSystemInfoSync().windowHeight);
this.bannerAd = qq.createBannerAd({
adUnitId: e,
style: {
left: 0,
top: 0,
width: n > i ? i : 400,
height: 120
},
testDemoType: "65"
});
this.bannerAd.onResize(function(e) {
if (n > i || cc.winSize.height > cc.winSize.width) {
t.bannerAd.style.width = i;
t.bannerAd.style.height = i;
} else {
t.bannerAd.style.width = i / 2;
t.bannerAd.style.height = i / 2;
}
t.bannerAd.style.top = n - e.height;
t.bannerAd.style.left = (i - t.bannerAd.style.width) / 2;
});
this.bannerAd.onLoad(function() {
console.log("ASCSDK", "QQ banner加载成功");
o.default.getInstance().isLoadSystemeBanner = !0;
if (t.bannerShow) {
t.showSystemBanner();
if (n > i) {
t.bannerAd.style.width = i;
t.bannerAd.style.height = i;
} else {
t.bannerAd.style.width = i / 2;
t.bannerAd.style.width = i / 2;
}
t.bannerAd.style.top = n - t.bannerAd.style.realHeight;
t.bannerAd.style.left = (i - t.bannerAd.style.width) / 2;
}
});
this.bannerAd.onError(function(e) {
console.log("ASCSDK", "QQ banner加载失败" + JSON.stringify(e));
});
} else console.log("ASCSDK", "QQ bannerId为空");
};
e.prototype.showSystemBanner = function() {
if (this.bannerAd) {
console.log("ASCSDK", "QQ show systemBanner ========================");
this.bannerShow = !0;
this.bannerAd.show();
}
};
e.prototype.updateSytemBanner = function() {
var e = this;
this.updateBanner && clearInterval(this.updateBanner);
this.updateBanner = setInterval(function() {
console.log("ASCSDK", "QQ updateSystemBanner ========================");
e.bannerAd.offLoad();
e.bannerAd.offError();
e.bannerAd.destroy();
e.createSystemBanner(o.default.getInstance().ID_BannerId);
}, 1e3 * o.default.getInstance().NUM_BannerUpdateTime);
};
e.prototype.hideSystemBanner = function() {
if (this.bannerAd) {
console.log("ASCSDK", "QQ hideSystemBanner ========================");
this.bannerAd.hide();
this.bannerShow = !1;
this.systemBannerOnShow = !1;
} else console.log("ASCSDK", "QQ 不存在系统banner ========================')");
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"./BannerController": "BannerController"
} ],
BannerTest: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e97fdKUiVtG5qzQiI6g9QtH", "BannerTest");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../ui/CocosUI"), n = function() {
function e() {
this.bannerUI = null;
this.bannerFakeBg = null;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createBanner = function() {};
e.prototype.showBanner = function() {
var e = this;
if (this.bannerFakeBg) console.log("ASCSDK", "已经存在测试Banner return"); else {
console.log("ASCSDK", "Test showBanner===============");
cc.loader.load("https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/TestRes/FakeNativeBannerBg.png", function(t, i) {
e.bannerUI = new cc.SpriteFrame(i);
e.bannerFakeBg = new cc.Node("bannerFakeBg");
e.bannerFakeBg.addComponent(cc.Sprite);
e.bannerFakeBg.getComponent(cc.Sprite).spriteFrame = e.bannerUI;
e.bannerFakeBg.addComponent(cc.Widget);
e.bannerFakeBg.getComponent(cc.Widget).isAlignHorizontalCenter = !0;
setTimeout(function() {
if (cc.winSize.width < cc.winSize.height) {
e.bannerFakeBg.width = cc.winSize.width;
e.bannerFakeBg.height = .18 * cc.winSize.width;
} else {
e.bannerFakeBg.width = cc.winSize.width / 2;
e.bannerFakeBg.height = .18 * e.bannerFakeBg.width;
}
e.bannerFakeBg.y = e.bannerFakeBg.height / 2;
}, 1);
cc.director.getScene().addChild(e.bannerFakeBg);
e.bannerFakeBg.zIndex = 3e4;
"" != o.default.getInstance().cocosGroup && (e.bannerFakeBg.group = o.default.getInstance().cocosGroup);
});
}
};
e.prototype.hideBanner = function() {
if (this.bannerFakeBg) {
console.log("ASCSDK", "Test hideBanner===============");
this.bannerFakeBg.removeFromParent();
this.bannerFakeBg = null;
} else console.log("ASCSDK", "Test 不存在测试banner");
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"../../ui/CocosUI": "CocosUI"
} ],
BannerTiktok: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c76baL/kSBMI4SPkJ0B2lBL", "BannerTiktok");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("./BannerController"), n = function() {
function e() {
this.bannerAd = null;
this.systemBannerOnShow = !1;
this.bannerShow = !1;
this.updateBanner = null;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createSystemBanner = function(e) {
if (e) {
console.log("ASCSDK", "Tiktok Banner广告初始化", e);
var t = tt.getSystemInfoSync().windowWidth, i = tt.getSystemInfoSync().windowHeight, n = this;
this.bannerAd = tt.createBannerAd({
adUnitId: e,
style: {
left: -1e3,
top: -1e3
}
});
this.bannerAd.onResize(function(e) {
console.log("ASCSDK", "Tiktok banner广告重设位置");
n.bannerAd.style.top = i - e.height;
n.bannerAd.style.left = (t - e.width) / 2;
});
this.bannerAd.onLoad(function() {
console.log("ASCSDK", "Tiktok banner广告加载成功");
o.default.getInstance().isLoadSystemeBanner = !0;
n.bannerShow && n.showSystemBanner();
});
} else console.log("ASCSDK", "Tiktok bannerId为空");
};
e.prototype.showSystemBanner = function() {
console.log("ASCSDK", "Tiktok show systemBanner ========================");
this.bannerShow = !0;
o.default.getInstance().isLoadSystemeBanner ? this.bannerAd.show() : console.log("ASCSDK", "Tiktok banner广告未加载完成");
};
e.prototype.updateSytemBanner = function() {
var e = this;
this.updateBanner && clearInterval(this.updateBanner);
this.updateBanner = setInterval(function() {
console.log("ASCSDK", "Tiktok 刷新系统banner========================");
e.bannerAd.destroy();
e.createSystemBanner(o.default.getInstance().ID_BannerId);
}, 1e3 * o.default.getInstance().NUM_BannerUpdateTime);
};
e.prototype.hideSystemBanner = function() {
console.log("ASCSDK", "Tiktok hideSystemBanner ========================");
this.bannerAd && this.bannerAd.hide();
this.bannerShow = !1;
this.updateBanner && clearInterval(this.updateBanner);
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"./BannerController": "BannerController"
} ],
BannerVivo: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9543btaeGRPAZWRyoZEn5fw", "BannerVivo");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("./BannerController"), n = function() {
function e() {
this.bannerAd = null;
this.systemBannerOnShow = !1;
this.updateSytemBannerTmt = null;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createSystemBanner = function(e) {
if (e) {
console.log("ASCSDK", "VIVO Banner广告初始化", e);
this.bannerAd = qg.createBannerAd({
posId: e,
style: {}
});
this.bannerAd.onLoad(function() {
o.default.getInstance().isLoadSystemeBanner = !0;
console.log("ASCSDK", "VIVO 系统banner加载成功");
});
var t = this;
this.bannerAd.onError(function(e) {
console.log("ASCSDK", "VIVO 系统banner加载失败：", JSON.stringify(e));
if (30007 == e.errCode) {
console.log("ASCSDK", "VIVO 系统banner广告播放次数已达限制");
o.default.getInstance().isLoadSystemeBanner = !1;
t.hideSystemBanner();
o.default.getInstance().showBanner();
}
});
this.bannerAd.onClose(function() {
console.log("ASCSDK", "VIVO 系统banner关闭", o.default.getInstance().NUM_BannerUpdateTime + "S之后再次刷新");
o.default.getInstance().bannerClose();
o.default.getInstance().updateBanner();
});
} else console.log("ASCSDK", "VIVO bannerId为空");
};
e.prototype.showSystemBanner = function() {
var e = this;
if (this.bannerAd) {
console.log("ASCSDK", "VIVO showSystemBanner ========================");
this.systemBannerOnShow = !0;
this.bannerAd.show();
} else {
this.createSystemBanner(o.default.getInstance().ID_BannerId);
this.updateSytemBannerTmt = setTimeout(function() {
e.systemBannerOnShow = !0;
e.bannerAd.show();
}, 2e3);
}
};
e.prototype.updateSytemBanner = function() {
var e = this;
if (this.bannerAd) {
console.log("ASCSDK", "VIVO 刷新系统banner ========================");
this.bannerAd.offClose();
this.bannerAd.offError();
this.bannerAd.offLoad();
this.bannerAd.destroy();
this.createSystemBanner(o.default.getInstance().ID_BannerId);
this.updateSytemBannerTmt = setTimeout(function() {
e.systemBannerOnShow = !0;
e.bannerAd.show();
}, 2e3);
} else console.log("ASCSDK", "VIVO 不存在系统banner");
};
e.prototype.hideSystemBanner = function() {
this.updateSytemBannerTmt && clearTimeout(this.updateSytemBannerTmt);
if (this.bannerAd) {
console.log("ASCSDK", "VIVO hideSystemBanner ========================");
this.bannerAd.offClose();
this.bannerAd.offError();
this.bannerAd.offLoad();
this.bannerAd.destroy();
this.systemBannerOnShow = !1;
} else console.log("ASCSDK", "VIVO 不存在系统banner");
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"./BannerController": "BannerController"
} ],
BannerWX: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "45e6eImhf1OU45GB7tutJV6", "BannerWX");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("./BannerController"), n = function() {
function e() {
this.bannerAd = null;
this.updateBanner = null;
this.bannerShow = !1;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createSystemBanner = function(e) {
console.log("ASCSDK", "WX 系统banner广告初始化", e);
var t = Number(wx.getSystemInfoSync().windowWidth), i = Number(wx.getSystemInfoSync().windowHeight);
this.bannerAd = wx.createBannerAd({
adUnitId: e,
style: {
left: 10,
top: 76,
width: i > t ? t : 400,
height: 120
}
});
var n = this;
this.bannerAd.onResize(function(e) {
if (i > t || cc.winSize.height > cc.winSize.width) {
n.bannerAd.style.width = t;
n.bannerAd.style.height = t;
} else {
n.bannerAd.style.width = t / 2;
n.bannerAd.style.height = t / 2;
}
n.bannerAd.style.top = i - e.height;
n.bannerAd.style.left = (t - n.bannerAd.style.width) / 2;
});
this.bannerAd.onLoad(function() {
console.log("ASCSDK", "WX banner加载成功");
o.default.getInstance().isLoadSystemeBanner = !0;
n.bannerShow && n.showSystemBanner();
});
this.bannerAd.onError(function(e) {
console.log("ASCSDK", "WX banner加载失败" + JSON.stringify(e));
setTimeout(function() {
n.createSystemBanner(o.default.getInstance().ID_BannerId);
}, 1e4);
});
};
e.prototype.showSystemBanner = function() {
if (this.bannerAd) {
console.log("ASCSDK", "WX showSystemBanner========================");
this.bannerAd.show();
this.bannerShow = !0;
} else console.log("ASCSDK", "不存在系统banner广告实例");
};
e.prototype.updateSytemBanner = function() {
var e = this;
this.updateBanner && clearInterval(this.updateBanner);
this.updateBanner = setInterval(function() {
console.log("ASCSDK", "WX 刷新系统banner========================");
e.bannerAd.offLoad();
e.bannerAd.offError();
e.bannerAd.destroy();
e.createSystemBanner(o.default.getInstance().ID_BannerId);
}, 1e3 * o.default.getInstance().NUM_BannerUpdateTime);
};
e.prototype.hideSystemBanner = function() {
if (this.bannerAd) {
console.log("ASCSDK", "WX hideSystemBanner========================");
this.bannerAd.hide();
this.bannerShow = !1;
} else console.log("ASCSDK", "不存在banner");
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"./BannerController": "BannerController"
} ],
BlockController: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "95163qW++VITIvAj7mmDMS+", "BlockController");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../tools/SdkTools"), n = e("../../navigate/NavigateController"), s = e("./BlockQQ"), a = e("./BlockTest"), c = e("./BlockWX"), r = function() {
function e() {
this.ID_BlockID = "";
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createBlock = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
n.default.getInstance().createNavigateBoxBanner(this.ID_BlockID);
return;

case o.Game_Platform.GP_QQ:
s.default.getInstance().createBlock(this.ID_BlockID);
return;

case o.Game_Platform.GP_WX:
c.default.getInstance().createBlock(this.ID_BlockID);
return;
}
};
e.prototype.getBlockFlag = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_QQ:
return s.default.getInstance().getBlockFlag();

case o.Game_Platform.GP_WX:
return c.default.getInstance().getBlockFlag();

case o.Game_Platform.GP_Test:
return !0;
}
};
e.prototype.showBlock = function(e, t, i, n) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_QQ:
s.default.getInstance().showBlock(e, t, i, n);
return;

case o.Game_Platform.GP_WX:
c.default.getInstance().showBlock(e, t, i, n);
return;

case o.Game_Platform.GP_Test:
a.default.getInstance().showBlock(e, t, i, n);
return;
}
};
e.prototype.hideBlock = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Test:
a.default.getInstance().hideBlock();
return;

case o.Game_Platform.GP_QQ:
s.default.getInstance().hideBlock();
return;

case o.Game_Platform.GP_WX:
c.default.getInstance().hideBlock();
return;
}
};
return e;
}();
i.default = r;
cc._RF.pop();
}, {
"../../navigate/NavigateController": "NavigateController",
"../../tools/SdkTools": "SdkTools",
"./BlockQQ": "BlockQQ",
"./BlockTest": "BlockTest",
"./BlockWX": "BlockWX"
} ],
BlockJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ab962hYfyZD8Z6lrWvRse7D", "BlockJS");
cc.Class({
extends: cc.Component,
properties: {
isBreak: !1,
type: "short",
BlockColor: 0
},
onLoad: function() {
this.block_efColor = [ "#ff01d6", "#fff001", "#00caff" ];
},
onEnable: function() {
this.node.getChildByName("perfectParticle").active = !1;
this.node.opacity = 0;
this.node.scaleX = 0;
this.isshow = !1;
this.ismoving = !1;
this.change = !1;
this.node.getChildByName("block_ef").color = new cc.color(this.block_efColor[this.BlockColor]);
1 === this.moveType && (window.Parent.Random(0, 1) ? cc.tween(this.node).sequence(cc.tween().to(1.5, {
x: 300
}), cc.tween().to(3, {
x: -300
}), cc.tween().to(1.5, {
x: 0
})).repeatForever().start() : cc.tween(this.node).sequence(cc.tween().to(1.5, {
x: -300
}), cc.tween().to(3, {
x: 300
}), cc.tween().to(1.5, {
x: 0
})).repeatForever().start());
2 === this.moveType && (this.node.x > 0 ? cc.tween(this.node).sequence(cc.tween().to(1, {
x: 300
}), cc.tween().to(1.5, {
x: 150
}), cc.tween().to(.5, {
x: 200
})).repeatForever().start() : cc.tween(this.node).sequence(cc.tween().to(1, {
x: -300
}), cc.tween().to(1.5, {
x: -150
}), cc.tween().to(.5, {
x: -200
})).repeatForever().start());
if (this.Game.Ball.z - this.node.z < 2e3 && !this.isshow) {
this.isshow = !0;
this.node.opacity = 255;
"short" === this.type ? cc.tween(this.node).to(.2, {
scaleX: 2
}).start() : cc.tween(this.node).to(.2, {
scaleX: 2.3
}).start();
}
},
onDisable: function() {
this.node.stopAllActions();
this.node.getChildByName("perfactLight").active = !1;
},
start: function() {},
update: function(e) {
if (this.Game.gameStart) {
this.node.z += e * this.Game.palyerSpeed;
this.Game.Ball.z - this.node.z < -1e3 && 255 === this.node.opacity && (this.node.opacity = 0);
if (this.Game.Ball.z - this.node.z < 2e3 && !this.isshow) {
this.isshow = !0;
this.node.opacity = 255;
"short" === this.type ? cc.tween(this.node).to(.2, {
scaleX: 2
}).start() : cc.tween(this.node).to(.2, {
scaleX: 2.3
}).start();
}
if (window.FastModle) {
if (this.Game.Ball.z - this.node.z < -2e4) if ("long" == this.type) {
this.node.destroy();
void 0 != this.BlockNum0 && void 0 != this.BlockNum1 && (this.Game.pointArr[this.BlockNum0][this.BlockNum1] = void 0);
} else {
this.Game.shortBlockPool.put(this.node);
this.Game.pointArr[this.BlockNum0][this.BlockNum1] = void 0;
}
} else if (this.Game.Ball.z - this.node.z < -5e3) if ("long" == this.type) {
this.node.destroy();
void 0 != this.BlockNum0 && void 0 != this.BlockNum1 && (this.Game.pointArr[this.BlockNum0][this.BlockNum1] = void 0);
} else {
this.Game.shortBlockPool.put(this.node);
this.Game.pointArr[this.BlockNum0][this.BlockNum1] = void 0;
}
if (window.activity_entry) {
if (window.ColorModle && 0 === this.BlockNum1 && 3 === this.moveType && this.node.z > -1e3 && !this.ismoving && this.node.z < -800) {
this.ismoving = !0;
window.Game.ChangBlock(this.BlockNum0);
}
if (window.StealthModle && window.Game.Stealth && "short" === this.type) {
if (!window.Game.gameStart) return;
if (this.node.z > -1e3 && !this.change && this.node.z < -800) {
this.change = !0;
this.scheduleOnce(function() {
window.Game.Stealth = !1;
}, .2);
this.node.getChildByName("BoradModel").getComponent(cc.MeshRenderer).setMaterial(0, window.PointMateral[3]);
}
}
}
}
}
});
cc._RF.pop();
}, {} ],
BlockQQ: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "065e7N61HdCjLI34Udvkb7E", "BlockQQ");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../tools/SdkTools"), n = function() {
function e() {
this.ID_BlockID = "";
this.blockAd = null;
this.isLoadBlock = !1;
this.blockOrientation = "landscape";
this.blockX = 32;
this.blockY = 32;
this.blockSize = 1;
this.updateBlock = null;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createBlock = function(e) {
if (o.default.getInstance().isversionNewThanEngineVersion("1.15.0")) {
this.ID_BlockID = e;
console.log("ASCSDK", "QQ 积木广告初始化", e);
var t = this;
this.blockAd = qq.createBlockAd({
adUnitId: e,
size: t.blockSize,
orientation: t.blockOrientation,
style: {
left: t.blockX,
top: t.blockY
}
});
this.blockAd.onLoad(function() {
console.log("ASCSDK", "QQ 积木广告加载成功");
t.isLoadBlock = !0;
});
this.blockAd.onError(function(e) {
console.log("ASCSDK", "QQ 积木广告加载失败:" + JSON.stringify(e));
1004 == e.errCode && console.log("ASCSDK", "QQ 积木广告列表为空");
});
} else console.log("ASCSDK", "QQ 平台版本过低,不能创建积木广告");
};
e.prototype.getBlockFlag = function() {
return this.isLoadBlock;
};
e.prototype.showBlock = function(e, t, i, o) {
var n = this;
this.updateBlock && clearInterval(this.updateBlock);
var s = this, a = Number(qq.getSystemInfoSync().windowWidth), c = Number(qq.getSystemInfoSync().windowHeight), r = i;
if ("8.3.6" != qq.getSystemInfoSync().version) {
i = cc.winSize.height - i;
this.blockX = t * (a / cc.winSize.width);
this.blockY = i * (c / cc.winSize.height);
this.blockOrientation = e;
this.blockSize = o;
this.createBlock(this.ID_BlockID);
setTimeout(function() {
console.log("ASCSDK", "QQ showBlock===============================");
n.blockAd.show();
}, 500);
this.updateBlock = setInterval(function() {
console.log("ASCSDK", "QQ 刷新积木广告================");
s.blockAd.offLoad();
s.blockAd.offError();
s.blockAd.destroy();
s.showBlock(s.blockOrientation, t, r, s.blockSize);
}, 3e4);
} else console.log("ASCSDK", "QQ 平台版本过低,不展示积木广告==============");
};
e.prototype.hideBlock = function() {
this.updateBlock && clearInterval(this.updateBlock);
if (this.blockAd) {
console.log("ASCSDK", "QQ hideBlock==========================");
this.blockAd.destroy();
} else console.log("ASCSDK", "QQ 不存在积木广告");
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"../../tools/SdkTools": "SdkTools"
} ],
BlockTest: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "94e2epX8aVN2JSPS9MtiOzW", "BlockTest");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../ui/CocosUI"), n = function() {
function e() {
this.nativeIcon = null;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.showBlock = function(e, t, i, n) {
var s = this;
console.log("ASCSDK", "Test showBlock==========================");
var a = cc.director.getScene();
cc.loader.load("https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateIconRes/iconBg.png", function(e, n) {
s.nativeIcon = new cc.Node("nativeIcon");
s.nativeIcon.addComponent(cc.Sprite);
s.nativeIcon.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(n);
setTimeout(function() {
s.nativeIcon.width = 200;
s.nativeIcon.height = 200;
s.nativeIcon.x = t + s.nativeIcon.width / 2;
s.nativeIcon.y = i - s.nativeIcon.height / 2;
}, 1);
s.nativeIcon.zIndex = 29999;
a.addChild(s.nativeIcon);
"" != o.default.getInstance().cocosGroup && (s.nativeIcon.group = o.default.getInstance().cocosGroup);
});
};
e.prototype.hideBlock = function() {
if (this.nativeIcon) {
console.log("ASCSDK", "Test hideBlock==========================");
this.nativeIcon.removeFromParent();
this.nativeIcon = null;
} else console.log("ASCSDK", "Test 不存在测试积木广告");
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"../../ui/CocosUI": "CocosUI"
} ],
BlockWX: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ce1a8FeAHpHwbErrStpcDvW", "BlockWX");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../tools/SdkTools"), n = function() {
function e() {
this.ID_BlockID = "";
this.blockAd = null;
this.isLoadBlock = !1;
this.type = "white";
this.blockX = 0;
this.blockY = 0;
this.blockSize = 5;
this.updateBlock = null;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createBlock = function(e) {
if (o.default.getInstance().isversionNewThanEngineVersion("2.9.2")) {
this.ID_BlockID = e;
console.log("ASCSDK", "WX 格子(积木)广告初始化", e);
var t = this;
this.blockAd = wx.createGridAd({
adUnitId: e,
adTheme: t.type,
gridCount: t.blockSize,
style: {
left: t.blockX,
top: t.blockY,
width: 330,
opacity: .8
}
});
this.blockAd.onLoad(function() {
console.log("ASCSDK", "WX 格子(积木)广告加载成功");
t.isLoadBlock = !0;
});
this.blockAd.onError(function(e) {
console.log("ASCSDK", "WX 格子(积木)广告加载失败:" + JSON.stringify(e));
});
} else {
console.log("ASCSDK", "WX 平台版本过低,不能创建积木广告");
console.log("ASCSDK", "当前版本：" + wx.getSystemInfoSync().SDKVersion);
}
};
e.prototype.getBlockFlag = function() {
return this.isLoadBlock;
};
e.prototype.showBlock = function(e, t, i, o) {
var n = this;
this.updateBlock && clearInterval(this.updateBlock);
var s = this, a = Number(wx.getSystemInfoSync().windowWidth), c = Number(wx.getSystemInfoSync().windowHeight), r = i;
i = cc.winSize.height - i;
this.blockX = t * (a / cc.winSize.width);
this.blockY = i * (c / cc.winSize.height);
this.type = e;
this.blockSize = o;
this.createBlock(this.ID_BlockID);
setTimeout(function() {
console.log("ASCSDK", "WX showBlock===============================");
n.blockAd.show();
}, 500);
this.updateBlock = setInterval(function() {
console.log("ASCSDK", "WX 刷新积木广告================");
s.blockAd.offLoad();
s.blockAd.offError();
s.blockAd.destroy();
s.showBlock(s.type, t, r, s.blockSize);
}, 3e4);
};
e.prototype.hideBlock = function() {
this.updateBlock && clearInterval(this.updateBlock);
if (this.blockAd) {
console.log("ASCSDK", "WX hideBlock==========================");
this.blockAd.destroy();
} else console.log("ASCSDK", "WX 不存在积木广告");
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"../../tools/SdkTools": "SdkTools"
} ],
BoxController: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fe047CVapxE3LkBP6I5qTfe", "BoxController");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../tools/SdkTools"), n = e("../../navigate/NavigateController"), s = function() {
function e() {
this.ID_BoxID = "";
this.SW_BoxSwitch = !1;
this.appBoxAd = null;
this.isLoadAppBox = !1;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createAppBox = function() {
if (o.default.getPlatform() != o.Game_Platform.GP_Oppo) if (this.SW_BoxSwitch) if (o.default.getInstance().isversionNewThanEngineVersion("1.7.1")) {
console.log("ASCSDK", "QQ 盒子广告初始化", this.ID_BoxID);
var e = this;
this.appBoxAd = qq.createAppBox({
adUnitId: this.ID_BoxID
});
this.appBoxAd.load().then(function() {
console.log("ASCSDK", "QQ 加载盒子广告完成===================");
e.isLoadAppBox = !0;
});
this.appBoxAd.onClose(function() {
console.log("ASCSDK", "QQ 关闭盒子广告");
e.appBoxAd.load().then(function() {
console.log("ASCSDK", "QQ 加载盒子广告完成===================");
e.isLoadAppBox = !0;
});
});
} else console.log("ASCSDK", "QQ 平台版本过低,不能创建盒子广告"); else console.log("ASCSDK", "QQ 盒子广告开关未开启"); else n.default.getInstance().createNavigateBoxPortal(this.ID_BoxID);
};
e.prototype.getBoxFlag = function() {
return this.isLoadAppBox;
};
e.prototype.showAppBox = function() {
if (o.default.getPlatform() != o.Game_Platform.GP_Test) if (this.SW_BoxSwitch) if (this.isLoadAppBox) {
console.log("ASCSDK", "QQ 展示盒子广告========================");
this.appBoxAd.show();
} else console.log("ASCSDK", "QQ 盒子广告未加载完成"); else console.log("ASCSDK", "QQ 盒子广告开关未开启"); else console.log("ASCSDK", "Test 没有测试盒子广告============");
};
return e;
}();
i.default = s;
cc._RF.pop();
}, {
"../../navigate/NavigateController": "NavigateController",
"../../tools/SdkTools": "SdkTools"
} ],
1: [ function(e, t, i) {
var o = e("util/"), n = Array.prototype.slice, s = Object.prototype.hasOwnProperty, a = t.exports = h;
a.AssertionError = function(e) {
this.name = "AssertionError";
this.actual = e.actual;
this.expected = e.expected;
this.operator = e.operator;
if (e.message) {
this.message = e.message;
this.generatedMessage = !1;
} else {
this.message = l(this);
this.generatedMessage = !0;
}
var t = e.stackStartFunction || d;
if (Error.captureStackTrace) Error.captureStackTrace(this, t); else {
var i = new Error();
if (i.stack) {
var o = i.stack, n = t.name, s = o.indexOf("\n" + n);
if (s >= 0) {
var a = o.indexOf("\n", s + 1);
o = o.substring(a + 1);
}
this.stack = o;
}
}
};
o.inherits(a.AssertionError, Error);
function c(e, t) {
return o.isUndefined(t) ? "" + t : o.isNumber(t) && !isFinite(t) ? t.toString() : o.isFunction(t) || o.isRegExp(t) ? t.toString() : t;
}
function r(e, t) {
return o.isString(e) ? e.length < t ? e : e.slice(0, t) : e;
}
function l(e) {
return r(JSON.stringify(e.actual, c), 128) + " " + e.operator + " " + r(JSON.stringify(e.expected, c), 128);
}
function d(e, t, i, o, n) {
throw new a.AssertionError({
message: i,
actual: e,
expected: t,
operator: o,
stackStartFunction: n
});
}
a.fail = d;
function h(e, t) {
e || d(e, !0, t, "==", a.ok);
}
a.ok = h;
a.equal = function(e, t, i) {
e != t && d(e, t, i, "==", a.equal);
};
a.notEqual = function(e, t, i) {
e == t && d(e, t, i, "!=", a.notEqual);
};
a.deepEqual = function(e, t, i) {
u(e, t) || d(e, t, i, "deepEqual", a.deepEqual);
};
function u(e, t) {
if (e === t) return !0;
if (o.isBuffer(e) && o.isBuffer(t)) {
if (e.length != t.length) return !1;
for (var i = 0; i < e.length; i++) if (e[i] !== t[i]) return !1;
return !0;
}
return o.isDate(e) && o.isDate(t) ? e.getTime() === t.getTime() : o.isRegExp(e) && o.isRegExp(t) ? e.source === t.source && e.global === t.global && e.multiline === t.multiline && e.lastIndex === t.lastIndex && e.ignoreCase === t.ignoreCase : o.isObject(e) || o.isObject(t) ? m(e, t) : e == t;
}
function w(e) {
return "[object Arguments]" == Object.prototype.toString.call(e);
}
function m(e, t) {
if (o.isNullOrUndefined(e) || o.isNullOrUndefined(t)) return !1;
if (e.prototype !== t.prototype) return !1;
if (o.isPrimitive(e) || o.isPrimitive(t)) return e === t;
var i = w(e), s = w(t);
if (i && !s || !i && s) return !1;
if (i) return u(e = n.call(e), t = n.call(t));
var a, c, r = f(e), l = f(t);
if (r.length != l.length) return !1;
r.sort();
l.sort();
for (c = r.length - 1; c >= 0; c--) if (r[c] != l[c]) return !1;
for (c = r.length - 1; c >= 0; c--) if (!u(e[a = r[c]], t[a])) return !1;
return !0;
}
a.notDeepEqual = function(e, t, i) {
u(e, t) && d(e, t, i, "notDeepEqual", a.notDeepEqual);
};
a.strictEqual = function(e, t, i) {
e !== t && d(e, t, i, "===", a.strictEqual);
};
a.notStrictEqual = function(e, t, i) {
e === t && d(e, t, i, "!==", a.notStrictEqual);
};
function g(e, t) {
return !(!e || !t) && ("[object RegExp]" == Object.prototype.toString.call(t) ? t.test(e) : e instanceof t || !0 === t.call({}, e));
}
function p(e, t, i, n) {
var s;
if (o.isString(i)) {
n = i;
i = null;
}
try {
t();
} catch (e) {
s = e;
}
n = (i && i.name ? " (" + i.name + ")." : ".") + (n ? " " + n : ".");
e && !s && d(s, i, "Missing expected exception" + n);
!e && g(s, i) && d(s, i, "Got unwanted exception" + n);
if (e && s && i && !g(s, i) || !e && s) throw s;
}
a.throws = function(e, t, i) {
p.apply(this, [ !0 ].concat(n.call(arguments)));
};
a.doesNotThrow = function(e, t) {
p.apply(this, [ !1 ].concat(n.call(arguments)));
};
a.ifError = function(e) {
if (e) throw e;
};
var f = Object.keys || function(e) {
var t = [];
for (var i in e) s.call(e, i) && t.push(i);
return t;
};
}, {
"util/": 4
} ],
2: [ function(e, t, i) {
"function" == typeof Object.create ? t.exports = function(e, t) {
e.super_ = t;
e.prototype = Object.create(t.prototype, {
constructor: {
value: e,
enumerable: !1,
writable: !0,
configurable: !0
}
});
} : t.exports = function(e, t) {
e.super_ = t;
var i = function() {};
i.prototype = t.prototype;
e.prototype = new i();
e.prototype.constructor = e;
};
}, {} ],
3: [ function(e, t, i) {
t.exports = function(e) {
return e && "object" == typeof e && "function" == typeof e.copy && "function" == typeof e.fill && "function" == typeof e.readUInt8;
};
}, {} ],
4: [ function(e, t, i) {
(function(t, o) {
var n = /%[sdj%]/g;
i.format = function(e) {
if (!C(e)) {
for (var t = [], i = 0; i < arguments.length; i++) t.push(c(arguments[i]));
return t.join(" ");
}
i = 1;
for (var o = arguments, s = o.length, a = String(e).replace(n, function(e) {
if ("%%" === e) return "%";
if (i >= s) return e;
switch (e) {
case "%s":
return String(o[i++]);

case "%d":
return Number(o[i++]);

case "%j":
try {
return JSON.stringify(o[i++]);
} catch (e) {
return "[Circular]";
}

default:
return e;
}
}), r = o[i]; i < s; r = o[++i]) N(r) || !b(r) ? a += " " + r : a += " " + c(r);
return a;
};
i.deprecate = function(e, n) {
if (y(o.process)) return function() {
return i.deprecate(e, n).apply(this, arguments);
};
if (!0 === t.noDeprecation) return e;
var s = !1;
return function() {
if (!s) {
if (t.throwDeprecation) throw new Error(n);
t.traceDeprecation ? console.trace(n) : console.error(n);
s = !0;
}
return e.apply(this, arguments);
};
};
var s, a = {};
i.debuglog = function(e) {
y(s) && (s = t.env.NODE_DEBUG || "");
e = e.toUpperCase();
if (!a[e]) if (new RegExp("\\b" + e + "\\b", "i").test(s)) {
var o = t.pid;
a[e] = function() {
var t = i.format.apply(i, arguments);
console.error("%s %d: %s", e, o, t);
};
} else a[e] = function() {};
return a[e];
};
function c(e, t) {
var o = {
seen: [],
stylize: l
};
arguments.length >= 3 && (o.depth = arguments[2]);
arguments.length >= 4 && (o.colors = arguments[3]);
S(t) ? o.showHidden = t : t && i._extend(o, t);
y(o.showHidden) && (o.showHidden = !1);
y(o.depth) && (o.depth = 2);
y(o.colors) && (o.colors = !1);
y(o.customInspect) && (o.customInspect = !0);
o.colors && (o.stylize = r);
return h(o, e, o.depth);
}
i.inspect = c;
c.colors = {
bold: [ 1, 22 ],
italic: [ 3, 23 ],
underline: [ 4, 24 ],
inverse: [ 7, 27 ],
white: [ 37, 39 ],
grey: [ 90, 39 ],
black: [ 30, 39 ],
blue: [ 34, 39 ],
cyan: [ 36, 39 ],
green: [ 32, 39 ],
magenta: [ 35, 39 ],
red: [ 31, 39 ],
yellow: [ 33, 39 ]
};
c.styles = {
special: "cyan",
number: "yellow",
boolean: "yellow",
undefined: "grey",
null: "bold",
string: "green",
date: "magenta",
regexp: "red"
};
function r(e, t) {
var i = c.styles[t];
return i ? "[" + c.colors[i][0] + "m" + e + "[" + c.colors[i][1] + "m" : e;
}
function l(e, t) {
return e;
}
function d(e) {
var t = {};
e.forEach(function(e, i) {
t[e] = !0;
});
return t;
}
function h(e, t, o) {
if (e.customInspect && t && I(t.inspect) && t.inspect !== i.inspect && (!t.constructor || t.constructor.prototype !== t)) {
var n = t.inspect(o, e);
C(n) || (n = h(e, n, o));
return n;
}
var s = u(e, t);
if (s) return s;
var a = Object.keys(t), c = d(a);
e.showHidden && (a = Object.getOwnPropertyNames(t));
if (P(t) && (a.indexOf("message") >= 0 || a.indexOf("description") >= 0)) return w(t);
if (0 === a.length) {
if (I(t)) {
var r = t.name ? ": " + t.name : "";
return e.stylize("[Function" + r + "]", "special");
}
if (B(t)) return e.stylize(RegExp.prototype.toString.call(t), "regexp");
if (T(t)) return e.stylize(Date.prototype.toString.call(t), "date");
if (P(t)) return w(t);
}
var l, S = "", N = !1, v = [ "{", "}" ];
if (f(t)) {
N = !0;
v = [ "[", "]" ];
}
if (I(t)) {
S = " [Function" + (t.name ? ": " + t.name : "") + "]";
}
B(t) && (S = " " + RegExp.prototype.toString.call(t));
T(t) && (S = " " + Date.prototype.toUTCString.call(t));
P(t) && (S = " " + w(t));
if (0 === a.length && (!N || 0 == t.length)) return v[0] + S + v[1];
if (o < 0) return B(t) ? e.stylize(RegExp.prototype.toString.call(t), "regexp") : e.stylize("[Object]", "special");
e.seen.push(t);
l = N ? m(e, t, o, c, a) : a.map(function(i) {
return g(e, t, o, c, i, N);
});
e.seen.pop();
return p(l, S, v);
}
function u(e, t) {
if (y(t)) return e.stylize("undefined", "undefined");
if (C(t)) {
var i = "'" + JSON.stringify(t).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
return e.stylize(i, "string");
}
return v(t) ? e.stylize("" + t, "number") : S(t) ? e.stylize("" + t, "boolean") : N(t) ? e.stylize("null", "null") : void 0;
}
function w(e) {
return "[" + Error.prototype.toString.call(e) + "]";
}
function m(e, t, i, o, n) {
for (var s = [], a = 0, c = t.length; a < c; ++a) L(t, String(a)) ? s.push(g(e, t, i, o, String(a), !0)) : s.push("");
n.forEach(function(n) {
n.match(/^\d+$/) || s.push(g(e, t, i, o, n, !0));
});
return s;
}
function g(e, t, i, o, n, s) {
var a, c, r;
(r = Object.getOwnPropertyDescriptor(t, n) || {
value: t[n]
}).get ? c = r.set ? e.stylize("[Getter/Setter]", "special") : e.stylize("[Getter]", "special") : r.set && (c = e.stylize("[Setter]", "special"));
L(o, n) || (a = "[" + n + "]");
c || (e.seen.indexOf(r.value) < 0 ? (c = N(i) ? h(e, r.value, null) : h(e, r.value, i - 1)).indexOf("\n") > -1 && (c = s ? c.split("\n").map(function(e) {
return "  " + e;
}).join("\n").substr(2) : "\n" + c.split("\n").map(function(e) {
return "   " + e;
}).join("\n")) : c = e.stylize("[Circular]", "special"));
if (y(a)) {
if (s && n.match(/^\d+$/)) return c;
if ((a = JSON.stringify("" + n)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
a = a.substr(1, a.length - 2);
a = e.stylize(a, "name");
} else {
a = a.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'");
a = e.stylize(a, "string");
}
}
return a + ": " + c;
}
function p(e, t, i) {
return e.reduce(function(e, t) {
0;
t.indexOf("\n") >= 0 && 0;
return e + t.replace(/\u001b\[\d\d?m/g, "").length + 1;
}, 0) > 60 ? i[0] + ("" === t ? "" : t + "\n ") + " " + e.join(",\n  ") + " " + i[1] : i[0] + t + " " + e.join(", ") + " " + i[1];
}
function f(e) {
return Array.isArray(e);
}
i.isArray = f;
function S(e) {
return "boolean" == typeof e;
}
i.isBoolean = S;
function N(e) {
return null === e;
}
i.isNull = N;
i.isNullOrUndefined = function(e) {
return null == e;
};
function v(e) {
return "number" == typeof e;
}
i.isNumber = v;
function C(e) {
return "string" == typeof e;
}
i.isString = C;
i.isSymbol = function(e) {
return "symbol" == typeof e;
};
function y(e) {
return void 0 === e;
}
i.isUndefined = y;
function B(e) {
return b(e) && "[object RegExp]" === A(e);
}
i.isRegExp = B;
function b(e) {
return "object" == typeof e && null !== e;
}
i.isObject = b;
function T(e) {
return b(e) && "[object Date]" === A(e);
}
i.isDate = T;
function P(e) {
return b(e) && ("[object Error]" === A(e) || e instanceof Error);
}
i.isError = P;
function I(e) {
return "function" == typeof e;
}
i.isFunction = I;
i.isPrimitive = function(e) {
return null === e || "boolean" == typeof e || "number" == typeof e || "string" == typeof e || "symbol" == typeof e || "undefined" == typeof e;
};
i.isBuffer = e("./support/isBuffer");
function A(e) {
return Object.prototype.toString.call(e);
}
function _(e) {
return e < 10 ? "0" + e.toString(10) : e.toString(10);
}
var k = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ];
function M() {
var e = new Date(), t = [ _(e.getHours()), _(e.getMinutes()), _(e.getSeconds()) ].join(":");
return [ e.getDate(), k[e.getMonth()], t ].join(" ");
}
i.log = function() {
console.log("%s - %s", M(), i.format.apply(i, arguments));
};
i.inherits = e("inherits");
i._extend = function(e, t) {
if (!t || !b(t)) return e;
for (var i = Object.keys(t), o = i.length; o--; ) e[i[o]] = t[i[o]];
return e;
};
function L(e, t) {
return Object.prototype.hasOwnProperty.call(e, t);
}
}).call(this, e("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
}, {
"./support/isBuffer": 3,
_process: 8,
inherits: 2
} ],
5: [ function(e, t, i) {
(function(i) {
var o = e("util"), n = e("assert");
function s() {
return new Date().getTime();
}
var a, c = Array.prototype.slice, r = {};
a = "undefined" != typeof i && i.console ? i.console : "undefined" != typeof window && window.console ? window.console : {};
for (var l = [ [ function() {}, "log" ], [ function() {
a.log.apply(a, arguments);
}, "info" ], [ function() {
a.log.apply(a, arguments);
}, "warn" ], [ function() {
a.warn.apply(a, arguments);
}, "error" ], [ function(e) {
r[e] = s();
}, "time" ], [ function(e) {
var t = r[e];
if (!t) throw new Error("No such label: " + e);
delete r[e];
var i = s() - t;
a.log(e + ": " + i + "ms");
}, "timeEnd" ], [ function() {
var e = new Error();
e.name = "Trace";
e.message = o.format.apply(null, arguments);
a.error(e.stack);
}, "trace" ], [ function(e) {
a.log(o.inspect(e) + "\n");
}, "dir" ], [ function(e) {
if (!e) {
var t = c.call(arguments, 1);
n.ok(!1, o.format.apply(null, t));
}
}, "assert" ] ], d = 0; d < l.length; d++) {
var h = l[d], u = h[0], w = h[1];
a[w] || (a[w] = u);
}
t.exports = a;
}).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
}, {
assert: 1,
util: 11
} ],
6: [ function(e, t, i) {
t.exports = {
O_RDONLY: 0,
O_WRONLY: 1,
O_RDWR: 2,
S_IFMT: 61440,
S_IFREG: 32768,
S_IFDIR: 16384,
S_IFCHR: 8192,
S_IFBLK: 24576,
S_IFIFO: 4096,
S_IFLNK: 40960,
S_IFSOCK: 49152,
O_CREAT: 512,
O_EXCL: 2048,
O_NOCTTY: 131072,
O_TRUNC: 1024,
O_APPEND: 8,
O_DIRECTORY: 1048576,
O_NOFOLLOW: 256,
O_SYNC: 128,
O_SYMLINK: 2097152,
O_NONBLOCK: 4,
S_IRWXU: 448,
S_IRUSR: 256,
S_IWUSR: 128,
S_IXUSR: 64,
S_IRWXG: 56,
S_IRGRP: 32,
S_IWGRP: 16,
S_IXGRP: 8,
S_IRWXO: 7,
S_IROTH: 4,
S_IWOTH: 2,
S_IXOTH: 1,
E2BIG: 7,
EACCES: 13,
EADDRINUSE: 48,
EADDRNOTAVAIL: 49,
EAFNOSUPPORT: 47,
EAGAIN: 35,
EALREADY: 37,
EBADF: 9,
EBADMSG: 94,
EBUSY: 16,
ECANCELED: 89,
ECHILD: 10,
ECONNABORTED: 53,
ECONNREFUSED: 61,
ECONNRESET: 54,
EDEADLK: 11,
EDESTADDRREQ: 39,
EDOM: 33,
EDQUOT: 69,
EEXIST: 17,
EFAULT: 14,
EFBIG: 27,
EHOSTUNREACH: 65,
EIDRM: 90,
EILSEQ: 92,
EINPROGRESS: 36,
EINTR: 4,
EINVAL: 22,
EIO: 5,
EISCONN: 56,
EISDIR: 21,
ELOOP: 62,
EMFILE: 24,
EMLINK: 31,
EMSGSIZE: 40,
EMULTIHOP: 95,
ENAMETOOLONG: 63,
ENETDOWN: 50,
ENETRESET: 52,
ENETUNREACH: 51,
ENFILE: 23,
ENOBUFS: 55,
ENODATA: 96,
ENODEV: 19,
ENOENT: 2,
ENOEXEC: 8,
ENOLCK: 77,
ENOLINK: 97,
ENOMEM: 12,
ENOMSG: 91,
ENOPROTOOPT: 42,
ENOSPC: 28,
ENOSR: 98,
ENOSTR: 99,
ENOSYS: 78,
ENOTCONN: 57,
ENOTDIR: 20,
ENOTEMPTY: 66,
ENOTSOCK: 38,
ENOTSUP: 45,
ENOTTY: 25,
ENXIO: 6,
EOPNOTSUPP: 102,
EOVERFLOW: 84,
EPERM: 1,
EPIPE: 32,
EPROTO: 100,
EPROTONOSUPPORT: 43,
EPROTOTYPE: 41,
ERANGE: 34,
EROFS: 30,
ESPIPE: 29,
ESRCH: 3,
ESTALE: 70,
ETIME: 101,
ETIMEDOUT: 60,
ETXTBSY: 26,
EWOULDBLOCK: 35,
EXDEV: 18,
SIGHUP: 1,
SIGINT: 2,
SIGQUIT: 3,
SIGILL: 4,
SIGTRAP: 5,
SIGABRT: 6,
SIGIOT: 6,
SIGBUS: 10,
SIGFPE: 8,
SIGKILL: 9,
SIGUSR1: 30,
SIGSEGV: 11,
SIGUSR2: 31,
SIGPIPE: 13,
SIGALRM: 14,
SIGTERM: 15,
SIGCHLD: 20,
SIGCONT: 19,
SIGSTOP: 17,
SIGTSTP: 18,
SIGTTIN: 21,
SIGTTOU: 22,
SIGURG: 16,
SIGXCPU: 24,
SIGXFSZ: 25,
SIGVTALRM: 26,
SIGPROF: 27,
SIGWINCH: 28,
SIGIO: 23,
SIGSYS: 12,
SSL_OP_ALL: 2147486719,
SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION: 262144,
SSL_OP_CIPHER_SERVER_PREFERENCE: 4194304,
SSL_OP_CISCO_ANYCONNECT: 32768,
SSL_OP_COOKIE_EXCHANGE: 8192,
SSL_OP_CRYPTOPRO_TLSEXT_BUG: 2147483648,
SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS: 2048,
SSL_OP_EPHEMERAL_RSA: 0,
SSL_OP_LEGACY_SERVER_CONNECT: 4,
SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER: 32,
SSL_OP_MICROSOFT_SESS_ID_BUG: 1,
SSL_OP_MSIE_SSLV2_RSA_PADDING: 0,
SSL_OP_NETSCAPE_CA_DN_BUG: 536870912,
SSL_OP_NETSCAPE_CHALLENGE_BUG: 2,
SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG: 1073741824,
SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG: 8,
SSL_OP_NO_COMPRESSION: 131072,
SSL_OP_NO_QUERY_MTU: 4096,
SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION: 65536,
SSL_OP_NO_SSLv2: 16777216,
SSL_OP_NO_SSLv3: 33554432,
SSL_OP_NO_TICKET: 16384,
SSL_OP_NO_TLSv1: 67108864,
SSL_OP_NO_TLSv1_1: 268435456,
SSL_OP_NO_TLSv1_2: 134217728,
SSL_OP_PKCS1_CHECK_1: 0,
SSL_OP_PKCS1_CHECK_2: 0,
SSL_OP_SINGLE_DH_USE: 1048576,
SSL_OP_SINGLE_ECDH_USE: 524288,
SSL_OP_SSLEAY_080_CLIENT_DH_BUG: 128,
SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG: 0,
SSL_OP_TLS_BLOCK_PADDING_BUG: 512,
SSL_OP_TLS_D5_BUG: 256,
SSL_OP_TLS_ROLLBACK_BUG: 8388608,
ENGINE_METHOD_DSA: 2,
ENGINE_METHOD_DH: 4,
ENGINE_METHOD_RAND: 8,
ENGINE_METHOD_ECDH: 16,
ENGINE_METHOD_ECDSA: 32,
ENGINE_METHOD_CIPHERS: 64,
ENGINE_METHOD_DIGESTS: 128,
ENGINE_METHOD_STORE: 256,
ENGINE_METHOD_PKEY_METHS: 512,
ENGINE_METHOD_PKEY_ASN1_METHS: 1024,
ENGINE_METHOD_ALL: 65535,
ENGINE_METHOD_NONE: 0,
DH_CHECK_P_NOT_SAFE_PRIME: 2,
DH_CHECK_P_NOT_PRIME: 1,
DH_UNABLE_TO_CHECK_GENERATOR: 4,
DH_NOT_SUITABLE_GENERATOR: 8,
NPN_ENABLED: 1,
RSA_PKCS1_PADDING: 1,
RSA_SSLV23_PADDING: 2,
RSA_NO_PADDING: 3,
RSA_PKCS1_OAEP_PADDING: 4,
RSA_X931_PADDING: 5,
RSA_PKCS1_PSS_PADDING: 6,
POINT_CONVERSION_COMPRESSED: 2,
POINT_CONVERSION_UNCOMPRESSED: 4,
POINT_CONVERSION_HYBRID: 6,
F_OK: 0,
R_OK: 4,
W_OK: 2,
X_OK: 1,
UV_UDP_REUSEADDR: 4
};
}, {} ],
7: [ function(e, t, i) {
i.endianness = function() {
return "LE";
};
i.hostname = function() {
return "undefined" != typeof location ? location.hostname : "";
};
i.loadavg = function() {
return [];
};
i.uptime = function() {
return 0;
};
i.freemem = function() {
return Number.MAX_VALUE;
};
i.totalmem = function() {
return Number.MAX_VALUE;
};
i.cpus = function() {
return [];
};
i.type = function() {
return "Browser";
};
i.release = function() {
return "undefined" != typeof navigator ? navigator.appVersion : "";
};
i.networkInterfaces = i.getNetworkInterfaces = function() {
return {};
};
i.arch = function() {
return "javascript";
};
i.platform = function() {
return "browser";
};
i.tmpdir = i.tmpDir = function() {
return "/tmp";
};
i.EOL = "\n";
}, {} ],
8: [ function(e, t, i) {
var o, n, s = t.exports = {};
function a() {
throw new Error("setTimeout has not been defined");
}
function c() {
throw new Error("clearTimeout has not been defined");
}
(function() {
try {
o = "function" == typeof setTimeout ? setTimeout : a;
} catch (e) {
o = a;
}
try {
n = "function" == typeof clearTimeout ? clearTimeout : c;
} catch (e) {
n = c;
}
})();
function r(e) {
if (o === setTimeout) return setTimeout(e, 0);
if ((o === a || !o) && setTimeout) {
o = setTimeout;
return setTimeout(e, 0);
}
try {
return o(e, 0);
} catch (t) {
try {
return o.call(null, e, 0);
} catch (t) {
return o.call(this, e, 0);
}
}
}
function l(e) {
if (n === clearTimeout) return clearTimeout(e);
if ((n === c || !n) && clearTimeout) {
n = clearTimeout;
return clearTimeout(e);
}
try {
return n(e);
} catch (t) {
try {
return n.call(null, e);
} catch (t) {
return n.call(this, e);
}
}
}
var d, h = [], u = !1, w = -1;
function m() {
if (u && d) {
u = !1;
d.length ? h = d.concat(h) : w = -1;
h.length && g();
}
}
function g() {
if (!u) {
var e = r(m);
u = !0;
for (var t = h.length; t; ) {
d = h;
h = [];
for (;++w < t; ) d && d[w].run();
w = -1;
t = h.length;
}
d = null;
u = !1;
l(e);
}
}
s.nextTick = function(e) {
var t = new Array(arguments.length - 1);
if (arguments.length > 1) for (var i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
h.push(new p(e, t));
1 !== h.length || u || r(g);
};
function p(e, t) {
this.fun = e;
this.array = t;
}
p.prototype.run = function() {
this.fun.apply(null, this.array);
};
s.title = "browser";
s.browser = !0;
s.env = {};
s.argv = [];
s.version = "";
s.versions = {};
function f() {}
s.on = f;
s.addListener = f;
s.once = f;
s.off = f;
s.removeListener = f;
s.removeAllListeners = f;
s.emit = f;
s.prependListener = f;
s.prependOnceListener = f;
s.listeners = function(e) {
return [];
};
s.binding = function(e) {
throw new Error("process.binding is not supported");
};
s.cwd = function() {
return "/";
};
s.chdir = function(e) {
throw new Error("process.chdir is not supported");
};
s.umask = function() {
return 0;
};
}, {} ],
9: [ function(e, t, i) {
arguments[4][2][0].apply(i, arguments);
}, {
dup: 2
} ],
10: [ function(e, t, i) {
arguments[4][3][0].apply(i, arguments);
}, {
dup: 3
} ],
11: [ function(e, t, i) {
arguments[4][4][0].apply(i, arguments);
}, {
"./support/isBuffer": 10,
_process: 8,
dup: 4,
inherits: 9
} ],
CDJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f22bfaYRWBEA4zYlH25T3q7", "CDJS");
cc.Class({
extends: cc.Component,
properties: {
Light: [ cc.Node ],
CDbox: cc.Node,
CDboxPicture: cc.Node,
bglight: cc.Node,
buyButton: cc.Node,
goButton: cc.Node,
GetButton: cc.Node,
FollowTips: cc.Node,
star: cc.Node,
FollowButton: cc.Node,
particle: cc.Node,
unlockParticle: cc.Node,
pacageTitle: cc.Label,
tips: cc.Node,
BuyCrownNum: cc.Label
},
onLoad: function() {
0 === this.CDNnmber ? this.BuyCrownNum.string = 2 : this.BuyCrownNum.string = 12;
this.pacageTitle.string = this.CDname;
this.bglight.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(1, .8), cc.scaleTo(1, .2))));
this.showLight = !1;
this.tips.active = !0;
this.tips.runAction(cc.repeatForever(cc.sequence(cc.moveTo(.5, 0, 180), cc.moveTo(.5, 0, 140))));
this.tips.active = !1;
this.schedule(function() {
if (this.showLight) {
this.CrownStore.hastop ? this.tips.active = !1 : window.hasshowStoreTips || (this.tips.active = !0);
if (this.Light[0].active) {
this.Light[0].active = !1;
this.Light[1].active = !0;
} else {
this.Light[1].active = !1;
this.Light[0].active = !0;
}
} else {
this.Light[0].active = !1;
this.Light[1].active = !1;
this.tips.active = !1;
}
}, .2);
"Specail" === this.UnlockType && (window.SpecailCD = this);
},
onEnable: function() {
var e = window.unlockCrownMusicName.split(",");
e = window.Tools.unique(e);
for (var t = !1, i = 0; i < e.length; i++) this.CDname === e[i] && (t = !0);
if (t) {
this.goButton.active = !0;
this.buyButton.active = !1;
this.GetButton.active = !1;
this.goFollow.active = !1;
} else {
this.goButton.active = !1;
this.GetButton.active = !1;
this.FollowButton.active = !1;
this.FollowTips.active = !1;
if ("Specail" === this.UnlockType) {
this.buyButton.active = !1;
if (0 == window.Home.hasGetOfficialMusic && 1 == window.Home.hasFllowOfficial) {
this.GetButton.active = !0;
this.star.active = !0;
this.GetButton.stopAllActions();
this.GetButton.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.4, 1.1), cc.scaleTo(.4, 1))));
} else {
this.FollowButton.active = !0;
this.star.active = !0;
this.FollowButton.stopAllActions();
this.FollowButton.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.4, 1.1), cc.scaleTo(.4, 1))));
this.FollowTips.active = !0;
}
} else this.buyButton.active = !0;
}
},
start: function() {},
update: function(e) {
var t = 1.8 - Math.abs(this.CrownStore.content.x + this.node.x) / 1200, i = 255 - Math.abs(this.CrownStore.content.x + this.node.x) / 1200 * 255;
Math.abs(this.CrownStore.content.x + this.node.x) < 100 ? this.node.zIndex = 2 : this.node.zIndex = 1;
this.node.setScale(t);
this.node.opacity = i;
if (Math.abs(this.CrownStore.content.x + this.node.x) < 5) {
this.showLight = !0;
this.particle.active = !0;
this.buyButton.getComponent(cc.Button).interactable = !0;
this.goButton.getComponent(cc.Button).interactable = !0;
} else {
this.showLight = !1;
this.particle.active = !1;
this.buyButton.getComponent(cc.Button).interactable = !1;
this.goButton.getComponent(cc.Button).interactable = !1;
this.tips.active = !1;
}
if (!0 === this.FollowButton.active && 0 == window.Home.hasGetOfficialMusic && 1 == window.Home.hasFllowOfficial) {
this.GetButton.active = !0;
this.GetButton.stopAllActions();
this.GetButton.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.4, 1.1), cc.scaleTo(.4, 1))));
this.FollowButton.active = !1;
this.FollowTips.active = !1;
}
},
showList: function() {
this.CrownStore.hastop = !0;
this.tips.active = !1;
window.hasshowStoreTips = 1;
this.CDbox.getComponent(sp.Skeleton).setAnimation(0, "get", !1);
window.Parent.bagClickSounds();
this.scheduleOnce(function() {
this.CrownStore.showCDList(this.CDNnmber);
}, .5);
window.Parent.setlocalStorage("hasshowStoreTips", window.hasshowStoreTips);
},
goaction: function() {
this.CrownStore.goaction();
},
buyMusic: function() {
var e = this, t = Number(this.BuyCrownNum.string);
this.CrownStore.buyMusic(this.CDNnmber, t, function() {
e.buyButton.active = !1;
e.goButton.active = !0;
"" == window.unlockCrownMusicName ? window.unlockCrownMusicName = e.CDname : window.unlockCrownMusicName = window.unlockCrownMusicName + "," + e.CDname;
window.Parent.setlocalStorage("unlockCrownMusicName", window.unlockCrownMusicName);
e.unlockParticle.getComponent(cc.ParticleSystem).resetSystem();
e.CDbox.getComponent(sp.Skeleton).setAnimation(0, "get", !1);
});
},
shakeCD: function() {
this.CDbox.getComponent(sp.Skeleton).setAnimation(0, "slide", !1);
},
goFollow: function() {
window.Parent.ButtonSounds();
window.Home.FollowDouyin();
},
getFollowMusic: function() {
var e = this;
this.CrownStore.buyMusic(this.CDNnmber, 0, function() {
e.star.active = !1;
window.Home.crownStoreButton.getChildByName("point").active = !1;
e.buyButton.active = !1;
e.GetButton.active = !1;
e.goFollow.active = !1;
e.goButton.active = !0;
"" == window.unlockCrownMusicName ? window.unlockCrownMusicName = e.CDname : window.unlockCrownMusicName = window.unlockCrownMusicName + "," + e.CDname;
window.Parent.setlocalStorage("unlockCrownMusicName", window.unlockCrownMusicName);
window.Home.hasGetOfficialMusic = 1;
window.Parent.setlocalStorage("hasGetOfficialMusic", window.Home.hasGetOfficialMusic);
e.unlockParticle.getComponent(cc.ParticleSystem).resetSystem();
e.CDbox.getComponent(sp.Skeleton).setAnimation(0, "get", !1);
});
}
});
cc._RF.pop();
}, {} ],
CamerNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ff69cySrsJHB68BxYJ/rX3L", "CamerNodeJS");
cc.Class({
extends: cc.Component,
properties: {
videoSprite: cc.Sprite,
videoSprite2: cc.Sprite
},
onLoad: function() {
window.platform;
},
onEnable: function() {
if (3 == window.platform) {
console.log("人脸摄像机开启 ++++++++++++++++++++++++++++ ");
this.startCamera();
this.handleDetectionResult();
this.videoSprite.active = !0;
this.videoSprite2.active = !0;
}
},
onDisable: function() {
console.log("人脸摄像机销毁 ++++++++++++++++++++++++++++ ");
this.videoSprite.active = !1;
this.videoSprite2.active = !1;
this.camera.destroy();
this.camera = null;
window.FaceModle = !1;
},
startCamera: function() {
var e = this;
console.log("startCamera ++++++++++++++++++++++++ ");
var t = this;
this.camera = tt.createCamera();
this.detector = tt.createFaceDetector();
tt.setKeepScreenOn();
this.camera.start("front", !0).then(function(t) {
e.video = t;
e.initVideo();
}).catch(function(e) {
tt.showToast({
title: "摄像机需要授权"
});
window.FaceModle = !1;
t.node.active = !1;
tt.openSetting();
console.log(e);
});
this.camera.setBeautifyParam(1, 1, 1, 1);
},
initVideo: function() {
console.log("initVideo ++++++++++++++++++++++++ ");
this.videoTexture = new cc.Texture2D();
this.videoTexture.initWithElement(this.video);
this.videoTexture.handleLoadedTexture();
window.ConstellationNum < 12 ? this.videoSprite2.spriteFrame = new cc.SpriteFrame(this.videoTexture) : this.videoSprite.spriteFrame = new cc.SpriteFrame(this.videoTexture);
this.setVideoWidth(cc.view.getVisibleSize().width);
},
startDetector: function() {
this.detector && this.video && this.detector.detectFaces(this.video).then(function(e) {
e[0] && void 0 != e[0].yaw && window.Game && window.Game.faceMove(e[0].yaw);
});
},
handleDetectionResult: function() {
this.detector.onHeadYawIndian(function(e) {});
},
setVideoWidth: function(e) {
if (this.video) {
this.video.width = e;
this.video.height = this.video.videoHeight / this.video.videoWidth * e;
}
},
update: function(e) {
this.videoSprite.opacity = 0;
this.startDetector();
if (this.videoTexture && this.video) {
console.log("shexiang");
this.videoTexture.update({
image: this.video,
flipY: !1
});
}
}
});
cc._RF.pop();
}, {} ],
CanvasJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b9369u5hOBN0K+bsgH47+ah", "CanvasJS");
var o = l(e("../SDK/ASCAd")), n = l(e("../Script/SDK/Tools")), s = l(e("./../Script/Help/AudioSourcesMamager")), a = l(e("./../Script/Help/GuideSourcesManager")), c = (e("os"), 
l(e("../Script/Help/DonaldManager"))), r = l(e("../Script/Help/audioEngineMamager"));
function l(e) {
return e && e.__esModule ? e : {
default: e
};
}
function d(e) {
throw new Error('"' + e + '" is read-only');
}
cc.Class({
extends: cc.Component,
properties: {
Fanye_AU: {
default: null,
type: cc.AudioClip
},
button_AU: {
default: null,
type: cc.AudioClip
},
OpenLight_AU: {
default: null,
type: cc.AudioClip
},
star_AU: {
default: null,
type: cc.AudioClip
},
diamond_AU: {
default: null,
type: cc.AudioClip
},
score_AU: {
default: null,
type: cc.AudioClip
},
time_AU: {
default: null,
type: cc.AudioClip
},
faill_AU: {
default: null,
type: cc.AudioClip
},
Bubole_AU: {
default: null,
type: cc.AudioClip
},
Lottery_AU: {
default: null,
type: cc.AudioClip
},
Wow_AU: {
default: null,
type: cc.AudioClip
},
Unlock_AU: {
default: null,
type: cc.AudioClip
},
bagClick_AU: {
default: null,
type: cc.AudioClip
},
qiehuan_AU: {
default: null,
type: cc.AudioClip
},
ios_Video_AU: {
default: null,
type: cc.AudioClip
},
getrole_AU: {
default: null,
type: cc.AudioClip
},
newWow_AU: {
default: null,
type: cc.AudioClip
},
Tips: cc.Node,
AchieveTable: cc.JsonAsset,
TipLeftPrefab: cc.Prefab,
TipRightPrefab: cc.Prefab,
ArrowPrefab: cc.Prefab,
Arrow2Prefab: cc.Prefab,
TipsPrefab: cc.Prefab,
CircleTipsPrefab: cc.Prefab,
GuideMask: cc.Node
},
onLoad: function() {
var t = this;
this.initaudioEngine();
this.defination();
this.videoinsertflag = !0;
o.default.getInstance().reportMonitor();
o.default.getInstance().initAd();
o.default.getInstance().setGroup("UI");
if (6 === window.platform) {
e("kwaigame");
this.RewardVideo = kwaigame.createRewardedVideoAd({
adUnitId: "2300000019_01"
});
this.RewardVideo.onReward(function() {
t.videoCallback(!0);
});
}
cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);
cc.game.on(cc.game.EVENT_HIDE, function() {
console.log("游戏进入后台");
var e = new Date().getTime();
this.setlocalStorage("LastTime", e);
}, this);
cc.game.on(cc.game.EVENT_SHOW, function() {
console.log("重新返回游戏");
0 == window.musicisplaying && cc.audioEngine.pauseAll();
if (3 === window.platform) {
this.LastTime = Number(cc.sys.localStorage.getItem("LastTime"));
var e = (new Date().getTime() - this.LastTime) / 1e3;
cc.log("离线时间", e);
window.powerNum += Math.abs(Math.floor(e / 30));
window.powerNum >= 20 && (window.powerNum = 20);
window.powerNum <= 0 && (window.powerNum = 0);
window.Power.PowerNum_Lable.getComponent(cc.Label).string = window.powerNum + "/20";
cc.sys.localStorage.setItem("powerNum", window.powerNum);
window.TestModle;
window.Game && (window.Game.touchPointNum = 0);
"ios" == window.PhoneType && tt.onShow(function(e) {
console.log("当前场景为 : ", e.scene);
"021001" == e.scene && window.Diamon.ShowFreeDiamond();
});
}
}, this);
this.ShowScoreList();
},
defination: function() {
window.Parent = this;
window.ParentNode = this.node;
window.Tools = n.default;
window.LogLable = this.node.getChildByName("LogLable");
window.AchieveTable = this.AchieveTable.json;
window.PlayerCamera = this.node.getChildByName("PlayerCamera");
window.showShare = !1;
this.audioSourcesMgr = s.default.getInstance();
this.guideSourcesMgr = a.default.getInstance();
window.Parent.setlocalStorage("PlayGame", 0);
this.showRecommendNum = 0;
window.isActivity = !1;
window.isShowMusicList = 0;
window.cardDataNum = -1;
this.UIMaskNode = this.node.getChildByName("UI_Mask");
this.UIMaskNode.zIndex = 999;
window.ShowFavourPage = !1;
window.PlayOtherMusic = !1;
window.manualDate = !1;
window.ShowData = !1;
if (5 == window.platform) {
var e = Number(jsb.reflection.callStaticMethod("systemSetting", "isPhone")), t = this.node.getComponent(cc.Canvas);
if (0 == e) {
t.fitHeight = !0;
t.fitWidth = !1;
} else {
t.fitHeight = !1;
t.fitWidth = !0;
}
}
window.watchVideoTimes = 0;
window.isFirstPlayer = !1;
window.isReliveTimes = !1;
window.isShowSelecting = !1;
this.GuideMask.zIndex = 14;
},
setlocalStorage: function(e, t) {
var i = String(t);
cc.sys.platform === cc.sys.WECHAT_GAME && 0 == window.platform ? wx.setStorage({
key: e,
data: i
}) : cc.sys.localStorage.setItem(e, i);
},
getlocalStorage: function(e) {
var t = cc.sys.localStorage.getItem(e);
"undefined" == t && (t = null);
return t;
},
getlocalStorageNum: function(e) {
var t = Number(cc.sys.localStorage.getItem(e));
isNaN(t) && (t = (d("curType"), 0));
return t;
},
showTips: function(e) {
var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
this.Tips.getChildByName("label").getComponent(cc.Label).string = e;
this.Tips.active = !0;
this.Tips.zIndex = 1e4;
this.Tips.opacity = 255;
this.Tips.stopAllActions();
this.Tips.scale = .3;
this.Tips.y = -200;
var i = cc.spawn(cc.scaleTo(.3, 1.5), cc.fadeIn(.3)), o = cc.spawn(cc.moveTo(1, cc.v2(0, 200)), cc.fadeOut(t)), n = cc.callFunc(function() {
this.Tips.active = !1;
}, this, null), s = cc.sequence(i.easing(cc.easeBounceOut()), o, n);
this.Tips.runAction(s);
},
LoadMusic: function(e, t, i) {
c.default.getInstance().LoadMusic(e, t, i);
},
LoadPoint: function(e, t, i) {
c.default.getInstance().LoadPoint(e, t, i);
},
Random: function(e, t) {
return Math.floor(Math.random() * (t - e + 1) + e);
},
selectelement: function(e, t) {
for (var i = [], o = 0; o < t; o++) {
var n = Math.floor(Math.random() * e.length);
i.push(e[n]);
e.splice(n, 1);
}
return i;
},
initaudioEngine: function() {
r.default.getInstance().initaudioEngine();
cc.sys.platform === cc.sys.VIVO_GAME && (this.innerAudioContext = qg.createInnerAudioContext());
cc.sys.platform === cc.sys.OPPO_GAME && (this.innerAudioContext = qg.createInnerAudioContext());
if (4 === window.platform && !window.TestModle) {
console.log("QQ音频接口初始化");
this.innerAudioContext = qq.createInnerAudioContext();
}
this.audioEngine = {
playMusic: function(e, t, i) {
r.default.getInstance().playMusic(e, t, i);
},
stopAll: function() {
r.default.getInstance().stopMusic();
},
pauseMusic: function() {
r.default.getInstance().pauseMusic();
},
resumeMusic: function() {
r.default.getInstance().resumeMusic();
},
getCurrentTime: function() {
return r.default.getInstance().getCurrentTime();
},
setMusicTime: function(e) {
r.default.getInstance().setMusicTime(e);
},
setVolume: function(e) {
r.default.getInstance().setMusicVolume(e);
},
stopEffect: function(e) {
r.default.getInstance().stopEffect(e);
}
};
},
getWorldPosition: function(e) {
return e.parent.convertToWorldSpaceAR(e.position);
},
hasVideo: function() {
switch (window.platform) {
case 4:
case 3:
case 1:
case 7:
case 5:
case 0:
return o.default.getInstance().getVideoFlag();

case 2:
return this.node.getComponent("AndroidSDK").hasVideo();
}
},
showVideo: function(e) {
var t = this;
this.videoCallback = e;
switch (window.platform) {
case 5:
case 4:
case 3:
case 1:
case 0:
case 2:
case 7:
console.log("是否有广告", o.default.getInstance().getVideoFlag());
if (o.default.getInstance().getVideoFlag()) {
window.videoIsPlay = !0;
window.Parent.reportCustomEvent("广告事件", {
"广告播放": ""
});
this.audioEngine.setVolume(0);
console.log("音量设置为0");
o.default.getInstance().showVideo(function(e) {
console.log("showVideo callback ");
window.videoIsPlay = !1;
if (e) {
console.log("showVideo callback true ");
window.videoTimes++;
window.Parent.setlocalStorage("videoTimes", window.videoTimes);
window.AchieveNumber[2]++;
window.Parent.setlocalStorage("AchieveNumber2", window.AchieveNumber[2]);
window.MissionNumber[5]++;
window.Parent.setlocalStorage("MissionNumber5", window.MissionNumber[5]);
window.Parent.reportCustomEvent("广告事件", {
"广告播放完成": ""
});
void 0 != window.crownStore && window.crownStore.SceneSlickBack(null, !1);
} else {
console.log("showVideo callback false ");
window.Parent.reportCustomEvent("广告事件", {
"广告播放未完成": ""
});
}
t.audioEngine.setVolume(1);
console.log("音量设置为1");
t.videoCallback(e);
});
} else {
console.log("展示无广告");
this.showTips("暂无广告");
}
break;

case 6:
this.RewardVideo.show({
success: function() {},
fail: function() {
this.showTips("暂无广告");
}
});
}
},
hasvideoinsert: function() {
switch (window.platform) {
case 1:
case 0:
case 2:
case 3:
case 4:
case 7:
return !1;

case 5:
console.log("IOS是否有视频插屏广告", o.default.getInstance().getVideoIntersFlag());
return !!this.videoinsertflag && o.default.getInstance().getVideoIntersFlag();
}
},
showInsertAD: function(e) {
switch (window.platform) {
case 4:
case 3:
case 1:
case 7:
case 0:
o.default.getInstance().showInters();
break;

case 5:
this.hasvideoinsert() && o.default.getInstance().showVideoInters(function() {
e && jsb.reflection.callStaticMethod("DJADManagerVC", "showiOSADWithType:Platform:", e.toString(), "0");
window.Parent.audioEngine.setVolume(1);
window.isShowingVideoInsert = !1;
});
console.log("ios展示插屏视频广告");
break;

case 2:
this.node.getComponent("AndroidSDK").hasInsert() && this.node.getComponent("AndroidSDK").showInters();
}
},
showBanner: function() {
switch (window.platform) {
case 4:
case 3:
case 1:
case 0:
case 7:
case 5:
console.log("展示Banner广告");
o.default.getInstance().showBanner();
}
},
hideBanner: function() {
switch (window.platform) {
case 5:
case 4:
case 3:
case 7:
case 1:
case 0:
console.log("隐藏Banner广告");
o.default.getInstance().hideBanner();
}
},
getQQBoxFlag: function() {
if (4 == window.platform) {
if (window.TestModle) return !0;
console.log("QQ广告盒子是否加载好", o.default.getInstance().getBoxFlag());
return o.default.getInstance().getBoxFlag();
}
},
showQQAppBox: function() {
if (4 == window.platform) {
console.log("展示QQ广告盒子");
o.default.getInstance().showAppBox();
}
},
getBlockAdFlag: function() {
return 4 == window.platform && (!!window.TestModle || o.default.getInstance().getBlockFlag());
},
showBlockAd: function(e, t, i, n) {
4 == window.platform && o.default.getInstance().showBlock(e, t, i, n);
},
hideBlockAd: function() {
if (4 == window.platform) {
console.log("隐藏积木广告");
o.default.getInstance().hideBlock();
}
},
androidCallBack: function() {
console.log("================androidCallBack");
window.videoTimes++;
window.Parent.setlocalStorage("videoTimes", window.videoTimes);
window.AchieveNumber[2]++;
window.Parent.setlocalStorage("AchieveNumber2", window.AchieveNumber[2]);
this.audioEngine.setVolume(1);
this.videoCallback(!0);
},
AndroidFailCallback: function() {
console.log("广告没有完成播放");
this.showTips("广告未完成播放");
},
onKeyDown: function(e) {
if (2 == window.platform) {
console.log("onKeyDown" + e.keyCode);
switch (e.keyCode) {
case cc.macro.KEY.back:
this.scheduleOnce(function() {
cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);
}, 1);
this.node.getComponent("AndroidSDK").exitTheGame();
console.log("--------点击了几次---------");
cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);
}
}
},
showPushiList: function(e, t) {
1 != window.platform && 5 != window.platform || o.default.getInstance().showNavigateGroup(e, t);
},
showPushicon: function(e, t, i, n) {
1 != window.platform && 5 != window.platform || o.default.getInstance().showNavigateIcon(e, t, i, n);
},
hidePushiList: function() {
1 != window.platform && 5 != window.platform || o.default.getInstance().hideNavigateGroup();
},
hidePushicon: function() {
1 != window.platform && 5 != window.platform || o.default.getInstance().hideNavigateIcon();
},
hasNavigateSettle: function() {
return (1 == window.platform || 5 == window.platform) && o.default.getInstance().getNavigateSettleFlag();
},
showNavigateSettle: function(e, t) {
if (1 == window.platform || 5 == window.platform) {
console.log("是否有互推", o.default.getInstance().getNavigateSettleFlag());
if (o.default.getInstance().getNavigateSettleFlag()) {
console.log("展示互推");
o.default.getInstance().showNavigateSettle(e, cc.winSize.width / 2, t);
}
}
},
hideNavigateSettle: function() {
console.log("隐藏互推");
o.default.getInstance().hideNavigateSettle();
},
shakePhone: function(e) {
window.isShake && !window.TestModle && (5 == window.platform ? o.default.getInstance().phoneVibrate(e) : 2 == window.platform ? this.node.getComponent("AndroidSDK").shakePhone(e) : o.default.getInstance().phoneVibrate(e));
},
getDeskTopFlag: function() {
o.default.getInstance().getDeskTopFlag(function(e) {
return e;
});
},
addDeskTop: function(e) {
var t = function(t) {
if (t) {
console.log("添加桌面成功，可以发放奖励");
e();
}
};
switch (window.platform) {
case 4:
case 2:
case 1:
case 0:
o.default.getInstance().addDeskTop(t);
break;

case 3:
if (!tt.addShortcut) return;
tt.addShortcut({
success: function(e) {
e.status;
var i = e.errMsg;
console.log(e);
console.log("API调用成功结果:    " + i);
t();
},
fail: function(e) {
var t = e.errMsg;
console.log("API调用失败结果:    " + t);
}
});
}
},
getNavigateBoxBannerFlag: function() {
if (1 == window.platform) return o.default.getInstance().getNavigateBoxBannerFlag();
},
showNavigateBoxBanner: function() {
if (1 == window.platform) {
console.log("是否有互推", o.default.getInstance().getNavigateBoxBannerFlag());
if (o.default.getInstance().getNavigateBoxBannerFlag()) {
console.log("展示互推");
o.default.getInstance().showNavigateBoxBanner();
}
}
},
hideNavigateBoxBanner: function() {
if (1 == window.platform) {
console.log("隐藏横幅互推");
o.default.getInstance().hideNavigateBoxBanner();
}
},
showNavigateBoxPortal: function() {
if (1 == window.platform) {
console.log("是否有更多游戏", o.default.getInstance().getNavigateBoxPortalFlag());
if (o.default.getInstance().getNavigateBoxPortalFlag()) {
console.log("展示更多游戏");
o.default.getInstance().showNavigateBoxPortal();
}
}
},
getNavigateBoxPortalFlag: function() {
if (1 == window.platform) return o.default.getInstance().getNavigateBoxPortalFlag();
},
startRecord: function() {
window.videoPath = void 0;
o.default.getInstance().startGameVideo(300);
},
pauseRecord: function() {
o.default.getInstance().pauseGameVideo();
},
resumeRecord: function() {
o.default.getInstance().resumeGameVideo();
},
stopRecord: function() {
o.default.getInstance().stopGameVideo(function(e) {
console.log("视频录制成功 ", e);
window.videoPath = e;
null == window.videoPath && window.Parent.showTips("视频录制出错");
});
},
shareRecord: function(e, t, i) {
window.Parent.reportCustomEvent("分享事件", {
"分享录屏点击": ""
});
(i = window.MusicName) || (i = "");
"" != i && (i = "#".concat(i));
console.log("MusicName : ", i);
var n = "", s = window.FaceModle, a = window.ConstellationNum;
n = s || a ? s && !a ? "#炫彩节奏3D人脸模式" : !s && a < 12 ? "#炫彩节奏3D星座模式" : "" : "";
console.log("GameModelName : ", n);
var c = window.HardLevel;
c || (c = "");
"" != c && (c = 0 == c ? "#炫彩节奏3D青铜模式" : 1 == c ? "#炫彩节奏3D钻石模式" : 2 == c ? "#炫彩节奏3D王者模式" : "");
console.log("HardLv : ", c);
if (i = "") {
c = "";
n = "";
}
console.log("window.videoPath: ", window.videoPath);
o.default.getInstance().shareVideo("", "", "炫彩节奏3d#抖音小游戏".concat(i).concat(n).concat(c), window.videoPath, function(e) {
if (e) {
console.log("分享视频成功");
window.Parent.reportCustomEvent("分享事件", {
"分享视频成功": ""
});
window.hasShare = !0;
window.Parent.setlocalStorage("hasShare", window.hasShare);
window.AchieveNumber[5]++;
window.Parent.setlocalStorage("AchieveNumber5", window.AchieveNumber[5]);
window.MissionNumber[7]++;
window.Parent.setlocalStorage("MissionNumber7", window.MissionNumber[7]);
t && t();
} else console.log("分享视频失败");
});
},
reportAnalytics: function(e) {
e = String(e);
if (3 === window.platform) {
console.log("事件上报", e);
if (window.TestModle) return;
tt.reportAnalytics(e, {});
}
5 === window.platform && o.default.getInstance().reportAnalytics(e);
},
isversionNewThanEngineVersion: function(e) {
var t = e.split("."), i = 100 * Number(t[0]) + 10 * Number(t[1]) + Number(t[2]);
console.log("ver", i);
var o = qq.getSystemInfoSync().SDKVersion.split("."), n = 100 * Number(o[0]) + 10 * Number(o[1]) + Number(o[2]);
console.log("engineVersion", n);
return i <= n;
},
reportCustomEvent: function(e, t) {},
showReviewAlert: function() {
5 === window.platform && o.default.getInstance().showReviewAlert();
},
OnClickMessage: function() {
var e = this;
0 === e.messageclockcunt ? e.scheduleOnce(function() {
e.messageclockcunt = 0;
}, 3) : e.messageclockcunt || (e.messageclockcunt = 0);
cc.log(e.messageclockcunt);
e.messageclockcunt++;
if (e.messageclockcunt >= 10) {
e.messageclockcunt = 0;
cc.loader.loadRes("PreFab/MessageNode", cc.Prefab, function(t, i) {
if (t) console.log("MessageNode 加载出错", t); else {
var o = cc.instantiate(i);
o.setPosition(0, 0);
o.zIndex = 102;
e.node.addChild(o);
}
});
}
},
ShowScoreList: function() {
var e = window.Parent.getlocalStorage("scoreList");
e ? e = JSON.parse(e) : console.log("尚未进行存储数据");
},
ButtonSounds: function() {
this.audioSourcesMgr.button_AUSounds();
},
FanyeSounds: function() {
this.audioSourcesMgr.Fanye_AUSounds();
},
OpenLightSounds: function() {
this.audioSourcesMgr.OpenLight_AUSounds();
},
StarSounds: function() {
this.audioSourcesMgr.star_AUSounds();
},
adddiamondSounds: function() {
this.audioSourcesMgr.diamond_AUSounds();
},
addscoreSounds: function() {
this.audioSourcesMgr.score_AUSounds();
},
timeSounds: function() {
console.log("倒计时音效");
this.audioSourcesMgr.time_AUSounds();
},
faillSounds: function() {
this.audioSourcesMgr.faill_AUSounds();
},
bubleSounds: function() {
this.audioSourcesMgr.Bubole_AUSounds();
},
lotterySounds: function() {
this.audioSourcesMgr.Lottery_AUSounds();
},
WowSounds: function() {
this.audioSourcesMgr.Wow_AUSounds();
},
UnlockSounds: function() {
this.audioSourcesMgr.Unlock_AUSounds();
},
bagClickSounds: function() {
this.audioSourcesMgr.bagClick_AUSounds();
},
qiehuanSounds: function() {
this.audioSourcesMgr.qiehuan_AUSounds();
},
iosvideoSounds: function() {
this.audioSourcesMgr.ios_videoSounds();
},
getroleSounds: function() {
this.audioSourcesMgr.getrole_Sounds();
},
newWowSounds: function() {
this.audioSourcesMgr.newWowSounds();
},
electricitySounds: function() {
this.audioSourcesMgr.electricitySounds();
},
lockShowSounds: function() {
this.audioSourcesMgr.lockShowSounds();
},
lockBreakSounds: function() {
this.audioSourcesMgr.lockBreakSounds();
},
lockVideoSounds: function() {
this.audioSourcesMgr.LockVideoAUSounds();
},
startGameSounds: function() {
this.audioSourcesMgr.StartGameAUSounds();
},
myMusicSounds: function() {
console.log("播放个性化推荐音乐");
this.audioSourcesMgr.MyMusicAUSounds();
},
PlayGuideAU: function(e) {
var t = "Guide" + e.toString() + "_AU";
this.guideSourcesMgr.playCurSounds(t);
}
});
cc._RF.pop();
}, {
"../SDK/ASCAd": "ASCAd",
"../Script/Help/DonaldManager": "DonaldManager",
"../Script/Help/audioEngineMamager": "audioEngineMamager",
"../Script/SDK/Tools": "Tools",
"./../Script/Help/AudioSourcesMamager": "AudioSourcesMamager",
"./../Script/Help/GuideSourcesManager": "GuideSourcesManager",
kwaigame: 12,
os: 7
} ],
CardJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ef564KGR11GqbC53hLwW/Yj", "CardJS");
cc.Class({
extends: cc.Component,
properties: {
CardPrefab: cc.Prefab,
cardJSON: cc.JsonAsset
},
onLoad: function() {
window.CardNode = this.node;
window.CardNodeJS = this;
this.defination();
this.definePar();
this.SetCardList();
this.ResetScrollView();
},
onEnable: function() {
window.CardNode.position = cc.v2(-window.CardNode.width / 2, window.CardNode.position.y);
},
defination: function() {
this.cardContent = this.node.getChildByName("view").getChildByName("content");
this.createOK = !1;
},
definePar: function() {
this.curCardList = this.cardJSON.json;
},
SetCardList: function() {
for (var e = this.curCardList.length + 1, t = 0; t < e; t++) {
var i = cc.instantiate(this.CardPrefab), o = i.getComponent("CardPrefabJS");
o.isFirst = 0 == t;
o.cardData = 0 != t ? this.curCardList[t - 1] : null;
o.ParentJS = this;
o.cardID = t;
i.parent = this.cardContent;
}
},
ResetScrollView: function() {
var e = this.node.getComponent("NestableScrollView_Inner"), t = window.Home.MusicCon.getComponent("NestableScrollView_Outer");
t.m_InnerScrollViews.push(e);
e.setOuterScrollView(t);
},
ShowCardRecommend: function() {
var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
if (1 != this.createOK) {
this.createOK = !0;
var i = this;
window.Home.LoadingNode.active = !0;
cc.loader.loadRes("PreFab/CardRecommend", cc.Prefab, function(e, t, i) {
var o = Math.floor(e / t * 100);
window.Home.LoadingNode.getComponent("LoadingNodeJS").SetProgress(o);
}, function(o, n) {
if (o) console.log("CardRecommend 加载出错"); else {
console.log("CardRecommend 加载完成");
var s = cc.instantiate(n);
s.parent = window.ParentNode;
var a = s.getComponent("CardRecommendJS");
a.cardData = e || null;
if (t) {
var c = a.AnchorNode;
c.position = cc.v2(t.x, t.y);
c.setContentSize(cc.winSize.width, cc.winSize.height);
c.setScale(.3);
var r = c.getChildByName("BG");
r.position = cc.v2(-t.x, -t.y);
r.setContentSize(cc.winSize.width, cc.winSize.height);
c.opacity = 0;
cc.tween(c).to(.3, {
scale: 1,
opacity: 255
}, {
easing: cc.easing.expoOu
}).call(function() {
i.createOK = !1;
}).start();
} else {
var l = a.AnchorNode;
l.setContentSize(window.screenWidth, window.screenHight);
l.getChildByName("BG").setContentSize(window.screenWidth, window.screenHight);
i.createOK = !1;
}
a.SetCurData();
window.Home.LoadingNode.active = !1;
}
});
}
},
ShowBackRecommond: function() {
if (-1 != window.cardDataNum) if (0 == window.cardDataNum) this.ShowCardRecommend(null); else {
var e = window.cardDataNum - 1, t = this.curCardList[e];
this.ShowCardRecommend(t);
}
}
});
cc._RF.pop();
}, {} ],
CardPrefabJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "edee1Rm5o9Kp5wAaHCSUGrv", "CardPrefabJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
isFirst: !1
},
onLoad: function() {
this.defination();
this.definePar();
0 == this.isFirst ? this.SetCardData() : this.SetCurData();
},
defination: function() {
this.baseNode = this.node.getChildByName("GRP_Base");
this.firstData = this.baseNode.getChildByName("FirstData");
this.monthLB = this.firstData.getChildByName("SP_DataBase").getChildByName("LB_Month");
this.dateLB = this.firstData.getChildByName("SP_DataBase").getChildByName("LB_Date");
this.otherData = this.baseNode.getChildByName("OtherData");
this.otherSP = this.otherData.getChildByName("Mask").getChildByName("SP_BG");
this.playSP = this.otherData.getChildByName("Mask").getChildByName("SP_Play");
this.playLB = this.playSP.getChildByName("LB_Play");
this.topNode = this.node.getChildByName("GRP_Top");
this.topDaySP = this.topNode.getChildByName("SP_Day");
this.topAuthoritySP = this.topNode.getChildByName("SP_Authority");
this.downNode = this.node.getChildByName("GRP_Down");
this.downTitleNode = this.downNode.getChildByName("LB_Title");
this.downDetailsNode = this.downNode.getChildByName("LB_Details");
this.StartBTN = this.node.getChildByName("BTN_Start");
},
definePar: function() {
0 == this.isFirst && (this.findTypeList = this.cardData.musicListData.split(","));
this.firstData.active = this.isFirst;
this.otherData.active = !this.isFirst;
this.topDaySP.active = this.isFirst;
this.topAuthoritySP.active = !1;
},
SetCardData: function() {
var e = this;
if (0 == this.isFirst) {
this.downTitleNode.getComponent(cc.Label).string = this.cardData.musicListTitle;
this.downDetailsNode.getComponent(cc.Label).string = this.cardData.musicListDetails;
this.playLB.getComponent(cc.Label).string = this.cardData.musicListPlayers;
this.otherSP.getComponent(cc.Sprite).spriteFrame = window.CardPicture_Spr[this.cardData.musicImgId];
this.scheduleOnce(function() {
e.playSP.width = e.playLB.width + 20;
}, .1);
}
},
SetCurData: function() {
var e = new Date(), t = (e.getFullYear(), e.getMonth()), i = e.getDate();
this.monthLB.getComponent(cc.Label).string = (t + 1).toString() + "月";
this.dateLB.getComponent(cc.Label).string = i.toString();
this.downTitleNode.getComponent(cc.Label).string = "献给特别的你";
this.downDetailsNode.getComponent(cc.Label).string = "根据音乐口味生成的歌曲列表";
},
OnClickCard: function() {
window.Parent.ButtonSounds();
var e = this.StartBTN.parent.convertToWorldSpaceAR(this.StartBTN.position), t = window.ParentNode.convertToNodeSpaceAR(e);
if (this.cardData) {
this.ParentJS.ShowCardRecommend(this.cardData, t);
var i = "Card" + this.cardData.musicListId + "UI_NoADClick";
o.default.getInstance().reportAnalytics("NoAd_Click_V2", i, 1);
} else {
this.ParentJS.ShowCardRecommend(null, t);
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "MyMusic_NoADClick", 1);
}
window.cardDataNum = this.cardID;
}
});
cc._RF.pop();
}, {
"./../Help/reportAnalytics": "reportAnalytics"
} ],
CardRecommendJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0e9deG6qwtAy5GFByNztgSM", "CardRecommendJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
AnchorNode: cc.Node,
musicPrefab: cc.Prefab
},
onLoad: function() {
window.CardRecommendNode = this.node;
window.CardRecommendNodeJS = this;
this.node.setContentSize(window.screenWidth, window.screenHight);
this.node.zIndex = 13;
this.defination();
this.definePar();
window.HomeNode.opacity = 0;
},
onEnable: function() {
var e = this;
this.ReadMusicPoint();
window.isShowMusicList = 4;
this.scheduleOnce(function() {
e.animNode.runAction(cc.fadeIn(1));
}, 1);
5 == window.platform && window.Parent.hidePushicon();
},
onDisable: function() {
this.node.destroy();
window.HomeNode.opacity = 255;
},
update: function(e) {
if (1 == this.musicPlaying) {
this.curMusicTime += e;
this.ShowMusicLineAnim();
}
},
defination: function() {
this.bgNode = this.node.getChildByName("AnchorNode").getChildByName("BG");
this.backBTN = this.bgNode.getChildByName("BTN_Back");
this.animNode = this.bgNode.getChildByName("GRP_Anim");
this.animNode.opacity = 0;
this.handNode = this.bgNode.getChildByName("SP_Hand");
this.titleLB = this.handNode.getChildByName("LB_Title");
this.detailLB = this.handNode.getChildByName("LB_Detail");
this.authoritySP = this.handNode.getChildByName("Tile_Authority");
this.daySP = this.handNode.getChildByName("Tile_Day");
this.AnimCon = this.handNode.getChildByName("MusicLine");
this.musicLine = [];
for (var e = 0; e < 27; e++) {
this.musicLine[e] = this.AnimCon.getChildByName("line".concat(e));
this.musicLine[e].getComponent("LineJS").Number = e;
}
this.musicNode = this.bgNode.getChildByName("GRP_Music");
this.musicScroll = this.musicNode.getChildByName("scrollview");
this.musicContent = this.musicScroll.getChildByName("view").getChildByName("content");
},
definePar: function() {
this.curMusicTime = 0;
this.musicPlaying = !1;
this.musicPointCount = 0;
},
SetCurData: function() {
if (this.cardData) {
this.titleLB.getComponent(cc.Label).string = this.cardData.musicListTitle;
this.detailLB.getComponent(cc.Label).string = this.cardData.musicListDetails;
var e = "Card" + this.cardData.musicListId + "UI_Show";
o.default.getInstance().reportAnalytics("View_Show_V2", e, 1);
} else {
this.titleLB.getComponent(cc.Label).string = "献给特别的你";
this.detailLB.getComponent(cc.Label).string = "根据你的音乐口味生成的专属歌单,每日更新";
o.default.getInstance().reportAnalytics("View_Show_V2", "DailyMusicUI_Show", 1);
}
this.SetMusicList();
},
SetMusicList: function() {
var e = this;
this.musicArr = [];
this.authoritySP.active = !1;
this.daySP.active = !1;
this.curMusicTabel = [];
if (this.cardData) {
this.findTypeList = this.cardData.musicListData.split(",");
for (var t = [], i = 0; i < window.Home.musicTable.length; i++) {
var o = window.Home.musicTable[i];
t[0] = o.ex_tag1_theme.split(",");
t[1] = o.ex_tag2_scene.split(",");
t[2] = o.ex_tag3_mood.split(",");
t[3] = o.ex_tag4_age.split(",");
t[4] = o.ex_tag5_genre.split(",");
t[5] = o.ex_tag6_language.split(",");
for (var n = 0; n < this.findTypeList.length; n++) {
var s = this.findTypeList[n];
if ((-1 != t[0].indexOf(s) || -1 != t[1].indexOf(s) || -1 != t[2].indexOf(s) || -1 != t[3].indexOf(s) || -1 != t[4].indexOf(s) || -1 != t[5].indexOf(s)) && -1 == this.curMusicTabel.indexOf(o)) {
this.curMusicTabel.push(o);
break;
}
}
}
} else {
this.daySP.active = !0;
for (var a = 0; a < window.Home.dayPlayList.length; a++) this.curMusicTabel.push(window.Home.dayPlayList[a]);
}
var c = 10;
if (this.cardData) {
c = 20;
this.curMusicTabel.length < c && (c = this.curMusicTabel.length);
}
var r = "CardMusic";
r = this.cardData ? "CardMusic" + this.cardData.musicListId : "CardMusic";
for (var l = 0; l < c; l++) this.curMusicTabel[l] && function() {
var t = cc.instantiate(e.musicPrefab), i = t.getComponent("CardSelectJS");
t.getChildByName("AnimNode").active = !1;
i.musicType = r;
i.musicName = e.curMusicTabel[l].musicName;
i.singerName = e.curMusicTabel[l].singerName;
i.orderNumber = e.curMusicTabel[l].orderNumber;
i.unlockType = e.curMusicTabel[l].unlockType;
i.unlockNumber = Number(e.curMusicTabel[l].unlockCost);
i.musicID = e.curMusicTabel[l].musicId;
i.NewFlag = e.curMusicTabel[l].ex_new;
i.musicURL = e.curMusicTabel[l].musicFile;
i.pointURL = e.curMusicTabel[l].json_normal;
i.musicNumber = window.Home.GetMusicNumber(e.curMusicTabel[l].musicId);
i.musicStyle = e.curMusicTabel[l].style;
i.listenNum = e.curMusicTabel[l].ex_listen;
i.parentJS = e;
e.musicContent.addChild(t);
e.musicArr[l] = i;
var o = .05 * l + .15;
e.scheduleOnce(function() {
i.TurnInAnim();
}, o);
}();
},
ReadMusicPoint: function() {
var e = this;
window.Parent.LoadPoint(window.playPoint, window.playID, function(t) {
e.pointList = [];
e.pointList = t;
e.curMusicTime = Number(window.ListenTime) / 1e3;
e.musicPlaying = !0;
for (var i = 0; i < e.pointList.length; i++) if (Number(e.pointList[i].time) / 1e3 > e.curMusicTime) {
e.musicPointCount = i;
break;
}
});
},
ShowMusicLineAnim: function() {
if (0 != this.musicPlaying) {
var e = this.pointList[this.musicPointCount].time / 1e3 - this.curMusicTime;
if (Math.abs(e) < .15) {
this.starMusicLine();
this.musicPointCount++;
this.musicPointCount >= this.pointList.length && (this.musicPointCount = 0);
}
}
},
starMusicLine: function() {
for (var e = 0; e < this.musicLine.length; e++) {
var t = 1 - Math.abs(this.musicLine[e].getComponent("LineJS").Number - 13) / 15, i = window.Parent.Random(10, 50) / 100 + t / 2;
this.musicLine[e].getComponent("LineJS").targetlength = i;
this.musicLine[e].getComponent("LineJS").changeTime = .06;
this.musicLine[e].getComponent("LineJS").starChangetLine();
}
},
OnClickBack: function() {
window.Parent.ButtonSounds();
this.node.active = !1;
window.isShowMusicList = 0;
window.cardDataNum = -1;
5 == window.platform && window.Parent.showPushicon(256, 256, 200, 1500);
}
});
cc._RF.pop();
}, {
"./../Help/reportAnalytics": "reportAnalytics"
} ],
CardSelectJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b1450O34v1IbZBQmYNaLJaW", "CardSelectJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./../Help/reportAnalytics"));
var n = e("MusicJS");
cc.Class({
extends: n,
properties: {},
defination: function() {
this.animNode = this.node.getChildByName("AnimNode");
this.musicPlay = this.animNode.getChildByName("musicPlay");
this.listBg = this.animNode.getChildByName("listBg");
this.CD = this.listBg.getChildByName("Mask").getChildByName("CD");
this.playButton = this.listBg.getChildByName("playButton");
this.pauseButton = this.listBg.getChildByName("pauseButton");
this.loading = this.listBg.getChildByName("loading");
this.StartButton = this.listBg.getChildByName("StartButton");
this.videoUnlockButton = this.listBg.getChildByName("videoUnlockButton");
this.diamondUnlockButton = this.listBg.getChildByName("DemondUnlockButton");
this.diamondText = this.diamondUnlockButton.getChildByName("num");
this.star = [];
this.star[0] = this.listBg.getChildByName("Star").getChildByName("star0");
this.star[1] = this.listBg.getChildByName("Star").getChildByName("star1");
this.star[2] = this.listBg.getChildByName("Star").getChildByName("star2");
this.songNameMask = this.listBg.getChildByName("SongNameMask");
this.songNameNode = this.songNameMask.getChildByName("SongName");
this.bestScoreLB = this.listBg.getChildByName("ScoreBg").getChildByName("Score");
this.ColectionButton = this.listBg.getChildByName("ColectionButton");
this.like = this.ColectionButton.getChildByName("like");
},
TurnInAnim: function() {
if (this.animNode) {
this.animNode.active = !0;
this.schedule(this.setCDPicture, .1);
this.animNode.setPosition(cc.v2(1080, 0));
this.animNode.stopAllActions();
this.node.active = !0;
this.animNode.runAction(cc.moveTo(.5, cc.v2(0, 0)).easing(cc.easeCubicActionOut()));
}
},
UpdateMusicInfo: function() {
var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
n.prototype.UpdateMusicInfo.call(this, e);
1 == window.musicisplaying && window.playName == this.musicName && this.parentJS && this.parentJS.ReadMusicPoint();
},
playMusicCallFunc: function(e) {
n.prototype.playMusicCallFunc.call(this, e);
this.parentJS && this.parentJS.ReadMusicPoint();
},
pauseMusic: function() {
n.prototype.pauseMusic.call(this);
this.parentJS && (this.parentJS.musicPlaying = !1);
},
OnClickVideo: function() {
"CardMusic" == this.musicType ? o.default.getInstance().reportAnalytics("Ad_Click_V2", "DailyMusic_ADClick", 1) : "CardMusic1" == this.musicType ? o.default.getInstance().reportAnalytics("Ad_Click_V2", "Card1UI_ADClick", 1) : "CardMusic2" == this.musicType ? o.default.getInstance().reportAnalytics("Ad_Click_V2", "Card2UI_ADClick", 1) : "CardMusic3" == this.musicType ? o.default.getInstance().reportAnalytics("Ad_Click_V2", "Card3UI_ADClick", 1) : "CardMusic4" == this.musicType && o.default.getInstance().reportAnalytics("Ad_Click_V2", "Card4UI_ADClick", 1);
window.Home.DealMusicScore(window.playID, !1, 2);
n.prototype.OnClickVideo.call(this);
},
OnClickDiamond: function() {
window.Home.DealMusicScore(window.playID, !1, 2);
n.prototype.OnClickDiamond.call(this);
},
OnClickPlay: function() {
"CardMusic" == this.musicType ? o.default.getInstance().reportAnalytics("NoAd_Click_V2", "DailyMusic_NoADClick", 1) : "CardMusic1" == this.musicType ? o.default.getInstance().reportAnalytics("NoAd_Click_V2", "Card1UI_NoADClick", 1) : "CardMusic2" == this.musicType ? o.default.getInstance().reportAnalytics("NoAd_Click_V2", "Card2UI_NoADClick", 1) : "CardMusic3" == this.musicType ? o.default.getInstance().reportAnalytics("NoAd_Click_V2", "Card3UI_NoADClick", 1) : "CardMusic4" == this.musicType && o.default.getInstance().reportAnalytics("NoAd_Click_V2", "Card4UI_NoADClick", 1);
n.prototype.OnClickPlay.call(this);
}
});
cc._RF.pop();
}, {
"./../Help/reportAnalytics": "reportAnalytics",
MusicJS: "MusicJS"
} ],
ChangeHighNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7f284Sy7ABILZQl3QY/GFWF", "ChangeHighNodeJS");
(function(e) {
e && e.__esModule;
})(e("../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
LightNode: cc.Node,
CrownNode: cc.Node,
PlayButton: cc.Node,
PauseButton: cc.Node,
loading: cc.Node,
ReviveBTN: cc.Node,
ReviveSPList: [ cc.SpriteFrame ],
TopNode: cc.Node,
ModelSPList: [ cc.SpriteFrame ]
},
onLoad: function() {
window.ChangeHigh = this;
this.node.setContentSize(window.screenWidth, window.screenHight);
this.curLabelList = [ "钻石模式过关可获得皇冠 ", "王者模式过关可获得皇冠 " ];
this.TopLabelList = [ "挑战更高难度吧！", "挑战新音乐吧！" ];
this.labelNode = this.CrownNode.getChildByName("LB_Label");
this.modelSpNode = this.CrownNode.getChildByName("SP_model");
this.playNum = void 0;
this.levelNum = void 0;
this.musicStr = void 0;
this.musicData = void 0;
this.songNode = this.LightNode.getChildByName("SongName");
this.CD = this.LightNode.getChildByName("Mask").getChildByName("CD");
this.isWatchVideo = !1;
this.giveUpNode = this.node.getChildByName("Other").getChildByName("BTN_GiveUp");
this.curLevel = 0;
},
onEnable: function() {
this.UNCallBack = void 0;
this.playNumber = void 0;
this.playName = void 0;
this.playURL = void 0;
this.playID = void 0;
this.playPoint = void 0;
},
onDisable: function() {
this.musicplay && this.pauseMusic();
},
UpdateOther: function(e) {
null != e && (this.UNCallBack = e);
this.SetCrown();
3 === window.platform && (window.PowerNode.active = !0);
window.DiamondNode.active = !0;
window.CrownNode.active = !0;
window.GameStart = !1;
this.LightNode.active = !1;
this.CrownNode.active = !1;
this.isWatchVideo = !1;
this.giveUpNode.active = !1;
window.Parent.reportAnalytics("BeforeWin_page_access");
var t = this;
3 == window.platform ? this.scheduleOnce(function() {
t.giveUpNode.active = !0;
}, 2) : this.scheduleOnce(function() {
t.giveUpNode.active = !0;
}, .2);
this.ReviveBTN.getComponent(cc.Sprite).spriteFrame = this.ReviveSPList[0];
var i = 0;
this.musicStr = window.playID;
console.log("this.musicStr  : ", this.musicStr);
var o = Number(window.Parent.getlocalStorage("HardLevel1" + this.musicStr)), n = Number(window.Parent.getlocalStorage("HardLevel2" + this.musicStr));
console.log("musicName :" + window.playName);
n <= 0 && (i = 2);
o <= 0 && n <= 0 && (i = 1);
this.TopNode.getComponent(cc.Label).string = this.TopLabelList[0 != i ? 0 : 1];
this.TopNode.active = 0 == i;
this.curLevel = 0;
if (0 != i) {
this.CrownNode.active = !0;
this.labelNode.getComponent(cc.Label).string = this.curLabelList[1 == i ? 0 : 1];
this.modelSpNode.getComponent(cc.Sprite).spriteFrame = this.ModelSPList[1 == i ? 0 : 1];
this.playNum = window.playNum;
this.levelNum = i;
if (2 == window.platform || 5 == window.platform) if (1 == i) {
window.Parent.setlocalStorage("HardLevel1" + this.musicStr, 1);
this.isWatchVideo = !0;
this.ReviveBTN.getComponent(cc.Sprite).spriteFrame = this.ReviveSPList[1];
this.curLevel = 1;
this.GetModelCrown();
} else {
window.Parent.setlocalStorage("HardLevel2" + this.musicStr, 1);
this.isWatchVideo = !0;
this.ReviveBTN.getComponent(cc.Sprite).spriteFrame = this.ReviveSPList[1];
this.curLevel = 2;
this.GetModelCrown();
}
} else {
this.GetNextMusicList();
2 != window.platform && 5 != window.platform || (this.curLevel = 3);
this.LightNode.active = !0;
this.UpdateStyle();
}
},
OnClickRevive: function() {
var e = this, t = function() {
window.MusicLoadingNode.active = !0;
window.Game.ClearAll();
window.GameNode.active = !1;
e.node.active = !1;
e.UNCallBack = void 0;
};
if (0 == this.isWatchVideo) window.Parent.showVideo(function(i) {
e.GetModelCrown();
if (i) {
e.isWatchVideo = !0;
if (3 != e.curLevel || 2 != window.platform && 5 != window.platform) {
e.ReviveBTN.getComponent(cc.Sprite).spriteFrame = e.ReviveSPList[1];
window.playNum = e.nextmusicNumber[0];
window.playName = e.nextMusicData.musicName;
window.playURL = e.nextMusicData.musicFile;
window.playID = e.nextMusicData.musicId;
window.playPoint = e.nextMusicData.json_normal;
console.log("下一首 : ", window.playName);
if (void 0 != e.levelNum) {
window.HardLevel = e.levelNum;
e.levelNum = void 0;
if (1 == window.HardLevel) {
window.Parent.setlocalStorage("HardLevel1" + e.musicStr, 1);
window.Parent.reportAnalytics("BeforeWin_hard_vedio_click");
} else if (2 == window.HardLevel) {
window.Parent.setlocalStorage("HardLevel2" + e.musicStr, 1);
window.Parent.reportAnalytics("BeforeWin_superhard_vedio_click");
}
} else {
window.HardLevel = 0;
window.Parent.setlocalStorage("isUnlock" + window.playID, "true");
window.AchieveNumber[1]++;
window.Parent.setlocalStorage("AchieveNumber1", window.AchieveNumber[1]);
window.Parent.reportAnalytics("BeforeWin_NewMusic_vedio_click");
}
e.playNum != window.playNum && void 0 != e.playNum && (window.playNum = e.playNum);
e.musicStr = void 0;
3 == window.platform ? window.Power.reduceTili(e.ReviveBTN, t) : t();
} else {
window.HardLevel = 0;
window.playNum = e.nextmusicNumber[0];
window.playName = e.nextMusicData.musicName;
window.playURL = e.nextMusicData.musicFile;
window.playID = e.nextMusicData.musicId;
window.playPoint = e.nextMusicData.json_normal;
var o = window.Home.musicTable[e.nextmusicNumber[0]].musicId;
console.log("解锁歌曲 : ", o);
window.Parent.setlocalStorage("isUnlock" + o, "true");
window.AchieveNumber[1]++;
window.Parent.setlocalStorage("AchieveNumber1", window.AchieveNumber[1]);
t();
}
}
}); else if (1 == this.isWatchVideo) if (3 == window.platform) window.Power.reduceTili(e.ReviveBTN, t); else {
2 != window.platform && 5 != window.platform || (window.HardLevel = this.curLevel);
t();
}
},
OnClickGiveUp: function() {
this.node.active = !1;
if (this.UNCallBack) {
this.UNCallBack();
this.UNCallBack = void 0;
}
},
GetNextMusicList: function() {
this.nextmusicNumber = [];
this.nextmusicNumber2 = [];
for (var e = 0; e < window.Home.musicTable.length; e++) {
var t = window.Home.musicTable[e], i = t.musicId, o = t.unlockType, n = t.unlockCost;
"true" == window.Parent.getlocalStorage("isUnlock" + i) ? this.nextmusicNumber2.push(e) : "coin" == o && 0 == n ? this.nextmusicNumber2.push(e) : "coin" != o && this.nextmusicNumber.push(e);
}
this.nextmusicNumber = window.Tools.disruptionArr(this.nextmusicNumber);
this.nextMusicData = window.Home.musicTable[this.nextmusicNumber[0]];
console.log("this.nextMusicData : ", this.nextMusicData);
},
playMusic: function() {
var e = this;
window.Home.stopMusicPlaying();
window.musicisplaying = !1;
this.PlayButton.active = !1;
this.loading.active = !0;
this.loading.stopAllActions();
cc.tween(this.loading).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
var t = this.nextMusicData.musicFile, i = this.nextMusicData.musicId;
this.curMusicData = window.Home.newSongTable[0];
this.songNode.getComponent(cc.Label).string = this.nextMusicData.musicName;
this.CD.getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[this.nextMusicData.orderNumber % 20];
window.Parent.LoadMusic(t, i, function(t) {
if (!window.musicisplaying) if (window.videoIsPlay) window.Home.stopMusicPlaying(); else {
e.playNumber = e.nextmusicNumber[0];
e.playName = e.nextMusicData.musicName;
e.playURL = e.nextMusicData.musicFile;
e.playID = e.nextMusicData.musicId;
e.playPoint = e.nextMusicData.json_normal;
e.loading.active = !1;
e.PauseButton.active = !0;
window.musicisplaying = !0;
e.musicplay = !0;
cc.tween(e.CD).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
window.Parent.audioEngine.playMusic(t, !0);
}
});
},
pauseMusic: function() {
this.musicplay = !1;
window.musicisplaying = !1;
this.PlayButton.active = !0;
this.loading.active = !1;
this.PauseButton.active = !1;
this.CD.angle = 0;
this.CD.stopAllActions();
window.Parent.audioEngine.stopAll();
},
UpdateStyle: function() {
this.playMusic();
},
SetCrown: function() {
if (0 == Number(window.Parent.getlocalStorage("isFirstTips"))) {
window.CrownNode.active = !0;
window.Parent.setlocalStorage("isFirstTips", 1);
window.Crown.addCrown();
this.scheduleOnce(function() {
window.Crown.addCrown();
}, .2);
}
},
GetModelCrown: function() {
switch (window.HardLevel) {
case 1:
window.CrownNode.active = !0;
var e = Number(window.Parent.getlocalStorage("HardLevel1" + window.playID));
console.log("case 1 + " + e);
if (1 === e) {
window.Crown.addCrown();
window.Parent.setlocalStorage("HardLevel1" + window.playID, 2);
}
break;

case 2:
window.CrownNode.active = !0;
e = Number(window.Parent.getlocalStorage("HardLevel2" + window.playID));
console.log("case 2 + " + e);
if (1 === e) {
window.Crown.addCrown();
window.Parent.setlocalStorage("HardLevel2" + window.playID, 2);
}
}
}
});
cc._RF.pop();
}, {
"../Help/reportAnalytics": "reportAnalytics"
} ],
CocosUI: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9a571LncrRC/7qD2mvNdoSX", "CocosUI");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../tools/SdkTools"), n = e("../ads/nativeAd/NativeController"), s = e("../ads/bannerAd/BannerController"), a = e("../navigate/NavigateController"), c = e("../network/Network"), r = e("../ads/IntersAd/IntersController"), l = function() {
function e() {
this.cocosGroup = "";
this.nativeBanner = null;
this.nativeIcon = null;
this.nativeImage = null;
this.navigateIconTimeInterval = null;
this.navigateInfom = null;
this.navigateBg = null;
this.navigateGroupBg = null;
this.navigateSettleBg = null;
this.NIUIInfo = null;
this.NativeBannerUIInfo = null;
this.ICONInfo = null;
this.navigateUITextures = null;
this.NavigateIconTextureList = [];
this.navigateGroupUITextures = null;
this.nativeIntersErrorTimes = 0;
this.nativeBannerErrorTimes = 0;
this.nativeIconErrorTimes = 0;
this.isLoadNIUI = !1;
this.isLoadNativeBannerUI = !1;
this.isLoadIconTip = !1;
this.isLoadNavigateIcon = !1;
this.isLoadNavigateGroup = !1;
this.isLoadNavigateList = !1;
this.navigateSettleUITextures = null;
this.groupMoving = !1;
this.isLoadNavigateSettle = !1;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.setGroup = function(e) {
this.cocosGroup = e;
};
e.prototype.loadNativeInstersRes = function() {
console.log("ASCSDK", "开始加载原生插屏资源");
this.NIUIInfo = {
layerBg: null,
bg: null,
button: null,
exit: null,
mask: null
};
var e = this;
o.default.loadImage([ "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeIntersRes/layerBg.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeIntersRes/nativeIntersBg.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeIntersRes/touchButton.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeIntersRes/nativeClose.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeIntersRes/mask.png" ], function(t, i) {
if (t) {
console.log("ASCSDK", "原生插屏资源加载错误:" + JSON.stringify(t));
if (e.nativeIntersErrorTimes < 5) {
e.nativeIntersErrorTimes++;
e.loadNativeInstersRes();
}
} else {
e.NIUIInfo.layerBg = i[0];
e.NIUIInfo.bg = i[1];
e.NIUIInfo.button = i[2];
e.NIUIInfo.exit = i[3];
e.NIUIInfo.mask = i[4];
e.isLoadNIUI = !0;
console.log("ASCSDK", "原生插屏资源加载成功");
}
});
};
e.prototype.loadNativeBannerRes = function() {
console.log("ASCSDK", "开始加载原生Banner资源");
this.NativeBannerUIInfo = {
bannerBg: null,
bannerButton: null,
bannerClose: null,
bannerTip: null
};
var e = this;
o.default.loadImage([ "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeBannerRes/newNativeBanner.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeBannerRes/nativeBannerButton.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeBannerRes/nativeBannerClose.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeBannerRes/nativeBannerTip.png" ], function(t, i) {
if (t) {
console.log("ASCSDK", "原生Banner资源加载错误:" + JSON.stringify(t));
if (e.nativeBannerErrorTimes < 5) {
e.nativeBannerErrorTimes++;
e.loadNativeBannerRes();
}
} else {
e.NativeBannerUIInfo.bannerBg = i[0];
e.NativeBannerUIInfo.bannerButton = i[1];
e.NativeBannerUIInfo.bannerClose = i[2];
e.NativeBannerUIInfo.bannerTip = i[3];
e.isLoadNativeBannerUI = !0;
console.log("ASCSDK", "原生Banner资源加载成功");
}
});
};
e.prototype.loadNativeIconRes = function() {
this.ICONInfo = {
iconButton: null,
iconClose: null
};
var e = this;
console.log("ASCSDK", "开始加载原生广告角标资源");
o.default.loadImage([ "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeIconRes/ICONAd.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeBannerRes/nativeBannerClose.png" ], function(t, i) {
if (t) {
console.log("ASCSDK", "原生广告角标资源加载错误" + t);
if (e.nativeIconErrorTimes < 5) {
e.nativeIconErrorTimes++;
e.loadNativeIconRes();
}
} else {
e.isLoadIconTip = !0;
console.log("ASCSDK", "原生广告角标资源加载成功");
e.ICONInfo.iconButton = i[0];
e.ICONInfo.iconClose = i[1];
}
});
};
e.prototype.loadNavigateIconRes = function() {
console.log("ASCSDK", "开始加载互推ICON资源");
var e = this;
this.navigateUITextures = {
maskTexture: null,
bgTexture: null,
moreGameTexture: null
};
o.default.loadImage([ "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateIconRes/iconMask.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateIconRes/iconBg.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateIconRes/morgametitle.png" ], function(t, i) {
if (t) console.log("ASCSDK", "互推ICON资源加载错误:" + JSON.stringify(t)); else {
e.navigateUITextures.maskTexture = i[0];
e.navigateUITextures.bgTexture = i[1];
e.navigateUITextures.moreGameTexture = i[2];
e.isLoadNavigateIcon = !0;
console.log("ASCSDK", "互推ICON资源加载成功");
}
});
this.loadNavigateList();
};
e.prototype.loadNavigateGroup = function() {
console.log("ASCSDK", "开始加载互推列表资源");
var e = this;
this.navigateGroupUITextures = {
groupHTexture: null,
groupVTexture: null,
leftTexture: null,
maskTexture: null,
moreGameTitleTexture: null,
redTexture: null,
rightTexture: null
};
o.default.loadImage([ "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateGroupRes/groupH.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateGroupRes/groupV.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateGroupRes/left.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateGroupRes/mask.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateGroupRes/moreGameTitle.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateGroupRes/red.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateGroupRes/right.png" ], function(t, i) {
if (t) console.log("ASCSDK", "互推列表资源加载错误", JSON.stringify(t)); else {
e.navigateGroupUITextures.groupHTexture = i[0];
e.navigateGroupUITextures.groupVTexture = i[1];
e.navigateGroupUITextures.leftTexture = i[2];
e.navigateGroupUITextures.maskTexture = i[3];
e.navigateGroupUITextures.moreGameTitleTexture = i[4];
e.navigateGroupUITextures.redTexture = i[5];
e.navigateGroupUITextures.rightTexture = i[6];
e.isLoadNavigateGroup = !0;
console.log("ASCSDK", "互推列表资源加载成功");
}
});
this.loadNavigateList();
};
e.prototype.loadNavigateSettleRes = function() {
var e = this;
this.navigateSettleUITextures = {
navigateSettleGroup: null,
navigateSettletitleBg: null,
mask: null,
iconWihte: null,
navigateBanner: null,
newMask: null,
newIconWihte: null
};
o.default.loadImage([ "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateSettleRes/navigateSettleGroup.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateSettleRes/navigateSettletitleBg.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateSettleRes/settleIcon.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateSettleRes/iconWihte.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateSettleRes/navigateBanner.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateSettleRes/newMask3.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateSettleRes/newIconWihte3.png" ], function(t, i) {
if (t) console.log("ASCSDK", "结算互推资源加载错误" + JSON.stringify(t)); else {
e.navigateSettleUITextures.navigateSettleGroup = i[0];
e.navigateSettleUITextures.navigateSettletitleBg = i[1];
e.navigateSettleUITextures.mask = i[2];
e.navigateSettleUITextures.iconWihte = i[3];
e.navigateSettleUITextures.navigateBanner = i[4];
e.navigateSettleUITextures.newMask = i[5];
e.navigateSettleUITextures.newIconWihte = i[6];
e.isLoadNavigateSettle = !0;
console.log("ASCSDK", "结算互推资源加载成功");
}
});
this.loadNavigateList();
};
e.prototype.loadNavigateList = function() {
for (var e = this, t = 0, i = a.default.getInstance().navigateList, o = function(o) {
cc.loader.load(i[o].pushGamePicture, function(n, s) {
if (n) {
console.log("ASCSDK", "icon" + o + "加载失败");
cc.loader.load("https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateIconRes/noIconImage.png", function(n, s) {
t++;
if (n) e.NavigateIconTextureList[o] = null; else {
e.NavigateIconTextureList[o] = s;
t >= i.length && (e.isLoadNavigateList = !0);
}
});
} else {
e.NavigateIconTextureList[o] = s;
++t >= i.length && (e.isLoadNavigateList = !0);
}
});
}, n = 0; n < i.length; n++) o(n);
};
e.prototype.showNativeIntersUI = function(e) {
console.log("ASCSDK", "showNativeIntersUI===========================");
var t = new cc.Node("layerBg");
t.addComponent(cc.Sprite);
t.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.NIUIInfo.layerBg);
t.active = !1;
setTimeout(function() {
t.active = !0;
t.width = 2560;
t.height = 2560;
t.x = cc.winSize.width / 2;
t.y = cc.winSize.height / 2;
}, .5);
t.zIndex = 30003;
t.opacity = 150;
t.attr({
adId: e.adId
});
var i = cc.director.getScene();
i.addChild(t);
"" != this.cocosGroup && (t.group = this.cocosGroup);
t.on(cc.Node.EventType.TOUCH_START, function(e) {});
var o = new cc.Node("bg");
o.addComponent(cc.Sprite);
var s = new cc.SpriteFrame(this.NIUIInfo.bg);
o.getComponent(cc.Sprite).spriteFrame = s;
o.zIndex = 30010;
if (cc.winSize.width < cc.winSize.height) {
setTimeout(function() {
o.width = cc.winSize.width - 100;
o.height = .89 * o.width;
o.x = cc.winSize.width / 2;
o.y = cc.winSize.height / 2 + 100;
}, 1);
i.addChild(o);
"" != this.cocosGroup && (o.group = this.cocosGroup);
var a = new cc.Node("button");
a.addComponent(cc.Sprite);
a.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.NIUIInfo.button);
setTimeout(function() {
a.width = o.width - 200;
a.height = .382 * a.width;
a.x = o.x;
a.y = o.y - o.height / 2 - a.height / 2 - 30;
a.zIndex = 30010;
}, 1);
i.addChild(a);
var c = e.adId;
a.on(cc.Node.EventType.TOUCH_START, function(e) {
n.default.getInstance().reportNativeClick(c);
});
"" != this.cocosGroup && (a.group = this.cocosGroup);
} else {
setTimeout(function() {
o.height = cc.winSize.height - 200;
o.width = o.height / .89;
o.x = cc.winSize.width / 2;
o.y = cc.winSize.height / 2;
}, .5);
i.addChild(o);
"" != this.cocosGroup && (o.group = this.cocosGroup);
}
var l = e.adId;
o.on(cc.Node.EventType.TOUCH_START, function(e) {
n.default.getInstance().reportNativeClick(l);
});
var d = new cc.Node("titleLabel");
d.addComponent(cc.Label);
d.getComponent(cc.Label).fontSize = 30;
d.getComponent(cc.Label).string = e.title;
d.color = cc.color(204, 124, 112);
o.addChild(d);
if (n.default.getInstance().getImageNativeFlag()) {
console.log("ASCSDK", "原生插屏广告大图优先");
(u = new cc.Node("descLabel")).addComponent(cc.Label);
u.getComponent(cc.Label).string = e.desc;
u.getComponent(cc.Label).fontSize = 30;
u.color = cc.color(153, 124, 112);
o.addChild(u);
var h = new cc.Node("icon");
h.addComponent(cc.Sprite);
h.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(e.Native_BigImage);
setTimeout(function() {
d.y = o.height / 2 - d.height / 2 - .15 * o.height;
u.x = 0;
u.y = .18 * o.height;
h.width = .8 * o.height;
h.height = .4 * o.height;
h.x = 0;
h.y = -.085 * o.height;
}, 1);
o.addChild(h);
} else if (n.default.getInstance().getIconNativeFlag()) {
console.log("ASCSDK", "原生插屏广告ICON展示");
var u;
(u = new cc.Node("descLabel")).addComponent(cc.Label);
u.getComponent(cc.Label).string = e.desc;
u.getComponent(cc.Label).fontSize = 30;
u.color = cc.color(0, 0, 0);
o.addChild(u);
var w = new cc.Node("icon");
w.addComponent(cc.Sprite);
w.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(e.Native_icon);
o.addChild(w);
setTimeout(function() {
d.y = o.height / 2 - d.height / 2 - .15 * o.height;
u.x = 0;
u.y = .33 * -o.height;
w.height = .55 * o.height;
w.width = w.height;
w.x = 0;
w.y = 0;
}, 1);
}
var m = new cc.Node("exit");
m.addComponent(cc.Sprite);
m.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.NIUIInfo.exit);
m.zIndex = 30010;
m.addComponent(cc.Button);
setTimeout(function() {
m.x = o.width / 2 - m.width / 2 * 1.25 * o.width / 914 - .07 * o.width;
m.y = o.height / 2 - m.width / 2 * 1.25 * o.width / 914 - .07 * o.width;
m.scale = o.width / 914;
}, 1);
o.addChild(m);
m.on(cc.Node.EventType.TOUCH_START, function(e) {
r.default.getInstance().intersNowTime = 0;
i.removeChild(t);
i.removeChild(o);
i.removeChild(a);
});
};
e.prototype.showNativeBannerUI = function(e) {
var t = this, i = cc.director.getScene();
if (this.nativeBanner && i.getChildByName("nativeBanner")) console.log("ASCSDK", "已存在原生banner return"); else {
var a = e.adId;
n.default.getInstance().reportNativeShow(a);
console.log("ASCSDK", "showNativeBanner========================");
this.nativeBanner = new cc.Node("nativeBanner");
this.nativeBanner.addComponent(cc.Sprite);
this.nativeBanner.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.NativeBannerUIInfo.bannerBg);
this.nativeBanner.addComponent(cc.Widget);
this.nativeBanner.getComponent(cc.Widget).isAlignHorizontalCenter = !0;
this.nativeBanner.scale = 0;
this.nativeBanner.active = !1;
setTimeout(function() {
t.nativeBanner.active = !0;
if (cc.winSize.width < cc.winSize.height) {
t.nativeBanner.width = cc.winSize.width;
t.nativeBanner.height = .18 * cc.winSize.width;
} else {
t.nativeBanner.width = cc.winSize.width / 2;
t.nativeBanner.height = .18 * t.nativeBanner.width;
}
t.nativeBanner.y = t.nativeBanner.height / 2;
}, .5);
var c = JSON.stringify(cc.view.getResolutionPolicy()), r = JSON.parse(c)._contentStrategy._result.viewport.height;
if (void 0 != typeof r && r && r != o.default.getInstance().getSystemInfo().screenHeight && cc.winSize.height > cc.winSize.width && 0 != o.default.getInstance().getSystemInfo().screenHeight) {
var l = r / cc.winSize.height;
this.nativeBanner.y = this.nativeBanner.height / 2 - (o.default.getInstance().getSystemInfo().screenHeight - r) / 2 / l;
}
this.nativeBanner.zIndex = 29998;
this.nativeBanner.on(cc.Node.EventType.TOUCH_START, function(e) {
n.default.getInstance().reportNativeClick(a);
});
i.addChild(this.nativeBanner);
"" != this.cocosGroup && (this.nativeBanner.group = this.cocosGroup);
var d = new cc.Node("adTip");
d.addComponent(cc.Sprite);
d.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.NativeBannerUIInfo.bannerTip);
this.nativeBanner.addChild(d);
var h = new cc.Node("bannerButton");
h.addComponent(cc.Sprite);
h.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.NativeBannerUIInfo.bannerButton);
setTimeout(function() {
d.height = .2 * t.nativeBanner.height;
d.width = d.height / .45;
d.x = t.nativeBanner.width / 2 - d.width / 2;
d.y = t.nativeBanner.height / 2 - d.height / 2;
h.width = .255 * t.nativeBanner.width;
h.height = .351 * h.width;
h.x = t.nativeBanner.width / 2 - .185 * t.nativeBanner.width;
h.y = 0;
}, 1);
this.nativeBanner.addChild(h);
if (n.default.getInstance().getImageNativeFlag()) {
var u = new cc.Node("image");
u.addComponent(cc.Sprite);
u.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(e.Native_BigImage);
setTimeout(function() {
u.height = t.nativeBanner.height;
o.default.getPlatform() == o.Game_Platform.GP_HW ? u.width = 1080 * u.height / 607 : u.width = 2 * u.height;
u.x = u.width / 2 - t.nativeBanner.width / 2;
u.y = 0;
}, 1);
this.nativeBanner.addChild(u);
(w = new cc.Node("titleLabel")).addComponent(cc.Label);
w.getComponent(cc.Label).fontSize = 25;
"" == e.desc ? w.getComponent(cc.Label).string = e.title : w.getComponent(cc.Label).string = e.desc;
setTimeout(function() {
w.width = t.nativeBanner.width - u.width - h.width - .2 * t.nativeBanner.height / .45;
w.height = t.nativeBanner.height;
w.y = 0;
w.x = -t.nativeBanner.width / 2 + 2.2 * t.nativeBanner.height + w.width / 2;
}, 1);
w.getComponent(cc.Label).overflow = cc.Label.Overflow.CLAMP;
w.getComponent(cc.Label).horizontalAlign = cc.Label.HorizontalAlign.LEFT;
w.getComponent(cc.Label).verticalAlign = cc.Label.VerticalAlign.CENTER;
w.color = cc.color(255, 0, 0);
this.nativeBanner.addChild(w);
} else if (n.default.getInstance().getIconNativeFlag()) {
var w, m = new cc.Node("icon");
m.addComponent(cc.Sprite);
m.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(e.Native_icon);
setTimeout(function() {
m.width = .8 * t.nativeBanner.height;
m.height = .8 * t.nativeBanner.height;
m.x = -t.nativeBanner.width / 2 + .8 * m.width;
m.y = 0;
}, 1);
this.nativeBanner.addChild(m);
(w = new cc.Node("titleLabel")).addComponent(cc.Label);
w.getComponent(cc.Label).fontSize = 25;
"" == e.desc ? w.getComponent(cc.Label).string = e.title : w.getComponent(cc.Label).string = e.desc;
setTimeout(function() {
w.width = t.nativeBanner.width - m.width - h.width - .2 * t.nativeBanner.height / .45;
w.height = t.nativeBanner.height;
w.y = 0;
w.x = -t.nativeBanner.width / 2 + 1.5 * t.nativeBanner.height + w.width / 2;
}, 1);
w.getComponent(cc.Label).overflow = cc.Label.Overflow.CLAMP;
w.getComponent(cc.Label).horizontalAlign = cc.Label.HorizontalAlign.LEFT;
w.getComponent(cc.Label).verticalAlign = cc.Label.VerticalAlign.CENTER;
w.color = cc.color(255, 0, 0);
this.nativeBanner.addChild(w);
}
var g = new cc.Node("closeICON");
g.addComponent(cc.Sprite);
g.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.NativeBannerUIInfo.bannerClose);
setTimeout(function() {
t.nativeBanner.scale = 1;
g.width = .27 * t.nativeBanner.height;
g.height = .27 * t.nativeBanner.height;
g.x = -t.nativeBanner.width / 2 + g.width / 2;
g.y = t.nativeBanner.height / 2 - g.width / 2;
}, 1);
this.nativeBanner.addChild(g);
var p = new cc.Node("closeButton");
setTimeout(function() {
p.width = g.height;
p.height = g.height;
p.x = -t.nativeBanner.width / 2 + g.width / 2;
p.y = t.nativeBanner.height / 2 - g.width / 2;
}, 1);
p.zIndex = 29999;
this.nativeBanner.addChild(p);
var f = this;
p.on(cc.Node.EventType.TOUCH_START, function(e) {
var t = s.default.getInstance();
console.log("ASCSDK", "原生banner关闭", t.NUM_BannerUpdateTime + "S后再次刷新");
f.hideNativeBannerUI();
t.bannerClose();
t.updateBanner();
e.stopPropagation();
});
}
};
e.prototype.hideNativeBannerUI = function() {
if (this.nativeBanner) {
console.log("ASCSDK", "hideNativeBannerUI===========================");
this.nativeBanner.removeFromParent();
this.nativeBanner = null;
}
};
e.prototype.showNativeIconUI = function(e, t, i, o, s) {
var a = this;
console.log("ASCSDK", "showNativeICON===========================");
this.nativeIcon = new cc.Node("icon");
this.nativeIcon.addComponent(cc.Sprite);
this.nativeIcon.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(s.Native_icon);
this.nativeIcon.scale = 0;
this.nativeIcon.active = !1;
this.nativeIcon.zIndex = 3e4;
setTimeout(function() {
a.nativeIcon.active = !0;
a.nativeIcon.width = e;
a.nativeIcon.height = t;
a.nativeIcon.x = i;
a.nativeIcon.y = o;
a.nativeIcon.scale = 1;
}, 1);
cc.director.getScene().addChild(this.nativeIcon);
"" != this.cocosGroup && (this.nativeIcon.group = this.cocosGroup);
var c = new cc.Node("ICONInfo");
c.addComponent(cc.Sprite);
c.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.ICONInfo.iconButton);
setTimeout(function() {
c.width = e / 3;
c.height = c.width / 70 * 34;
c.x = e / 2 - c.width / 2;
c.y = t / 2 - c.height / 2;
}, 1);
this.nativeIcon.addChild(c);
var r = new cc.Node("ICONClose");
r.addComponent(cc.Sprite);
r.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.ICONInfo.iconClose);
setTimeout(function() {
r.width = 45;
r.height = 45;
r.x = -a.nativeIcon.width / 2 + r.width / 2;
r.y = a.nativeIcon.height / 2 - r.width / 2;
}, 1);
this.nativeIcon.addChild(r);
var l = new cc.Node("titleLabel");
l.addComponent(cc.Label);
l.getComponent(cc.Label).fontSize = 20;
l.getComponent(cc.Label).string = s.title;
l.y = -t / 2 - 30;
l.color = cc.color(255, 255, 255);
this.nativeIcon.addChild(l);
var d = this;
r.on(cc.Node.EventType.TOUCH_START, function(e) {
console.log("ASCSDK", "手动关闭原生ICON");
d.nativeIcon.removeFromParent();
e.stopPropagation();
});
var h = s.adId;
this.nativeIcon.on(cc.Node.EventType.TOUCH_START, function(e) {
console.log("ASCSDK", "点击原生ICON");
n.default.getInstance().reportNativeClick(h);
});
};
e.prototype.hideNativeIconUI = function() {
if (this.nativeIcon) {
this.nativeIcon.removeFromParent();
this.nativeIcon = null;
console.log("ASCSDK", "hideNativeIconUI===========================");
} else console.log("ASCSDK", "不存在原生ICON");
};
e.prototype.showNativeImageUI = function(e, t, i, o, s) {
var a = this;
console.log("ASCSDK", "showNativeImageUI===========================");
this.nativeImage = new cc.Node("nativeImage");
this.nativeImage.addComponent(cc.Sprite);
this.nativeImage.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(s.Native_BigImage);
this.nativeImage.scale = 0;
this.nativeImage.active = !1;
this.nativeImage.zIndex = 3e4;
setTimeout(function() {
a.nativeImage.active = !0;
a.nativeImage.width = e;
a.nativeImage.height = t;
a.nativeImage.x = i;
a.nativeImage.y = o;
a.nativeImage.scale = 1;
}, 1);
cc.director.getScene().addChild(this.nativeImage);
"" != this.cocosGroup && (this.nativeImage.group = this.cocosGroup);
var c = new cc.Node("ICONInfo");
c.addComponent(cc.Sprite);
c.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.ICONInfo.iconButton);
setTimeout(function() {
c.width = e / 5;
c.height = c.width / 70 * 34;
c.x = e / 2 - c.width / 2;
c.y = t / 2 - c.height / 2;
}, 1);
this.nativeImage.addChild(c);
var r = new cc.Node("ICONClose");
r.addComponent(cc.Sprite);
r.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.ICONInfo.iconClose);
setTimeout(function() {
r.width = 45;
r.height = 45;
r.x = -a.nativeImage.width / 2 + r.width / 2;
r.y = a.nativeImage.height / 2 - r.width / 2;
}, 1);
this.nativeImage.addChild(r);
var l = this;
r.on(cc.Node.EventType.TOUCH_START, function(e) {
console.log("ASCSDK", "手动关闭原生大图");
l.nativeImage.removeFromParent();
e.stopPropagation();
});
var d = s.adId;
this.nativeImage.on(cc.Node.EventType.TOUCH_START, function(e) {
console.log("ASCSDK", "点击原生大图");
n.default.getInstance().reportNativeClick(d);
});
};
e.prototype.hideNativeImageUI = function() {
if (this.nativeImage) {
this.nativeImage.removeFromParent();
this.nativeImage = null;
console.log("ASCSDK", "hideNativeImageUI===========================");
} else console.log("ASCSDK", "不存在原生大图 return");
};
e.prototype.showNavigateIcon = function(e, t, i, o) {
var n = this;
if (this.navigateBg) console.log("ASCSDK", "已存在互推ICON return"); else {
console.log("ASCSDK", "showNavigateIcon===========================");
var s = this, a = cc.director.getScene();
this.navigateBg = new cc.Node("navigateBg");
this.navigateBg.addComponent(cc.Sprite);
this.navigateBg.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.navigateUITextures.bgTexture);
setTimeout(function() {
n.navigateBg.width = e;
n.navigateBg.height = t;
n.navigateBg.x = i;
n.navigateBg.y = o;
}, .5);
this.navigateBg.runAction(cc.repeatForever(cc.sequence(cc.scaleBy(.2, 1.1), cc.rotateTo(.1, 30), cc.rotateTo(.1, -25), cc.rotateTo(.1, 20), cc.rotateTo(.1, 0), cc.scaleBy(.2, 1 / 1.1), cc.delayTime(5))));
this.navigateBg.on(cc.Node.EventType.TOUCH_START, function(e) {
s.jumpToMiniGame(s.navigateInfom);
});
a.addChild(this.navigateBg);
"" != this.cocosGroup && (this.navigateBg.group = this.cocosGroup);
this.navigateBg.zIndex = 29999;
var c = new cc.Node("mask");
c.addComponent(cc.Mask);
c.getComponent(cc.Mask).type = cc.Mask.Type.IMAGE_STENCIL;
c.getComponent(cc.Mask).spriteFrame = new cc.SpriteFrame(this.navigateUITextures.maskTexture);
c.getComponent(cc.Mask).alphaThreshold = .5;
setTimeout(function() {
c.width = .84 * e;
c.height = .84 * t;
c.x = 0;
c.y = .05 * t;
}, 1);
this.navigateBg.addChild(c);
var r = new cc.Node("image");
r.addComponent(cc.Sprite);
c.addChild(r);
var l = new cc.Node("title");
l.addComponent(cc.Sprite);
l.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.navigateUITextures.moreGameTexture);
setTimeout(function() {
r.width = c.width;
r.height = c.height;
l.width = .84 * e;
l.height = .19 * t;
l.x = 0;
l.y = .27 * -t;
}, 1);
this.navigateBg.addChild(l);
var d = function() {
if (r) {
var e = r.width, t = r.width, i = s.updateNavigateIcon();
console.log("ASCSDK", "texture:" + i);
r.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(i);
r.width = e;
r.height = t;
} else console.log("ASCSDK", "no image");
};
d();
this.navigateIconTimeInterval = setInterval(d, 3e4);
}
};
e.prototype.updateNavigateIcon = function() {
console.log("ASCSDK", "updateNavigateIcon===========================");
for (var e = a.default.getInstance().navigateList, t = 0, i = 0; i < e.length; i++) e[i].sort > 0 && (t += e[i].sort);
for (var o = Math.floor(Math.random() * t), n = 0, s = null, c = 0, r = 0; r < e.length; r++) if (0 != e[r].sort) {
if (o >= n && o < n + e[r].sort) {
s = e[r];
c = r;
console.log("ASCSDK", "weight", o, e[r].pushGamePackage);
}
n += e[r].sort;
}
if (s) {
this.navigateInfom = s;
return this.NavigateIconTextureList[c];
}
};
e.prototype.hideNavigateIcon = function() {
console.log("ASCSDK", "hideNavigateIcon===========================");
cc.director.getScene();
a.default.getInstance().isNavigateIconShow = !1;
if (this.navigateBg) {
this.navigateBg.removeFromParent();
this.navigateBg = null;
}
this.navigateIconTimeInterval && clearInterval(this.navigateIconTimeInterval);
};
e.prototype.showNavigateGroup = function(e, t) {
console.log("ASCSDK", "showNavigateGroup===========================");
if (this.navigateGroupBg) console.log("ASCSDK", "已存在互推列表 return"); else {
var i = a.default.getInstance();
if (this.isLoadNavigateGroup) {
i.isNavigateGroupShow = !0;
var o = this;
this.navigateGroupBg = new cc.Node("navigateGroupBg");
this.navigateGroupBg.addComponent(cc.Sprite);
for (var n = [], s = 0; s < i.navigateList.length; s++) {
n[s] = i.navigateList[s];
n[s].index = s;
}
var c = function() {
for (var e = 0, t = 0; t < n.length; t++) e += n[t].sort;
for (var i = Math.floor(Math.random() * e), o = 0, s = 0; s < n.length; s++) {
if (i >= o && i < o + n[s].sort) {
var a = n[s];
n.splice(s, 1);
return a;
}
o += n[s].sort;
}
}, r = cc.director.getScene();
if ("vertical" == e) {
if ("left" == t) {
this.navigateGroupBg.x = -70;
this.navigateGroupBg.scaleX = -1;
} else {
this.navigateGroupBg.scaleX = 1;
this.navigateGroupBg.x = cc.winSize.width + 70;
}
this.navigateGroupBg.y = cc.winSize.height / 2;
r.addChild(this.navigateGroupBg);
"" != this.cocosGroup && (this.navigateGroupBg.group = this.cocosGroup);
this.navigateGroupBg.zIndex = 3e4;
var l = new cc.Node("touchButtonOpen");
setTimeout(function() {
l.width = 80;
l.height = 100;
l.x = -90;
l.y = 8;
}, 1);
this.navigateGroupBg.addChild(l);
(p = new cc.Node("btnOPSP")).addComponent(cc.Sprite);
p.scaleX = -1;
p.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.navigateGroupUITextures.leftTexture);
l.addChild(p);
l.on(cc.Node.EventType.TOUCH_START, function(e) {
if (!o.groupMoving) {
console.log("ASCSDK", "touchButtonOpen");
o.groupMoving = !0;
o.navigateGroupBg.runAction(cc.sequence(cc.moveBy(.2, -184 * o.navigateGroupBg.scaleX, 0), cc.callFunc(function() {
o.groupMoving = !1;
})));
l.active = !1;
d.active = !0;
}
});
var d = new cc.Node("touchButtonClose");
this.navigateGroupBg.addChild(d);
setTimeout(function() {
d.width = 80;
d.height = 100;
d.x = -90;
d.y = 8;
}, 1);
d.active = !1;
(S = new cc.Node("btnOPSP")).addComponent(cc.Sprite);
S.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.navigateGroupUITextures.leftTexture);
d.addChild(S);
d.on(cc.Node.EventType.TOUCH_START, function(e) {
console.log("ASCSDK", "groupMoving");
if (!o.groupMoving) {
console.log("ASCSDK", "touchButton Close");
o.groupMoving = !0;
o.navigateGroupBg.runAction(cc.sequence(cc.moveBy(.2, 184 * o.navigateGroupBg.scaleX, 0), cc.callFunc(function() {
o.groupMoving = !1;
})));
l.active = !0;
d.active = !1;
}
});
this.navigateGroupBg.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.navigateGroupUITextures.groupVTexture);
var h = new cc.Node("Items");
this.navigateGroupBg.addChild(h);
h.x = 30;
h.scaleX = this.navigateGroupBg.scaleX;
var u = new cc.Node("btnOPSP");
u.addComponent(cc.Sprite);
u.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.navigateGroupUITextures.moreGameTitleTexture);
u.x = 0;
u.y = 400;
h.addChild(u);
for (var w = function(e) {
var t = c(), i = new cc.Node("button");
i.width = 128;
i.height = 128;
i.x = 0;
i.y = 284.5 - 152 * e;
h.addChild(i);
var n = new cc.Node("mask");
n.addComponent(cc.Mask);
n.getComponent(cc.Mask).type = cc.Mask.Type.IMAGE_STENCIL;
n.getComponent(cc.Mask).spriteFrame = new cc.SpriteFrame(m.navigateGroupUITextures.maskTexture);
n.getComponent(cc.Mask).alphaThreshold = .5;
i.addChild(n);
var s = new cc.Node("button");
s.addComponent(cc.Sprite);
m.NavigateIconTextureList[t.index] && (s.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(m.NavigateIconTextureList[t.index]));
setTimeout(function() {
n.width = 100;
n.height = 100;
n.x = 0;
n.y = 11;
s.width = 100;
s.height = 100;
}, 1);
n.addChild(s);
var a = new cc.Node("titleLabel");
a.addComponent(cc.Label);
a.x = 0;
a.y = n.y - 60;
a.getComponent(cc.Label).string = t.pushGameName;
a.scale = .5;
a.color = cc.Color.BLACK;
i.addChild(a);
i.on(cc.Node.EventType.TOUCH_START, function(e) {
o.jumpToMiniGame(t);
});
}, m = this, g = 0; g < (i.navigateList.length > 5 ? 5 : i.navigateList.length); g++) w(g);
} else {
if ("left" == t) {
this.navigateGroupBg.x = -310;
this.navigateGroupBg.scaleX = -1;
} else {
this.navigateGroupBg.scaleX = 1;
this.navigateGroupBg.x = cc.winSize.width + 310;
}
this.navigateGroupBg.y = cc.winSize.height / 2;
r.addChild(this.navigateGroupBg);
"" != this.cocosGroup && (this.navigateGroupBg.group = this.cocosGroup);
this.navigateGroupBg.zIndex = 3e4;
var p, f = new cc.Node("touchButtonOpen");
setTimeout(function() {
f.width = 80;
f.height = 100;
f.x = -327;
f.y = 8;
}, 1);
this.navigateGroupBg.addChild(f);
(p = new cc.Node("btnOPSP")).addComponent(cc.Sprite);
p.scaleX = -1;
p.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.navigateGroupUITextures.leftTexture);
f.addChild(p);
f.on(cc.Node.EventType.TOUCH_START, function(e) {
if (!o.groupMoving) {
console.log("ASCSDK", "touchButtonOpen");
o.groupMoving = !0;
o.navigateGroupBg.runAction(cc.sequence(cc.moveBy(.2, -665 * o.navigateGroupBg.scaleX, 0), cc.callFunc(function() {
o.groupMoving = !1;
})));
f.active = !1;
N.active = !0;
}
});
var S, N = new cc.Node("touchButtonClose");
this.navigateGroupBg.addChild(N);
setTimeout(function() {
N.width = 80;
N.height = 100;
N.x = -327;
N.y = 8;
}, 1);
N.active = !1;
(S = new cc.Node("btnOPSP")).addComponent(cc.Sprite);
S.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.navigateGroupUITextures.leftTexture);
N.addChild(S);
N.on(cc.Node.EventType.TOUCH_START, function(e) {
console.log("ASCSDK", "groupMoving");
if (!o.groupMoving) {
console.log("ASCSDK", "touchButtonClose");
o.groupMoving = !0;
o.navigateGroupBg.runAction(cc.sequence(cc.moveBy(.2, 665 * o.navigateGroupBg.scaleX, 0), cc.callFunc(function() {
o.groupMoving = !1;
})));
f.active = !0;
N.active = !1;
}
});
this.navigateGroupBg.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.navigateGroupUITextures.groupHTexture);
h = new cc.Node("Items");
this.navigateGroupBg.addChild(h);
h.x = 30;
h.scaleX = this.navigateGroupBg.scaleX;
var v = function(e) {
var t = c(), i = new cc.Node("button");
h.addChild(i);
var n = new cc.Node("mask");
n.addComponent(cc.Mask);
n.getComponent(cc.Mask).type = cc.Mask.Type.IMAGE_STENCIL;
n.getComponent(cc.Mask).spriteFrame = new cc.SpriteFrame(C.navigateGroupUITextures.maskTexture);
n.getComponent(cc.Mask).alphaThreshold = .5;
i.addChild(n);
var s = new cc.Node("button");
s.addComponent(cc.Sprite);
C.NavigateIconTextureList[t.index] && (s.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(C.NavigateIconTextureList[t.index]));
n.addChild(s);
var a = new cc.Node("titleLabel");
a.addComponent(cc.Label);
a.getComponent(cc.Label).fontSize = 20;
a.getComponent(cc.Label).overflow = cc.Label.Overflow.SHRINK;
a.getComponent(cc.Label).enableWrapText = !1;
a.getComponent(cc.Label).horizontalAlign = cc.Label.HorizontalAlign.CENTER;
a.getComponent(cc.Label).string = t.pushGameName;
a.color = cc.Color.BLACK;
i.addChild(a);
i.on(cc.Node.EventType.TOUCH_START, function(e) {
o.jumpToMiniGame(t);
});
setTimeout(function() {
i.width = 128;
i.height = 128;
i.x = 128 * e - 265;
i.y = 5;
n.width = 100;
n.height = 100;
n.x = 0;
n.y = 11;
s.width = 100;
s.height = 100;
a.x = 0;
a.y = n.y - 70;
a.width = 128;
a.height = 30;
}, 1);
}, C = this;
for (g = 0; g < (i.navigateList.length > 5 ? 5 : i.navigateList.length); g++) v(g);
}
} else console.log("ASCSDK", "互推列表未加载到 return");
}
};
e.prototype.hideNavigateGroup = function() {
a.default.getInstance().isNavigateGroupShow = !1;
if (this.navigateGroupBg) {
console.log("ASCSDK", "hideNavigateGroup===========================");
this.navigateGroupBg.removeFromParent();
this.navigateGroupBg = null;
} else console.log("ASCSDK", "互推列表不存在 return");
};
e.prototype.showNavigateSettle = function(e, t, i) {
var o = this;
s.default.getInstance().hideBanner();
if (this.navigateSettleBg) console.log("ASCSDK", "已存在结算互推 return"); else {
console.log("ASCSDK", "showNavigateSettle===========================");
var n = a.default.getInstance(), c = n.navigateList;
if (this.isLoadNavigateSettle) {
n.isNavigateSettleShow = !0;
for (var r = [], l = 0; l < c.length; l++) {
r[l] = c[l];
r[l].index = l;
}
var d = function() {
for (var e = 0, t = 0; t < r.length; t++) e += r[t].sort;
for (var i = Math.floor(Math.random() * e), o = 0, n = 0; n < r.length; n++) {
if (i >= o && i < o + r[n].sort) {
var s = r[n];
r.splice(n, 1);
return s;
}
o += r[n].sort;
}
}, h = cc.director.getScene();
switch (e) {
case 1:
if (c.length < 6) {
console.log("ASCSDK", "Navigate List less than 6");
return;
}
h = cc.director.getScene();
var u = this;
this.navigateSettleBg = new cc.Node("navigateSettleBg");
this.navigateSettleBg.x = 0;
this.navigateSettleBg.y = 0;
this.navigateSettleBg.zIndex = 3e4;
"" != this.cocosGroup && (this.navigateSettleBg.group = this.cocosGroup);
h.addChild(this.navigateSettleBg);
var w = (L = new cc.Node("navigateSettle")).addComponent(cc.Sprite), m = new cc.SpriteFrame(this.navigateSettleUITextures.navigateSettleGroup);
L.getComponent(cc.Sprite).type = cc.Sprite.Type.SLICED;
m.insetTop = 30;
m.insetBottom = 30;
m.insetLeft = 30;
m.insetRight = 30;
w.spriteFrame = m;
setTimeout(function() {
if (cc.winSize.width < cc.winSize.height) {
L.width = .65 * cc.winSize.width;
L.height = L.width / 1.15;
} else {
L.height = cc.winSize.height / 5 * 2;
L.width = 1.15 * L.height;
}
}, .5);
L.x = t;
L.y = i;
u.navigateSettleBg.addChild(L);
(D = new cc.Node("leftTitle")).addComponent(cc.Sprite);
var g, p = new cc.SpriteFrame(this.navigateSettleUITextures.navigateSettletitleBg);
D.getComponent(cc.Sprite).type = cc.Sprite.Type.SLICED;
p.insetTop = 30;
p.insetBottom = 30;
p.insetLeft = 30;
p.insetRight = 30;
D.getComponent(cc.Sprite).spriteFrame = p;
setTimeout(function() {
D.width = .972 * L.width;
D.height = .138 * L.height;
D.x = 0;
D.y = L.height / 2 - D.height / 2 - .018 * L.height;
}, 1);
(R = new cc.Node("titleLabel")).addComponent(cc.Label);
R.getComponent(cc.Label).fontSize = 25;
R.getComponent(cc.Label).horizontalAlign = cc.Label.HorizontalAlign.CENTER;
R.getComponent(cc.Label).verticalAlign = cc.Label.VerticalAlign.CENTER;
R.getComponent(cc.Label).string = "更多精品游戏推荐!";
R.color = cc.Color.WHITE;
D.addChild(R);
L.addChild(D);
for (var f = function(e) {
var t = d(), i = new cc.Node("button");
L.addChild(i);
var o = new cc.Node("button");
o.addComponent(cc.Sprite);
o.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(S.navigateSettleUITextures.iconWihte);
i.addChild(o);
var n = new cc.Node("mask");
n.addComponent(cc.Mask);
n.getComponent(cc.Mask).type = cc.Mask.Type.IMAGE_STENCIL;
n.getComponent(cc.Mask).spriteFrame = new cc.SpriteFrame(S.navigateSettleUITextures.mask);
n.getComponent(cc.Mask).alphaThreshold = .5;
i.addChild(n);
var s = new cc.Node("button");
s.addComponent(cc.Sprite);
S.NavigateIconTextureList[t.index] && (s.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(S.NavigateIconTextureList[t.index]));
n.addChild(s);
var a = new cc.Node("titleLabel");
a.addComponent(cc.Label);
a.getComponent(cc.Label).fontSize = 20;
a.getComponent(cc.Label).overflow = cc.Label.Overflow.SHRINK;
a.getComponent(cc.Label).enableWrapText = !1;
a.getComponent(cc.Label).horizontalAlign = cc.Label.HorizontalAlign.CENTER;
a.getComponent(cc.Label).string = t.pushGameName;
a.color = cc.Color.WHITE;
i.addChild(a);
setTimeout(function() {
g = (L.height - 1.5 * D.height) / 2;
i.width = g;
i.height = g;
i.x = -L.width / 2 + L.width / 6 + L.width / 3 * (e % 3);
i.y = L.height / 2 - 1.25 * D.height - g / 2 - g * Math.floor(e / 3);
o.x = 0;
o.y = .085 * g;
o.width = .781 * g + 2;
o.height = .781 * g + 2;
n.width = .781 * g;
n.height = .781 * g;
n.x = 0;
n.y = .085 * g;
s.width = n.width;
s.height = n.height;
a.width = g;
a.height = .234 * g;
a.x = 0;
a.y = n.y - .546 * g;
}, 1);
i.on(cc.Node.EventType.TOUCH_START, function(e) {
u.jumpToMiniGame(t);
});
}, S = this, N = 0; N < 6; N++) f(N);
break;

case 2:
if (c.length < 4) {
console.log("ASCSDK", "Navigate List less than 4");
return;
}
h = cc.director.getScene(), u = this;
this.navigateSettleBg = new cc.Node("navigateSettleBg");
this.navigateSettleBg.x = 0;
this.navigateSettleBg.y = 0;
this.navigateSettleBg.zIndex = 3e4;
"" != this.cocosGroup && (this.navigateSettleBg.group = this.cocosGroup);
h.addChild(this.navigateSettleBg);
var v = new cc.Node("navigateSettleLeft"), C = v.addComponent(cc.Sprite), y = new cc.SpriteFrame(this.navigateSettleUITextures.navigateSettleGroup);
v.getComponent(cc.Sprite).type = cc.Sprite.Type.SLICED;
y.insetTop = 30;
y.insetBottom = 30;
y.insetLeft = 30;
y.insetRight = 30;
C.spriteFrame = y;
setTimeout(function() {
if (cc.winSize.width < cc.winSize.height) {
v.width = .2 * cc.winSize.width;
v.height = v.width / .439;
} else {
v.height = cc.winSize.height - 200;
v.width = .439 * cc.winSize.height;
}
}, .5);
v.x = v.width / 2 - .15 * v.width;
v.y = cc.winSize.height / 2;
u.navigateSettleBg.addChild(v);
(D = new cc.Node("leftTitle")).addComponent(cc.Sprite);
D.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.navigateSettleUITextures.navigateSettletitleBg);
(R = new cc.Node("titleLabel")).addComponent(cc.Label);
R.getComponent(cc.Label).fontSize = 20;
R.getComponent(cc.Label).horizontalAlign = cc.Label.HorizontalAlign.CENTER;
R.getComponent(cc.Label).verticalAlign = cc.Label.VerticalAlign.CENTER;
R.getComponent(cc.Label).string = "更多游戏";
R.color = cc.Color.WHITE;
D.addChild(R);
v.addChild(D);
setTimeout(function() {
g = .7 * v.width;
D.width = .931 * v.width;
D.height = .142 * v.height;
D.x = 0;
D.y = v.height / 2 - D.height / 2 - .018 * v.height;
R.x = .05 * v.width;
}, 1);
var B = function(e) {
var t = d(), i = new cc.Node("button");
v.addChild(i);
var o = new cc.Node("button");
o.addComponent(cc.Sprite);
o.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(b.navigateSettleUITextures.iconWihte);
i.addChild(o);
var n = new cc.Node("mask");
n.addComponent(cc.Mask);
n.getComponent(cc.Mask).type = cc.Mask.Type.IMAGE_STENCIL;
n.getComponent(cc.Mask).spriteFrame = new cc.SpriteFrame(b.navigateSettleUITextures.mask);
n.getComponent(cc.Mask).alphaThreshold = .5;
i.addChild(n);
var s = new cc.Node("button");
s.addComponent(cc.Sprite);
b.NavigateIconTextureList[t.index] && (s.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(b.NavigateIconTextureList[t.index]));
n.addChild(s);
var a = new cc.Node("titleLabel");
a.addComponent(cc.Label);
a.getComponent(cc.Label).fontSize = 20;
a.getComponent(cc.Label).overflow = cc.Label.Overflow.SHRINK;
a.getComponent(cc.Label).enableWrapText = !1;
a.getComponent(cc.Label).horizontalAlign = cc.Label.HorizontalAlign.CENTER;
a.getComponent(cc.Label).string = t.pushGameName;
a.color = cc.Color.WHITE;
i.addChild(a);
i.on(cc.Node.EventType.TOUCH_START, function(e) {
u.jumpToMiniGame(t);
});
setTimeout(function() {
i.width = g;
i.height = g;
i.x = .05 * v.width;
i.y = -v.height / 2 + (v.height - .036 * v.height - D.height) / 4 + e * (v.height - .036 * v.height - D.height) / 2;
o.x = 0;
o.y = .085 * g;
o.width = .781 * g + 2;
o.height = .781 * g + 2;
n.width = .781 * g;
n.height = .781 * g;
n.x = 0;
n.y = .085 * g;
s.width = n.width;
s.height = n.height;
a.x = 0;
a.y = n.y - .546 * g;
a.width = g;
a.height = .234 * g;
}, 1);
}, b = this;
for (N = 0; N < 2; N++) B(N);
var T = new cc.Node("navigateSettleRight"), P = T.addComponent(cc.Sprite), I = new cc.SpriteFrame(this.navigateSettleUITextures.navigateSettleGroup);
T.getComponent(cc.Sprite).type = cc.Sprite.Type.SLICED;
I.insetTop = 30;
I.insetBottom = 30;
I.insetLeft = 30;
I.insetRight = 30;
P.spriteFrame = I;
setTimeout(function() {
if (cc.winSize.width < cc.winSize.height) {
T.width = .2 * cc.winSize.width;
T.height = T.width / .439;
} else {
T.height = cc.winSize.height - 200;
T.width = .439 * cc.winSize.height;
}
T.x = cc.winSize.width - T.width / 2 + .15 * T.width;
T.y = cc.winSize.height / 2;
}, .5);
u.navigateSettleBg.addChild(T);
var A = new cc.Node("rightTitle");
A.addComponent(cc.Sprite);
A.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.navigateSettleUITextures.navigateSettletitleBg);
T.addChild(A);
var _ = new cc.Node("rtitleLabel");
_.addComponent(cc.Label);
_.getComponent(cc.Label).fontSize = 20;
_.getComponent(cc.Label).horizontalAlign = cc.Label.HorizontalAlign.CENTER;
_.getComponent(cc.Label).verticalAlign = cc.Label.VerticalAlign.CENTER;
_.getComponent(cc.Label).string = "更多游戏";
_.color = cc.Color.WHITE;
A.addChild(_);
g = .7 * T.width;
setTimeout(function() {
A.width = .931 * T.width;
A.height = .142 * T.height;
A.x = 0;
A.y = T.height / 2 - A.height / 2 - .018 * T.height;
_.x = -.05 * T.width;
}, 1);
var k = function(e) {
var t = d(), i = new cc.Node("button");
T.addChild(i);
var o = new cc.Node("button");
o.addComponent(cc.Sprite);
o.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(M.navigateSettleUITextures.iconWihte);
setTimeout(function() {
o.x = 0;
o.y = .085 * g;
o.width = .781 * g + 2;
o.height = .781 * g + 2;
}, 1);
i.addChild(o);
var n = new cc.Node("mask");
n.addComponent(cc.Mask);
n.getComponent(cc.Mask).type = cc.Mask.Type.IMAGE_STENCIL;
n.getComponent(cc.Mask).spriteFrame = new cc.SpriteFrame(M.navigateSettleUITextures.mask);
n.getComponent(cc.Mask).alphaThreshold = .5;
i.addChild(n);
var s = new cc.Node("button");
s.addComponent(cc.Sprite);
M.NavigateIconTextureList[t.index] && (s.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(M.NavigateIconTextureList[t.index]));
n.addChild(s);
var a = new cc.Node("titleLabel");
a.addComponent(cc.Label);
a.getComponent(cc.Label).fontSize = 20;
a.getComponent(cc.Label).overflow = cc.Label.Overflow.SHRINK;
a.getComponent(cc.Label).enableWrapText = !1;
a.getComponent(cc.Label).horizontalAlign = cc.Label.HorizontalAlign.CENTER;
a.getComponent(cc.Label).string = t.pushGameName;
a.color = cc.Color.WHITE;
i.addChild(a);
i.on(cc.Node.EventType.TOUCH_START, function(e) {
u.jumpToMiniGame(t);
});
setTimeout(function() {
i.width = g;
i.height = g;
i.x = .05 * -T.width;
i.y = -v.height / 2 + (T.height - .036 * T.height - A.height) / 4 + e * (T.height - .036 * T.height - A.height) / 2;
n.width = .781 * g;
n.height = .781 * g;
n.x = 0;
n.y = .085 * g;
s.width = n.width;
s.height = n.height;
a.x = 0;
a.y = n.y - .546 * g;
a.width = g;
a.height = .234 * g;
}, 1);
}, M = this;
for (N = 0; N < 2; N++) k(N);
break;

case 3:
if (c.length < 5) {
console.log("ASCSDK", "互推游戏资源小于5");
return;
}
h = cc.director.getScene(), u = this;
this.navigateSettleBg = new cc.Node("navigateSettleBg");
this.navigateSettleBg.x = 0;
this.navigateSettleBg.y = 0;
this.navigateSettleBg.zIndex = 3e4;
"" != this.cocosGroup && (this.navigateSettleBg.group = this.cocosGroup);
h.addChild(this.navigateSettleBg);
var L, D;
w = (L = new cc.Node("navigateSettle")).addComponent(cc.Sprite), m = new cc.SpriteFrame(this.navigateSettleUITextures.navigateSettleGroup);
L.getComponent(cc.Sprite).type = cc.Sprite.Type.SLICED;
m.insetTop = 30;
m.insetBottom = 30;
m.insetLeft = 30;
m.insetRight = 30;
w.spriteFrame = m;
setTimeout(function() {
if (cc.winSize.width < cc.winSize.height) {
L.width = .904 * cc.winSize.width;
L.height = .317 * L.width;
} else {
L.height = cc.winSize.height / 4;
L.width = L.height / .317;
}
}, .5);
L.x = t;
L.y = i;
u.navigateSettleBg.addChild(L);
(D = new cc.Node("leftTitle")).addComponent(cc.Sprite);
var R;
p = new cc.SpriteFrame(this.navigateSettleUITextures.navigateSettletitleBg);
D.getComponent(cc.Sprite).type = cc.Sprite.Type.SLICED;
p.insetTop = 30;
p.insetBottom = 30;
p.insetLeft = 30;
p.insetRight = 30;
D.getComponent(cc.Sprite).spriteFrame = p;
setTimeout(function() {
D.width = .972 * L.width;
D.height = .138 * L.height;
D.x = 0;
D.y = L.height / 2 - D.height / 2 - .018 * L.height;
}, 1);
(R = new cc.Node("titleLabel")).addComponent(cc.Label);
R.getComponent(cc.Label).fontSize = 25;
R.getComponent(cc.Label).horizontalAlign = cc.Label.HorizontalAlign.CENTER;
R.getComponent(cc.Label).verticalAlign = cc.Label.VerticalAlign.CENTER;
R.getComponent(cc.Label).string = "更多精品游戏推荐!";
R.color = cc.Color.WHITE;
D.addChild(R);
L.addChild(D);
var G = function(e) {
var t = d(), i = new cc.Node("button");
L.addChild(i);
var o = new cc.Node("button");
o.addComponent(cc.Sprite);
o.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(O.navigateSettleUITextures.iconWihte);
i.addChild(o);
var n = new cc.Node("mask");
n.addComponent(cc.Mask);
n.getComponent(cc.Mask).type = cc.Mask.Type.IMAGE_STENCIL;
n.getComponent(cc.Mask).spriteFrame = new cc.SpriteFrame(O.navigateSettleUITextures.mask);
n.getComponent(cc.Mask).alphaThreshold = .5;
i.addChild(n);
var s = new cc.Node("button");
s.addComponent(cc.Sprite);
if (O.NavigateIconTextureList[t.index]) {
console.log("ASCSDK", t.index);
s.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(O.NavigateIconTextureList[t.index]);
}
n.addChild(s);
var a = new cc.Node("titleLabel");
a.addComponent(cc.Label);
a.getComponent(cc.Label).fontSize = 20;
a.getComponent(cc.Label).overflow = cc.Label.Overflow.SHRINK;
a.getComponent(cc.Label).enableWrapText = !1;
a.getComponent(cc.Label).horizontalAlign = cc.Label.HorizontalAlign.CENTER;
a.getComponent(cc.Label).string = t.pushGameName;
a.color = cc.Color.WHITE;
i.addChild(a);
i.on(cc.Node.EventType.TOUCH_START, function(e) {
u.jumpToMiniGame(t);
});
setTimeout(function() {
g = L.width / 5;
i.width = g;
i.height = g;
i.x = -L.width / 2 + L.width / 10 + L.width / 5 * e;
i.y = L.height / 2 - 1.25 * D.height - g / 2;
o.x = 0;
o.y = .085 * g;
o.width = .781 * g + 2;
o.height = .781 * g + 2;
n.width = .781 * g;
n.height = .781 * g;
n.x = 0;
n.y = .085 * g;
s.width = n.width;
s.height = n.height;
a.x = 0;
a.y = n.y - .546 * g;
a.width = g;
a.height = .234 * g;
}, 1);
}, O = this;
for (N = 0; N < 5; N++) G(N);
break;

case 4:
if (c.length < 5) {
console.log("ASCSDK", "OPPO 互推样式的游戏数量小于5个 return");
return;
}
var U = this;
this.navigateSettleBg = new cc.Node("navigateSettleBg");
this.navigateSettleBg.active = !1;
this.navigateSettleBg.addComponent(cc.Sprite);
this.navigateSettleBg.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.navigateSettleUITextures.navigateBanner);
setTimeout(function() {
if (cc.winSize.width < cc.winSize.height) {
o.navigateSettleBg.active = !0;
o.navigateSettleBg.width = cc.winSize.width;
o.navigateSettleBg.height = 13 * o.navigateSettleBg.width / 35;
} else {
o.navigateSettleBg.active = !0;
o.navigateSettleBg.height = .4 * cc.winSize.height;
o.navigateSettleBg.width = 35 * o.navigateSettleBg.height / 13;
}
o.navigateSettleBg.x = cc.winSize.width / 2;
o.navigateSettleBg.y = o.navigateSettleBg.height / 2 + i;
}, 1);
h.addChild(this.navigateSettleBg);
"" != this.cocosGroup && (this.navigateSettleBg.group = this.cocosGroup);
var F = function(e) {
var t = d(), i = new cc.Node("button");
i.active = !1;
x.navigateSettleBg.addChild(i);
var n = new cc.Node("button");
n.addComponent(cc.Sprite);
n.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(x.navigateSettleUITextures.newIconWihte);
i.addChild(n);
var s = new cc.Node("mask");
s.addComponent(cc.Mask);
s.getComponent(cc.Mask).type = cc.Mask.Type.IMAGE_STENCIL;
s.getComponent(cc.Mask).spriteFrame = new cc.SpriteFrame(x.navigateSettleUITextures.newMask);
s.getComponent(cc.Mask).alphaThreshold = .5;
n.addChild(s);
var a = new cc.Node("icon");
a.addComponent(cc.Sprite);
a.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(x.NavigateIconTextureList[t.index]);
s.addChild(a);
var c = new cc.Node("titleLabel");
c.color = cc.Color.BLACK;
c.addComponent(cc.Label);
var r = t.pushGameName;
t.pushGameName.length > 4 && (r = r.substring(0, 4) + "...");
c.getComponent(cc.Label).string = r;
c.getComponent(cc.Label).fontSize = 30;
c.getComponent(cc.Label).overflow = cc.Label.Overflow.SHRINK;
c.getComponent(cc.Label).enableWrapText = !1;
c.getComponent(cc.Label).horizontalAlign = cc.Label.HorizontalAlign.CENTER;
i.addChild(c);
setTimeout(function() {
i.active = !0;
i.width = o.navigateSettleBg.width / 6.5;
i.height = i.width;
i.x = -o.navigateSettleBg.width / 2 + o.navigateSettleBg.width / 8.5 + o.navigateSettleBg.width / 5.25 * e;
i.y = -o.navigateSettleBg.height / 16;
n.width = i.width + 8;
n.height = i.height + 8;
s.width = i.width;
s.height = i.height;
a.width = i.width;
a.height = i.height;
c.width = a.width;
c.height = .4 * a.height;
c.x = 0;
c.y = -a.height / 2 - c.height / 2 - 10;
}, 1);
a.on(cc.Node.EventType.TOUCH_START, function(e) {
U.jumpToMiniGame(t);
});
}, x = this;
for (N = 0; N < 5; N++) F(N);
break;

default:
console.log("ASCSDK", "无该种类型的结算互推:" + e);
}
} else console.log("ASCSDK", "结算互推资源未加载到 return");
}
};
e.prototype.hideNavigateSettle = function() {
a.default.getInstance().isNavigateSettleShow = !1;
if (this.navigateSettleBg) {
console.log("ASCSDK", "hideNavigateSettle===========================");
this.navigateSettleBg.removeFromParent();
this.navigateSettleBg = null;
} else console.log("ASCSDK", "不存在结算互推 return");
};
e.prototype.jumpToMiniGame = function(e) {
console.log("ASCSDK", "OPPO jumpToMiniGame===========================");
c.default.getInstance().statistics(e);
qg.navigateToMiniGame({
pkgName: e.pushGamePackage,
success: function() {},
fail: function(e) {
console.log("ASCSDK", JSON.stringify(e));
}
});
};
return e;
}();
i.default = l;
cc._RF.pop();
}, {
"../ads/IntersAd/IntersController": "IntersController",
"../ads/bannerAd/BannerController": "BannerController",
"../ads/nativeAd/NativeController": "NativeController",
"../navigate/NavigateController": "NavigateController",
"../network/Network": "Network",
"../tools/SdkTools": "SdkTools"
} ],
ColectMusicJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3f4e3kZqXxF1okfhkzP1M7s", "ColectMusicJS");
cc.Class({
extends: cc.Component,
properties: {
Tips: cc.Node
},
onLoad: function() {
window.Colection = this;
this.view = this.node.getChildByName("Collectview");
this.content = this.view.getChildByName("Collectcontent");
},
reflashTabel: function() {}
});
cc._RF.pop();
}, {} ],
ConstellationJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b4588+gTZpLmqpIt19fQhuk", "ConstellationJS");
(function(e) {
e && e.__esModule;
})(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
LogoFab: cc.Prefab,
content: cc.Node
},
onLoad: function() {
this.CreatLogos();
window.HomeNode.opacity = 0;
},
onEnable: function() {
5 == window.platform && window.Parent.hidePushicon();
},
start: function() {},
close: function() {
window.Parent.ButtonSounds();
window.Home.isshowBlockAd = !1;
0 == window.hasshowNewSong && window.Home.newSongTable.length > 0 && window.Home.showNewSong();
this.node.active = !1;
this.node.destroy();
cc.loader.releaseRes("PreFab/ConstellationNode", cc.Prefab);
window.HomeNode.opacity = 255;
5 == window.platform && window.Parent.showPushicon(256, 256, 200, 1500);
},
CreatLogos: function() {
for (var e = 0; e < 12; e++) {
var t = cc.instantiate(this.LogoFab), i = 0;
switch (e % 3) {
case 0:
i = -320;
break;

case 1:
i = 0;
break;

case 2:
i = 320;
}
var o = -230 - 450 * Math.floor(e / 3);
t.setPosition(i, o);
t.getComponent("LogoFabJS").Number = e;
t.getComponent("LogoFabJS").Constellation = this;
this.content.addChild(t);
}
},
showDitel: function(e) {
this.node.active = !1;
window.Home.showConstellationdetail(e);
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
CrownJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "55383JJ+FBDI7Yxoh6141Lj", "CrownJS");
cc.Class({
extends: cc.Component,
properties: {
crown: cc.Node,
star: [ cc.Node ]
},
onLoad: function() {
this.crown.runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, 0, -30).easing(cc.easeCubicActionInOut()), cc.moveBy(1, 0, 30).easing(cc.easeCubicActionInOut()))));
},
start: function() {},
startRotate: function() {
this.crown.runAction(cc.repeatForever(cc.rotate3DBy(2, cc.v3(0, 0, 360))));
for (var e = 0; e < this.star.length; e++) {
this.star[e].runAction(cc.repeatForever(cc.rotate3DBy(2, cc.v3(0, 0, -360))));
0 === e ? this.star[e].runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, 0, -20).easing(cc.easeCubicActionInOut()), cc.moveBy(1, 0, 20).easing(cc.easeCubicActionInOut())))) : this.star[e].runAction(cc.repeatForever(cc.sequence(cc.moveBy(1, 0, 20).easing(cc.easeCubicActionInOut()), cc.moveBy(1, 0, -20).easing(cc.easeCubicActionInOut()))));
}
}
});
cc._RF.pop();
}, {} ],
CrownListNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4f03f8DJbBJsp9zn5UYqHN0", "CrownListNodeJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
RecommondMusicPrefab: cc.Prefab,
OtherMusicPrefab: cc.Prefab,
CrownMusicList: cc.Prefab
},
onLoad: function() {
window.CrownList = this;
window.CrownListNode = this.node;
this.node.setContentSize(window.screenWidth, window.screenHight);
this.defination();
this.packagename = [];
this.CrownmusicTable = [];
this.CrownChildList = [];
this.CrownTable = [];
this.CrownMusicNodeList = [];
this.isFirstCreate = !0;
this.LoadCrown();
this.NewReflashTabel();
window.HomeNode.opacity = 0;
},
onEnable: function() {
o.default.getInstance().reportAnalytics("View_Show_V2", "MusicBagUI_Show", 1);
this.homeNum = window.playID;
window.isShowMusicList = 2;
5 == window.platform && window.Parent.hidePushicon();
},
onDisable: function() {
console.log("曲包列表销毁");
this.scheduleOnce(function() {
this.node.destroy();
}, 2);
window.HomeNode.opacity = 255;
},
defination: function() {
this.MusicScroll = this.node.getChildByName("GRP_MusicScroll");
this.MusicContent = this.MusicScroll.getChildByName("view").getChildByName("content");
this.CrownCon = this.MusicContent.getChildByName("GRP_Crown");
this.CrownScroll = this.CrownCon.getChildByName("scrollview");
this.CrownContent = this.CrownScroll.getChildByName("view").getChildByName("content");
this.tipsCon = this.node.getChildByName("TipNode");
this.MusicContent.height = 2150;
},
LoadCrown: function() {
for (var e = null, t = 0; t < window.Home.CrownMusicTable.length; t++) {
if ((i = window.Home.CrownMusicTable[t].ex_bag) != e) if (3 === window.platform && "Douyin" === window.AppName || window.TestModle) {
if (-1 == this.packagename.indexOf(i)) {
this.packagename.push(i);
e = i;
}
} else if (-1 == this.packagename.indexOf(i)) {
this.packagename.push(i);
e = i;
}
}
for (t = 0; t < this.packagename.length; t++) this.CrownmusicTable[t] = new Array();
for (t = 0; t < window.Home.CrownMusicTable.length; t++) for (var i = window.Home.CrownMusicTable[t].ex_bag, o = 0; o < this.CrownmusicTable.length; o++) i === this.packagename[o] && this.CrownmusicTable[o].push(window.Home.CrownMusicTable[t]);
this.CDNnmber = this.CrownmusicTable.length;
},
NewReflashTabel: function() {
if (this.isFirstCreate) {
this.isFirstCreate = !1;
this.CrownContent.height = 235 * this.CDNnmber * .95 + 500;
for (var e = 0; e < this.CDNnmber; e++) {
var t = cc.instantiate(this.CrownMusicList), i = t.getComponent("CrownMusicListJS");
i.CrownNum = e;
i.CrownName = this.packagename[e];
i.CrownList = this.CrownmusicTable[e];
i.CrownMusicNode = this.node;
i.CrownMusicJS = this;
i.isFold = !1;
t.setScale(.95);
t.setPosition(0, -120 - 235 * e);
t.parent = this.CrownContent;
}
} else {
for (var o = 0, n = 0; n < this.CrownContent.childrenCount; n++) {
this.CrownContent.children[n].getComponent("CrownMusicListJS").isFold && o++;
}
for (var s = 0, a = 0; a < this.CrownContent.childrenCount; a++) {
var c = this.CrownContent.children[a].getComponent("CrownMusicListJS"), r = c.isUnClock, l = c.isFold;
r && !l && s++;
}
var d = !1, h = this.CrownContent.children[0].getComponent("CrownMusicListJS");
!h.isFold && h.isUnClock && (d = !0);
var u = 0, w = 0;
this.CrownContent.height = 0 == d ? 280 * o * .95 + 900 * (this.CDNnmber - o - s) * .95 + 1500 * s * .95 + 700 : 280 * o * .95 + 900 * (this.CDNnmber - o - s) * .95 + 1500 * s * .95 + 700 - 225;
for (var m = 0; m < this.CrownContent.childrenCount; m++) {
var g = this.CrownContent.children[m], p = g.getComponent("CrownMusicListJS"), f = p.isFold, S = p.isUnClock, N = cc.v2(20, 115 - 280 * (u + 1) * .95 - 900 * (m - u - w) * .95 - 1500 * w * .95);
g.setPosition(N);
f && u++;
S && !f && w++;
}
}
},
buyMusic: function(e, t, i, o) {
t = Number(t);
if (window.CrownNum >= t) {
window.Crown.reduceCrown(t);
window.Parent.reportCustomEvent("皇冠事件", {
"购买曲包": this.packagename[e]
});
"" == window.unlockCrownMusicName ? window.unlockCrownMusicName = i : window.unlockCrownMusicName = window.unlockCrownMusicName + "," + i;
window.Parent.setlocalStorage("unlockCrownMusicName", window.unlockCrownMusicName);
for (var n = 0; n < this.CrownmusicTable[e].length; n++) {
var s = this.CrownmusicTable[e][n].musicId;
"" == window.MusicBagTable ? window.MusicBagTable = s : window.MusicBagTable = window.MusicBagTable + "," + s;
}
var a = "";
for (n = 0; n < this.CrownmusicTable[e].length; n++) {
s = this.CrownmusicTable[e][n].musicId;
a = "" == a ? s : a + "," + s;
}
"" != window.MusicBagTable && (a = a + "," + window.MusicBagTable);
window.MusicBagTable = a;
window.Parent.setlocalStorage("MusicBagTable", window.MusicBagTable);
o();
window.Parent.WowSounds();
window.Parent.UnlockSounds();
for (n = 0; n < this.CrownmusicTable[e].length; n++) {
s = this.CrownmusicTable[e][n].musicId;
window.Home.DealUnlockMusic(s);
}
} else 0 == window.getCrownNum ? window.Crown.showAddCrownNode() : this.tipsCon.active = !0;
},
OnClickBack: function() {
console.log("点击返回主界面");
window.Parent.ButtonSounds();
this.node.active = !1;
window.isShowMusicList = 0;
if (1 == window.PlayOtherMusic) {
window.HomeID = this.homeNum;
window.Home.playMusic();
window.PlayOtherMusic = !1;
}
5 == window.platform && window.Parent.showPushicon(256, 256, 200, 1500);
},
OnClickClose: function() {
console.log("点击关闭提示");
window.Parent.ButtonSounds();
this.tipsCon.active = !1;
},
OnClickChallenge: function() {
console.log("点击关闭提示");
window.Parent.ButtonSounds();
this.node.active = !1;
window.Home.showNormalMusic();
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
CrownMusicJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "93d68CKJltJzYzpEOHVAY8Z", "CrownMusicJS");
(function(e) {
e && e.__esModule;
})(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
CrownMusicList: cc.Prefab,
Tips: cc.Node
},
onLoad: function() {
this.view = this.node.getChildByName("Crownview");
this.content = this.view.getChildByName("Crowncontent");
this.packagename = [];
this.CrownTable = [];
this.isFirstCreate = !0;
this.LoadCrown();
},
LoadCrown: function() {
for (var e = null, t = 0; t < window.Home.CrownMusicTable.length; t++) {
if ((i = window.Home.CrownMusicTable[t].ex_bag) != e) if (3 === window.platform && "Douyin" === window.AppName || window.TestModle) {
this.packagename.push(i);
e = i;
} else {
this.packagename.push(i);
e = i;
}
}
for (t = 0; t < this.packagename.length; t++) this.CrownmusicTable[t] = new Array();
for (t = 0; t < window.Home.CrownMusicTable.length; t++) for (var i = window.Home.CrownMusicTable[t].ex_bag, o = 0; o < this.CrownmusicTable.length; o++) i === this.packagename[o] && this.CrownmusicTable[o].push(window.Home.CrownMusicTable[t]);
this.CDNnmber = this.CrownmusicTable.length;
},
NewReflashTabel: function() {
if (this.isFirstCreate) {
this.isFirstCreate = !1;
this.content.height = 235 * this.CDNnmber + 600;
for (var e = 0; e < this.CDNnmber; e++) {
var t = cc.instantiate(this.CrownMusicList), i = t.getComponent("CrownMusicListJS");
i.CrownNum = e;
i.CrownName = this.packagename[e];
i.CrownList = this.CrownmusicTable[e];
i.CrownMusicNode = this.node;
i.CrownMusicJS = this;
i.isFold = !1;
t.setPosition(0, -120 - 235 * e);
t.parent = this.content;
}
} else {
for (var o = 0, n = 0; n < this.content.childrenCount; n++) {
this.content.children[n].getComponent("CrownMusicListJS").isFold && o++;
}
for (var s = 0, a = 0; a < this.content.childrenCount; a++) {
var c = this.content.children[a].getComponent("CrownMusicListJS"), r = c.isUnClock, l = c.isFold;
r && !l && s++;
}
var d = !1, h = this.content.children[0].getComponent("CrownMusicListJS");
!h.isFold && h.isUnClock && (d = !0);
var u = 0, w = 0;
this.content.height = 0 == d ? 280 * o + 900 * (this.CDNnmber - o - s) + 1500 * s + 600 : 280 * o + 900 * (this.CDNnmber - o - s) + 1500 * s + 600 - 225;
for (var m = 0; m < this.content.childrenCount; m++) {
var g = this.content.children[m], p = g.getComponent("CrownMusicListJS"), f = p.isFold, S = p.isUnClock, N = cc.v2(20, 115 - 280 * (u + 1) - 900 * (m - u - w) - 1500 * w);
1 == d && 0 != m && (N = cc.v2(20, 115 - 280 * (u + 1) - 900 * (m - u - w) - 1500 * w + 200));
g.setPosition(N);
f && u++;
S && !f && w++;
}
}
},
buyMusic: function(e, t, i, o) {
t = Number(t);
if (window.CrownNum >= t) {
window.Crown.reduceCrown(t);
window.Parent.reportCustomEvent("皇冠事件", {
"购买曲包": this.packagename[e]
});
"" == window.unlockCrownMusicName ? window.unlockCrownMusicName = i : window.unlockCrownMusicName = window.unlockCrownMusicName + "," + i;
window.Parent.setlocalStorage("unlockCrownMusicName", window.unlockCrownMusicName);
for (var n = 0; n < this.CrownmusicTable[e].length; n++) {
var s = this.CrownmusicTable[e][n].musicId;
"" == window.MusicBagTable ? window.MusicBagTable = s : window.MusicBagTable = window.MusicBagTable + "," + s;
}
var a = "";
for (n = 0; n < this.CrownmusicTable[e].length; n++) {
s = this.CrownmusicTable[e][n].musicId;
a = "" == a ? s : a + "," + s;
}
"" != window.MusicBagTable && (a = a + "," + window.MusicBagTable);
window.MusicBagTable = a;
window.Parent.setlocalStorage("MusicBagTable", window.MusicBagTable);
o();
window.Parent.WowSounds();
window.Parent.UnlockSounds();
} else 0 == window.getCrownNum ? window.Crown.showAddCrownNode() : this.TipNode.active = !0;
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
CrownMusicListJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b9968YczZFGpqzUlRMuIjMM", "CrownMusicListJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
CrownNum: -1,
CrownName: "",
CrownList: [],
CurBuyNum: -1,
MusicNode: cc.Prefab,
musicSelectFab: cc.Prefab,
FoldNode: cc.Node,
NormalNode: cc.Node,
UnClockNode: cc.Node,
CrownMusicNode: cc.Node,
isFold: !1
},
onLoad: function() {
this.isUnClock = !1;
this.SetCrownActive(this.isFold);
this.foldCenterNode = this.FoldNode.getChildByName("Center");
this.foldComNode = this.foldCenterNode.getChildByName("SP_Complete_1");
this.foldTextNode = this.foldCenterNode.getChildByName("LB_Center");
this.normalMusicListNode = this.NormalNode.getChildByName("MusicList");
this.normalBuyNode = this.NormalNode.getChildByName("BTN_Buy");
this.normalTextNode = this.normalBuyNode.getChildByName("LB_Num");
this.normalFollowNode = this.NormalNode.getChildByName("FollowButton");
this.normalGetNode = this.NormalNode.getChildByName("GetButton");
this.unclockBGNode = this.UnClockNode.getChildByName("BG");
this.unclockViewNode = this.UnClockNode.getChildByName("view");
this.unclockMusicListNode = this.unclockViewNode.getChildByName("MusicList");
this.HeadNode = this.node.getChildByName("Head");
this.HeadLBNode = this.HeadNode.getChildByName("LB_Head");
this.AlbumNode = this.HeadNode.getChildByName("SP_Head1").getChildByName("SP_Album");
0 == this.CrownNum ? this.CurBuyNum = 2 : this.CurBuyNum = 12;
this.normalTextNode.getComponent(cc.Label).string = this.CurBuyNum.toString();
this.FirstCrownList();
},
onEnable: function() {
var e = this;
this.scheduleOnce(function() {
e.UpdatePerCent();
}, .5);
},
update: function() {
var e = this.node.y + this.node.parent.y;
if (e != this.LastPosition) {
this.LastPosition = e;
var t = null;
t = 1 == this.isFold ? this.FoldNode.getChildByName("BG") : this.isUnClock ? this.UnClockNode.getChildByName("BG") : this.NormalNode.getChildByName("BG");
e > this.node.parent.parent.height / 2 + (t.height - 200) || e < -this.node.parent.parent.height / 2 - (t.height - 200) ? this.node.opacity = 0 : this.node.opacity = 255;
}
},
FirstCrownList: function() {
this.HeadLBNode.getComponent(cc.Label).string = this.CrownName;
this.UpdateCrownList();
this.UpdatePerCent();
this.SetNodeLen();
},
UpdatePerCent: function() {
var e = 0, t = 3 * this.CrownList.length;
if (0 == this.isUnClock) e = 0; else for (var i = 0; i < this.CrownList.length; i++) for (var o = this.CrownList[i].musicId, n = 0; n < 3; n++) {
var s = "HardLevel_" + n + "_" + o, a = window.Parent.getlocalStorage(s);
null != a && "1" === a && e++;
}
var c = e / t;
this.foldComNode.getComponent(cc.Sprite).fillRange = c;
this.foldTextNode.getComponent(cc.Label).string = "完成" + Math.floor(100 * c).toString() + "%";
},
OnClickFold: function() {
this.SetCrownActive(!1);
this.UpdateCrownList();
},
OnClickClose: function() {
this.SetCrownActive(!0);
this.UpdateCrownList();
},
OnClickBuy: function() {
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "MusicBagUI_Diadema_NoADClick", 1);
var e = this;
this.CrownMusicNode.getComponent("CrownListNodeJS").buyMusic(this.CrownNum, this.CurBuyNum, this.CrownName, function() {
e.SetCrownActive(e.isFold);
e.UpdateCrownList();
});
},
SetCrownActive: function(e) {
var t = window.unlockCrownMusicName.split(",");
t = window.Tools.unique(t);
for (var i = !1, o = 0; o < t.length; o++) this.CrownName === t[o] && (i = !0);
this.isUnClock = i;
if (1 == this.isUnClock) {
this.FoldNode.active = e;
this.UnClockNode.active = !e;
this.NormalNode.active = !1;
} else {
this.FoldNode.active = e;
this.NormalNode.active = !e;
this.UnClockNode.active = !1;
}
this.isFold = e;
this.CrownMusicNode.getComponent("CrownListNodeJS").NewReflashTabel();
},
SetNodeLen: function() {
var e = 230 * this.CrownList.length;
this.unclockViewNode.height = e;
this.unclockViewNode.y = -35 - this.unclockViewNode.height / 2;
this.unclockBGNode.height = e + 100;
this.unclockBGNode.y = 120 - this.unclockBGNode.height / 2;
},
IsPlayMusic: function(e) {
var t = this.AlbumNode.angle;
this.AlbumNode.stopAllActions();
if (e) {
var i = 25 - t, o = cc.rotateTo(.01 * i, -25);
this.AlbumNode.runAction(o);
} else {
var n = t - 0, s = cc.rotateTo(.01 * n, 0);
this.AlbumNode.runAction(s);
}
},
UpdateCrownList: function() {
if (void 0 != this.normalMusicListNode && null != this.normalMusicListNode) {
this.normalMusicListNode.destroyAllChildren();
if (!this.isFold) if (this.isUnClock) {
if (0 == this.unclockMusicListNode.childrenCount) {
this.unclockMusicListNode.height = 50 + 222 * this.CrownList.length;
for (var e = 0; e < this.CrownList.length; e++) for (var t = this.CrownList[e].musicId, i = 0; i < window.Home.CrownMusicTable.length; i++) {
if (window.Home.CrownMusicTable[i].musicId == t) {
var o = cc.instantiate(this.musicSelectFab), n = o.getComponent("musicSelectJS");
n.musicType = "CrownMusic";
n.musicName = window.Home.CrownMusicTable[i].musicName;
n.singerName = window.Home.CrownMusicTable[i].singerName;
n.orderNumber = window.Home.CrownMusicTable[i].orderNumber;
n.unlockType = window.Home.CrownMusicTable[i].unlockType;
n.unlockNumber = Number(window.Home.CrownMusicTable[i].unlockCost);
n.musicID = window.Home.CrownMusicTable[i].musicId;
n.NewFlag = window.Home.CrownMusicTable[i].ex_new;
n.musicURL = window.Home.CrownMusicTable[i].musicFile;
n.pointURL = window.Home.CrownMusicTable[i].json_normal;
n.musicNumber = window.Home.GetMusicNumber(window.Home.CrownMusicTable[i].musicId);
n.musicStyle = window.Home.CrownMusicTable[i].style;
n.listenNum = window.Home.CrownMusicTable[i].ex_listen;
o.setScale(.9);
o.setPosition(-5, -120 - 212 * e);
o.parent = this.unclockMusicListNode;
this.CrownMusicJS.CrownTable.push(o);
}
}
}
} else for (var s = 0; s < this.CrownList.length; s++) {
var a = cc.instantiate(this.MusicNode), c = a.getComponent("MusicNodeJS");
c.musicName = this.CrownList[s].musicName;
c.musicID = this.CrownList[s].musicId;
c.musicURL = this.CrownList[s].musicFile;
c.orderNumber = Number(this.CrownList[s].orderNumber);
c.listenNum = Number(this.CrownList[s].ex_listen);
c.ListNode = this.node;
c.musicNumber = window.Home.GetMusicNumber(this.CrownList[s].musicId);
var r = Math.floor(s / 3);
a.setPosition(300 * (s - 3 * r) - 320, -70 - 250 * r);
a.parent = this.normalMusicListNode;
-1 == window.CrownList.CrownMusicNodeList.indexOf(a) && window.CrownList.CrownMusicNodeList.push(a);
}
}
}
});
cc._RF.pop();
}, {
"./../Help/reportAnalytics": "reportAnalytics"
} ],
CrownNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bf908jd11hL5qn///Ourm0+", "CrownNodeJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
CrownNum_Lable: cc.Label,
crownFab: cc.Prefab,
point: cc.Node
},
onLoad: function() {
this.isShowCrown = !1;
this.node.setContentSize(window.screenWidth, window.screenHight);
this.Crown_bg = this.node.getChildByName("Crown_bg");
this.crown = this.Crown_bg.getChildByName("crown");
window.CrownNum = Number(window.Parent.getlocalStorage("CrownNum"));
this.CrownNum_Lable.string = window.CrownNum;
cc.log("当前皇冠数量", window.CrownNum);
window.CrownNode = this.node;
window.Crown = this;
this.node.zIndex = 30;
this.lastday = window.Parent.getlocalStorage("singlastday");
this.curnday = String(new Date().getDay());
window.getCrownNum = Number(window.Parent.getlocalStorage("getCrown"));
if (1 == window.getCrownNum) {
var e = window.Parent.getlocalStorage("crownTime");
if (e) {
var t = Date.parse(new Date(e));
if (432e5 <= Date.parse(new Date()) - t) {
window.Parent.setlocalStorage("getCrown", 0);
window.getCrownNum = 0;
}
}
}
0 == window.getCrownNum && (this.point.active = !0);
this.SetSchedule = !1;
this.addCrownNum = 0;
this.moveCrown = [];
},
onEnable: function() {
this.ClearActCrown();
},
addCrown: function() {
this.addIng = !0;
window.Parent.reportAnalytics("diadema_prop_get");
window.Parent.reportCustomEvent("皇冠事件", {
"获得皇冠": ""
});
var e = this, t = window.Tools.PlaceFabNode(this.crownFab, cc.v2(0, 0), this.node);
this.moveCrown.push(t);
this.addCrownNum++;
t.setScale(3);
var i = window.Tools.getLocalPosition(this.node, window.Tools.getWorldPosition(this.crown));
t.runAction(cc.sequence(cc.moveTo(1.5, i).easing(cc.easeCubicActionIn()), cc.callFunc(function() {
var i = e.moveCrown.indexOf(t);
e.moveCrown.splice(i, 1);
t.destroy();
e.crown.runAction(cc.sequence(cc.scaleTo(.2, 1.3), cc.scaleTo(.2, 1)));
window.CrownNum++;
window.Parent.setlocalStorage("CrownNum", window.CrownNum);
e.CrownNum_Lable.string = window.CrownNum;
e.addIng = !1;
e.addCrownNum--;
})));
t.runAction(cc.scaleTo(1.5, 1).easing(cc.easeCubicActionIn()));
},
reduceCrown: function(e) {
var t = this, i = window.CrownNum - e;
window.Parent.addscoreSounds();
this.node.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
if (Number(t.CrownNum_Lable.string) > i) t.CrownNum_Lable.string = Number(t.CrownNum_Lable.string) - 1; else {
t.node.stopAllActions();
window.CrownNum = window.CrownNum - e;
t.CrownNum_Lable.string = window.CrownNum;
window.Parent.setlocalStorage("CrownNum", window.CrownNum);
console.log("剩余皇冠数量", window.CrownNum);
}
}), cc.delayTime(.001))));
},
reduceCrown2: function(e) {
var t = cc.instantiate(this.crownFab), i = window.Parent.getWorldPosition(this.Crown_bg.getChildByName("crown")), o = this.node.convertToNodeSpaceAR(i);
t.setPosition(o);
t.setScale(.8);
this.node.addChild(t);
var n = this.node.convertToNodeSpaceAR(window.Parent.getWorldPosition(e)), s = [ cc.v2(500, 800), cc.v2(500, 200), n ], a = cc.bezierTo(.8, s), c = cc.callFunc(function() {
t.destroy();
e.runAction(cc.scaleTo(.05, 2));
});
t.runAction(cc.sequence(a, c));
},
showAddCrownNode: function() {
if (1 != this.isShowCrown) {
this.isShowCrown = !0;
o.default.getInstance().reportAnalytics("View_Show_V2", "DiademaUI_Show", 1);
this.AddCrownNode = cc.instantiate(window.AddCrownNodeFab);
this.AddCrownNode.parent = this.node;
this.AddCrownNode.setSiblingIndex(0);
this.point.active = !1;
this.node.zIndex = 31;
this.crownLight = this.AddCrownNode.getChildByName("crownLight");
this.Crown = this.AddCrownNode.getChildByName("Crown");
this.normalNode = this.AddCrownNode.getChildByName("Normal");
this.scheduleNode = this.AddCrownNode.getChildByName("Schedule");
this.normalNode.active = !1;
this.scheduleNode.active = !1;
this.CloseBTN = this.AddCrownNode.getChildByName("Close");
this.CloseBTN.on(cc.Node.EventType.TOUCH_END, this.closeAddCrownNode, this);
if (0 == window.getCrownNum) {
this.normalNode.active = !0;
this.VideoButton = this.normalNode.getChildByName("VideoButton");
this.VideoButton.on(cc.Node.EventType.TOUCH_END, this.VideoButtonClick, this);
this.CloseButton = this.normalNode.getChildByName("BTN_Continue");
this.CloseButton.on(cc.Node.EventType.TOUCH_END, this.closeAddCrownNode, this);
} else if (1 == window.getCrownNum) {
var e = window.Parent.getlocalStorage("crownTime");
if (e) {
var t = Date.parse(new Date(e)), i = Date.parse(new Date()) - t;
if (432e5 <= i) {
window.Parent.setlocalStorage("getCrown", 0);
this.normalNode.active = !0;
this.VideoButton = this.normalNode.getChildByName("VideoButton");
this.VideoButton.on(cc.Node.EventType.TOUCH_END, this.VideoButtonClick, this);
this.CloseButton = this.normalNode.getChildByName("BTN_Continue");
this.CloseButton.on(cc.Node.EventType.TOUCH_END, this.closeAddCrownNode, this);
} else {
this.scheduleNode.active = !0;
this.timeNode = this.scheduleNode.getChildByName("SP_Time");
this.scheduleTextNode = this.timeNode.getChildByName("LB_Schedule");
this.CloseButton = this.scheduleNode.getChildByName("BTN_Continue");
this.CloseButton.on(cc.Node.EventType.TOUCH_END, this.closeAddCrownNode, this);
var n = (432e5 - i) / 1e3;
this.lowTime = n;
this.SetSchedule = !0;
this.GetClockTime();
}
}
}
this.crownLight.stopAllActions();
this.crownLight.runAction(cc.repeatForever(cc.sequence(cc.fadeOut(2), cc.fadeIn(2))));
}
},
closeAddCrownNode: function() {
this.node.zIndex = 30;
this.AddCrownNode.destroy();
this.AddCrownNode = void 0;
this.isShowCrown = !1;
this.SetSchedule = !1;
},
ClearActCrown: function() {
this.unscheduleAllCallbacks();
if (1 == this.addIng) {
this.addIng = !1;
for (var e = 0; e < this.moveCrown.length; e++) {
this.moveCrown[e].destroy();
}
this.moveCrown = [];
window.CrownNum += this.addCrownNum;
this.addCrownNum = 0;
window.Parent.setlocalStorage("CrownNum", window.CrownNum);
this.CrownNum_Lable.string = window.CrownNum;
}
},
VideoButtonClick: function() {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "DiademaUI_ADClick", 1);
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
e.addCrown();
e.closeAddCrownNode();
var i = new Date();
window.Parent.setlocalStorage("crownTime", i);
window.getCrownNum = 1;
window.Parent.setlocalStorage("getCrown", window.getCrownNum);
}
});
},
GetClockTime: function() {
var e = this.lowTime % 60, t = (this.lowTime % 3600 - e) / 60, i = (this.lowTime % 86400 - e - 60 * t) / 3600;
this.scheduleTextNode.getComponent(cc.Label).string = 0 == i ? e >= 10 ? t.toString() + " : " + e.toString() : t.toString() + " : 0" + e.toString() : e >= 10 ? i.toString() + " : " + t.toString() + " : " + e.toString() : i.toString() + " : " + t.toString() + " : 0" + e.toString();
this.lowTime--;
if (this.lowTime > 0 && this.SetSchedule) {
var o = this;
this.scheduleOnce(function() {
o.AddCrownNode && o.GetClockTime();
}, 1);
} else this.SetSchedule = !1;
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
CrownStoreJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "517d3m3MI9Im7ZC55kcuJYB", "CrownStoreJS");
cc.Class({
extends: cc.Component,
properties: {
perviewCD: cc.Prefab,
CDFab: cc.Prefab,
SceneBgFab: cc.Prefab,
pageView: cc.Node,
content: cc.Node,
Scenecontent: cc.Node,
perViewNode: cc.Node,
perviewBackground: cc.Node,
PerviewBg: cc.Node,
perviewscrollview: cc.Node,
perviewcontent: cc.Node,
TipNode: cc.Node,
Particle: cc.Node,
CDButton: cc.Node,
SceneButton: cc.Node,
CDpageview: cc.Node,
Scenepageview: cc.Node,
tips: cc.Node
},
onLoad: function() {
window.crownStore = this;
this.ScenePageNumber = 0;
this.packagename = [];
this.CrownmusicTable = [];
this.perviewCDArr = [];
this.hastop = !1;
for (var e = null, t = 0; t < window.Home.CrownMusicTable.length; t++) {
if ((i = window.Home.CrownMusicTable[t].ex_bag) != e) if (3 === window.platform && "Douyin" === window.AppName) if (window.TestModle || tt.checkFollowAwemeState) {
this.packagename.push(i);
e = i;
} else {
this.packagename.push(i);
e = i;
} else {
this.packagename.push(i);
e = i;
}
}
for (t = 0; t < this.packagename.length; t++) this.CrownmusicTable[t] = new Array();
for (t = 0; t < window.Home.CrownMusicTable.length; t++) for (var i = window.Home.CrownMusicTable[t].ex_bag, o = 0; o < this.CrownmusicTable.length; o++) i === this.packagename[o] && this.CrownmusicTable[o].push(window.Home.CrownMusicTable[t]);
this.CDNnmber = this.CrownmusicTable.length;
this.perviewBackground.on(cc.Node.EventType.TOUCH_START, this.closePerviewNode, this);
this.TipNode.getChildByName("background").on(cc.Node.EventType.TOUCH_START, this.closeTipsNode, this);
},
onEnable: function() {
window.Parent.reportAnalytics("shop_page_access");
window.Parent.reportCustomEvent("皇冠事件", {
"打开皇冠商店": ""
});
this.Scenepageview.active && this.selectStore(null, 1);
},
start: function() {
this.selectStore(null, 1);
},
close: function(e) {
0 != e && window.Parent.ButtonSounds();
window.Home.Crownscrollview.getComponent("CrownMusicJS").NewReflashTabel();
this.TipNode.active = !1;
window.Home.isshowBlockAd = !1;
for (var t = 0; t < window.Home.Crownscrollview.getComponent("CrownMusicJS").content.childrenCount; t++) {
var i = window.Home.Crownscrollview.getComponent("CrownMusicJS").content.children[t].getComponent("CrownMusicListJS");
i.SetCrownActive(i.isFold);
i.UpdateCrownList();
}
this.node.destroy();
cc.loader.releaseRes("PreFab/CrownStoreFab", cc.Prefab);
},
creatCD: function() {
this.CdNumArr = [];
var e = this.content.parent.width;
this.content.width = this.CDNnmber * e;
for (var t = 0; t < this.CDNnmber; t++) {
var i = cc.instantiate(this.CDFab);
i.getComponent("CDJS").CDname = this.packagename[t];
i.getComponent("CDJS").CDNnmber = t;
i.getComponent("CDJS").UnlockType = "Crown";
i.getComponent("CDJS").CrownStore = this;
this.pageView.getComponent(cc.PageView).addPage(i);
i.x = e * t + e / 2;
this.CdNumArr[t] = i;
}
},
CreatScenebg: function() {
this.SceneArr = [];
var e = this.Scenepageview.getChildByName("view").width;
this.Scenecontent.width = window.scenName.length * e;
for (var t = 0; t < window.scenName.length; t++) {
var i = cc.instantiate(this.SceneBgFab);
i.getComponent("ScenebgJS").CrownStore = this;
i.getComponent("ScenebgJS").Number = t;
i.getComponent("ScenebgJS").ScenName = window.scenName[t];
i.getComponent("ScenebgJS").backgroundSpr = window.sceneStorebg_Sprit[t];
this.Scenepageview.getComponent(cc.PageView).addPage(i);
i.x = e * t + e / 2;
this.SceneArr[t] = i;
}
},
showCDList: function(e) {
for (var t = 0; t < this.perviewCDArr.length; t++) if (void 0 != this.perviewCDArr[t]) {
this.perviewCDArr[t].destroy();
this.perviewCDArr[t] = void 0;
}
this.perViewNode.active = !0;
var i = this.CrownmusicTable[e] / 2;
Math.floor(this.CrownmusicTable[e] / 2) < i && i++;
this.perviewcontent.height = 175 * i + 100;
for (t = 0; t < this.CrownmusicTable[e].length; t++) {
var o = cc.instantiate(this.perviewCD);
t % 2 == 0 ? o.setPosition(-170, -190 - 330 * Math.floor(t / 2)) : o.setPosition(170, -190 - 330 * Math.floor(t / 2));
o.getComponent("perviewCDJS").musicNumber = t * (e + 1);
o.getComponent("perviewCDJS").musicName = this.CrownmusicTable[e][t].musicName;
o.getComponent("perviewCDJS").MusicURL = this.CrownmusicTable[e][t].musicFile;
o.getComponent("perviewCDJS").CrownStore = this;
this.perviewcontent.addChild(o);
this.perviewCDArr[t] = o;
}
},
buyMusic: function(e, t, i) {
t = Number(t);
if (window.CrownNum >= t) {
window.Crown.reduceCrown(t);
window.Parent.reportCustomEvent("皇冠事件", {
"购买曲包": this.packagename[e]
});
for (var o = 0; o < this.CrownmusicTable[e].length; o++) {
var n = this.CrownmusicTable[e][o].musicId;
"" == window.MusicBagTable ? window.MusicBagTable = n : window.MusicBagTable = window.MusicBagTable + "," + n;
}
var s = "";
for (o = 0; o < this.CrownmusicTable[e].length; o++) {
n = this.CrownmusicTable[e][o].musicId;
s = "" == s ? n : s + "," + n;
}
"" != window.MusicBagTable && (s = s + "," + window.MusicBagTable);
window.MusicBagTable = s;
window.Parent.setlocalStorage("MusicBagTable", window.MusicBagTable);
i();
this.Particle.getComponent(cc.ParticleSystem).resetSystem();
window.Parent.WowSounds();
window.Parent.UnlockSounds();
} else 0 == window.getCrownNum ? window.Crown.showAddCrownNode() : this.TipNode.active = !0;
},
goaction: function() {
window.Home.showNormaolMusic();
window.Home.showCrownMusic();
this.close(!1);
},
goChallenge: function() {
window.Parent.ButtonSounds();
window.Home.showNormaolMusic();
this.close(!1);
},
closePerviewNode: function() {
this.perViewNode.active = !1;
this.stopMusic();
},
closeTipsNode: function() {
window.Parent.ButtonSounds();
this.TipNode.active = !1;
},
stopMusic: function() {
for (var e = 0; e < this.perviewCDArr.length; e++) void 0 != this.perviewCDArr[e] && this.perviewCDArr[e].getChildByName("pause").active && this.perviewCDArr[e].getComponent("perviewCDJS").pauseMusic();
},
sliceback: function() {
cc.log(111);
window.Parent.qiehuanSounds();
for (var e = this.CDpageview.getComponent(cc.PageView).getCurrentPageIndex(), t = 0; t < this.CdNumArr.length; t++) if (t === e) {
this.CdNumArr[t].getChildByName("CDbox").active = !0;
this.CdNumArr[t].getChildByName("CDboxpicture").active = !1;
this.CdNumArr[t].getComponent("CDJS").shakeCD();
} else {
this.CdNumArr[t].getChildByName("CDbox").active = !1;
this.CdNumArr[t].getChildByName("CDboxpicture").active = !0;
this.CdNumArr[t].getComponent("CDJS").shakeCD();
}
},
SceneSlickBack: function(e, t) {
0 === t && window.Parent.qiehuanSounds();
if (null != this.Scenepageview && void 0 != this.Scenepageview) {
var i = this.Scenepageview.getComponent(cc.PageView).getCurrentPageIndex();
this.ScenePageNumber = i;
if ("video" === window.SceneUnlockType[this.ScenePageNumber]) {
this.tips.active = !1;
if (window.videoTimes >= window.SceneUnlockNumber[this.ScenePageNumber]) {
if (!window.sceneIsUnlock[this.ScenePageNumber]) {
window.sceneIsUnlock[this.ScenePageNumber] = !0;
window.Parent.setlocalStorage("sceneIsUnlock" + this.ScenePageNumber, !0);
}
this.Scenepageview.getChildByName("BuyButton").active = !1;
if (window.SceneNumber == this.ScenePageNumber) {
this.Scenepageview.getChildByName("isUsing").active = !0;
this.Scenepageview.getChildByName("UseButton").active = !1;
} else {
this.Scenepageview.getChildByName("isUsing").active = !1;
this.Scenepageview.getChildByName("UseButton").active = !0;
}
} else {
this.tips.active = !0;
this.Scenepageview.getChildByName("BuyButton").active = !0;
this.Scenepageview.getChildByName("UseButton").active = !1;
this.Scenepageview.getChildByName("isUsing").active = !1;
this.Scenepageview.getChildByName("BuyButton").getChildByName("video").active = !0;
this.Scenepageview.getChildByName("BuyButton").getChildByName("crown").active = !1;
this.Scenepageview.getChildByName("BuyButton").getChildByName("num").getComponent(cc.Label).string = window.videoTimes + "/" + window.SceneUnlockNumber[this.ScenePageNumber];
console.log("videoTimes : ", window.videoTimes);
}
} else if ("crown" === window.SceneUnlockType[this.ScenePageNumber]) {
cc.log("皇冠解锁", window.SceneUnlockNumber[this.ScenePageNumber]);
this.tips.active = !1;
if (window.sceneIsUnlock[this.ScenePageNumber]) {
this.Scenepageview.getChildByName("BuyButton").active = !1;
if (window.SceneNumber == this.ScenePageNumber) {
this.Scenepageview.getChildByName("isUsing").active = !0;
this.Scenepageview.getChildByName("UseButton").active = !1;
} else {
this.Scenepageview.getChildByName("isUsing").active = !1;
this.Scenepageview.getChildByName("UseButton").active = !0;
}
} else {
this.Scenepageview.getChildByName("BuyButton").active = !0;
this.Scenepageview.getChildByName("UseButton").active = !1;
this.Scenepageview.getChildByName("isUsing").active = !1;
this.Scenepageview.getChildByName("BuyButton").getChildByName("video").active = !1;
this.Scenepageview.getChildByName("BuyButton").getChildByName("crown").active = !0;
this.Scenepageview.getChildByName("BuyButton").getChildByName("num").getComponent(cc.Label).string = window.SceneUnlockNumber[this.ScenePageNumber];
}
}
}
},
selectStore: function(e, t) {
t = Number(t);
window.Parent.ButtonSounds();
switch (t) {
case 0:
this.CdNumArr || this.creatCD();
this.CDpageview.active = !0;
this.Scenepageview.active = !1;
this.CDButton.getChildByName("light").active = !0;
this.SceneButton.getChildByName("light").active = !1;
break;

case 1:
window.Parent.reportAnalytics("ShopScene_page_access");
this.SceneArr || this.CreatScenebg();
this.CDpageview.active = !1;
this.Scenepageview.active = !0;
this.CDButton.getChildByName("light").active = !1;
this.SceneButton.getChildByName("light").active = !0;
this.SceneSlickBack(null, !1);
var i = this.GetUnclockSkinNum();
this.Scenepageview.getComponent(cc.PageView).scrollToPage(i, .2);
}
},
UseSceneButtonclick: function() {
window.Parent.ButtonSounds();
window.Parent.reportAnalytics("ShopScene_use_click");
this.Scenepageview.getChildByName("isUsing").active = !0;
this.Scenepageview.getChildByName("UseButton").active = !1;
window.SceneNumber = this.ScenePageNumber;
window.Parent.setlocalStorage("SceneNumber", window.SceneNumber);
},
SceneVideoButtnClick: function() {
var e = this;
window.Parent.ButtonSounds();
if ("video" === window.SceneUnlockType[this.ScenePageNumber]) {
window.Parent.reportAnalytics("ShopScene_vedio_click");
window.Parent.showVideo(function(t) {
t && e.SceneSlickBack(null, !1);
});
} else {
window.Parent.reportAnalytics("ShopScene_diadema_click");
if (window.CrownNum >= window.SceneUnlockNumber[this.ScenePageNumber]) {
window.Crown.reduceCrown(window.SceneUnlockNumber[this.ScenePageNumber]);
window.sceneIsUnlock[this.ScenePageNumber] = !0;
window.Parent.setlocalStorage("sceneIsUnlock" + this.ScenePageNumber, !0);
e.SceneSlickBack(null, !1);
cc.log(window.sceneIsUnlock);
} else 0 == window.getCrownNum ? window.Crown.showAddCrownNode() : this.TipNode.active = !0;
}
},
GetUnclockSkinNum: function() {
for (var e = -1, t = 0; t < window.SceneUnlockType.length; t++) if ("video" == window.SceneUnlockType[t]) {
if (window.videoTimes < window.SceneUnlockNumber[t]) {
e = t;
break;
}
} else if ("crown" == window.SceneUnlockType[t] && !window.sceneIsUnlock[t]) {
e = t;
break;
}
console.log("curNum : " + e);
return -1 == e ? window.SceneNumber : e;
}
});
cc._RF.pop();
}, {} ],
CustomButtonJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "48293dGmAdBtbx9uQl1Vp3L", "CustomButtonJS");
cc.Class({
extends: cc.Component,
properties: {
tips: cc.Node
},
onLoad: function() {
if (0 == window.Home.hasFllowOfficial) {
this.tips.active = !0;
this.tips.runAction(cc.repeatForever(cc.sequence(cc.moveTo(.5, -250, this.tips.y), cc.moveTo(.5, -220, this.tips.y))));
this.scheduleOnce(function() {
this.tips.active = !1;
}, 5);
}
},
onEnable: function() {},
start: function() {},
update: function(e) {}
});
cc._RF.pop();
}, {} ],
CustomPageView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ef755zwOWRFGJTGwj7GL2Ug", "CustomPageView");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var c = e.length - 1; c >= 0; c--) (n = e[c]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = cc._decorator, a = s.ccclass, c = s.property, r = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.scrollView = null;
t.itemWight = 500;
t.pageUnitTime = .1;
t.maskViewWight = 680;
t.maxItemChildNum = 4;
t.curContentX = 0;
t.lastContentX = 0;
t.curItemIdx = 0;
t.endItemIdx = 2;
t.startItemIdx = 0;
t.itemChilds = new Array();
t.curFrameContentX = 0;
t.lastFrameContentX = 0;
return t;
}
t.prototype.start = function() {
this.scrollView.node.on("scrolling", this.onScrolling, this);
this.scrollView.node.on("touch-up", this.onTouchUp, this);
this.scrollView.node.on("touchcancel", this.onTouchcancel, this);
this.scrollView.node.on("scroll-began", this.onScrollBegan, this);
this.scrollView.inertia = !1;
this.itemChilds = this.scrollView.content.children;
this.lastContentX = this.scrollView.content.x;
this.initItemChilds();
this.curFrameContentX = this.scrollView.content.x;
this.lastFrameContentX = this.scrollView.content.x;
};
t.prototype.onScrollBegan = function(e) {
console.log("onScrollBegan  ");
e.content.stopAllActions();
};
t.prototype.onScrolling = function(e) {
this.curFrameContentX = this.scrollView.content.x;
this.lastFrameContentX = this.curFrameContentX;
};
t.prototype.onTouchUp = function(e) {
this.curContentX = e.content.x;
this.autoPage(e, this.onAutoPageCallback.bind(this));
};
t.prototype.onTouchcancel = function() {
this.onTouchUp(this.scrollView);
};
t.prototype.onAutoPageCallback = function() {
var e = this.node.convertToWorldSpaceAR(cc.v2()), t = this.curContentX - this.lastContentX;
if (!(Math.abs(t) < this.itemWight / 2)) {
this.lastContentX = this.curContentX;
console.log("offset  " + t);
if (t < 0) {
this.reuseItem(this.itemChilds[0], e, t);
for (var i = 0; i < this.itemChilds.length - 1; i++) this.itemChilds[i].x -= this.itemWight;
} else if (t > 0) {
this.reuseItem(this.itemChilds[this.itemChilds.length - 1], e, t);
for (i = 1; i < this.itemChilds.length; i++) this.itemChilds[i].x += this.itemWight;
}
}
};
t.prototype.autoPage = function(e, t) {
var i, o = Math.round(this.curContentX / this.itemWight);
if (Math.abs(this.lastContentX - this.curContentX) < this.itemWight / 2) i = this.lastContentX; else if (0 != o) {
o /= Math.abs(o);
i = this.lastContentX + o * this.itemWight;
} else i = 0;
var n = Math.abs(i - this.curContentX);
cc.tween(e.content).to(n * this.pageUnitTime, {
x: i
}, {
easing: cc.easing.cubicOut
}).call(function() {
t(n);
}).start();
};
t.prototype.reuseItem = function(e, t, i) {
console.log("item.position   " + e.position.x);
var o = e.convertToWorldSpaceAR(cc.v2()), n = this.node.convertToNodeSpaceAR(o), s = this.node.convertToNodeSpaceAR(t);
if (i < 0) {
console.log(this.node.name);
console.log("------------------------------");
console.log("第一个节点的x   " + n.x);
console.log("maskView的x   " + t.x);
if (n.x < s.x) {
e.x += (this.maxItemChildNum - 1) * this.itemWight;
this.scrollView.content.x += this.itemWight;
this.lastContentX = this.scrollView.content.x;
var a = this.itemChilds.shift();
this.itemChilds.push(a);
}
} else if (i > 0 && n.x > s.x + this.maskViewWight) {
console.log("最右边的item位置不在maskView的视野内");
e.x -= (this.maxItemChildNum - 1) * this.itemWight;
this.scrollView.content.x -= this.itemWight;
this.lastContentX = this.scrollView.content.x;
var c = this.itemChilds.pop();
this.itemChilds.unshift(c);
}
};
t.prototype.setSongTable = function(e) {
this.songTable = e;
};
t.prototype.setCurcurItemIdx = function(e) {
this.curItemIdx = e;
this.startItemIdx = this.songTable.length - 2 + this.curItemIdx;
this.endItemIdx = this.curItemIdx + (this.maxItemChildNum - 3);
};
t.prototype.initItemChilds = function() {
for (var e = 0; e < this.itemChilds.length; e++) ;
};
t.prototype.updateEndItemInfoIdx = function() {
this.endItemIdx++;
this.startItemIdx++;
this.endItemIdx = this.endItemIdx % this.songTable.length;
this.startItemIdx = this.startItemIdx % this.songTable.length;
return this.endItemIdx;
};
t.prototype.updateStartItemInfoIdx = function() {
this.startItemIdx--;
this.endItemIdx--;
this.endItemIdx = this.endItemIdx % this.songTable.length;
this.startItemIdx = this.startItemIdx % this.songTable.length;
this.startItemIdx = -1 == this.startItemIdx ? this.songTable.length - 1 : this.startItemIdx;
this.endItemIdx = -1 == this.endItemIdx ? this.songTable.length - 1 : this.endItemIdx;
return this.startItemIdx;
};
t.prototype.autoPageTurnLift = function() {
var e, t = this;
e = this.lastContentX + this.itemWight;
var i = this.itemWight;
cc.tween(this.scrollView.content).to(i * this.pageUnitTime, {
x: e
}, {
easing: cc.easing.cubicOut
}).call(function() {
t.curContentX = t.scrollView.content.x;
t.onAutoPageCallback();
}).start();
};
t.prototype.autoPageTurnRight = function() {
var e, t = this;
e = this.lastContentX - this.itemWight;
console.log("closestContentX   " + e);
var i = this.itemWight;
cc.tween(this.scrollView.content).to(i * this.pageUnitTime, {
x: e
}, {
easing: cc.easing.cubicOut
}).call(function() {
t.curContentX = t.scrollView.content.x;
t.onAutoPageCallback();
}).start();
};
t.prototype.update = function() {};
t.prototype.onAutoUpdate = function(e) {
this.curFrameContentX = this.scrollView.content.x;
this.scrollView.content.x = e;
this.lastFrameContentX = this.curFrameContentX;
};
t.prototype.onLocalAutoPage = function() {
this.curContentX = this.scrollView.content.x;
this.autoPage(this.scrollView, this.onAutoPageCallback.bind(this));
};
t.prototype.onLocateScrollBegan = function() {
this.scrollView.content.stopAllActions();
};
n([ c(cc.ScrollView) ], t.prototype, "scrollView", void 0);
n([ c ], t.prototype, "itemWight", void 0);
n([ c ], t.prototype, "pageUnitTime", void 0);
n([ c ], t.prototype, "maskViewWight", void 0);
n([ c ], t.prototype, "maxItemChildNum", void 0);
return t = n([ a ], t);
}(cc.Component);
i.default = r;
cc._RF.pop();
}, {} ],
DailyMissonJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "46985f10+JJeZcTUWWjKX6E", "DailyMissonJS");
cc.Class({
extends: cc.Component,
properties: {
missionBg: cc.Prefab,
yinfuFab: cc.Prefab,
content: cc.Node,
progress: cc.Node,
progressNum: cc.Node,
yinfuNumber: cc.Node,
finger: cc.Node,
crownBg: [ cc.Node ],
Crown: [ cc.Node ]
},
onLoad: function() {
this.missionTable = window.Home.missionTable;
this.progress.width = 0;
if (window.MissionCrownNumber >= 2) {
this.crownBg[0].active = !1;
this.crownBg[1].active = !1;
} else if (window.MissionCrownNumber >= 1) {
this.crownBg[0].active = !1;
this.crownBg[1].active = !0;
} else {
this.crownBg[0].active = !0;
this.crownBg[1].active = !0;
}
},
onEnable: function() {
window.Parent.reportAnalytics("task_page_access");
window.Parent.reportCustomEvent("皇冠事件", {
"展示每日任务": ""
});
},
start: function() {
3 != window.platform ? this.creatMissionSelect(1) : this.creatMissionSelect(0);
this.sortBygetButton();
this.sortByfinishButton();
this.reflashProgressBar();
},
close: function(e) {
window.Parent.ButtonSounds();
window.Home.isshowBlockAd = !1;
if (5 == window.platform || 2 == window.platform) {
this.node.destroy();
window.Home.DailyMissionNode = void 0;
} else this.node.active = !1;
},
update: function(e) {
if (this.reflashing) {
if (this.progress.width >= 420 && !0 === this.crownBg[0].active) {
this.Crown[0].getComponent(cc.Button).interactable = !0;
this.crownBg[0].active = !1;
this.Crown[0].active = !0;
cc.tween(this.Crown[0].getChildByName("light")).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
this.Crown[0].runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.2, 1.2), cc.rotateTo(.1, 30), cc.rotateTo(.1, -25), cc.rotateTo(.1, 20), cc.rotateTo(.1, 0), cc.scaleTo(.2, 1), cc.delayTime(1))));
window.isfirstgetCrown || (this.finger.active = !0);
} else if (this.progress.width >= 420 && !1 === this.crownBg[0].active) {
this.Crown[0].active = !0;
this.Crown[0].getChildByName("light").active = !1;
this.Crown[0].getChildByName("particle").active = !1;
}
if (this.progress.width >= 670 && !0 === this.crownBg[1].active) {
this.Crown[1].getComponent(cc.Button).interactable = !0;
this.crownBg[1].active = !1;
this.Crown[1].active = !0;
cc.tween(this.Crown[1].getChildByName("light")).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
this.Crown[1].runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.2, 1.2), cc.rotateTo(.1, 30), cc.rotateTo(.1, -25), cc.rotateTo(.1, 20), cc.rotateTo(.1, 0), cc.scaleTo(.2, 1), cc.delayTime(1))));
} else if (this.progress.width >= 670 && !1 === this.crownBg[1].active) {
this.Crown[1].active = !0;
this.Crown[1].getChildByName("light").active = !1;
this.Crown[1].getChildByName("particle").active = !1;
}
}
},
creatMissionSelect: function(e) {
e = Number(e);
this.missonArr = [];
this.missonArr2 = [];
this.content.height = 175 * (this.missionTable.length - e) + 400;
for (var t = 0; t < this.missionTable.length - e; t++) {
var i = cc.instantiate(this.missionBg);
i.setPosition(0, -80 - 175 * t);
i.getComponent("missionSelectJS").title1 = this.missionTable[t].Title1;
i.getComponent("missionSelectJS").title2 = this.missionTable[t].Title2;
i.getComponent("missionSelectJS").missionNum = this.missionTable[t].missionNum;
i.getComponent("missionSelectJS").yinfuNum = Number(this.missionTable[t].yinfuNum);
i.getComponent("missionSelectJS").Number = t;
i.getComponent("missionSelectJS").DayliNode = this;
this.content.addChild(i);
this.missonArr[t] = i;
this.missonArr2[t] = i;
}
},
FlyYinfu: function(e, t) {
var i = window.Tools.getLocalPosition(this.progress, window.Tools.getWorldPosition(e)), o = window.Tools.PlaceFabNode(this.yinfuFab, i, this.progress), n = window.Tools.getDistance(o, this.progress.getChildByName("progressParticle")), s = cc.v2(o.x, o.y + .3 * n), a = cc.v2(o.x, o.y + .6 * n), c = this.progress.getChildByName("progressParticle").position;
window.Tools.flyNodeBybezier(o, c, .5, s, a, function() {
o.destroy();
t();
});
},
sortBygetButton: function() {
for (var e = this.missonArr2.length; e > 0; ) {
for (var t = this.missonArr2.length - 1; t > 0; t--) {
var i = this.missonArr2[t].getChildByName("getButton").active, o = this.missonArr2[t - 1].getChildByName("getButton").active;
if (i && !o) {
var n = this.missonArr2[t].y;
this.missonArr2[t].y = this.missonArr2[t - 1].y;
this.missonArr2[t - 1].y = n;
n = this.missonArr2[t];
this.missonArr2[t] = this.missonArr2[t - 1];
this.missonArr2[t - 1] = n;
}
}
e--;
}
},
sortByfinishButton: function() {
for (var e = this.missonArr2.length; e > 0; ) {
for (var t = 0; t < this.missonArr2.length - 1; t++) {
var i = this.missonArr2[t].getChildByName("finishButton").active, o = this.missonArr2[t + 1].getChildByName("finishButton").active;
if (i && !o) {
var n = this.missonArr2[t].y;
this.missonArr2[t].y = this.missonArr2[t + 1].y;
this.missonArr2[t + 1].y = n;
n = this.missonArr2[t];
this.missonArr2[t] = this.missonArr2[t + 1];
this.missonArr2[t + 1] = n;
}
}
e--;
}
},
reflashProgressBar: function() {
var e = this;
this.reflashing = !0;
var t = window.yinfuNumber / 900;
t >= 1 && (t = 1);
this.progressNum.getComponent(cc.Label).string = Math.floor(100 * t) + "%";
this.yinfuNumber.getComponent(cc.Label).string = window.yinfuNumber;
0 === t ? this.progress.getChildByName("progressParticle").setScale(0) : this.progress.getChildByName("progressParticle").setScale(1);
cc.tween(this.progress).to(.5, {
width: 700 * t
}).call(function() {
e.reflashing = !1;
}).start();
},
getCrown: function(e, t) {
t = Number(t);
this.Crown[t].stopAllActions();
this.Crown[t].setScale(1);
this.Crown[t].angle = 0;
this.Crown[t].getChildByName("light").active = !1;
this.Crown[t].getChildByName("particle").active = !1;
this.Crown[t].getComponent(cc.Button).interactable = !1;
window.Crown.addCrown();
window.MissionCrownNumber++;
window.Parent.setlocalStorage("MissionCrownNumber", window.MissionCrownNumber);
this.finger.active = !1;
window.isfirstgetCrown = 1;
window.Parent.setlocalStorage("isfirstgetCrown", window.isfirstgetCrown);
}
});
cc._RF.pop();
}, {} ],
DateGiftJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7c417EXHKRBAZDWs7bcsaMa", "DateGiftJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
circleAnimPrefab: cc.Prefab,
starAnimPrefab: cc.Prefab
},
onLoad: function() {
this.node.setContentSize(window.screenWidth, window.screenHight);
this.defination();
this.definePar();
this.SetBTNEvent();
this.SetMusicData();
this.ShowAnim();
if (1 == window.manualDate && window.playID) {
this.lastMusicID = window.playID;
this.lastMusicName = window.playName;
}
this.PlayCurMusic(0);
this.RandomMoveAct();
o.default.getInstance().reportAnalytics("View_Show_V2", "TodayGiftUI_Show", 1);
},
onEnable: function() {
window.Parent.hidePushicon();
window.ShowData = !0;
},
onDisable: function() {
this.node.destroy();
window.Home.playMusicType = -1;
window.GiftNodeJS && window.GiftNodeJS.DealGiftList();
if (0 == window.manualDate) {
Number(window.Parent.getlocalStorage("GuideNum")) >= 4 && window.Home.AutoGuide();
}
window.Home.isShowDate = !1;
window.manualDate = !1;
window.GiftNode && 0 == window.GiftNode.active && (window.GiftNode.active = !0);
window.playName = this.lastMusicName;
"" == this.lastMusicName && window.Home.stopMusicPlaying();
if (-1 == this.playMusicNum && window.Home.lockDayGiftList.length < 3) {
window.HomeID = this.lastMusicID;
"" != this.lastMusicName && window.Home.playMusic();
} else if (-1 != this.playMusicNum && 3 == window.Home.lockDayGiftList.length) {
window.HomeID = window.Home.lockDayGiftList[this.playMusicNum].musicId;
window.playName = window.Home.lockDayGiftList[this.playMusicNum].musicName;
window.Home.UpdateMusicPlay();
window.Home.UpdateQuickStartStatus();
} else {
window.Home.UpdateMusicPlay();
window.Home.UpdateQuickStartStatus();
}
5 == window.platform && window.Parent.showPushicon(256, 256, 200, 1500);
},
defination: function() {
this.bgNode = this.node.getChildByName("BG");
this.AnimNode = this.node.getChildByName("GRP_Anim");
this.giftNode1 = this.AnimNode.getChildByName("GRP_Gift1");
this.giftLabel1 = this.giftNode1.getChildByName("Mask_Gift").getChildByName("LB_Gift");
this.OKBTN = this.giftNode1.getChildByName("BTN_OK");
this.GetSP = this.giftNode1.getChildByName("SP_Get");
this.giftVideoBTN1 = this.giftNode1.getChildByName("SP_Video");
this.giftCD1 = this.giftVideoBTN1.getChildByName("Mask").getChildByName("CD");
this.giftBase1 = this.giftNode1.getChildByName("SP_Base");
this.giftNode2 = this.AnimNode.getChildByName("GRP_Gift2");
this.giftLabel2 = this.giftNode2.getChildByName("Mask_Gift").getChildByName("LB_Gift");
this.giftVideoBTN2 = this.giftNode2.getChildByName("SP_Video");
this.giftCD2 = this.giftVideoBTN2.getChildByName("Mask").getChildByName("CD");
this.giftBase2 = this.giftNode1.getChildByName("SP_Base");
this.giftNode3 = this.AnimNode.getChildByName("GRP_Gift3");
this.giftLabel3 = this.giftNode3.getChildByName("Mask_Gift").getChildByName("LB_Gift");
this.giftVideoBTN3 = this.giftNode3.getChildByName("SP_Video");
this.giftCD3 = this.giftVideoBTN3.getChildByName("Mask").getChildByName("CD");
this.giftBase3 = this.giftNode1.getChildByName("SP_Base");
this.videoBTN = this.AnimNode.getChildByName("BTN_Video");
this.guideBTN = this.AnimNode.getChildByName("BTN_Guide");
this.getSP = this.AnimNode.getChildByName("SP_Get");
this.tipsNode = this.AnimNode.getChildByName("LB_Tips");
},
definePar: function() {
this.playMusicNum = -1;
this.lastMusicID = -1;
this.lastMusicName = "";
this.UpdateTips();
},
SetBTNEvent: function() {
var e = this;
this.OKBTN.on(cc.Node.EventType.TOUCH_END, this.OnClickOK, this);
this.videoBTN.on(cc.Node.EventType.TOUCH_END, this.OnClickVideo, this);
this.giftBase1.on(cc.Node.EventType.TOUCH_END, function() {
e.OnClickMusic(null, 0);
}, this);
this.giftBase2.on(cc.Node.EventType.TOUCH_END, function() {
e.OnClickMusic(null, 1);
}, this);
this.giftBase3.on(cc.Node.EventType.TOUCH_END, function() {
e.OnClickMusic(null, 2);
}, this);
this.giftVideoBTN1.on(cc.Node.EventType.TOUCH_END, function() {
e.OnClickMusic(null, 0);
}, this);
this.giftVideoBTN2.on(cc.Node.EventType.TOUCH_END, function() {
e.OnClickMusic(null, 1);
}, this);
this.giftVideoBTN3.on(cc.Node.EventType.TOUCH_END, function() {
e.OnClickMusic(null, 2);
}, this);
if (1 == window.manualDate) {
this.tipsNode.active = !0;
this.bgNode.on(cc.Node.EventType.TOUCH_END, this.OnClickClose, this);
this.OKBTN.active = !1;
this.GetSP.active = !0;
}
this.guideBTN.on(cc.Node.EventType.TOUCH_END, function() {
e.OnClickGuide();
}, this);
},
SetMusicData: function() {
this.giftLabel1.getComponent(cc.Label).string = window.Home.DayGiftList[0].musicName;
this.giftLabel2.getComponent(cc.Label).string = window.Home.DayGiftList[1].musicName;
this.giftLabel3.getComponent(cc.Label).string = window.Home.DayGiftList[2].musicName;
this.giftCD1.getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[window.Home.DayGiftList[0].orderNumber % 20];
this.giftCD2.getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[window.Home.DayGiftList[1].orderNumber % 20];
this.giftCD3.getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[window.Home.DayGiftList[2].orderNumber % 20];
},
LockMusic: function(e) {
var t = window.Home.DayGiftList[e].musicId;
window.Parent.setlocalStorage("isUnlock" + t, "true");
-1 == window.Home.lockDayGiftList.indexOf(window.Home.DayGiftList[e]) && window.Home.lockDayGiftList.push(window.Home.DayGiftList[e]);
},
UpdateTips: function() {
var e = this;
if (2 != Number(window.Parent.getlocalStorage("GuideNum"))) {
this.guideBTN.active = !1;
if (window.Home.lockDayGiftList.length >= 3) {
this.videoBTN.active = !1;
this.tipsNode.active = !0;
this.getSP.active = !0;
this.OKBTN.active = !1;
0 == window.manualDate && this.bgNode.on(cc.Node.EventType.TOUCH_END, this.OnClickClose, this);
this.GetSP.active = !1;
} else {
this.videoBTN.active = !0;
this.tipsNode.active = !1;
this.getSP.active = !1;
}
} else {
this.guideBTN.active = !0;
this.videoBTN.active = !1;
this.tipsNode.active = !1;
this.getSP.active = !1;
this.GetSP.active = !1;
this.OKBTN.active = !1;
window.Parent.PlayGuideAU(16);
this.scheduleOnce(function() {
e.SetGuide();
}, .2);
}
},
PlayCurMusic: function(e) {
var t = this, i = window.Home.DayGiftList[e];
window.playName != i.musicName && this.PauseCurMusic();
-1 == window.NeedUpdateList.indexOf(i.musicId) && window.NeedUpdateList.push(i.musicId);
this.playMusicNum = e;
var o = null;
if (0 == e) {
cc.tween(this.giftVideoBTN1).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
o = this.giftVideoBTN1.parent.convertToWorldSpaceAR(this.giftVideoBTN1.position);
o = this.AnimNode.convertToNodeSpaceAR(o);
} else if (1 == e) {
cc.tween(this.giftVideoBTN2).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
o = this.giftVideoBTN2.parent.convertToWorldSpaceAR(this.giftVideoBTN2.position);
o = this.AnimNode.convertToNodeSpaceAR(o);
} else if (2 == e) {
cc.tween(this.giftVideoBTN3).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
o = this.giftVideoBTN3.parent.convertToWorldSpaceAR(this.giftVideoBTN3.position);
o = this.AnimNode.convertToNodeSpaceAR(o);
}
this.circleAnim = cc.instantiate(this.circleAnimPrefab);
this.circleAnim.parent = this.AnimNode;
this.circleAnim.position = o;
this.starAnim = cc.instantiate(this.starAnimPrefab);
this.starAnim.parent = this.AnimNode;
this.starAnim.position = o;
window.Parent.LoadMusic(i.musicFile, i.musicId, function(i) {
t.playMusicCallFunc(i, e);
});
},
playMusicCallFunc: function(e, t) {
var i = window.Home.DayGiftList[t];
console.log("播放的歌曲为 : ", i.musicName);
window.musicisplaying = !0;
if (window.playName != i.musicName) {
window.playNum = window.Home.GetMusicNumber(i.musicId);
window.playName = i.musicName;
window.playURL = i.musicFile;
window.playID = i.musicId;
window.playPoint = i.json_normal;
window.Parent.audioEngine.playMusic(e, !0);
window.Parent.audioEngine.setMusicTime(Number(i.ex_listen));
window.Home.SongNameNode.getComponent(cc.Label).string = i.musicName;
window.Home.SongNameLB.getComponent(cc.Label).string = i.musicName;
window.isShowingVideoInsert && window.Parent.audioEngine.setVolume(0);
this.SongNameMoveAct(t);
window.Home.UpdateMusicPlay();
window.Home.UpdateQuickStartStatus();
}
},
PauseCurMusic: function() {
console.log("暂停歌曲");
this.StopSongNameMoveAct();
this.playMusicNum = -1;
window.playName = "";
window.Parent.audioEngine.stopAll();
this.giftVideoBTN1.stopAllActions();
this.giftVideoBTN2.stopAllActions();
this.giftVideoBTN3.stopAllActions();
this.circleAnim && this.circleAnim.destroy();
this.starAnim && this.starAnim.destroy();
window.Home.UpdateMusicPlay();
window.Home.UpdateQuickStartStatus();
},
SongNameMoveAct: function(e) {
this.StopSongNameMoveAct();
var t = null;
0 == e ? t = this.giftLabel1 : 1 == e ? t = this.giftLabel2 : 2 == e && (t = this.giftLabel3);
t && t.width > t.parent.width && t.runAction(cc.repeatForever(cc.sequence(cc.moveBy(4, -t.width, 0), cc.callFunc(function() {
t.x = 265;
}), cc.moveBy(4, -t.width, 0))));
},
StopSongNameMoveAct: function() {
if (this.giftLabel1) {
this.giftLabel1.stopAllActions();
this.giftLabel2.stopAllActions();
this.giftLabel3.stopAllActions();
this.giftLabel1.x = 0;
this.giftLabel2.x = 0;
this.giftLabel3.x = 0;
}
},
RandomMoveAct: function() {
var e = Math.floor(3 * Math.random());
console.log(" 随机移动第 ", e, " 个歌曲列表");
var t = this, i = null;
0 == e ? i = this.giftNode1 : 1 == e ? i = this.giftNode2 : 2 == e && (i = this.giftNode3);
var o = 5 * Math.random() + 5, n = Math.random();
n < .25 ? i.runAction(cc.sequence(cc.moveBy(2, cc.v2(o, 0)).easing(cc.easeSineIn()), cc.moveBy(2, cc.v2(-o, 0)).easing(cc.easeSineOut()), cc.callFunc(function() {
t.scheduleOnce(function() {
t.RandomMoveAct();
}, .5);
}))) : n >= .25 && n < .5 ? i.runAction(cc.sequence(cc.moveBy(2, cc.v2(o, 0)).easing(cc.easeSineIn()), cc.moveBy(2, cc.v2(-o, 0)).easing(cc.easeSineOut()), cc.callFunc(function() {
t.scheduleOnce(function() {
t.RandomMoveAct();
}, .5);
}))) : n >= .5 && n < .75 ? i.runAction(cc.sequence(cc.moveBy(2, cc.v2(0, o)).easing(cc.easeSineIn()), cc.moveBy(2, cc.v2(0, -o)).easing(cc.easeSineOut()), cc.callFunc(function() {
t.scheduleOnce(function() {
t.RandomMoveAct();
}, .5);
}))) : n >= .75 && i.runAction(cc.sequence(cc.moveBy(2, cc.v2(0, -o)).easing(cc.easeSineIn()), cc.moveBy(2, cc.v2(0, o)).easing(cc.easeSineOut()), cc.callFunc(function() {
t.scheduleOnce(function() {
t.RandomMoveAct();
}, .5);
})));
},
ShowAnim: function() {
cc.tween(this.AnimNode).to(.2, {
scale: 1.4
}).to(.8, {
scale: 1.1
}, {
easing: cc.easing.elasticOut
}).start();
},
SetGuide: function() {
var e = cc.instantiate(window.Parent.TipLeftPrefab);
e.parent = this.node;
e.getComponent("GuideTipsJS").SetTipsLabel("每天进入游戏都有歌曲赠送,记得经常回来看看哦!");
e.position = cc.v2(-330, .35 * window.screenHight);
},
OnClickVideo: function() {
var e = this;
window.Parent.ButtonSounds();
window.Parent.showVideo(function(t) {
if (t) {
e.LockMusic(0);
e.LockMusic(1);
e.LockMusic(2);
e.UpdateTips();
if (window.Home.lastday != window.Home.curnday) {
window.Home.lastday = window.Home.curnday;
window.Parent.setlocalStorage("singlastday", window.Home.lastday);
}
}
});
o.default.getInstance().reportAnalytics("Ad_Click_V2", "TodayGiftUI_ADClick", 1);
},
OnClickOK: function() {
window.Home.lastday = window.Parent.getlocalStorage("singlastday");
window.Home.curnday = String(new Date().getDay());
if (window.Home.lastday != window.Home.curnday) {
window.Home.lastday = window.Home.curnday;
window.Parent.setlocalStorage("singlastday", window.Home.lastday);
}
this.LockMusic(0);
window.Home.lockDayGiftList.length < 3 && 0 != this.playMusicNum && this.PlayCurMusic(0);
this.lastMusicName = window.Home.DayGiftList[0].musicName;
window.Parent.ButtonSounds();
this.node.active = !1;
window.Home.UpdateMusicPlay();
window.Home.UpdateQuickStartStatus();
},
OnClickMusic: function(e, t) {
window.Parent.ButtonSounds();
t = Number(t);
console.log("播放第", t, "首歌");
this.playMusicNum != t ? this.PlayCurMusic(t) : this.PauseCurMusic();
},
OnClickClose: function() {
window.Parent.ButtonSounds();
window.Home.lockDayGiftList.length < 3 ? this.playMusicNum >= 1 && (this.playMusicNum = -1) : "" == this.lastMusicName && -1 != this.playMusicNum && (this.lastMusicName = window.Home.DayGiftList[this.playMusicNum].musicName);
this.node.active = !1;
},
OnClickGuide: function() {
window.Parent.ButtonSounds();
this.LockMusic(0);
this.LockMusic(1);
this.LockMusic(2);
if (window.Home.lastday != window.Home.curnday) {
window.Home.lastday = window.Home.curnday;
window.Parent.setlocalStorage("singlastday", window.Home.lastday);
}
window.Parent.setlocalStorage("GuideNum", 3);
this.UpdateTips();
}
});
cc._RF.pop();
}, {
"./../Help/reportAnalytics": "reportAnalytics"
} ],
DiamondNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "834dde7KsZBHb+IZgPviWE4", "DiamondNodeJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
coinFab: cc.Prefab,
CoinNumLable: cc.Label,
point: cc.Node,
addDiamondSPList: [ cc.SpriteFrame ]
},
onLoad: function() {
this.node.setContentSize(window.screenWidth, window.screenHight);
this.Diamonds_bg = this.node.getChildByName("Diamonds_bg");
window.DiamonNum = Number(window.Parent.getlocalStorage("DiamonNum"));
this.CoinNumLable.string = window.DiamonNum;
cc.log("当前钻石数量", window.DiamonNum);
window.DiamondNode = this.node;
window.Diamon = this;
this.node.zIndex = 30;
this.point.active = !0;
},
start: function() {},
addDiamond: function(e, t) {
var i = this;
window.AchieveNumber[3] += Number(t);
window.Parent.setlocalStorage("AchieveNumber3", window.AchieveNumber[3]);
var o = this;
e = parseInt(e);
t < 5 && t > 0 && (e = 1);
e >= 30 && (e = 30);
console.log("获得" + t + "个金币");
if (0 != t) {
window.Parent.adddiamondSounds();
this.scheduleOnce(function() {
window.Parent.addscoreSounds();
}, .5);
}
for (var n = function(n) {
var s = cc.instantiate(i.coinFab), r = i.Random(-600, 600), l = i.Random(-600, 600);
s.setPosition(cc.v2(r, l));
a = i.node.getChildByName("Diamonds_bg");
c = a.getChildByName("Diamonds");
var d;
d = [ cc.v2(-50 + i.Random(-50, 50), 100 + i.Random(-50, 50)), cc.v2(-100 + i.Random(-50, 50), 300 + i.Random(-50, 50)), cc.v2(a.x + c.x, a.y + c.y) ];
var h = cc.bezierTo(.6, d), u = cc.callFunc(function() {
s.destroy();
window.DiamonNum += t / e;
o.CoinNumLable.string = parseInt(window.DiamonNum);
c.stopAllActions();
c.runAction(cc.sequence(cc.scaleTo(.1, 1.4), cc.scaleTo(.1, 1)));
});
i.scheduleOnce(function() {
this.node.addChild(s);
s.runAction(cc.sequence(h, u));
}, .008 * n);
}, s = 0; s < e; s++) {
var a, c;
n(s);
}
this.scheduleOnce(function() {
window.DiamonNum = parseInt(window.DiamonNum);
cc.log("保存金币" + window.DiamonNum);
window.Parent.setlocalStorage("DiamonNum", window.DiamonNum);
}, .008 * e + 1.5);
},
reduceDiamond: function(e) {
var t = this, i = window.DiamonNum - e;
window.Parent.addscoreSounds();
this.node.runAction(cc.repeatForever(cc.sequence(cc.callFunc(function() {
if (Number(t.CoinNumLable.string) > i) t.CoinNumLable.string = Number(t.CoinNumLable.string) - 10; else {
t.node.stopAllActions();
window.DiamonNum = window.DiamonNum - e;
t.CoinNumLable.string = window.DiamonNum;
window.Parent.setlocalStorage("DiamonNum", window.DiamonNum);
}
}), cc.delayTime(.001))));
},
Random: function(e, t) {
return Math.floor(Math.random() * (t - e + 1) + e);
},
addButtonClick: function() {
this.showAddDimondNode();
},
showAddDimondNode: function(e) {
if (!this.AddDimondNode) {
o.default.getInstance().reportAnalytics("View_Show_V2", "CoinUI_Show", 1);
this.AddDimondNode = cc.instantiate(window.AddDimondNodeFab);
this.AddDimondNode.parent = this.node;
this.AddDimondNode.setSiblingIndex(0);
this.closeButton = this.AddDimondNode.getChildByName("Close");
this.closeButton.on(cc.Node.EventType.TOUCH_END, this.closAddDimondNode, this);
this.videoButton = this.AddDimondNode.getChildByName("VideoButton");
this.videoButton.on(cc.Node.EventType.TOUCH_END, this.VideoButtonClick, this);
this.callback = e;
this.point.active = !1;
this.node.zIndex = 31;
window.Parent.reportAnalytics("coin_page_access");
window.Parent.reportCustomEvent("钻石事件", {
"钻石页面展示": ""
});
}
},
closAddDimondNode: function() {
this.node.zIndex = 30;
this.callback && this.callback();
this.AddDimondNode.destroy();
this.AddDimondNode = void 0;
},
VideoButtonClick: function() {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "CoinUI_ADClick", 1);
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
e.addDiamond(20, 150);
e.closAddDimondNode();
}
});
},
ShowFreeDiamond: function() {
if (!this.AddDimondNode) {
o.default.getInstance().reportAnalytics("View_Show_V2", "CoinUI_Show", 1);
this.AddDimondNode = cc.instantiate(window.AddDimondNodeFab);
this.AddDimondNode.parent = this.node;
this.AddDimondNode.setSiblingIndex(0);
this.closeButton = this.AddDimondNode.getChildByName("Close");
this.closeButton.on(cc.Node.EventType.TOUCH_END, this.closAddDimondNode, this);
this.closeButton.active = !1;
this.videoButton = this.AddDimondNode.getChildByName("VideoButton");
this.videoButton.on(cc.Node.EventType.TOUCH_END, this.FreeButtonClick, this);
this.callback = callback;
this.point.active = !1;
this.node.zIndex = 31;
this.videoButton.getComponent(cc.Sprite).spriteframe = this.addDiamondSPList[1];
}
},
FreeButtonClick: function() {
self.addDiamond(20, 150);
self.closAddDimondNode();
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
DonaldManager: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3e9cfdO6bxEa5Ldik09WwbF", "DonaldManager");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var c = e.length - 1; c >= 0; c--) (n = e[c]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = e("./../../SDK/ASCAd"), s = cc._decorator, a = s.ccclass, c = (s.property, 
"MusicColorBall"), r = function() {
function e() {
this.platform = 0;
}
t = e;
e.getInstance = function() {
t.instance || (t.instance = new t());
return t.instance;
};
e.prototype.LoadMusic = function(e, t, i) {
if (cc.sys.platform === cc.sys.VIVO_GAME) {
var o = "internal://cache/path/" + c + "/Music", s = qg.accessFile({
uri: o + "/" + t + ".mp3"
});
if ("true" == s) {
console.log("音乐存在，返回本地音乐");
i(o + "/" + t + ".mp3");
}
if ("false" == s) {
console.log("音乐不存在，下载网络音乐");
qg.download({
url: e,
success: function(e) {
console.log("网络音乐下载成功, 文件位置 : " + e.tempFilePath);
var s = qg.accessFile({
uri: o
});
if ("true" == s) {
console.log("音乐文件夹存在,开始复制文件");
qg.copyFile({
srcUri: "" + e.tempFilePath,
dstUri: o + "/" + t + ".mp3",
success: function(e) {
console.log("文件复制成功: " + e);
i("" + e);
},
fail: function(e, t) {
console.log("文件复制失败, code = " + t);
n.default.getInstance().showToast("当前无网络，请联网后重新尝试");
}
});
}
if ("false" == s) {
console.log("音乐文件夹不存在，开始创建文件夹");
qg.mkdir({
uri: o,
success: function(s) {
console.log("文件目录创建成功,开始复制文件");
qg.copyFile({
srcUri: "" + e.tempFilePath,
dstUri: o + "/" + t + ".mp3",
success: function(e) {
console.log("文件复制成功: " + e);
i("" + e);
},
fail: function(e, t) {
console.log("文件复制失败, code = " + t);
n.default.getInstance().showToast("当前无网络，请联网后重新尝试");
}
});
},
fail: function(e, t) {
console.log("文件目录创建失败");
console.log("handling fail, code = " + t);
}
});
}
},
fail: function(e, t) {
console.log("网络音乐下载失败, code = " + t);
n.default.getInstance().showToast("当前无网络，请联网后重新尝试");
}
});
}
} else if (cc.sys.platform === cc.sys.OPPO_GAME) {
var a = qg.getFileSystemManager();
o = qg.env.USER_DATA_PATH + "/" + c;
console.log(o);
a.access({
path: o + "_" + t + ".mp3",
success: function(e) {
console.log("音乐存在，返回本地音乐");
i(o + "_" + t + ".mp3");
},
fail: function(s) {
console.log("音乐不存在,下载网络音乐", o + "_" + t + ".mp3");
o = qg.env.USER_DATA_PATH + "/" + c + "_" + t + ".mp3";
qg.downloadFile({
url: e,
filePath: o,
success: function(e) {
console.log("网络音乐下载成功", o);
i(o);
},
fail: function(t) {
console.log("网络音乐单下载失败,使用临时存储");
qg.downloadFile({
url: e,
success: function(e) {
console.log("网络音乐下载成功");
i(e.tempFilePath);
},
fail: function(e) {
console.log("网络音乐单下载失败, code = " + e);
n.default.getInstance().showToast("当前无网络，请联网后重新尝试");
},
complete: function() {}
});
},
complete: function() {}
});
}
});
} else if ("undefined" != typeof qq) {
a = qq.getFileSystemManager(), o = qq.env.USER_DATA_PATH + "/" + c;
console.log("检查音乐是否存在");
a.access({
path: o + "/" + t + ".mp3",
success: function() {
console.log("音乐存在,返回本地音乐");
i(o + "/" + t + ".mp3");
},
fail: function() {
console.log("音乐不存在,下载网络音乐");
qq.downloadFile({
url: e,
success: function(e) {
console.log("音乐下载成功", "音乐临时地址", e.tempFilePath);
console.log("判断目标文件夹是否存在");
a.access({
path: "" + o,
success: function() {
console.log("目标文件夹存在,开始复制音乐文件");
a.copyFile({
srcPath: e.tempFilePath,
destPath: o + "/" + t + ".mp3",
success: function(e) {
console.log("音乐文件复制成功", o + "/" + t + ".mp3");
i(o + "/" + t + ".mp3");
},
fail: function(t) {
console.log("音乐文件复制失败,返回临时地址", t);
i(e.tempFilePath);
}
});
},
fail: function() {
console.log("目标文件夹存不在,创建音乐文件夹");
a.mkdir({
dirPath: o,
success: function() {
console.log("目标文件夹创建成功,开始复制音乐文件");
a.copyFile({
srcPath: e.tempFilePath,
destPath: o + "/" + t + ".mp3",
success: function(e) {
console.log("音乐文件复制成功", o + "/" + t + ".mp3");
i(o + "/" + t + ".mp3");
},
fail: function(t) {
console.log("音乐文件复制失败,返回临时地址", t);
i(e.tempFilePath);
}
});
},
fail: function(e) {
console.log("目标文件夹创建失败", e);
}
});
}
});
},
fail: function(e) {}
});
}
});
} else if ("undefined" != typeof tt) {
a = tt.getFileSystemManager(), o = tt.env.USER_DATA_PATH + "/" + c;
console.log("检查音乐是否存在");
a.access({
path: o + "/" + t + ".mp3",
success: function() {
console.log("音乐存在,返回本地音乐");
i(o + "/" + t + ".mp3");
},
fail: function() {
console.log("音乐不存在,下载网络音乐");
tt.downloadFile({
url: e,
success: function(e) {
console.log("音乐下载成功", "音乐临时地址", e.tempFilePath);
console.log("判断目标文件夹是否存在");
a.access({
path: "" + o,
success: function() {
console.log("目标文件夹存在,开始复制音乐文件");
a.copyFile({
srcPath: e.tempFilePath,
destPath: o + "/" + t + ".mp3",
success: function(e) {
console.log("音乐文件复制成功", o + "/" + t + ".mp3");
i(o + "/" + t + ".mp3");
},
fail: function(t) {
console.log("音乐文件复制失败,返回临时地址", t);
i(e.tempFilePath);
}
});
},
fail: function() {
console.log("目标文件夹存不在,创建音乐文件夹");
a.mkdir({
dirPath: o,
success: function() {
console.log("目标文件夹创建成功,开始复制音乐文件");
a.copyFile({
srcPath: e.tempFilePath,
destPath: o + "/" + t + ".mp3",
success: function(e) {
console.log("音乐文件复制成功", o + "/" + t + ".mp3");
i(o + "/" + t + ".mp3");
},
fail: function(t) {
console.log("音乐文件复制失败,返回临时地址", t);
i(e.tempFilePath);
}
});
},
fail: function(e) {
console.log("目标文件夹创建失败", e);
}
});
}
});
},
fail: function(e) {
console.log("音乐下载失败", e);
}
});
}
});
} else cc.loader.load({
url: e,
type: "mp3"
}, function(e, t) {
if (e) {
console.log("音乐加载失败");
console.log(e);
n.default.getInstance().showToast("当前无网络，请联网后重新尝试");
} else i(t);
});
};
e.prototype.LoadPoint = function(e, t, i) {
var o = this, n = new XMLHttpRequest();
n.onreadystatechange = function() {
if (4 == n.readyState && n.status >= 200 && n.status < 400) {
var s = n.responseText;
console.log("节奏点加载成功");
i(JSON.parse(s));
} else if (4 == n.readyState && n.status >= 400) {
console.log("节奏点加载失败");
o.LoadMusic(e, t, i);
}
};
n.open("GET", e, !0);
n.send();
};
var t;
return e = t = o([ a ], e);
}();
i.default = r;
cc._RF.pop();
}, {
"./../../SDK/ASCAd": "ASCAd"
} ],
EditorAsset: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "811429Dan1Dt5YfkM+rUzyC", "EditorAsset");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function e() {}
e.load = function(e, t, i) {
return cc.warn("[EditorAsset]", "该函数只在编辑器环境内有效！");
};
return e;
}();
i.default = o;
cc._RF.pop();
}, {} ],
EffectMoveJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "27fb2duQupOR7TizjR8gXqP", "EffectMoveJS");
cc.Class({
extends: cc.Component,
properties: {
moveSpeed: 0,
changeOpacity: 0
},
onLoad: function() {
this.isAddOpacity = !0;
},
update: function() {
this.node.y += this.moveSpeed;
this.node.y >= 3100 && (this.node.y = -3250);
var e = this.node.opacity;
if (e <= 100) {
e = 100;
this.isAddOpacity = !0;
} else if (e >= 160) {
e = 160;
this.isAddOpacity = !1;
}
1 == this.isAddOpacity ? e += this.changeOpacity : e -= this.changeOpacity;
this.node.opacity = e;
},
ResetScale: function() {
var e = 1 * Math.random();
this.node.setScale(e);
}
});
cc._RF.pop();
}, {} ],
EggShellBaseJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3627cnmFMhE6acAgDCpiJEa", "EggShellBaseJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
EggShellNum: 0,
EggShellType: 0,
EggShellClock: 0,
EggShellReward: 0,
EggShellMusicNum: -1,
shellNode: cc.Node,
videoNode: cc.Node,
DiamondNode: cc.Node,
CrownNode: cc.Node,
EggShellNode: cc.Node,
GetRewardNode: cc.Node,
GetBTN: cc.Node,
EggShellSPList: [ cc.SpriteFrame ],
EggShellParentNode: cc.Node,
musicID: 0
},
onLoad: function() {
this.ShellList = [ "开始游戏", "领取" ];
this.Num = void 0;
},
onEnable: function() {
this.GetCurData();
this.UpdateEggShellData();
},
UpdateEggShellData: function() {
this.shellNode.active = !1;
this.videoNode.active = !1;
this.DiamondNode.active = !1;
this.CrownNode.active = !1;
this.EggShellNode.active = !1;
this.GetRewardNode.active = !1;
1 != this.EggShellClock ? this.UpdateUnClock() : 2 == this.EggShellType ? this.UpdateMusic() : 3 == this.EggShellType ? this.UpdateDiamond() : 4 == this.EggShellType && this.UpdateCrown();
},
GetCurData: function() {
this.getTips = Number(window.Parent.getlocalStorage("EggShellTip" + this.EggShellNum));
this.EggShellClock = Number(window.Parent.getlocalStorage("EggShellClock" + this.EggShellNum));
window.Parent.setlocalStorage("EggShellType" + this.EggShellNum, this.EggShellType);
window.Parent.setlocalStorage("EggShellRewardNum" + this.EggShellNum, this.EggShellReward);
this.isGetReward = Number(window.Parent.getlocalStorage("EggShellGetReward" + this.EggShellNum));
},
UpdateMusic: function() {
this.videoNode.active = !0;
this.shellNode.active = !0;
this.shellNode.getChildByName("LB_Label").getComponent(cc.Label).string = this.ShellList[0];
this.songNode = this.videoNode.getChildByName("Song");
this.songMaskNode = this.videoNode.getChildByName("SongNameMask");
this.starNode = this.videoNode.getChildByName("Star");
this.crownNode = this.videoNode.getChildByName("Crown");
this.playBTN = this.songNode.getChildByName("playButton");
this.pauseBTN = this.songNode.getChildByName("pauseButton");
this.loading = this.songNode.getChildByName("loading");
this.CD = this.songNode.getChildByName("Mask").getChildByName("CD");
this.songNameNode = this.songMaskNode.getChildByName("SongName");
this.star = [];
this.star[0] = this.starNode.getChildByName("star0");
this.star[1] = this.starNode.getChildByName("star1");
this.star[2] = this.starNode.getChildByName("star2");
this.crow = [];
this.crow[0] = this.crownNode.getChildByName("crown0");
this.crow[1] = this.crownNode.getChildByName("crown1");
this.StarNum = Number(window.Parent.getlocalStorage("StarNum" + this.musicID));
this.HardLevel1 = Number(window.Parent.getlocalStorage("HardLevel1" + this.musicID));
this.HardLevel2 = Number(window.Parent.getlocalStorage("HardLevel2" + this.musicID));
this.star[0].active = !1;
this.star[1].active = !1;
this.star[2].active = !1;
for (var e = 0; e < this.StarNum; e++) this.star[e].active = !0;
this.crow[0].active = 2 == this.HardLevel1;
this.crow[1].active = 2 == this.HardLevel2;
this.songNameNode.getComponent(cc.Label).string = window.Home.SurpriseMusicTable[this.EggShellMusicNum].musicName;
var t = Number(window.Home.SurpriseMusicTable[this.EggShellMusicNum].orderNumber) % 20;
this.CD.getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[t];
},
UpdateDiamond: function() {
this.DiamondNode.active = !0;
this.GetRewardNode.active = !1;
this.shellNode.active = !1;
if (this.isGetReward) this.GetRewardNode.active = !0; else {
this.shellNode.getChildByName("LB_Label").getComponent(cc.Label).string = this.ShellList[1];
this.shellNode.active = !0;
}
},
UpdateCrown: function() {
this.CrownNode.active = !0;
this.GetRewardNode.active = !1;
this.shellNode.active = !1;
if (this.isGetReward) this.GetRewardNode.active = !0; else {
this.shellNode.getChildByName("LB_Label").getComponent(cc.Label).string = this.ShellList[1];
this.shellNode.active = !0;
}
},
UpdateUnClock: function() {
this.EggShellNode.active = !0;
this.EggShellNode.getChildByName("SP_EggShell").getComponent(cc.Sprite).spriteFrame = this.EggShellSPList[1 == this.getTips ? 0 : 1];
1 != this.getTips ? this.GetBTN.active = !0 : this.GetBTN.active = !1;
},
playMusic: function() {
if (-1 != this.EggShellMusicNum) {
window.PlayOtherMusic = !0;
for (var e = 0, t = this.EggShellParentNode.getComponent("EggShellNodeJS").eggShellArr.length, i = 0; i < t; i++) {
if (2 == this.EggShellParentNode.getComponent("EggShellNodeJS").eggShellArr[i].getComponent("EggShellBaseJS").EggShellType) {
1 == Number(window.Parent.getlocalStorage("EggShellClock" + e)) && this.EggShellParentNode.getComponent("EggShellNodeJS").eggShellArr[i].getComponent("EggShellBaseJS").stopMusic();
e++;
}
}
var o = this;
this.scheduleOnce(function() {
window.Parent.audioEngine.stopAll();
window.musicisplaying = !1;
o.playBTN.active = !1;
o.loading.active = !0;
o.loading.stopAllActions();
cc.tween(o.loading).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
var e = window.Home.SurpriseMusicTable[o.EggShellMusicNum].musicFile, t = window.Home.SurpriseMusicTable[o.EggShellMusicNum].musicId;
console.log("musicURL : ", e);
console.log("musicId : ", t);
window.Parent.LoadMusic(e, t, function(e) {
if (!window.musicisplaying) if (window.videoIsPlay) window.Parent.audioEngine.stopAll(); else {
if (window.Home.SurpriseMusicTable[o.EggShellMusicNum].musicName != window.Home.curmusicName) {
window.Home.perviewmusicNum = window.Home.SurpriseMusicTable[o.EggShellMusicNum].orderNumber;
window.Home.perviewmusicName = window.Home.curmusicName;
window.Home.curmusicName = window.Home.SurpriseMusicTable[o.EggShellMusicNum].musicName;
}
o.loading.active = !1;
o.pauseBTN.active = !0;
o.playBTN.active = !1;
window.musicisplaying = !0;
o.musicplay = !0;
cc.tween(o.CD).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
window.Parent.audioEngine.playMusic(e, !0);
}
});
}, .5);
}
},
stopMusic: function() {
window.musicisplaying = !1;
this.playBTN.active = !0;
this.loading.active = !1;
this.pauseBTN.active = !1;
this.CD.angle = 0;
this.CD.stopAllActions();
window.Parent.audioEngine.stopAll();
},
OnClickShell: function() {
if (1 == this.EggShellClock) {
var e = this;
if (2 == this.EggShellType) {
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "ColorEggsUI_Play_NoADClick", 1);
window.playNum = this.EggShellMusicNum + window.Home.CrownMusicTable.length + window.Home.musicTable.length;
window.musicModel = 2;
window.playName = window.Home.SurpriseMusicTable[this.EggShellMusicNum].musicName;
window.playURL = window.Home.SurpriseMusicTable[this.EggShellMusicNum].musicFile;
window.playID = this.musicID;
window.playPoint = window.Home.SurpriseMusicTable[this.EggShellMusicNum].json_normal;
window.Parent.ButtonSounds();
window.Home.showModleSelect(function() {
e.EggShellParentNode && e.EggShellParentNode.destroy();
}, this.shellNode);
} else if (3 == this.EggShellType) {
window.Diamon.addDiamond(20, this.EggShellReward);
this.isGetReward = 1;
window.Parent.setlocalStorage("EggShellGetReward" + this.EggShellNum, 1);
this.UpdateDiamond();
} else if (4 == this.EggShellType) {
for (var t = 0; t < this.EggShellReward; t++) {
var i = 0 + .4 * t;
this.scheduleOnce(function() {
window.Crown.addCrown();
}, i);
}
this.isGetReward = 1;
window.Parent.setlocalStorage("EggShellGetReward" + this.EggShellNum, 1);
this.UpdateCrown();
}
}
},
OnClickHint: function() {
if (1 != this.EggShellClock) {
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "ColorEggsUI_Check_NoADClick", 1);
this.EggShellParentNode.getComponent("EggShellNodeJS").curNum = this.EggShellNum;
this.EggShellParentNode.getComponent("EggShellNodeJS").SetHintNode(1 == this.getTips);
}
}
});
cc._RF.pop();
}, {
"./../Help/reportAnalytics": "reportAnalytics"
} ],
EggShellNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "650a2qOFP1K/7VHzfyUZpRy", "EggShellNodeJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
EggShellFab: cc.Prefab,
EggShellParentNode: cc.Node,
HintNode: cc.Node,
curNum: 0
},
onLoad: function() {
window.Eggshell = this;
window.EggshellNode = this.node;
this.node.setContentSize(window.screenWidth, window.screenHight);
this.eggShellList = [ 2, 2, 2 ];
this.eggShellRewardList = [ 0, 0, 0 ];
this.eggShellMusicList = [ "Y49", "L40", "J32" ];
this.followListNode = this.node.getChildByName("FollowList");
this.unFollowListNode = this.node.getChildByName("UNFollowList");
this.needHintNode = this.HintNode.getChildByName("NeedHint");
this.getHintNode = this.HintNode.getChildByName("GetHint");
this.NeedStrList = [ "这里可以查看彩蛋提示哦！", "这里可以查看彩蛋提示哦！", "这里可以查看彩蛋提示哦！" ];
this.GetStrList = [ "关注公众号即可获取哟~", "死了不要气馁！试试重生再来！", "试试到主页下拉列表看看，有惊喜哟（多拉几次哦）~" ];
window.HomeNode.opacity = 0;
},
onEnable: function() {
o.default.getInstance().reportAnalytics("View_Show_V2", "ColorEggsUI_Show", 1);
this.homeNum = window.playID;
3 == window.platform && (window.Record.RecordButton.active = !1);
this.ShowEggShell();
5 == window.platform && window.Parent.hidePushicon();
},
onDisable: function() {
this.node.destroy();
window.HomeNode.opacity = 255;
},
ShowEggShell: function() {
this.followListNode.active = !1;
this.unFollowListNode.active = !1;
console.log("hasFllowOfficial : " + window.Home.hasFllowOfficial);
if (1 == window.Home.hasFllowOfficial && 3 == window.platform || 3 != window.platform || 3 == window.platform && "Douyin" != window.AppName) {
this.followListNode.active = !0;
this.eggShellArr = [];
this.EggShellParentNode.height = 360 * parseInt(this.eggShellList.length / 3) + 600;
for (var e = 0, t = 0; t < this.eggShellList.length; t++) {
var i = cc.instantiate(this.EggShellFab);
i.getComponent("EggShellBaseJS").EggShellNum = t;
i.getComponent("EggShellBaseJS").EggShellType = this.eggShellList[t];
i.getComponent("EggShellBaseJS").EggShellReward = this.eggShellRewardList[t];
if (2 == this.eggShellList[t]) {
for (var o = 0; o < window.Home.SurpriseMusicTable.length; o++) {
if (window.Home.SurpriseMusicTable[o].musicId == this.eggShellMusicList[e]) {
i.getComponent("EggShellBaseJS").EggShellMusicNum = o;
i.getComponent("EggShellBaseJS").musicID = this.eggShellMusicList[e];
e++;
break;
}
}
i.getComponent("EggShellBaseJS").EggShellParentNode = this.node;
}
i.parent = this.EggShellParentNode;
var n = t % 3, s = parseInt(t / 3);
i.setPosition(310 * n - 300, -200 - 390 * s);
this.eggShellArr[t] = i;
}
} else this.unFollowListNode.active = !0;
},
OnClickFollow: function() {
console.log("点击进行关注");
window.Parent.ButtonSounds();
var e = this;
tt.openAwemeUserProfile({
success: function(t) {
console.log("---- open success, res: ", t);
if (t.hasFollowed) {
console.log("hasFllowOfficial", window.Home.hasFllowOfficial);
if (0 == window.Home.hasFllowOfficial) {
window.Home.hasFllowOfficial = 1;
window.Parent.showTips("关注成功");
window.Home.DouyinBTN.getChildByName("Mask").getChildByName("fallowTips").active = !1;
window.Home.DouyinBTN.stopAllActions();
window.Home.DouyinBTN.setScale(1);
window.Home.DouyinBTN.angle = 0;
e.ShowEggShell();
}
1 != Number(window.Parent.getlocalStorage("EggShellClock0")) && window.Parent.setlocalStorage("EggShellClock0", 1);
} else {
console.log("hasFllowOfficial", window.Home.hasFllowOfficial);
if (1 == window.Home.hasFllowOfficial) {
window.Home.hasFllowOfficial = 0;
window.Home.DouyinBTN.stopAllActions();
window.Home.DouyinBTN.getChildByName("Mask").getChildByName("fallowTips").active = !0;
window.Home.crownStoreButton.getChildByName("point").active = !0;
window.Home.DouyinBTN.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.2, 1.1), cc.rotateTo(.1, 30), cc.rotateTo(.1, -25), cc.rotateTo(.1, 20), cc.rotateTo(.1, 0), cc.scaleTo(.2, 1), cc.delayTime(1))));
window.Home.cancelFollowMusic();
window.Parent.showTips("取消关注");
}
e.ShowEggShell();
}
window.Parent.setlocalStorage("hasFllowOfficial", window.Home.hasFllowOfficial);
},
fail: function(e) {
console.log("---- open fail, err: ", e);
"openAwemeUserProfile:fail not login" === e.errMsg ? window.Parent.showTips("请先登录账号") : window.Parent.showTips("暂不支持此应用");
},
complete: function(e) {}
});
},
OnClickBack: function() {
3 == window.platform && (window.Record.RecordButton.active = !0);
window.Parent.ButtonSounds();
if (1 == window.PlayOtherMusic) {
window.HomeID = this.homeNum;
window.Home.playMusic();
window.PlayOtherMusic = !1;
}
this.node.active = !1;
cc.loader.releaseRes("PreFab/EggShellNode", cc.Prefab);
5 == window.platform && window.Parent.showPushicon(256, 256, 200, 1500);
},
OnClickCloseHint: function() {
window.Parent.ButtonSounds();
this.HintNode.active = !1;
this.needHintNode.active = !1;
this.getHintNode.active = !1;
},
OnClickVideo: function() {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "ColorEggsUI_Check_ADClick", 1);
window.Parent.ButtonSounds();
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
window.Parent.setlocalStorage("EggShellTip" + e.curNum, 1);
window.Parent.reportAnalytics("eggs_hint_vedio_click");
e.SetHintNode(!0);
}
});
},
SetHintNode: function(e) {
this.HintNode.active = !0;
this.getHintNode.active = !1;
this.needHintNode.active = !1;
if (e) {
window.Parent.reportAnalytics("eggs_yes_hint_access");
this.getHintNode.active = !0;
this.getHintNode.getChildByName("LB_Label").getComponent(cc.Label).string = this.GetStrList[this.curNum];
} else {
window.Parent.reportAnalytics("eggs_no_hint_access");
this.needHintNode.active = !0;
this.needHintNode.getChildByName("LB_Label").getComponent(cc.Label).string = this.NeedStrList[this.curNum];
}
this.eggShellArr[this.curNum].getComponent("EggShellBaseJS").GetCurData();
this.eggShellArr[this.curNum].getComponent("EggShellBaseJS").UpdateUnClock();
}
});
cc._RF.pop();
}, {
"./../Help/reportAnalytics": "reportAnalytics"
} ],
EndJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f7a6bZKZvRMJLkRub+xipVa", "EndJS");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
window.EndNode = this.node;
window.EndNodeJS = this;
this.defination();
this.SetBTNEvent();
},
defination: function() {
this.AllMusicBTN = this.node.getChildByName("LB_End").getChildByName("BTN_All");
},
SetBTNEvent: function() {
this.AllMusicBTN.on(cc.Node.EventType.TOUCH_END, this.OnClickAllMusic, this);
},
OnClickAllMusic: function() {
window.Home.OnClickShowAll();
}
});
cc._RF.pop();
}, {} ],
EndMaskNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a9c6d8yBTNNNJOmPHFkhT6C", "EndMaskNodeJS");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.sceneNode = this.node.getChildByName("SP_Scene");
this.baseMaskNode = this.node.getChildByName("SP_BaseMask");
this.nameNode = this.baseMaskNode.getChildByName("LB_Name");
this.roundNode = this.baseMaskNode.getChildByName("LB_Round");
},
onEnable: function() {
this.UpdateLB();
},
UpdateLB: function() {
for (var e = window.videoTimes, t = null, i = null, o = 0; o < window.SceneUnlockNumber.length; o++) {
var n = window.SceneUnlockNumber[o];
console.log(n);
if (n > e && null == t) {
t = o;
i = n;
break;
}
}
if (null == t) this.node.active = !1; else {
this.node.active = !0;
this.sceneNode.getComponent(cc.Sprite).spriteFrame = window.endSceneStorebg_Sprit[t - 1];
this.nameNode.getComponent(cc.Label).string = window.scenName[t];
this.roundNode.getComponent(cc.Label).string = e.toString() + " / " + i.toString();
}
}
});
cc._RF.pop();
}, {} ],
12: [ function(e, t, i) {
!function(e) {
function t(o) {
if (i[o]) return i[o].exports;
var n = i[o] = {
i: o,
l: !1,
exports: {}
};
return e[o].call(n.exports, n, n.exports, t), n.l = !0, n.exports;
}
var i = {};
t.m = e, t.c = i, t.d = function(e, i, o) {
t.o(e, i) || Object.defineProperty(e, i, {
configurable: !1,
enumerable: !0,
get: o
});
}, t.n = function(e) {
var i = e && e.__esModule ? function() {
return e.default;
} : function() {
return e;
};
return t.d(i, "a", i), i;
}, t.o = function(e, t) {
return Object.prototype.hasOwnProperty.call(e, t);
}, t.p = "./", t(t.s = 95);
}([ function(e, t) {
var i = e.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
"number" == typeof __g && (__g = i);
}, function(e, t, i) {
"use strict";
t.__esModule = !0, t.default = function(e, t) {
if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
};
}, function(e, t, i) {
"use strict";
t.__esModule = !0;
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(i(31));
t.default = function() {
function e(e, t) {
for (var i = 0; i < t.length; i++) {
var n = t[i];
n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), 
(0, o.default)(e, n.key, n);
}
}
return function(t, i, o) {
return i && e(t.prototype, i), o && e(t, o), t;
};
}();
}, function(e, t, i) {
var o = i(37)("wks"), n = i(38), s = i(0).Symbol, a = "function" == typeof s;
(e.exports = function(e) {
return o[e] || (o[e] = a && s[e] || (a ? s : n)("Symbol." + e));
}).store = o;
}, function(e, t) {
var i = e.exports = {
version: "2.6.11"
};
"number" == typeof __e && (__e = i);
}, function(e, t, i) {
e.exports = {
default: i(51),
__esModule: !0
};
}, function(e, t, i) {
var o = i(12);
e.exports = function(e) {
if (!o(e)) throw TypeError(e + " is not an object!");
return e;
};
}, function(e, t, i) {
e.exports = !i(29)(function() {
return 7 != Object.defineProperty({}, "a", {
get: function() {
return 7;
}
}).a;
});
}, function(e, t, i) {
var o = i(11), n = i(32);
e.exports = i(7) ? function(e, t, i) {
return o.f(e, t, n(1, i));
} : function(e, t, i) {
return e[t] = i, e;
};
}, function(e, t, i) {
var o = i(0), n = i(4), s = i(15), a = i(8), c = i(17), r = function(e, t, i) {
var l, d, h, u = e & r.F, w = e & r.G, m = e & r.S, g = e & r.P, p = e & r.B, f = e & r.W, S = w ? n : n[t] || (n[t] = {}), N = S.prototype, v = w ? o : m ? o[t] : (o[t] || {}).prototype;
w && (i = t);
for (l in i) (d = !u && v && void 0 !== v[l]) && c(S, l) || (h = d ? v[l] : i[l], 
S[l] = w && "function" != typeof v[l] ? i[l] : p && d ? s(h, o) : f && v[l] == h ? function(e) {
var t = function(t, i, o) {
if (this instanceof e) {
switch (arguments.length) {
case 0:
return new e();

case 1:
return new e(t);

case 2:
return new e(t, i);
}
return new e(t, i, o);
}
return e.apply(this, arguments);
};
return t.prototype = e.prototype, t;
}(h) : g && "function" == typeof h ? s(Function.call, h) : h, g && ((S.virtual || (S.virtual = {}))[l] = h, 
e & r.R && N && !N[l] && a(N, l, h)));
};
r.F = 1, r.G = 2, r.S = 4, r.P = 8, r.B = 16, r.W = 32, r.U = 64, r.R = 128, e.exports = r;
}, function(e, t, i) {
"use strict";
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(i(99)), n = i(30), s = i(94), a = i(33), c = a.Logger, r = a.Http, l = a.Error, d = a.Channel, h = a.Support, u = {
Config: n,
Logger: c,
Http: r,
Error: l,
Utils: a,
Channel: d,
KwaiGame: s,
Support: h,
mixin: function(e) {
(0, o.default)(s, e);
}
};
e.exports = u;
}, function(e, t, i) {
var o = i(6), n = i(54), s = i(55), a = Object.defineProperty;
t.f = i(7) ? Object.defineProperty : function(e, t, i) {
if (o(e), t = s(t, !0), o(i), n) try {
return a(e, t, i);
} catch (e) {}
if ("get" in i || "set" in i) throw TypeError("Accessors not supported!");
return "value" in i && (e[t] = i.value), e;
};
}, function(e, t) {
e.exports = function(e) {
return "object" == typeof e ? null !== e : "function" == typeof e;
};
}, function(e, t) {
e.exports = {};
}, function(e, t) {
var i;
i = function() {
return this;
}();
try {
i = i || Function("return this")() || (0, eval)("this");
} catch (e) {
"object" == typeof window && (i = window);
}
e.exports = i;
}, function(e, t, i) {
var o = i(16);
e.exports = function(e, t, i) {
if (o(e), void 0 === t) return e;
switch (i) {
case 1:
return function(i) {
return e.call(t, i);
};

case 2:
return function(i, o) {
return e.call(t, i, o);
};

case 3:
return function(i, o, n) {
return e.call(t, i, o, n);
};
}
return function() {
return e.apply(t, arguments);
};
};
}, function(e, t) {
e.exports = function(e) {
if ("function" != typeof e) throw TypeError(e + " is not a function!");
return e;
};
}, function(e, t) {
var i = {}.hasOwnProperty;
e.exports = function(e, t) {
return i.call(e, t);
};
}, function(e, t) {
var i = {}.toString;
e.exports = function(e) {
return i.call(e).slice(8, -1);
};
}, function(e, t, i) {
var o = i(12), n = i(0).document, s = o(n) && o(n.createElement);
e.exports = function(e) {
return s ? n.createElement(e) : {};
};
}, function(e, t, i) {
"use strict";
(function(t) {
function o(e) {
return e && e.__esModule ? e : {
default: e
};
}
var n = o(i(5)), s = o(i(1)), a = o(i(2)), c = function() {
function e() {
(0, s.default)(this, e);
}
return (0, a.default)(e, null, [ {
key: "safeValue",
value: function(e) {
var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
return null == e || "undefiled" == typeof e ? t : e;
}
}, {
key: "getVersionWithRange",
value: function(e, t, i) {
var o = "";
return void 0 === e ? o : (e.split(".").forEach(function(e, n, s) {
n < i && n >= t && (n > t && (o += "."), o += e);
}), o);
}
}, {
key: "getProtocolVersion",
value: function(e) {
return this.getVersionWithRange(e, 1, 2);
}
}, {
key: "getMainVersion",
value: function(e) {
return this.getVersionWithRange(e, 0, 2);
}
}, {
key: "getShortVersion",
value: function(e) {
return this.getVersionWithRange(e, 2, e.length);
}
}, {
key: "compareVersion",
value: function(e, t) {
if (void 0 === e || void 0 === t) return -1;
if (e.length != t.length) return -1;
for (var i = e.split("."), o = t.split("."), n = 0; n < i.length; ++n) {
var s = parseInt(i[n]), a = parseInt(o[n]);
if (s > a) return 1;
if (s < a) return -1;
}
return 0;
}
}, {
key: "compareMainVersion",
value: function(e, t) {
var i = this.getMainVersion(e), o = this.getMainVersion(t);
return this.compareVersion(i, o);
}
}, {
key: "compareProtocolVersion",
value: function(e, t) {
var i = this.getProtocolVersion(e), o = this.getProtocolVersion(t);
return this.compareVersion(i, o);
}
}, {
key: "safeJsonParse",
value: function(e) {
try {
return e ? "string" == typeof e ? JSON.parse(e) : e : {};
} catch (t) {
return console.warn("parse: " + e + " has exception: " + t), {};
}
}
}, {
key: "convertVersion",
value: function(e) {
if (!e || "" === e) return 0;
var t = [ 1, 3, 3 ], i = "", o = e.split(".");
if (!o || o.length <= 1) return 0;
for (var n = 0; n < o.length; n++) {
for (var s = o[n], a = o[n].length; a < t[n]; a++) s = "0" + s;
i += s;
}
return parseInt(i);
}
}, {
key: "setStorage",
value: function(e, t) {
e = kwaigame.gameid + "_" + e;
var i = (0, n.default)(t);
cc.sys.localStorage.setItem(e, i);
}
}, {
key: "getStorage",
value: function(e, t) {
e = kwaigame.gameid + "_" + e;
try {
var i = cc.sys.localStorage.getItem(e);
return null !== i && void 0 !== i && "" !== i ? JSON.parse(i) : t;
} catch (e) {
return t;
}
}
}, {
key: "registerToWindow",
value: function() {
var i = "undefined" == typeof window ? t : window;
void 0 === i.safeValue && (i.safeValue = function(t, i) {
return e.safeValue(t, i);
});
var o = JSON;
void 0 === o.safeParse && (o.safeParse = function(t) {
return e.safeJsonParse(t);
});
}
} ]), e;
}();
c.sdkVersion = "1.1.5", c.registerToWindow(), e.exports = c;
}).call(t, i(14));
}, function(e, t, i) {
"use strict";
function o(e) {
return e && e.__esModule ? e : {
default: e
};
}
var n, s = o(i(56)), a = o(i(1)), c = o(i(2)), r = function() {
function e() {
(0, a.default)(this, e);
}
return (0, c.default)(e, null, [ {
key: "isServerError",
value: function(e) {
return e > 1;
}
}, {
key: "ERR",
value: function(e) {
var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
return t ? {
code: e,
msg: t
} : {
code: e
};
}
} ]), e;
}();
r.code = (n = {
OK: 1,
UNDEFINED: -1,
INVALID_PARAMETER: -2,
LAUNCH_GAME_WITH_INVALID_PARAMETER: -10001,
LAUNCH_GAME_WITHOUT_CONTEXT: -10002,
GAME_HAS_LAUNCH: -10003,
NOT_SUPPORT_ENGINE: -10004,
NOT_SUPPORT_CMD: -10005,
LOSE_GAME_RESOURCES: -10006,
UNKNOWN_ERROR: -20001,
NOT_SUPPORT_ENV: -20002,
DOING_LOGIN: -20003,
REQUEST_TIMEOUT: -20004,
UNGET_TOKEN: -20005,
UNGET_LOCATION: -20006
}, (0, s.default)(n, "INVALID_PARAMETER", -20007), (0, s.default)(n, "UN_LOGIN", -20007), 
(0, s.default)(n, "PAY_ORDER_FAIL", -20008), (0, s.default)(n, "Authorize_ERR_SCOPE", -20009), 
(0, s.default)(n, "Authorize_FAIL", -20010), (0, s.default)(n, "Authorize_CANCEL", -20011), 
(0, s.default)(n, "Authorize_EXPIRE", -20012), (0, s.default)(n, "Authorize_INFO_FAIL", -20013), 
(0, s.default)(n, "GET_USERINFO_FAIL", -20014), (0, s.default)(n, "LOGIN_FAILED", -20015), 
(0, s.default)(n, "HAS_LOGINED", -20016), (0, s.default)(n, "UN_INIT", -20017), 
(0, s.default)(n, "DOING_PAY", -20018), n), e.exports = r;
}, function(e, t, i) {
var o = i(48), n = i(23);
e.exports = function(e) {
return o(n(e));
};
}, function(e, t) {
e.exports = function(e) {
if (void 0 == e) throw TypeError("Can't call method on  " + e);
return e;
};
}, function(e, t) {
var i = Math.ceil, o = Math.floor;
e.exports = function(e) {
return isNaN(e = +e) ? 0 : (e > 0 ? o : i)(e);
};
}, function(e, t, i) {
var o = i(37)("keys"), n = i(38);
e.exports = function(e) {
return o[e] || (o[e] = n(e));
};
}, function(e, t) {
e.exports = !0;
}, function(e, t, i) {
var o = i(11).f, n = i(17), s = i(3)("toStringTag");
e.exports = function(e, t, i) {
e && !n(e = i ? e : e.prototype, s) && o(e, s, {
configurable: !0,
value: t
});
};
}, function(e, t, i) {
"use strict";
function o(e) {
var t, i;
this.promise = new e(function(e, o) {
if (void 0 !== t || void 0 !== i) throw TypeError("Bad Promise constructor");
t = e, i = o;
}), this.resolve = n(t), this.reject = n(i);
}
var n = i(16);
e.exports.f = function(e) {
return new o(e);
};
}, function(e, t) {
e.exports = function(e) {
try {
return !!e();
} catch (e) {
return !0;
}
};
}, function(e, t, i) {
"use strict";
var o = {
SID: "kuaishou.api_st",
ChannelName: "ks_tk",
isRelease: !1,
appId: null,
gameId: null,
HttpTimeOut: 3e4
};
o.PassportURL = {
Release: "https://open.kuaishou.com/game",
Debug: "https://open.test.gifshow.com/game",
url: function() {
return o.isRelease ? this.Release : this.Debug;
},
buildURL: function(e) {
return this.url + "/path";
}
}, o.PayURL = {
Release: "https://allin.kuaishoupay.com/api",
Debug: "https://allin.test.gifshow.com/api",
url: function() {
return o.isRelease ? this.Release : this.Debug;
},
buildURL: function(e) {
return this.url + "/path";
}
}, o.ShareTargetType = {
PrivateMessage: 1,
GroupMessage: 2,
FriendList: 3
}, o.ShareTargetID = {
AccountID: "1",
GroupID: "2",
None: "3"
}, o.Scopes = [ "Scope.userInfo", "Scope.socialInfo", "Scope.location", "Scope.microphone", "Scope.camera", "Scope.album" ], 
e.exports = o;
}, function(e, t, i) {
e.exports = {
default: i(52),
__esModule: !0
};
}, function(e, t) {
e.exports = function(e, t) {
return {
enumerable: !(1 & e),
configurable: !(2 & e),
writable: !(4 & e),
value: t
};
};
}, function(e, t, i) {
"use strict";
var o = i(20), n = i(34), s = i(57), a = i(35), c = i(58), r = i(21), l = i(59);
o.Channel = n, o.Support = s, o.Logger = a, o.Http = c, o.Error = r, o.Profile = l, 
e.exports = o;
}, function(e, t, i) {
"use strict";
function o(e) {
return e && e.__esModule ? e : {
default: e
};
}
var n = o(i(5)), s = o(i(1)), a = o(i(2)), c = (i(20), i(21)), r = function() {
function e() {
(0, s.default)(this, e);
}
return (0, a.default)(e, null, [ {
key: "isKwaiGame",
value: function() {
return "undefined" != typeof kwaigamecore || "undefined" != typeof loadRuntime;
}
}, {
key: "supportKRT",
value: function() {
return "undefined" != typeof loadRuntime;
}
}, {
key: "handle",
value: function(e) {
var t = e.command, i = e.params, o = void 0 === i ? null : i, s = e.response, a = void 0 === s ? null : s, r = e.fail, l = void 0 === r ? null : r;
if (a && "function" == typeof a || (a = function() {}), l && "function" == typeof l || (l = function() {}), 
"log" !== t && console.log("Handle Req >>>:" + t + " params:" + (0, n.default)(o)), 
this.isKwaiGame()) {
if (this.supportKRT()) return loadRuntime().callCustomCommand({
success: function(e) {
"log" !== t && console.log("Handle Rsp <<<:" + t + " params:" + e), a(JSON.safeParse(e));
},
fail: function(e) {
"log" !== t && console.log("Handle Err <<<:" + t + " params:" + e), l(JSON.safeParse(e));
}
}, t, o ? (0, n.default)(o) : null), !0;
var d = kwaigamecore.message.call(t, o ? (0, n.default)(o) : null, function(e) {
"log" !== t && console.log("Handle Rsp <<<:" + t + " params:" + e), a(JSON.safeParse(e));
});
if (!d) {
var h = {
code: c.code.NOT_SUPPORT_CMD
};
"log" !== t && console.log("Handle Err <<<:" + t + " params:" + (0, n.default)(h)), 
l(h);
}
return d;
}
h = {
code: c.code.NOT_SUPPORT_ENGINE
};
return "log" !== t && console.log("Handle Err <<<:" + t + " params:" + (0, n.default)(h)), 
l(h), !1;
}
} ]), e;
}();
e.exports = r;
}, function(e, t, i) {
"use strict";
function o(e) {
return e && e.__esModule ? e : {
default: e
};
}
var n = o(i(1)), s = o(i(2)), a = i(34), c = function() {
function e() {
(0, n.default)(this, e);
}
return (0, s.default)(e, null, [ {
key: "log",
value: function(e) {
console.log("[KwaiGamePlugin] " + e), a.isKwaiGame() && a.supportKRT() && a.handle({
command: "log",
params: {
level: 1,
message: e
}
});
}
}, {
key: "warn",
value: function(e) {
console.warn("[KwaiGamePlugin] " + e), a.isKwaiGame() && a.supportKRT() && a.handle({
command: "log",
params: {
level: 2,
message: e
}
});
}
}, {
key: "error",
value: function(e) {
console.error("[KwaiGamePlugin] " + e), a.isKwaiGame() && a.supportKRT() && a.handle({
command: "log",
params: {
level: 3,
message: e
}
});
}
} ]), e;
}();
e.exports = c;
}, function(e, t, i) {
var o = i(24), n = Math.min;
e.exports = function(e) {
return e > 0 ? n(o(e), 9007199254740991) : 0;
};
}, function(e, t, i) {
var o = i(4), n = i(0), s = n["__core-js_shared__"] || (n["__core-js_shared__"] = {});
(e.exports = function(e, t) {
return s[e] || (s[e] = void 0 !== t ? t : {});
})("versions", []).push({
version: o.version,
mode: i(26) ? "pure" : "global",
copyright: "© 2019 Denis Pushkarev (zloirock.ru)"
});
}, function(e, t) {
var i = 0, o = Math.random();
e.exports = function(e) {
return "Symbol(".concat(void 0 === e ? "" : e, ")_", (++i + o).toString(36));
};
}, function(e, t) {
e.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
}, function(e, t, i) {
"use strict";
var o = i(26), n = i(9), s = i(67), a = i(8), c = i(13), r = i(68), l = i(27), d = i(71), h = i(3)("iterator"), u = !([].keys && "next" in [].keys()), w = function() {
return this;
};
e.exports = function(e, t, i, m, g, p, f) {
r(i, t, m);
var S, N, v, C = function(e) {
if (!u && e in T) return T[e];
switch (e) {
case "keys":
case "values":
return function() {
return new i(this, e);
};
}
return function() {
return new i(this, e);
};
}, y = t + " Iterator", B = "values" == g, b = !1, T = e.prototype, P = T[h] || T["@@iterator"] || g && T[g], I = P || C(g), A = g ? B ? C("entries") : I : void 0, _ = "Array" == t && T.entries || P;
if (_ && (v = d(_.call(new e()))) !== Object.prototype && v.next && (l(v, y, !0), 
o || "function" == typeof v[h] || a(v, h, w)), B && P && "values" !== P.name && (b = !0, 
I = function() {
return P.call(this);
}), o && !f || !u && !b && T[h] || a(T, h, I), c[t] = I, c[y] = w, g) if (S = {
values: B ? I : C("values"),
keys: p ? I : C("keys"),
entries: A
}, f) for (N in S) N in T || s(T, N, S[N]); else n(n.P + n.F * (u || b), t, S);
return S;
};
}, function(e, t, i) {
var o = i(0).document;
e.exports = o && o.documentElement;
}, function(e, t, i) {
var o = i(18), n = i(3)("toStringTag"), s = "Arguments" == o(function() {
return arguments;
}()), a = function(e, t) {
try {
return e[t];
} catch (e) {}
};
e.exports = function(e) {
var t, i, c;
return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof (i = a(t = Object(e), n)) ? i : s ? o(t) : "Object" == (c = o(t)) && "function" == typeof t.callee ? "Arguments" : c;
};
}, function(e, t, i) {
var o = i(6), n = i(16), s = i(3)("species");
e.exports = function(e, t) {
var i, a = o(e).constructor;
return void 0 === a || void 0 == (i = o(a)[s]) ? t : n(i);
};
}, function(e, t, i) {
var o, n, s, a = i(15), c = i(82), r = i(41), l = i(19), d = i(0), h = d.process, u = d.setImmediate, w = d.clearImmediate, m = d.MessageChannel, g = d.Dispatch, p = 0, f = {}, S = function() {
var e = +this;
if (f.hasOwnProperty(e)) {
var t = f[e];
delete f[e], t();
}
}, N = function(e) {
S.call(e.data);
};
u && w || (u = function(e) {
for (var t = [], i = 1; arguments.length > i; ) t.push(arguments[i++]);
return f[++p] = function() {
c("function" == typeof e ? e : Function(e), t);
}, o(p), p;
}, w = function(e) {
delete f[e];
}, "process" == i(18)(h) ? o = function(e) {
h.nextTick(a(S, e, 1));
} : g && g.now ? o = function(e) {
g.now(a(S, e, 1));
} : m ? (s = (n = new m()).port2, n.port1.onmessage = N, o = a(s.postMessage, s, 1)) : d.addEventListener && "function" == typeof postMessage && !d.importScripts ? (o = function(e) {
d.postMessage(e + "", "*");
}, d.addEventListener("message", N, !1)) : o = "onreadystatechange" in l("script") ? function(e) {
r.appendChild(l("script")).onreadystatechange = function() {
r.removeChild(this), S.call(e);
};
} : function(e) {
setTimeout(a(S, e, 1), 0);
}), e.exports = {
set: u,
clear: w
};
}, function(e, t) {
e.exports = function(e) {
try {
return {
e: !1,
v: e()
};
} catch (e) {
return {
e: !0,
v: e
};
}
};
}, function(e, t, i) {
var o = i(6), n = i(12), s = i(28);
e.exports = function(e, t) {
if (o(e), n(t) && t.constructor === e) return t;
var i = s.f(e);
return (0, i.resolve)(t), i.promise;
};
}, function(e, t, i) {
var o = i(60), n = i(39);
e.exports = Object.keys || function(e) {
return o(e, n);
};
}, function(e, t, i) {
var o = i(18);
e.exports = Object("z").propertyIsEnumerable(0) ? Object : function(e) {
return "String" == o(e) ? e.split("") : Object(e);
};
}, function(e, t, i) {
var o = i(23);
e.exports = function(e) {
return Object(o(e));
};
}, function(e, t, i) {
e.exports = {
default: i(63),
__esModule: !0
};
}, function(e, t, i) {
var o = i(4), n = o.JSON || (o.JSON = {
stringify: JSON.stringify
});
e.exports = function(e) {
return n.stringify.apply(n, arguments);
};
}, function(e, t, i) {
i(53);
var o = i(4).Object;
e.exports = function(e, t, i) {
return o.defineProperty(e, t, i);
};
}, function(e, t, i) {
var o = i(9);
o(o.S + o.F * !i(7), "Object", {
defineProperty: i(11).f
});
}, function(e, t, i) {
e.exports = !i(7) && !i(29)(function() {
return 7 != Object.defineProperty(i(19)("div"), "a", {
get: function() {
return 7;
}
}).a;
});
}, function(e, t, i) {
var o = i(12);
e.exports = function(e, t) {
if (!o(e)) return e;
var i, n;
if (t && "function" == typeof (i = e.toString) && !o(n = i.call(e))) return n;
if ("function" == typeof (i = e.valueOf) && !o(n = i.call(e))) return n;
if (!t && "function" == typeof (i = e.toString) && !o(n = i.call(e))) return n;
throw TypeError("Can't convert object to primitive value");
};
}, function(e, t, i) {
"use strict";
t.__esModule = !0;
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(i(31));
t.default = function(e, t, i) {
return t in e ? (0, o.default)(e, t, {
value: i,
enumerable: !0,
configurable: !0,
writable: !0
}) : e[t] = i, e;
};
}, function(e, t, i) {
"use strict";
function o(e) {
return e && e.__esModule ? e : {
default: e
};
}
var n = o(i(1)), s = o(i(2)), a = i(20), c = function() {
function e() {
(0, n.default)(this, e);
}
return (0, s.default)(e, null, [ {
key: "setup",
value: function(t) {
var i = t.appName, o = t.bizName, n = t.appVersion, s = t.appBuildVersion, a = t.nativeVersion;
e.appName = safeValue(i), e.bizName = safeValue(o), e.appVersion = safeValue(n), 
e.appBuildVersion = safeValue(s), e.nativeVersion = safeValue(a);
}
}, {
key: "isSupport",
value: function(t) {
return e.isSupport({
feature: t,
appName: e.appName,
bizName: e.bizName,
appVersion: e.appVersion,
appBuildVersion: e.appBuildVersion,
nativeVersion: e.nativeVersion
});
}
}, {
key: "isSupport",
value: function(t) {
var i = t.feature, o = t.appName, n = (t.bizName, t.appVersion);
t.appBuildVersion, t.nativeVersion;
if (i == e.features.GlobalClose) if (o && "com.kuaishou.nebula" === o) {
if (a.compareVersion(n, "2.6.0") >= 0) return !0;
} else if (a.compareVersion(n, "7.4.30") >= 0) return !0;
if (i == e.features.RewardVideo) if (o && "com.kuaishou.nebula" === o) {
if (a.compareVersion(n, "2.6.0") >= 0) return !0;
} else if (a.compareVersion(n, "7.4.30") >= 0) return !0;
return e.features.Recorder, !1;
}
} ]), e;
}();
c.features = {
GlobalClose: 3,
RewardVideo: 4,
Recorder: 5
}, e.exports = c;
}, function(e, t, i) {
"use strict";
function o(e) {
return e && e.__esModule ? e : {
default: e
};
}
var n = o(i(5)), s = o(i(1)), a = o(i(2)), c = i(35), r = i(21), l = i(30), d = function() {
function e() {
(0, s.default)(this, e);
}
return (0, a.default)(e, null, [ {
key: "request",
value: function(e, t, i, o, s, a, r) {
c.log("[Http] Url = " + e + " reqData = " + i), ("number" != typeof o || o <= 0) && (o = l.HttpTimeOut);
var d = !1, h = Date.now(), u = new XMLHttpRequest(), w = setTimeout(function() {
c.log("[Http] Request Time Out."), d = !0, u.abort(), r && r();
}, o);
if (u.onreadystatechange = function() {
if (4 == u.readyState) {
var t = Date.now() - h;
if (kwaigame.actionLog("HTTP_REQUEST_DURATION", {
duration: t,
url: e
}), c.log("[Http] duration:" + t), d) return void c.log("[Http][Response] Request Time Out.");
if (w && clearInterval(w), u.status >= 200 && u.status < 400) {
var i = u.responseText;
if (c.log("[Http] response = " + i), i) {
var o = JSON.parse(i);
a(o);
} else a(!1);
} else a(!1);
}
}, u.onerror = function(e) {
c.log("[Http] Request Error");
}, u.open(t, e, !0), s) for (var m in s) s.hasOwnProperty(m) && u.setRequestHeader(m, s[m]);
u.send(i ? "string" == typeof i ? i : (0, n.default)(i) : null);
}
}, {
key: "requestPost",
value: function(t) {
var i = t.url, o = void 0 === i ? "" : i, n = t.parmaters, s = void 0 === n ? {} : n, a = t.header, c = void 0 === a ? {} : a, l = t.cookies, d = void 0 === l ? {} : l, h = t.body, u = void 0 === h ? "" : h, w = t.bodyFormat, m = void 0 === w ? e.BodyFormat.JSON : w, g = t.completion, p = void 0 === g ? null : g;
if (p && "function" == typeof p || (p = function() {}), o.length <= 0) p(r.ERR(r.code.INVALID_PARAMETER)); else {
var f = "";
if (s.length > 0) for (var S in s) f = f + S + "=" + s[S] + "&";
f.length > 0 && (o = o + "?" + f);
var N = {
"Content-Type": m == e.BodyFormat.URLEncode ? "application/x-www-form-urlencoded" : "application/json"
};
if (c.length > 0) for (var v in c) N[v] = c[v];
var C = "";
if (d.length > 0) for (var y in d) C = C + y + "=" + d[y] + ";";
C.length > 0 && (N.Cookie = C), N = e.DefaultHeader.merge(N), Http.request(o, Http.HttpType.POST, u, timeout, c, p, p);
}
}
}, {
key: "requestGet",
value: function(t) {
var i = t.url, o = void 0 === i ? "" : i, n = t.parmaters, s = void 0 === n ? {} : n, a = t.header, c = void 0 === a ? {} : a, l = t.cookies, d = void 0 === l ? {} : l;
t.complete;
if (completion && "function" == typeof completion || (completion = function() {}), 
o.length <= 0) completion(r.ERR(r.code.INVALID_PARAMETER)); else {
var h = "";
if (s.length > 0) for (var u in s) h = h + u + "=" + s[u] + "&";
h.length > 0 && (o = o + "?" + h);
var w = {};
if (c.length > 0) for (var m in c) w[m] = c[m];
var g = "";
if (d.length > 0) for (var p in d) g = g + p + "=" + d[p] + ";";
g.length > 0 && (w.Cookie = g), w = e.DefaultHeader.merge(w), Http.request(o, Http.HttpType.GET, null, timeout, c, completion, completion);
}
}
} ]), e;
}();
d.HttpType = {
GET: "GET",
POST: "POST"
}, d.BodyFormat = {
URLEncode: "URLEncode",
JSON: "JSON"
}, d.DefaultHeader = {
"device-id": "",
os: "",
"device-model": "",
"network-type": "",
"app-version": "",
"sdk-version": "",
"os-version": "",
package: "",
"bundle-id": "",
"app-version-code": "",
channel: l.ChannelName,
"user-agent": "game-cloud-sdk",
"distribution-channels": l.ChannelName,
locale: "zh_CN",
"device-oaid": "",
"device-imei": "",
"device-rom": "",
idfa: "",
update: function(e) {
e = safeValue(e, {});
for (var t in e) d.DefaultHeader.hasOwnProperty(t) && (d.DefaultHeader[t] = e[t]);
},
merge: function(e) {
e = safeValue(e, {});
for (var t in d.DefaultHeader) "string" == typeof d.DefaultHeader[t] && d.DefaultHeader[t].length > 0 && !e.hasOwnProperty(t) && (e[t] = d.DefaultHeader[t]);
return e;
}
}, e.exports = d;
}, function(e, t, i) {
"use strict";
(function(t) {
function o(e) {
return e && e.__esModule ? e : {
default: e
};
}
var n = o(i(5)), s = o(i(1)), a = o(i(2)), c = function() {
function e() {
(0, s.default)(this, e);
}
return (0, a.default)(e, null, [ {
key: "detectProfile",
value: function(e, t) {
var i = 0;
"undefined" != typeof cc && (i = (1 / cc.director.getDeltaTime()).toFixed(2));
var o = 0;
"undefined" != typeof gfx && (o = gfx.Device.getInstance().getDrawCalls());
var s = {
FPS: i,
"DRAW CALLS": o
};
t((0, n.default)(s));
}
}, {
key: "registerToWindow",
value: function() {
var i = "undefined" == typeof window ? t : window;
void 0 === i.KwaiGameDebugInfo && (i.KwaiGameDebugInfo = function(t, i) {
e.detectProfile(t, i);
});
}
} ]), e;
}();
c.registerToWindow(), e.exports = c;
}).call(t, i(14));
}, function(e, t, i) {
var o = i(17), n = i(22), s = i(61)(!1), a = i(25)("IE_PROTO");
e.exports = function(e, t) {
var i, c = n(e), r = 0, l = [];
for (i in c) i != a && o(c, i) && l.push(i);
for (;t.length > r; ) o(c, i = t[r++]) && (~s(l, i) || l.push(i));
return l;
};
}, function(e, t, i) {
var o = i(22), n = i(36), s = i(62);
e.exports = function(e) {
return function(t, i, a) {
var c, r = o(t), l = n(r.length), d = s(a, l);
if (e && i != i) {
for (;l > d; ) if ((c = r[d++]) != c) return !0;
} else for (;l > d; d++) if ((e || d in r) && r[d] === i) return e || d || 0;
return !e && -1;
};
};
}, function(e, t, i) {
var o = i(24), n = Math.max, s = Math.min;
e.exports = function(e, t) {
return (e = o(e)) < 0 ? n(e + t, 0) : s(e, t);
};
}, function(e, t, i) {
i(64), i(65), i(72), i(76), i(88), i(89), e.exports = i(4).Promise;
}, function(e, t) {}, function(e, t, i) {
"use strict";
var o = i(66)(!0);
i(40)(String, "String", function(e) {
this._t = String(e), this._i = 0;
}, function() {
var e, t = this._t, i = this._i;
return i >= t.length ? {
value: void 0,
done: !0
} : (e = o(t, i), this._i += e.length, {
value: e,
done: !1
});
});
}, function(e, t, i) {
var o = i(24), n = i(23);
e.exports = function(e) {
return function(t, i) {
var s, a, c = String(n(t)), r = o(i), l = c.length;
return r < 0 || r >= l ? e ? "" : void 0 : (s = c.charCodeAt(r)) < 55296 || s > 56319 || r + 1 === l || (a = c.charCodeAt(r + 1)) < 56320 || a > 57343 ? e ? c.charAt(r) : s : e ? c.slice(r, r + 2) : a - 56320 + (s - 55296 << 10) + 65536;
};
};
}, function(e, t, i) {
e.exports = i(8);
}, function(e, t, i) {
"use strict";
var o = i(69), n = i(32), s = i(27), a = {};
i(8)(a, i(3)("iterator"), function() {
return this;
}), e.exports = function(e, t, i) {
e.prototype = o(a, {
next: n(1, i)
}), s(e, t + " Iterator");
};
}, function(e, t, i) {
var o = i(6), n = i(70), s = i(39), a = i(25)("IE_PROTO"), c = function() {}, r = function() {
var e, t = i(19)("iframe"), o = s.length;
for (t.style.display = "none", i(41).appendChild(t), t.src = "javascript:", (e = t.contentWindow.document).open(), 
e.write("<script>document.F=Object<\/script>"), e.close(), r = e.F; o--; ) delete r.prototype[s[o]];
return r();
};
e.exports = Object.create || function(e, t) {
var i;
return null !== e ? (c.prototype = o(e), i = new c(), c.prototype = null, i[a] = e) : i = r(), 
void 0 === t ? i : n(i, t);
};
}, function(e, t, i) {
var o = i(11), n = i(6), s = i(47);
e.exports = i(7) ? Object.defineProperties : function(e, t) {
n(e);
for (var i, a = s(t), c = a.length, r = 0; c > r; ) o.f(e, i = a[r++], t[i]);
return e;
};
}, function(e, t, i) {
var o = i(17), n = i(49), s = i(25)("IE_PROTO"), a = Object.prototype;
e.exports = Object.getPrototypeOf || function(e) {
return e = n(e), o(e, s) ? e[s] : "function" == typeof e.constructor && e instanceof e.constructor ? e.constructor.prototype : e instanceof Object ? a : null;
};
}, function(e, t, i) {
i(73);
for (var o = i(0), n = i(8), s = i(13), a = i(3)("toStringTag"), c = "CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","), r = 0; r < c.length; r++) {
var l = c[r], d = o[l], h = d && d.prototype;
h && !h[a] && n(h, a, l), s[l] = s.Array;
}
}, function(e, t, i) {
"use strict";
var o = i(74), n = i(75), s = i(13), a = i(22);
e.exports = i(40)(Array, "Array", function(e, t) {
this._t = a(e), this._i = 0, this._k = t;
}, function() {
var e = this._t, t = this._k, i = this._i++;
return !e || i >= e.length ? (this._t = void 0, n(1)) : n(0, "keys" == t ? i : "values" == t ? e[i] : [ i, e[i] ]);
}, "values"), s.Arguments = s.Array, o("keys"), o("values"), o("entries");
}, function(e, t) {
e.exports = function() {};
}, function(e, t) {
e.exports = function(e, t) {
return {
value: t,
done: !!e
};
};
}, function(e, t, i) {
"use strict";
var o, n, s, a, c = i(26), r = i(0), l = i(15), d = i(42), h = i(9), u = i(12), w = i(16), m = i(77), g = i(78), p = i(43), f = i(44).set, S = i(83)(), N = i(28), v = i(45), C = i(84), y = i(46), B = r.TypeError, b = r.process, T = b && b.versions, P = T && T.v8 || "", I = r.Promise, A = "process" == d(b), _ = function() {}, k = n = N.f, M = !!function() {
try {
var e = I.resolve(1), t = (e.constructor = {})[i(3)("species")] = function(e) {
e(_, _);
};
return (A || "function" == typeof PromiseRejectionEvent) && e.then(_) instanceof t && 0 !== P.indexOf("6.6") && -1 === C.indexOf("Chrome/66");
} catch (e) {}
}(), L = function(e) {
var t;
return !(!u(e) || "function" != typeof (t = e.then)) && t;
}, D = function(e, t) {
if (!e._n) {
e._n = !0;
var i = e._c;
S(function() {
for (var o = e._v, n = 1 == e._s, s = 0; i.length > s; ) !function(t) {
var i, s, a, c = n ? t.ok : t.fail, r = t.resolve, l = t.reject, d = t.domain;
try {
c ? (n || (2 == e._h && O(e), e._h = 1), !0 === c ? i = o : (d && d.enter(), i = c(o), 
d && (d.exit(), a = !0)), i === t.promise ? l(B("Promise-chain cycle")) : (s = L(i)) ? s.call(i, r, l) : r(i)) : l(o);
} catch (e) {
d && !a && d.exit(), l(e);
}
}(i[s++]);
e._c = [], e._n = !1, t && !e._h && R(e);
});
}
}, R = function(e) {
f.call(r, function() {
var t, i, o, n = e._v, s = G(e);
if (s && (t = v(function() {
A ? b.emit("unhandledRejection", n, e) : (i = r.onunhandledrejection) ? i({
promise: e,
reason: n
}) : (o = r.console) && o.error && o.error("Unhandled promise rejection", n);
}), e._h = A || G(e) ? 2 : 1), e._a = void 0, s && t.e) throw t.v;
});
}, G = function(e) {
return 1 !== e._h && 0 === (e._a || e._c).length;
}, O = function(e) {
f.call(r, function() {
var t;
A ? b.emit("rejectionHandled", e) : (t = r.onrejectionhandled) && t({
promise: e,
reason: e._v
});
});
}, U = function(e) {
var t = this;
t._d || (t._d = !0, (t = t._w || t)._v = e, t._s = 2, t._a || (t._a = t._c.slice()), 
D(t, !0));
}, F = function(e) {
var t, i = this;
if (!i._d) {
i._d = !0, i = i._w || i;
try {
if (i === e) throw B("Promise can't be resolved itself");
(t = L(e)) ? S(function() {
var o = {
_w: i,
_d: !1
};
try {
t.call(e, l(F, o, 1), l(U, o, 1));
} catch (e) {
U.call(o, e);
}
}) : (i._v = e, i._s = 1, D(i, !1));
} catch (e) {
U.call({
_w: i,
_d: !1
}, e);
}
}
};
M || (I = function(e) {
m(this, I, "Promise", "_h"), w(e), o.call(this);
try {
e(l(F, this, 1), l(U, this, 1));
} catch (e) {
U.call(this, e);
}
}, (o = function(e) {
this._c = [], this._a = void 0, this._s = 0, this._d = !1, this._v = void 0, this._h = 0, 
this._n = !1;
}).prototype = i(85)(I.prototype, {
then: function(e, t) {
var i = k(p(this, I));
return i.ok = "function" != typeof e || e, i.fail = "function" == typeof t && t, 
i.domain = A ? b.domain : void 0, this._c.push(i), this._a && this._a.push(i), this._s && D(this, !1), 
i.promise;
},
catch: function(e) {
return this.then(void 0, e);
}
}), s = function() {
var e = new o();
this.promise = e, this.resolve = l(F, e, 1), this.reject = l(U, e, 1);
}, N.f = k = function(e) {
return e === I || e === a ? new s(e) : n(e);
}), h(h.G + h.W + h.F * !M, {
Promise: I
}), i(27)(I, "Promise"), i(86)("Promise"), a = i(4).Promise, h(h.S + h.F * !M, "Promise", {
reject: function(e) {
var t = k(this);
return (0, t.reject)(e), t.promise;
}
}), h(h.S + h.F * (c || !M), "Promise", {
resolve: function(e) {
return y(c && this === a ? I : this, e);
}
}), h(h.S + h.F * !(M && i(87)(function(e) {
I.all(e).catch(_);
})), "Promise", {
all: function(e) {
var t = this, i = k(t), o = i.resolve, n = i.reject, s = v(function() {
var i = [], s = 0, a = 1;
g(e, !1, function(e) {
var c = s++, r = !1;
i.push(void 0), a++, t.resolve(e).then(function(e) {
r || (r = !0, i[c] = e, --a || o(i));
}, n);
}), --a || o(i);
});
return s.e && n(s.v), i.promise;
},
race: function(e) {
var t = this, i = k(t), o = i.reject, n = v(function() {
g(e, !1, function(e) {
t.resolve(e).then(i.resolve, o);
});
});
return n.e && o(n.v), i.promise;
}
});
}, function(e, t) {
e.exports = function(e, t, i, o) {
if (!(e instanceof t) || void 0 !== o && o in e) throw TypeError(i + ": incorrect invocation!");
return e;
};
}, function(e, t, i) {
var o = i(15), n = i(79), s = i(80), a = i(6), c = i(36), r = i(81), l = {}, d = {};
(t = e.exports = function(e, t, i, h, u) {
var w, m, g, p, f = u ? function() {
return e;
} : r(e), S = o(i, h, t ? 2 : 1), N = 0;
if ("function" != typeof f) throw TypeError(e + " is not iterable!");
if (s(f)) {
for (w = c(e.length); w > N; N++) if ((p = t ? S(a(m = e[N])[0], m[1]) : S(e[N])) === l || p === d) return p;
} else for (g = f.call(e); !(m = g.next()).done; ) if ((p = n(g, S, m.value, t)) === l || p === d) return p;
}).BREAK = l, t.RETURN = d;
}, function(e, t, i) {
var o = i(6);
e.exports = function(e, t, i, n) {
try {
return n ? t(o(i)[0], i[1]) : t(i);
} catch (t) {
var s = e.return;
throw void 0 !== s && o(s.call(e)), t;
}
};
}, function(e, t, i) {
var o = i(13), n = i(3)("iterator"), s = Array.prototype;
e.exports = function(e) {
return void 0 !== e && (o.Array === e || s[n] === e);
};
}, function(e, t, i) {
var o = i(42), n = i(3)("iterator"), s = i(13);
e.exports = i(4).getIteratorMethod = function(e) {
if (void 0 != e) return e[n] || e["@@iterator"] || s[o(e)];
};
}, function(e, t) {
e.exports = function(e, t, i) {
var o = void 0 === i;
switch (t.length) {
case 0:
return o ? e() : e.call(i);

case 1:
return o ? e(t[0]) : e.call(i, t[0]);

case 2:
return o ? e(t[0], t[1]) : e.call(i, t[0], t[1]);

case 3:
return o ? e(t[0], t[1], t[2]) : e.call(i, t[0], t[1], t[2]);

case 4:
return o ? e(t[0], t[1], t[2], t[3]) : e.call(i, t[0], t[1], t[2], t[3]);
}
return e.apply(i, t);
};
}, function(e, t, i) {
var o = i(0), n = i(44).set, s = o.MutationObserver || o.WebKitMutationObserver, a = o.process, c = o.Promise, r = "process" == i(18)(a);
e.exports = function() {
var e, t, i, l = function() {
var o, n;
for (r && (o = a.domain) && o.exit(); e; ) {
n = e.fn, e = e.next;
try {
n();
} catch (o) {
throw e ? i() : t = void 0, o;
}
}
t = void 0, o && o.enter();
};
if (r) i = function() {
a.nextTick(l);
}; else if (!s || o.navigator && o.navigator.standalone) if (c && c.resolve) {
var d = c.resolve(void 0);
i = function() {
d.then(l);
};
} else i = function() {
n.call(o, l);
}; else {
var h = !0, u = document.createTextNode("");
new s(l).observe(u, {
characterData: !0
}), i = function() {
u.data = h = !h;
};
}
return function(o) {
var n = {
fn: o,
next: void 0
};
t && (t.next = n), e || (e = n, i()), t = n;
};
};
}, function(e, t, i) {
var o = i(0).navigator;
e.exports = o && o.userAgent || "";
}, function(e, t, i) {
var o = i(8);
e.exports = function(e, t, i) {
for (var n in t) i && e[n] ? e[n] = t[n] : o(e, n, t[n]);
return e;
};
}, function(e, t, i) {
"use strict";
var o = i(0), n = i(4), s = i(11), a = i(7), c = i(3)("species");
e.exports = function(e) {
var t = "function" == typeof n[e] ? n[e] : o[e];
a && t && !t[c] && s.f(t, c, {
configurable: !0,
get: function() {
return this;
}
});
};
}, function(e, t, i) {
var o = i(3)("iterator"), n = !1;
try {
var s = [ 7 ][o]();
s.return = function() {
n = !0;
}, Array.from(s, function() {
throw 2;
});
} catch (e) {}
e.exports = function(e, t) {
if (!t && !n) return !1;
var i = !1;
try {
var s = [ 7 ], a = s[o]();
a.next = function() {
return {
done: i = !0
};
}, s[o] = function() {
return a;
}, e(s);
} catch (e) {}
return i;
};
}, function(e, t, i) {
"use strict";
var o = i(9), n = i(4), s = i(0), a = i(43), c = i(46);
o(o.P + o.R, "Promise", {
finally: function(e) {
var t = a(this, n.Promise || s.Promise), i = "function" == typeof e;
return this.then(i ? function(i) {
return c(t, e()).then(function() {
return i;
});
} : e, i ? function(i) {
return c(t, e()).then(function() {
throw i;
});
} : e);
}
});
}, function(e, t, i) {
"use strict";
var o = i(9), n = i(28), s = i(45);
o(o.S, "Promise", {
try: function(e) {
var t = n.f(this), i = s(e);
return (i.e ? t.reject : t.resolve)(i.v), t.promise;
}
});
}, function(e, t, i) {
e.exports = i(91);
}, function(e, t, i) {
var o = function() {
return this;
}() || Function("return this")(), n = o.regeneratorRuntime && Object.getOwnPropertyNames(o).indexOf("regeneratorRuntime") >= 0, s = n && o.regeneratorRuntime;
if (o.regeneratorRuntime = void 0, e.exports = i(92), n) o.regeneratorRuntime = s; else try {
delete o.regeneratorRuntime;
} catch (e) {
o.regeneratorRuntime = void 0;
}
}, function(e, t) {
!function(t) {
"use strict";
function i(e, t, i, o) {
var s = t && t.prototype instanceof n ? t : n, a = Object.create(s.prototype), c = new w(o || []);
return a._invoke = l(e, i, c), a;
}
function o(e, t, i) {
try {
return {
type: "normal",
arg: e.call(t, i)
};
} catch (e) {
return {
type: "throw",
arg: e
};
}
}
function n() {}
function s() {}
function a() {}
function c(e) {
[ "next", "throw", "return" ].forEach(function(t) {
e[t] = function(e) {
return this._invoke(t, e);
};
});
}
function r(e) {
function t(i, n, s, a) {
var c = o(e[i], e, n);
if ("throw" !== c.type) {
var r = c.arg, l = r.value;
return l && "object" == typeof l && S.call(l, "__await") ? Promise.resolve(l.__await).then(function(e) {
t("next", e, s, a);
}, function(e) {
t("throw", e, s, a);
}) : Promise.resolve(l).then(function(e) {
r.value = e, s(r);
}, a);
}
a(c.arg);
}
var i;
this._invoke = function(e, o) {
function n() {
return new Promise(function(i, n) {
t(e, o, i, n);
});
}
return i = i ? i.then(n, n) : n();
};
}
function l(e, t, i) {
var n = T;
return function(s, a) {
if (n === I) throw new Error("Generator is already running");
if (n === A) {
if ("throw" === s) throw a;
return g();
}
for (i.method = s, i.arg = a; ;) {
var c = i.delegate;
if (c) {
var r = d(c, i);
if (r) {
if (r === _) continue;
return r;
}
}
if ("next" === i.method) i.sent = i._sent = i.arg; else if ("throw" === i.method) {
if (n === T) throw n = A, i.arg;
i.dispatchException(i.arg);
} else "return" === i.method && i.abrupt("return", i.arg);
n = I;
var l = o(e, t, i);
if ("normal" === l.type) {
if (n = i.done ? A : P, l.arg === _) continue;
return {
value: l.arg,
done: i.done
};
}
"throw" === l.type && (n = A, i.method = "throw", i.arg = l.arg);
}
};
}
function d(e, t) {
var i = e.iterator[t.method];
if (i === p) {
if (t.delegate = null, "throw" === t.method) {
if (e.iterator.return && (t.method = "return", t.arg = p, d(e, t), "throw" === t.method)) return _;
t.method = "throw", t.arg = new TypeError("The iterator does not provide a 'throw' method");
}
return _;
}
var n = o(i, e.iterator, t.arg);
if ("throw" === n.type) return t.method = "throw", t.arg = n.arg, t.delegate = null, 
_;
var s = n.arg;
return s ? s.done ? (t[e.resultName] = s.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", 
t.arg = p), t.delegate = null, _) : s : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), 
t.delegate = null, _);
}
function h(e) {
var t = {
tryLoc: e[0]
};
1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), 
this.tryEntries.push(t);
}
function u(e) {
var t = e.completion || {};
t.type = "normal", delete t.arg, e.completion = t;
}
function w(e) {
this.tryEntries = [ {
tryLoc: "root"
} ], e.forEach(h, this), this.reset(!0);
}
function m(e) {
if (e) {
var t = e[v];
if (t) return t.call(e);
if ("function" == typeof e.next) return e;
if (!isNaN(e.length)) {
var i = -1, o = function t() {
for (;++i < e.length; ) if (S.call(e, i)) return t.value = e[i], t.done = !1, t;
return t.value = p, t.done = !0, t;
};
return o.next = o;
}
}
return {
next: g
};
}
function g() {
return {
value: p,
done: !0
};
}
var p, f = Object.prototype, S = f.hasOwnProperty, N = "function" == typeof Symbol ? Symbol : {}, v = N.iterator || "@@iterator", C = N.asyncIterator || "@@asyncIterator", y = N.toStringTag || "@@toStringTag", B = "object" == typeof e, b = t.regeneratorRuntime;
if (b) B && (e.exports = b); else {
(b = t.regeneratorRuntime = B ? e.exports : {}).wrap = i;
var T = "suspendedStart", P = "suspendedYield", I = "executing", A = "completed", _ = {}, k = {};
k[v] = function() {
return this;
};
var M = Object.getPrototypeOf, L = M && M(M(m([])));
L && L !== f && S.call(L, v) && (k = L);
var D = a.prototype = n.prototype = Object.create(k);
s.prototype = D.constructor = a, a.constructor = s, a[y] = s.displayName = "GeneratorFunction", 
b.isGeneratorFunction = function(e) {
var t = "function" == typeof e && e.constructor;
return !!t && (t === s || "GeneratorFunction" === (t.displayName || t.name));
}, b.mark = function(e) {
return Object.setPrototypeOf ? Object.setPrototypeOf(e, a) : (e.__proto__ = a, y in e || (e[y] = "GeneratorFunction")), 
e.prototype = Object.create(D), e;
}, b.awrap = function(e) {
return {
__await: e
};
}, c(r.prototype), r.prototype[C] = function() {
return this;
}, b.AsyncIterator = r, b.async = function(e, t, o, n) {
var s = new r(i(e, t, o, n));
return b.isGeneratorFunction(t) ? s : s.next().then(function(e) {
return e.done ? e.value : s.next();
});
}, c(D), D[y] = "Generator", D[v] = function() {
return this;
}, D.toString = function() {
return "[object Generator]";
}, b.keys = function(e) {
var t = [];
for (var i in e) t.push(i);
return t.reverse(), function i() {
for (;t.length; ) {
var o = t.pop();
if (o in e) return i.value = o, i.done = !1, i;
}
return i.done = !0, i;
};
}, b.values = m, w.prototype = {
constructor: w,
reset: function(e) {
if (this.prev = 0, this.next = 0, this.sent = this._sent = p, this.done = !1, this.delegate = null, 
this.method = "next", this.arg = p, this.tryEntries.forEach(u), !e) for (var t in this) "t" === t.charAt(0) && S.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = p);
},
stop: function() {
this.done = !0;
var e = this.tryEntries[0].completion;
if ("throw" === e.type) throw e.arg;
return this.rval;
},
dispatchException: function(e) {
function t(t, o) {
return s.type = "throw", s.arg = e, i.next = t, o && (i.method = "next", i.arg = p), 
!!o;
}
if (this.done) throw e;
for (var i = this, o = this.tryEntries.length - 1; o >= 0; --o) {
var n = this.tryEntries[o], s = n.completion;
if ("root" === n.tryLoc) return t("end");
if (n.tryLoc <= this.prev) {
var a = S.call(n, "catchLoc"), c = S.call(n, "finallyLoc");
if (a && c) {
if (this.prev < n.catchLoc) return t(n.catchLoc, !0);
if (this.prev < n.finallyLoc) return t(n.finallyLoc);
} else if (a) {
if (this.prev < n.catchLoc) return t(n.catchLoc, !0);
} else {
if (!c) throw new Error("try statement without catch or finally");
if (this.prev < n.finallyLoc) return t(n.finallyLoc);
}
}
}
},
abrupt: function(e, t) {
for (var i = this.tryEntries.length - 1; i >= 0; --i) {
var o = this.tryEntries[i];
if (o.tryLoc <= this.prev && S.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
var n = o;
break;
}
}
n && ("break" === e || "continue" === e) && n.tryLoc <= t && t <= n.finallyLoc && (n = null);
var s = n ? n.completion : {};
return s.type = e, s.arg = t, n ? (this.method = "next", this.next = n.finallyLoc, 
_) : this.complete(s);
},
complete: function(e, t) {
if ("throw" === e.type) throw e.arg;
return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, 
this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), 
_;
},
finish: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.finallyLoc === e) return this.complete(i.completion, i.afterLoc), u(i), _;
}
},
catch: function(e) {
for (var t = this.tryEntries.length - 1; t >= 0; --t) {
var i = this.tryEntries[t];
if (i.tryLoc === e) {
var o = i.completion;
if ("throw" === o.type) {
var n = o.arg;
u(i);
}
return n;
}
}
throw new Error("illegal catch attempt");
},
delegateYield: function(e, t, i) {
return this.delegate = {
iterator: m(e),
resultName: t,
nextLoc: i
}, "next" === this.method && (this.arg = p), _;
}
};
}
}(function() {
return this;
}() || Function("return this")());
}, function(e, t, i) {
"use strict";
t.__esModule = !0;
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(i(50));
t.default = function(e) {
return function() {
var t = e.apply(this, arguments);
return new o.default(function(e, i) {
return function n(s, a) {
try {
var c = t[s](a), r = c.value;
} catch (e) {
return void i(e);
}
if (!c.done) return o.default.resolve(r).then(function(e) {
n("next", e);
}, function(e) {
n("throw", e);
});
e(r);
}("next");
});
};
};
}, function(e, t, i) {
"use strict";
(function(t) {
function o(e) {
return e && e.__esModule ? e : {
default: e
};
}
var n = o(i(5)), s = o(i(1)), a = o(i(2)), c = i(33), r = i(30), l = c.Channel, d = c.Support, h = c.Logger, u = c.Http, w = function() {
function e() {
(0, s.default)(this, e), this.version = c.sdkVersion, h.log("Version: " + this.version), 
this.Logger = h, this.Support = d, this.Error = Error, this.syncNativeEnv({
success: null,
fail: null
});
}
return (0, a.default)(e, [ {
key: "syncNativeEnv",
value: function(e) {
var t = e.success, i = void 0 === t ? null : t, o = e.fail, s = void 0 === o ? null : o;
h.log("SyncNativeEnv"), i && "function" == typeof i || (i = function() {}), s && "function" == typeof s || (s = function() {}), 
this.appVersion = "", this.appVersionInt = 0, this.appBuildVersion = "", this.nativeVersion = "", 
this.appName = "", this.bizName = "", this.launchOptions = {
extension: {},
from: "",
gameid: ""
}, this.platform = "", this.deviceId = "", this.deviceMode = "", this.networkType = "", 
this.osVersion = "", this.locale = "zh_CN";
var a = this;
l.handle({
command: "SyncNativeEnv",
params: {
version: this.version
},
response: function(e) {
a.appVersion = safeValue(e.appVersion), a.appVersionInt = c.convertVersion(a.appVersion), 
a.appBuildVersion = safeValue(e.appBuildVersion), a.nativeVersion = safeValue(e.nativeVersion), 
a.bizName = safeValue(e.bizName), a.appName = safeValue(e.appName), a.launchOptions = JSON.safeParse(e.launchOptions), 
a.launchOptions ? a.launchOptions.extension = JSON.safeParse(a.launchOptions.extension) : a.launchOptions = {
extension: {},
from: "",
gameid: ""
}, a.launchOptions && (a.gameId = safeValue(a.launchOptions.gameid)), a.platform = safeValue(e.platform), 
a.deviceId = safeValue(e.deviceId), a.deviceMode = safeValue(e.deviceMode), a.networkType = safeValue(e.networkType), 
a.osVersion = safeValue(e.osVersion), a.locale = safeValue(e.locale, "zh_CN"), d.setup({
appName: a.appName,
bizName: a.bizName,
appVersion: a.appVersion,
appBuildVersion: a.appBuildVersion,
nativeVersion: a.nativeVersion
}), u.DefaultHeader.update({
"device-id": a.deviceId,
os: a.platform.toLowerCase(),
"device-model": a.deviceMode,
"network-type": a.networkType,
"app-version": a.appVersion,
"sdk-version": a.sdkVersion,
"os-version": a.osVersion,
package: a.appName,
"bundle-id": a.appName,
locale: a.locale
}), h.log("Native Info: " + (0, n.default)(e)), c.compareMainVersion(a.nativeVersion, a.version) < 0 && h.warn("Version is different, Maybe has stranger behaving"), 
i(e);
},
fail: function(e) {
h.error("Current Platform isn't Support SyncNativeEnv"), s();
}
});
}
}, {
key: "init",
value: function(e) {
var t = e.release, i = void 0 === t || t, o = e.appId, n = void 0 === o ? "" : o, s = e.appid, a = void 0 === s ? "" : s, c = e.gameid, l = void 0 === c ? "" : c;
if (h.log("Init: release = " + i + " appId = " + n + " appid = " + a + " gameid = " + l), 
this.isInit) return h.warn("already Init"), !1;
this.isRelease = i, null == this.gameId && "" !== l && (this.gameId = l), this.appId = n, 
"" === this.appId && "" !== a && (this.appId = a), r.isRelease = this.isRelease, 
r.appId = this.appId, r.gameId = this.gameId, this.isInit = !0;
}
}, {
key: "readyGo",
value: function() {
l.handle({
command: "Ready"
});
}
}, {
key: "willClose",
value: function() {
l.handle({
command: "WillClose"
});
}
}, {
key: "didError",
value: function(e) {
l.handle({
command: "DidError",
params: e
});
}
}, {
key: "isSupportGlobalClose",
value: function() {
return this.isSupport(d.features.GlobalClose);
}
}, {
key: "isKwaiGame",
value: function() {
return l.isKwaiGame();
}
}, {
key: "isSupport",
value: function(e) {
return d.isSupport(e);
}
} ], [ {
key: "getInstance",
value: function() {
return this.instance || (this.instance = new e(), this.registerToWindow()), this.instance;
}
}, {
key: "registerToWindow",
value: function() {
var i = "undefined" == typeof window ? t : window;
void 0 === i.kwaigame && Object.defineProperty(i, "kwaigame", {
get: function() {
return e.getInstance();
}
});
}
} ]), e;
}();
e.exports = w.getInstance();
}).call(t, i(14));
}, function(e, t, i) {
"use strict";
if ("undefined" == typeof kwaigame) {
var o = i(94), n = i(96);
n.include("login"), n.include("tools"), n.include("ads"), n.include("pay"), n.include("share"), 
n.include("statistics"), n.include("recorder"), o.isKwaiGame() ? kwaigame.Logger.log("Setup Kwai Game Runtime") : console.log("Is Not Run In Kwai Game"), 
e.exports = o;
} else kwaigame.Logger.log("KwaiGame Has Pre Loaded: " + kwaigame.version), e.exports = kwaigame;
}, function(e, t, i) {
"use strict";
function o(e) {
return e && e.__esModule ? e : {
default: e
};
}
var n = o(i(1)), s = o(i(2)), a = function() {
function e() {
(0, n.default)(this, e);
}
return (0, s.default)(e, null, [ {
key: "include",
value: function(e) {
i(97)("./" + e + "/" + e + "-mixin");
}
} ]), e;
}();
e.exports = a;
}, function(e, t, i) {
function o(e) {
return i(n(e));
}
function n(e) {
var t = s[e];
if (!(t + 1)) throw new Error("Cannot find module '" + e + "'.");
return t;
}
var s = {
"./ads/ads-mixin": 98,
"./login/login-mixin": 106,
"./pay/pay-mixin": 108,
"./recorder/recorder-mixin": 110,
"./share/share-mixin": 112,
"./statistics/statistics-mixin": 114,
"./tools/tools-mixin": 115
};
o.keys = function() {
return Object.keys(s);
}, o.resolve = n, e.exports = o, o.id = 97;
}, function(e, t, i) {
"use strict";
var o = i(10), n = i(105), s = {
createRewardedVideoAd: function(e) {
var t = e.adUnitId, i = void 0 === t ? "" : t, o = e.extra, s = void 0 === o ? "" : o;
return n.videoInstance(i, s);
}
};
o.mixin(s);
}, function(e, t, i) {
e.exports = {
default: i(100),
__esModule: !0
};
}, function(e, t, i) {
i(101), e.exports = i(4).Object.assign;
}, function(e, t, i) {
var o = i(9);
o(o.S + o.F, "Object", {
assign: i(102)
});
}, function(e, t, i) {
"use strict";
var o = i(7), n = i(47), s = i(103), a = i(104), c = i(49), r = i(48), l = Object.assign;
e.exports = !l || i(29)(function() {
var e = {}, t = {}, i = Symbol(), o = "abcdefghijklmnopqrst";
return e[i] = 7, o.split("").forEach(function(e) {
t[e] = e;
}), 7 != l({}, e)[i] || Object.keys(l({}, t)).join("") != o;
}) ? function(e, t) {
for (var i = c(e), l = arguments.length, d = 1, h = s.f, u = a.f; l > d; ) for (var w, m = r(arguments[d++]), g = h ? n(m).concat(h(m)) : n(m), p = g.length, f = 0; p > f; ) w = g[f++], 
o && !u.call(m, w) || (i[w] = m[w]);
return i;
} : l;
}, function(e, t) {
t.f = Object.getOwnPropertySymbols;
}, function(e, t) {
t.f = {}.propertyIsEnumerable;
}, function(e, t, i) {
"use strict";
(function(t) {
function o(e) {
return e && e.__esModule ? e : {
default: e
};
}
var n = o(i(5)), s = o(i(1)), a = o(i(2)), c = i(10), r = c.Logger, l = c.Channel, d = c.Support, h = function() {
function e() {
(0, s.default)(this, e), this.adUnitId = "", this.extra = "", this.listeners = {
"RewardVideoAD.onReward": null,
"RewardVideoAD.onClose": null,
"RewardVideoAD.onLoad": null,
"RewardVideoAD.onShow": null,
"RewardVideoAD.onError": null,
"RewardVideoAD.onComplete": null
};
}
return (0, a.default)(e, [ {
key: "show",
value: function(e) {
var t = e.success, i = void 0 === t ? null : t, o = e.fail, n = void 0 === o ? null : o;
r.log("[RewardVideo] show"), i && "function" == typeof i || (i = function() {}), 
n && "function" == typeof n || (n = function() {}), l.handle({
command: "RewardVideoAD",
params: {
positionId: this.adUnitId,
extra: this.extra
},
response: function(e) {
e && 1 === e.resultCode ? i() : n();
}
});
}
}, {
key: "onReward",
value: function(e) {
return r.log("[RewardVideo] Register onReward CallBack"), !(!e || "function" != typeof e || (this.listeners["RewardVideoAD.onReward"] = e, 
0));
}
}, {
key: "onClose",
value: function(e) {
return r.log("[RewardVideo] Register onClose CallBack"), !(!e || "function" != typeof e || (this.listeners["RewardVideoAD.onClose"] = e, 
0));
}
}, {
key: "onLoad",
value: function(e) {
return r.log("[RewardVideo] Register onLoad CallBack"), !(!e || "function" != typeof e || (this.listeners["RewardVideoAD.onLoad"] = e, 
0));
}
}, {
key: "onShow",
value: function(e) {
return r.log("[RewardVideo] Register onShow CallBack"), !(!e || "function" != typeof e || (this.listeners["RewardVideoAD.onShow"] = e, 
0));
}
}, {
key: "onError",
value: function(e) {
return r.log("[RewardVideo] Register onError CallBack"), !(!e || "function" != typeof e || (this.listeners["RewardVideoAD.onError"] = e, 
0));
}
}, {
key: "onComplete",
value: function(e) {
return r.log("[RewardVideo] Register onComplete CallBack"), !(!e || "function" != typeof e || (this.listeners["RewardVideoAD.onComplete"] = e, 
0));
}
} ]), e;
}(), u = function() {
function e() {
(0, s.default)(this, e);
}
return (0, a.default)(e, null, [ {
key: "videoInstance",
value: function(e, t) {
return r.log("[KwaiRewardVideo]videoInstance adUnitId = " + e + " extra = " + t), 
this.isSupportRewardVideo() ? (this.video || (this.registerListener(), this.video = new h()), 
this.video.adUnitId = "string" == typeof e ? e : "", this.video.extra = "string" == typeof t ? t : "", 
this.video) : (r.log("[KwaiRewardVideo] Current App Version Doesn't Support Reward Video."), 
null);
}
}, {
key: "registerListener",
value: function() {
var e = this, i = "undefined" == typeof window ? t : window;
void 0 === i.RewardVideoAD && (i.RewardVideoAD = {}, i.RewardVideoAD.onClose = function(t, i) {
r.log("[KwaiRewardVideo] RewardVideoAD.onClose cmd = " + (0, n.default)(t)), e.video.listeners["RewardVideoAD.onClose"] && e.video.listeners["RewardVideoAD.onClose"](t), 
i && "function" == typeof i && i();
}, i.RewardVideoAD.onReward = function(t, i) {
r.log("[KwaiRewardVideo] RewardVideoAD.onReward cmd = " + (0, n.default)(t)), e.video.listeners["RewardVideoAD.onReward"] && e.video.listeners["RewardVideoAD.onReward"](t), 
i && "function" == typeof i && i();
});
}
}, {
key: "isSupportRewardVideo",
value: function() {
return d.isSupport(d.features.RewardVideo);
}
} ]), e;
}();
e.exports = u;
}).call(t, i(14));
}, function(e, t, i) {
"use strict";
var o = i(107), n = i(10), s = n.Config, a = n.Error, c = n.KwaiGame, r = {
isDoingLogin: !1,
isLogined: !1,
gameUserId: null,
gameToken: null,
login: function(e) {
var t = e.timeout, i = void 0 === t ? s.HttpTimeOut : t, n = e.success, r = void 0 === n ? null : n, l = e.fail, d = void 0 === l ? null : l;
return c.isInit ? this.isLogined ? void d(a.ERR(a.code.HAS_LOGINED)) : this.isDoingLogin ? void d(a.ERR(a.code.DOING_LOGIN)) : (this.isDoingLogin = !0, 
void o.handleLogin({
timeout: i,
appId: s.appId,
success: function(e) {
this.isDoingLogin = !1, this.isLogined = !0, this.gameUserId = e.game_id, this.gameToken = e.game_token, 
r && r({
game_id: this.gameUserId,
gameUserId: this.gameUserId,
game_token: this.gameToken,
gameToken: this.gameToken
});
},
fail: function(e) {
this.isDoingLogin = !1, d && d(e);
}
})) : void d(a.ERR(a.code.UN_INIT));
}
};
n.mixin(r);
}, function(e, t, i) {
"use strict";
function o(e) {
return e && e.__esModule ? e : {
default: e
};
}
var n = o(i(50)), s = o(i(90)), a = o(i(93)), c = o(i(1)), r = o(i(2)), l = i(10), d = l.Logger, h = l.Http, u = l.Error, w = l.Channel, m = l.Config, g = function() {
function e() {
(0, c.default)(this, e);
}
return (0, r.default)(e, null, [ {
key: "handleLogin",
value: function() {
var e = (0, a.default)(s.default.mark(function e(t) {
var i, o, n, a, c, r, l, w = t.timeout, g = void 0 === w ? m.HttpTimeOut : w, p = t.appId, f = void 0 === p ? "" : p, S = t.success, N = void 0 === S ? null : S, v = t.fail, C = void 0 === v ? null : v;
return s.default.wrap(function(e) {
for (;;) switch (e.prev = e.next) {
case 0:
return N && "function" == typeof N || (N = function() {}), C && "function" == typeof C || (C = function() {}), 
i = {}, e.next = 5, this.getToken();

case 5:
return (o = e.sent) && o.service_token && (i.kuaishou_api_st = o.service_token), 
e.next = 9, this.getAppToken();

case 9:
if ((n = e.sent) && n.app_token && (i.ks_token = n.app_token), i.ks_token || i.kuaishou_api_st) {
e.next = 15;
break;
}
return d.log("[Error] Unabled To Get Token"), C(u.ERR(u.code.UNGET_TOKEN)), e.abrupt("return");

case 15:
a = (a = m.PassportURL.buildURL("login")) + "?platform=" + m.ChannelName + "&app_id=" + f, 
c = {
"Content-Type": "application/json"
}, r = function(e) {
e && 1 === e.result ? N(e) : C(u.ERR(u.code.LOGIN_FAILED));
}, l = function() {
C(u.ERR(u.code.REQUEST_TIMEOUT));
}, h.request(a, h.HttpType.POST, i, g, c, r, l);

case 21:
case "end":
return e.stop();
}
}, e, this);
}));
return function(t) {
return e.apply(this, arguments);
};
}()
}, {
key: "getUserInfo",
value: function(e) {
var t = e.appId, i = void 0 === t ? "" : t, o = e.gameId, n = void 0 === o ? "" : o, s = e.gameToken, a = void 0 === s ? "" : s, c = e.success, r = void 0 === c ? null : c, l = e.fail, w = void 0 === l ? null : l, g = e.complete, p = void 0 === g ? null : g;
d.log("getUserInfo"), r && "function" == typeof r || (r = function() {}), w && "function" == typeof w || (w = function() {}), 
p && "function" == typeof p || (p = function() {});
var f = m.PassportURL.buildURL("userInfo");
f = f + "?app_id=" + i + "&game_id=" + n + "&game_token=" + a;
h.request(f, h.HttpType.GET, null, m.HttpTimeOut, null, function(e) {
if (e && 1 === e.result) {
var t = {};
t.userName = e.user_name, t.userHead = e.user_head, t.gender = e.user_gender, t.userCity = e.user_city, 
t.age = e.age, r(t);
} else w(u.ERR(u.code.GET_USERINFO_FAIL));
p();
}, function() {
w(u.ERR(u.code.REQUEST_TIMEOUT)), p();
});
}
}, {
key: "getToken",
value: function() {
return new n.default(function(e) {
w.handle({
command: "GetToken",
params: {
sid: m.SID
},
response: function(t) {
e(t);
}
});
});
}
}, {
key: "getAppToken",
value: function() {
return new n.default(function(e) {
w.handle({
command: "GetAppToken",
params: {
sid: m.SID
},
response: function(t) {
e(t);
}
});
});
}
} ]), e;
}();
e.exports = g;
}, function(e, t, i) {
"use strict";
var o = i(109), n = i(10), s = n.Error, a = n.KwaiGame, c = {
isPaying: !1,
pay: function(e) {
var t = e.roleId, i = void 0 === t ? "" : t, n = e.roleName, c = void 0 === n ? "" : n, r = e.roleLevel, l = void 0 === r ? "" : r, d = e.serverId, h = void 0 === d ? "" : d, u = e.serverName, w = void 0 === u ? "" : u, m = e.productId, g = void 0 === m ? "" : m, p = e.productName, f = void 0 === p ? "" : p, S = e.productDesc, N = void 0 === S ? "" : S, v = e.money, C = void 0 === v ? "" : v, y = e.currencyType, B = void 0 === y ? "" : y, b = e.notifyUrl, T = void 0 === b ? "" : b, P = e.userIp, I = void 0 === P ? "" : P, A = e.extension, _ = void 0 === A ? "" : A, k = e.sign, M = void 0 === k ? "" : k, L = e.thirdPartyTradeNo, D = void 0 === L ? "" : L, R = e.success, G = void 0 === R ? null : R, O = e.fail, U = void 0 === O ? null : O, F = e.complete, x = void 0 === F ? null : F;
if (a.isLogined) if (this.isPaying) U(s.ERR(s.code.DOING_PAY)); else {
this.isPaying = !0, G && "function" == typeof G || (G = function() {}), U && "function" == typeof U || (U = function() {}), 
x && "function" == typeof x || (x = function() {});
var H = this;
o.perPay({
appId: Config.appId,
gameId: a.gameUserId,
gameToken: a.gameToken,
roleId: i,
roleName: c,
roleLevel: l,
serverId: h,
serverName: w,
productId: g,
productName: f,
productDesc: N,
money: C,
currencyType: B,
notifyUrl: T,
userIp: I,
extension: _,
sign: M,
thirdPartyTradeNo: D,
success: function(e) {
o.pay({
data: e,
complete: function(e) {
H.isPaying = !1, G(e), x();
}
});
},
fail: function(e) {
H.isPaying = !1, U(e), x();
}
});
} else U(s.ERR(s.code.UN_LOGIN));
}
};
n.mixin(c);
}, function(e, t, i) {
"use strict";
function o(e) {
return e && e.__esModule ? e : {
default: e
};
}
var n = o(i(5)), s = o(i(1)), a = o(i(2)), c = i(10), r = c.Config, l = c.Logger, d = c.Channel, h = c.Error, u = c.Http;
!function() {
(0, a.default)(function e() {
(0, s.default)(this, e);
}, null, [ {
key: "prePay",
value: function(e) {
var t = e.appId, i = void 0 === t ? "" : t, o = e.gameId, s = void 0 === o ? "" : o, a = e.gameToken, c = void 0 === a ? "" : a, d = e.roleId, w = void 0 === d ? "" : d, m = e.roleName, g = void 0 === m ? "" : m, p = e.roleLevel, f = void 0 === p ? "" : p, S = e.serverId, N = void 0 === S ? "" : S, v = e.serverName, C = void 0 === v ? "" : v, y = e.productId, B = void 0 === y ? "" : y, b = e.productName, T = void 0 === b ? "" : b, P = e.productDesc, I = void 0 === P ? "" : P, A = e.money, _ = void 0 === A ? "" : A, k = e.currencyType, M = void 0 === k ? "" : k, L = e.notifyUrl, D = void 0 === L ? "" : L, R = e.userIp, G = void 0 === R ? "" : R, O = e.extension, U = void 0 === O ? "" : O, F = e.sign, x = void 0 === F ? "" : F, H = e.thirdPartyTradeNo, E = void 0 === H ? "" : H, V = e.success, J = void 0 === V ? null : V, K = e.fail, W = void 0 === K ? null : K;
J && "function" == typeof J || (J = function() {}), W && "function" == typeof W || (W = function() {});
var j = {};
j.app_id = i, j.game_id = s, j.game_token = c, j.channel_id = r.ChannelName, j.role_id = w, 
j.role_name = g, j.role_level = f, j.server_id = N, j.server_name = C, j.product_id = B, 
j.product_name = T, j.product_desc = I, j.money = _, j.currency_type = M, j.notify_url = D, 
j.user_ip = G, j.extension = U, j.third_party_trade_no = E, j.sign = encodeURIComponent(x);
var z = r.PayURL.buildURL("order"), q = "";
for (var X in j) j.hasOwnProperty(X) && (q = q + X + "=" + j[X] + "&");
q = q.slice(0, q.length - 1);
u.request(z, u.HttpType.POST, q, r.HttpTimeOut, {
"Content-Type": "application/x-www-form-urlencoded"
}, function(e) {
l.log("[Pay] callback:" + (0, n.default)(e)), e && 1 === e.code ? J(e) : W(h.ERR(h.code.PAY_ORDER_FAIL));
}, function() {
W(h.ERR(h.code.REQUEST_TIMEOUT));
});
}
}, {
key: "pay",
value: function(e) {
var t = e.data, i = e.complete, o = void 0 === i ? null : i;
o && "function" == typeof o || (o = function() {}), d.handle({
command: "GamePay.pay",
params: {
data: t
},
response: function(e) {
o(e);
}
});
}
} ]);
}();
}, function(e, t, i) {
"use strict";
var o = i(111), n = {
createMediaRecorder: function() {
return o.instance();
}
};
i(10).mixin(n);
}, function(e, t, i) {
"use strict";
(function(t) {
function o(e) {
return e && e.__esModule ? e : {
default: e
};
}
var n = o(i(5)), s = o(i(1)), a = o(i(2)), c = i(10), r = c.Logger, l = c.Support, d = {
Init: 0,
Destroy: 1,
Start: 2,
Pause: 3,
Stop: 4
}, h = function() {
function e() {
(0, s.default)(this, e), this._state = d.Destroy, this.videos = [], this.listeners = {
"MediaRecoder.onError": null
};
}
return (0, a.default)(e, [ {
key: "convertState",
value: function() {
var e = "";
switch (this._state) {
case d.Init:
e = "Init";
break;

case d.Destroy:
e = "Destroy";
break;

case d.Start:
e = "Start";
break;

case d.Pause:
e = "Pause";
break;

case d.Stop:
e = "Stop";
}
return e;
}
}, {
key: "init",
value: function(e) {
var t = e.callback, i = void 0 === t ? null : t;
if (r.log("[MediaRecorder][init]"), i && "function" == typeof i || (i = function() {}), 
this.state !== d.Destroy) return r.log("[MediaRecorder][init] already init."), void i(!1);
kwaigame.handle({
command: "KwaiGame.createMediaRecorder",
params: {},
response: function(e) {
i && "function" == typeof i || (i = function() {}), e && 1 === e.errorCode ? (r.log("[MediaRecorder][init] init success."), 
i(!0)) : (r.log("[MediaRecorder][init] init fail."), i(!1));
}
}), this.state = d.Init;
}
}, {
key: "start",
value: function(e) {
var t = e.callback, i = void 0 === t ? null : t;
if (r.log("[MediaRecorder][start]"), i && "function" == typeof i || (i = function() {}), 
this.state !== d.Init && this.state !== d.Stop) return r.log("[MediaRecoder] Wrong State: " + this.convertState()), 
void i(!1);
kwaigame.handle({
command: "MediaRecorder.start",
params: {},
response: function(e) {
i && "function" == typeof i && i(e);
}
}), this.state = d.Start;
}
}, {
key: "resume",
value: function(e) {
var t = e.callback, i = void 0 === t ? null : t;
if (r.log("[MediaRecorder][resume]"), i && "function" == typeof i || (i = function() {}), 
this.state !== d.Pause) return r.log("[MediaRecoder] Wrong State: " + this.convertState()), 
void i(!1);
kwaigame.handle({
command: "MediaRecorder.resume",
params: {},
response: function(e) {
i && "function" == typeof i && i(e);
}
}), this.state = d.Start;
}
}, {
key: "pause",
value: function(e) {
var t = e.callback, i = void 0 === t ? null : t;
if (r.log("[MediaRecorder][pause]"), i && "function" == typeof i || (i = function() {}), 
this.state !== d.Start) return r.log("[MediaRecoder] Wrong State: " + this.convertState()), 
void i(!1);
kwaigame.handle({
command: "MediaRecorder.pause",
params: {},
response: function(e) {
i && "function" == typeof i && i(e);
}
}), this.state = d.Pause;
}
}, {
key: "stop",
value: function(e) {
var t = e.callback, i = void 0 === t ? null : t;
if (r.log("[MediaRecorder][stop]"), i && "function" == typeof i || (i = function() {}), 
this.state !== d.Start && this.state !== d.Pause) return r.log("[MediaRecoder] Wrong State: " + this.convertState()), 
void i(!1);
var o = this;
kwaigame.handle({
command: "MediaRecorder.stop",
params: {},
response: function(e) {
r.log("[MediaRecorder][stop] result:" + (0, n.default)(e)), e && 1 === e.errorCode && e.videoId && (o.videos.push(e.videoId), 
r.log("[MediaRecorder][stop] videos:" + (0, n.default)(o.videos))), i && "function" == typeof i && i(e);
}
}), this.state = d.Stop;
}
}, {
key: "onError",
value: function(e) {
return r.log("[MediaRecorder] Register onError CallBack"), !(!e || "function" != typeof e || (this.listeners["MediaRecoder.onError"] = e, 
0));
}
}, {
key: "destory",
value: function(e) {
var t = e.callback, i = void 0 === t ? null : t;
if (r.log("[MediaRecorder][destory]"), i && "function" == typeof i || (i = function() {}), 
this.state === d.Destroy) return r.log("[MediaRecoder] not init or already destroy, no need to destroy."), 
void i(!1);
kwaigame.handle({
command: "MediaRecorder.destroy",
params: {},
response: function(e) {
i && "function" == typeof i && i(e);
}
}), this.state = d.Destroy, this.videos = [];
}
}, {
key: "publishVideo",
value: function(e) {
var t = e.mouldId, i = void 0 === t ? "" : t, o = e.callback, n = void 0 === o ? null : o;
if (n && "function" == typeof n || (n = function() {}), this.videos.length <= 0) return r.log("[MediaRecoder] no video."), 
void n(!1);
kwaigame.handle({
command: "KwaiGame.publishVideo",
params: {
mouldId: i,
request: this.videos
},
response: function(e) {
n && "function" == typeof n && n(e);
}
});
}
}, {
key: "state",
set: function(e) {
e !== this._state && (this._state = e, r.log("[MediaRecoder] State changed: " + this.convertState()));
},
get: function() {
return this._state;
}
} ]), e;
}(), u = function() {
function e() {
(0, s.default)(this, e);
}
return (0, a.default)(e, null, [ {
key: "instance",
value: function() {
return r.log("[KwaiMediaRecoder] instance"), this.isSupportMediaRecoder() ? (this.recoder || (this.registerListener(), 
this.recoder = new h()), this.recoder) : (r.log("[KwaiMediaRecoder] Current App Version Doesn't Support Media Recoder."), 
null);
}
}, {
key: "registerListener",
value: function() {
var e = this, i = "undefined" == typeof window ? t : window;
void 0 === i.MediaRecorder && (i.MediaRecorder = {}, i.MediaRecorder.onError = function(t) {
r.log("[KwaiMediaRecoder] MediaRecoder.onError result:" + (0, n.default)(t)), e.video.listeners["MediaRecoder.onError"] && e.video.listeners["MediaRecoder.onError"](t);
});
}
}, {
key: "isSupportMediaRecoder",
value: function() {
return l.isSupport(l.features.Recorder);
}
} ]), e;
}();
e.exports = u;
}).call(t, i(14));
}, function(e, t, i) {
"use strict";
var o = i(113), n = i(10), s = n.Config, a = {
shareToMsg: function(e) {
var t = e.shareId, i = void 0 === t ? "" : t, n = e.targetType, a = void 0 === n ? s.ShareTargetType.FriendList : n, c = e.targetId, r = void 0 === c ? s.ShareTargetID.None : c, l = e.title, d = void 0 === l ? "" : l, h = e.desc, u = void 0 === h ? "" : h, w = e.iconUrl, m = void 0 === w ? "" : w, g = e.imageUrl, p = void 0 === g ? "" : g, f = e.sourceName, S = void 0 === f ? "" : f, N = e.response, v = void 0 === N ? null : N, C = e.extension, y = void 0 === C ? {} : C;
o.shareToMsg({
gameId: s.gameId,
shareId: i,
targetType: a,
targetId: r,
title: d,
desc: u,
iconUrl: m,
imageUrl: p,
sourceName: S,
response: v,
extension: y
});
}
};
n.mixin(a);
}, function(e, t, i) {
"use strict";
function o(e) {
return e && e.__esModule ? e : {
default: e
};
}
var n = o(i(5)), s = o(i(1)), a = o(i(2)), c = i(10), r = c.Config, l = c.Channel, d = function() {
function e() {
(0, s.default)(this, e);
}
return (0, a.default)(e, null, [ {
key: "shareToMsg",
value: function(e) {
var t = e.gameId, i = void 0 === t ? "" : t, o = e.shareId, s = void 0 === o ? "" : o, a = e.targetType, c = void 0 === a ? r.ShareTargetType.FriendList : a, d = e.targetId, h = void 0 === d ? r.ShareTargetID.None : d, u = e.title, w = void 0 === u ? "" : u, m = e.desc, g = void 0 === m ? "" : m, p = e.iconUrl, f = void 0 === p ? "" : p, S = e.imageUrl, N = void 0 === S ? "" : S, v = e.sourceName, C = void 0 === v ? "" : v, y = e.response, B = void 0 === y ? null : y, b = e.extension, T = void 0 === b ? {} : b;
B && "function" == typeof B || (B = function() {});
var P = {};
P.shareId = s + "", P.targetType = parseInt(c), P.targetId = h + "", P.actionUri = "kwai://sogame/launch?gameid=" + i + "&from=im_share", 
P.title = w, P.desc = g, P.iconUrl = f, P.imageUrl = N, P.sourceName = C, T && (P.actionUri = P.actionUri + "&extension=" + (0, 
n.default)(T)), l.handle({
command: "ShareToMsg",
params: P,
response: function(e) {
B(e);
}
});
}
} ]), e;
}();
e.exports = d;
}, function(e, t, i) {
"use strict";
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(i(5)), n = i(10), s = n.Channel, a = n.Logger, c = {
actionLog: function(e) {
var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
e || a.log("Key can't be null"), a.log("ActionLog key:" + e + " params:" + (t ? (0, 
o.default)(t) : "")), s.handle({
command: "ActionLog",
params: {
key: e,
params: t
}
});
}
};
n.mixin(c);
}, function(e, t, i) {
"use strict";
var o = i(10), n = o.Channel, s = o.Error, a = {
getLocation: function(e) {
var t = e.success, i = void 0 === t ? null : t, o = e.fail, a = void 0 === o ? null : o;
i && "function" == typeof i || (i = function() {}), a && "function" == typeof a || (a = function() {}), 
n.handle({
command: "GetGeoLocation",
params: {},
response: function(e) {
e.latitude || e.longitude || e.province || e.city ? i(e) : a(s.ERR(s.code.UNGET_LOCATION));
}
});
}
};
o.mixin(a);
} ]);
}, {} ],
FaceTipsJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "cdb3fPmXf5GjppBTeO56XMj", "FaceTipsJS");
cc.Class({
extends: cc.Component,
properties: {},
start: function() {},
close: function() {
window.Parent.ButtonSounds();
this.node.active = !1;
this.scheduleOnce(function() {
this.node.destroy();
cc.loader.releaseRes("PreFab/FaceTipsNode", cc.Prefab);
}, 2);
}
});
cc._RF.pop();
}, {} ],
FaillNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "736e44yZyJPPJ1Am2t9pRPs", "FaillNodeJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
DimondNum: cc.Label,
PushList: cc.Node,
IconSPList: [ cc.SpriteFrame ],
PlaySPList: [ cc.SpriteFrame ]
},
onLoad: function() {
window.Faill = this;
window.FaillNode = this.node;
this.node.setContentSize(window.screenWidth, window.screenHight);
this.Gameover = this.node.getChildByName("Gameover");
this.morgamePosition = this.Gameover.getChildByName("morgamePosition");
this.morgamePosition2 = this.Gameover.getChildByName("morgamePosition2");
this.shareButton = this.Gameover.getChildByName("shareButton");
this.videoButton = this.Gameover.getChildByName("double");
this.recordPositon = this.Gameover.getChildByName("recordPositon");
this.hasgetButton = this.Gameover.getChildByName("hasget");
this.Title0 = this.Gameover.getChildByName("Title0");
this.Title1 = this.Gameover.getChildByName("Title1");
this.musicSelect0 = this.Gameover.getChildByName("musicSelect0");
this.musicSelect1 = this.Gameover.getChildByName("musicSelect1");
this.Coinbg = this.Gameover.getChildByName("Coinbg");
this.Scorebg = this.Gameover.getChildByName("Scorebg");
this.doubleButton = this.Gameover.getChildByName("double");
this.returnButton = this.Gameover.getChildByName("returnButton");
this.replayButton = this.Gameover.getChildByName("replayButton");
this.videoStartButton = this.Gameover.getChildByName("videoStartButton");
this.videoRankButton = this.Gameover.getChildByName("videoRankButton");
this.challengeButton = this.Gameover.getChildByName("challengeButton");
this.qq_box = this.Gameover.getChildByName("qq_box");
this.blockAdPositon = this.Gameover.getChildByName("blockAdPositon");
this.Coinnum = this.Coinbg.getChildByName("Coinnum");
this.score_Lable = this.Scorebg.getChildByName("score");
this.GameoverY = this.Gameover.y;
this.shareLable = [ "分享一下看看谁还比我更菜!~", "有那么难么,好多人都通关了呢!", "哇哦!你竟然没有通关了这首歌,马上嘚瑟一下吧。" ];
if (4 === window.platform) {
this.schedule(function() {
this.checkQQBox();
}, 5);
this.schedule(function() {
if (4 === window.platform && !this.isshowBlockAd && window.Parent.getBlockAdFlag()) {
var e = window.Tools.getWorldPosition(this.blockAdPositon);
window.Parent.showBlockAd("landscape", e.x, e.y, 5);
this.isshowBlockAd = !0;
}
}, 1, 99999, .1);
}
this.musicSelect1.active = !1;
this.doubleButton.active = !1;
this.Scorebg.active = !1;
this.lbTextNode = this.Gameover.getChildByName("LB_Text");
this.lbTextNode.active = !0;
this.nextBTN = this.Gameover.getChildByName("nextButton");
this.startBTN = this.Gameover.getChildByName("startButton");
this.returnPos = this.Gameover.getChildByName("returnPos");
this.replayPos = this.Gameover.getChildByName("replayPos");
},
onEnable: function() {
window.Parent.showInsertAD();
window.Parent.hidePushicon();
window.Parent.showBanner();
window.GameStart = !1;
window.DiamondNode.active = !0;
window.CrownNode.active = !0;
window.Home.perviewmusicNum = window.playNum;
window.Parent.setlocalStorage("perviewmusicNum", window.Home.perviewmusicNum);
switch (window.platform) {
case 0:
case 1:
case 2:
case 5:
break;

case 3:
this.shareButton.active = !1;
this.scheduleOnce(function() {
window.Record.matchFaillNode();
}, .01);
if (!window.isCustomRecord) {
this.shareButton.stopAllActions();
this.shareButton.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.2, 1.2), cc.rotateTo(.1, 30), cc.rotateTo(.1, -25), cc.rotateTo(.1, 20), cc.rotateTo(.1, 0), cc.scaleTo(.2, 1), cc.delayTime(1))));
}
window.PowerNode.active = !0;
break;

case 4:
this.Gameover.y = this.GameoverY + 100;
this.checkQQBox();
}
this.videoRankButton.active = !1;
this.hasgetButton.active = !1;
window.isGaming = !1;
window.musicisplaying = !1;
this.musicSelect0.x = -990;
this.musicSelect1.x = -990;
this.Coinbg.x = 990;
this.Scorebg.x = 990;
this.replayButton.x = -990;
this.returnButton.x = -990;
this.Coinbg.y = 300;
this.Scorebg.y = 90;
this.doubleButton.y = -55;
this.hasgetButton.y = -55;
this.doubleButton.setScale(0);
window.reliveNode.destroy();
window.Game.isShowRelive = !1;
if (window.playID) {
window.Parent.setlocalStorage("HasPlayed" + window.playID, !0);
window.Home.RemoveSongTabel(window.playID);
}
this.cuntDomond();
this.showActions();
this.NewFindTryMusic();
if (1 == window.platform) if (window.Parent.hasNavigateSettle()) {
this.Gameover.y = this.GameoverY + 100;
window.Parent.showNavigateSettle(4, 0);
} else this.Gameover.y = this.GameoverY;
window.AchieveNumber[4] += Math.floor(window.Game.gameTime / 6e4);
window.Parent.setlocalStorage("AchieveNumber4", window.AchieveNumber[4]);
window.MissionNumber[2] += Math.floor(window.Game.gameTime / 6e4);
window.Parent.setlocalStorage("MissionNumber2", window.MissionNumber[2]);
window.MissionNumber[4]++;
window.Parent.setlocalStorage("MissionNumber4", window.MissionNumber[4]);
window.Parent.faillSounds();
this.playMusic(null, 0);
3 == window.platform && "ios" != window.PhoneType ? this.ShowPushList() : this.PushList && (this.PushList.active = !1);
1 == window.platform && window.Parent.showPushicon(256, 256, 200, 1500);
this.isWatchVideo = !1;
this.nextBTN.active = !0;
this.startBTN.active = !1;
console.log("window.playName : ", window.playName);
o.default.getInstance().reportAnalytics("Song_Message", "GameOver_Show", window.playName);
this.isShowVideo = !1;
o.default.getInstance().reportAnalytics("View_Show_V2", "LoseUI_Show", 1);
if (0 == window.highModelList.length) {
var e = Number(window.Parent.getlocalStorage("gameModel"));
--e <= 1 && (e = 1);
window.Parent.setlocalStorage("gameModel", e);
window.gameHardModel = e;
}
this.shareButton.active = !1;
},
onDisable: function() {
window.Parent.hideNavigateSettle();
window.Parent.hideNavigateBoxBanner();
window.Parent.showBanner();
if (4 === window.platform && this.isshowBlockAd) {
window.Parent.hideBlockAd();
this.isshowBlockAd = !1;
}
0 == this.isShowVideo && window.Home.musicTable[this.nextMusicNum] && window.Home.RemoveSongTabel(window.Home.musicTable[this.nextMusicNum].musicId);
},
NewFindTryMusic: function() {
this.nextmusicTable = window.Home.newSongTable;
this.nextmusicTable2 = window.Home.unlockTable;
this.nextmusicTable3 = [];
for (var e = 0; e < window.Home.curSelectTable.length; e++) this.nextmusicTable3.push(window.Home.curSelectTable[e]);
this.nextmusicTable3 = window.Tools.disruptionArr(this.nextmusicTable3);
this.nextMusicNum = 0;
this.nextMusicId = 0;
if (this.nextmusicTable.length > 0) {
this.musicSelect0.getChildByName("SongName").getComponent(cc.Label).string = this.nextmusicTable[0].musicName;
this.musicSelect0.getChildByName("Mask").getChildByName("CD").getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[this.nextmusicTable[0].orderNumber % 20];
this.musicSelect0.getChildByName("playButton").active = !1;
this.musicSelect0.getChildByName("videoUnlockButton").active = !1;
this.musicSelect0.getChildByName("Title").active = !0;
this.challengeButton.active = !1;
this.nextMusicId = this.nextmusicTable[0].musicId;
this.nextBTN.active = !0;
this.startBTN.active = !1;
} else if (this.nextmusicTable2.length > 0) {
this.musicSelect0.getChildByName("SongName").getComponent(cc.Label).string = this.nextmusicTable2[0].musicName;
this.musicSelect0.getChildByName("Mask").getChildByName("CD").getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[this.nextmusicTable2[0].orderNumber % 20];
this.musicSelect0.getChildByName("playButton").active = !1;
this.musicSelect0.getChildByName("videoUnlockButton").active = !1;
this.musicSelect0.getChildByName("Title").active = !1;
this.challengeButton.active = !1;
this.nextMusicId = this.nextmusicTable2[0].musicId;
this.nextBTN.active = !1;
this.startBTN.active = !0;
} else if (this.nextmusicTable3.length > 0) {
this.musicSelect0.getChildByName("SongName").getComponent(cc.Label).string = this.nextmusicTable3[0].musicName;
this.musicSelect0.getChildByName("Mask").getChildByName("CD").getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[this.nextmusicTable3[0].orderNumber % 20];
this.musicSelect0.getChildByName("playButton").active = !1;
this.musicSelect0.getChildByName("videoUnlockButton").active = !1;
this.musicSelect0.getChildByName("Title").active = !1;
this.challengeButton.active = !1;
this.nextMusicId = this.nextmusicTable3[0].musicId;
this.nextBTN.active = !1;
this.startBTN.active = !0;
}
for (var t = 0; t < window.Home.musicTable.length; t++) {
if (window.Home.musicTable[t].musicId == this.nextMusicId) {
this.nextMusicNum = t;
break;
}
}
this.musicSelect0.stopAllActions();
this.scheduleOnce(function() {
this.musicSelect0.runAction(cc.sequence(cc.moveTo(.4, 100, this.musicSelect0.y), cc.moveTo(.3, 0, this.musicSelect0.y)));
}, .4);
this.videoStartButton.active = !1;
},
videoReplayButton: function() {
var e = this;
window.Parent.showVideo(function(t) {
t && e.replay();
});
},
replay: function() {
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "LoseUI_Again_NoADClick", 1);
window.Parent.ButtonSounds();
var e = this;
if (3 == window.platform) {
window.Power.reduceTili(this.replayButton, function() {
e.node.active = !1;
window.Game.GameReplay();
window.Home.DealMusicScore(window.playID, !1, 5);
});
} else {
window.Parent.UIMaskNode.active = !0;
this.node.active = !1;
window.Game.GameReplay();
window.Home.DealMusicScore(window.playID, !1, 5);
}
},
showHome: function() {
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "LoseUI_Return_NoADClick", 1);
window.Parent.ButtonSounds();
window.GameNode.active = !1;
window.HomeNode.active = !0;
window.Parent.audioEngine.stopAll();
this.node.active = !1;
},
showActions: function() {
this.scheduleOnce(function() {
this.Coinbg.runAction(cc.sequence(cc.moveTo(.2, -100, this.Coinbg.y), cc.moveTo(.1, 0, this.Coinbg.y)));
}, .1);
this.scheduleOnce(function() {
this.Scorebg.runAction(cc.sequence(cc.moveTo(.2, -100, this.Scorebg.y), cc.moveTo(.1, 0, this.Scorebg.y)));
}, .1);
this.scheduleOnce(function() {
this.doubleButton.runAction(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.1, 1)));
}, .2);
this.scheduleOnce(function() {
this.replayPosX = this.replayPos.x;
this.replayButton.runAction(cc.moveTo(.2, this.replayPosX, this.replayButton.y));
var e = this;
this.nextBTN.runAction(cc.sequence(cc.moveTo(.3, this.videoStartButton.x, -500), cc.moveTo(.1, this.videoStartButton.x, -390), cc.callFunc(function() {
e.nextBTN.getComponent(cc.Animation).play();
})));
}, .5);
this.scheduleOnce(function() {
this.returnPosX = this.returnPos.x;
this.returnButton.runAction(cc.moveTo(.5, this.returnPosX, this.returnButton.y));
}, .9);
if (3 == window.platform) {
this.videoRankButton.opacity = 0;
this.videoRankButton.active = !1;
this.scheduleOnce(function() {
this.videoRankButton.runAction(cc.fadeIn(1));
}, 1);
}
this.scheduleOnce(function() {
this.Title0.active = !1;
this.Title1.active = !0;
window.Parent.OpenLightSounds();
}, 1.3);
},
startNextSong: function(e, t) {
t = Number(t);
this.pauseMusic();
window.Parent.UIMaskNode.active = !0;
window.highModelList = [];
var i = window.Home.musicTable[this.nextMusicNum];
window.playNum = i.orderNumber;
window.playName = i.musicName;
window.playURL = i.musicFile;
window.playID = i.musicId;
window.playPoint = i.json_normal;
console.log("window.playName : ", window.playName);
window.MusicLoadingNode.active = !0;
window.GameNode.active = !1;
this.node.active = !1;
},
playMusic: function(e, t) {
t = Number(t);
this.pauseMusic();
var i = window.Home.musicTable[this.nextMusicNum];
window.Parent.LoadMusic(i.musicFile, i.musicId, function(e) {
if (!window.isGaming && !window.musicisplaying && !window.videoIsPlay) {
window.Parent.audioEngine.playMusic(e, !0);
window.Parent.audioEngine.setMusicTime(Number(i.ex_listen));
window.isShowingVideoInsert && window.Parent.audioEngine.setVolume(0);
}
});
if (0 === t) {
cc.tween(this.musicSelect0.getChildByName("Mask").getChildByName("CD")).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
this.musicSelect0.getChildByName("playMusicButton").active = !1;
this.musicSelect0.getChildByName("pauseButton").active = !0;
this.musicSelect0.getChildByName("musicPlay").active = !0;
} else {
cc.tween(this.musicSelect1.getChildByName("Mask").getChildByName("CD")).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
this.musicSelect1.getChildByName("playMusicButton").active = !1;
this.musicSelect1.getChildByName("pauseButton").active = !0;
this.musicSelect1.getChildByName("musicPlay").active = !0;
}
},
pauseMusic: function(e, t) {
t = Number(t);
window.musicisplaying = !1;
window.Parent.audioEngine.stopAll();
this.musicSelect0.getChildByName("Mask").getChildByName("CD").stopAllActions();
this.musicSelect0.getChildByName("playMusicButton").active = !0;
this.musicSelect0.getChildByName("pauseButton").active = !1;
this.musicSelect1.getChildByName("playMusicButton").active = !0;
this.musicSelect1.getChildByName("pauseButton").active = !1;
this.musicSelect1.getChildByName("Mask").getChildByName("CD").stopAllActions();
},
videoStartButtonClick: function() {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "LoseUI_NewMusic_ADClick", 1);
window.Parent.ButtonSounds();
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
e.isWatchVideo = !0;
window.highModelList = [];
var i = window.Home.musicTable[e.nextMusicNum].musicId;
window.Parent.setlocalStorage("isUnlock" + i, !0);
window.AchieveNumber[1]++;
window.Parent.setlocalStorage("AchieveNumber1", window.AchieveNumber[1]);
window.Home.DealUnlockMusic(i);
e.isShowVideo = !0;
if (window.powerNum < 6) {
e.startBTN.active = !0;
e.nextBTN.active = !1;
}
window.Home.DealMusicScore(i, !1, 3);
if (3 == window.platform) {
var o = function() {
e.startNextSong(0, 0);
};
1 == e.nextBTN.active ? window.Power.reduceTili(e.nextBTN, o) : window.Power.reduceTili(e.startBTN, o);
window.Home.RemoveSongTabel(i);
window.Home.perviewmusicName = window.Home.curmusicName;
window.Home.curmusicName = window.Home.musicTable[e.nextMusicNum].musicName;
window.Home.UpdateMusicPlay();
} else {
e.startNextSong(0, 0);
window.Home.RemoveSongTabel(i);
window.Home.perviewmusicName = window.Home.curmusicName;
window.Home.curmusicName = window.Home.musicTable[e.nextMusicNum].musicName;
window.Home.UpdateMusicPlay();
}
window.watchVideoTimes++;
}
});
},
OnClickStart: function() {
window.Parent.ButtonSounds();
var e = this;
if (3 == window.platform) {
var t = function() {
e.startNextSong(0, 0);
};
1 == e.startBTN.active ? window.Power.reduceTili(e.startBTN, t) : window.Power.reduceTili(e.nextBTN, t);
} else e.startNextSong(0, 0);
},
challengeStart: function() {
window.Parent.ButtonSounds();
var e = this;
if (3 == window.platform) {
window.Power.reduceTili(this.challengeButton, function() {
e.node.active = !1;
e.startNextSong(0, 0);
});
} else {
this.node.active = !1;
e.startNextSong(0, 0);
}
},
cuntDomond: function() {
this.diamondNum = Math.floor(100 * window.Game.progress * .5);
this.DimondNum.string = "+" + this.diamondNum;
window.Diamon.addDiamond(Math.floor(this.diamondNum / 5), this.diamondNum);
this.score_Lable.getComponent(cc.Label).string = window.Game.score * window.Home.beishu;
var e = Number(window.Parent.getlocalStorage("BestScore" + window.playID));
if (isNaN(e)) {
e = 0;
window.Parent.setlocalStorage("BestScore" + window.playID, 0);
}
window.Game.score * Math.pow(2, window.highModelList.length) > e && window.Parent.setlocalStorage("BestScore" + window.playID, window.Game.score * window.Home.beishu * Math.pow(2, window.highModelList.length));
},
videoButtonClick: function() {
window.Parent.ButtonSounds();
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
e.videoButton.active = !1;
e.hasgetButton.active = !0;
cc.log(e.diamondNum);
window.Diamon.addDiamond(Math.floor(e.diamondNum / 5 * 3), 3 * e.diamondNum);
}
});
},
shareVideo: function() {
window.Parent.shareRecord(null, 0, window.MusicName);
},
qqshowmorGame: function() {
window.Parent.showQQAppBox();
},
checkQQBox: function() {
4 == window.platform && (window.Parent.getQQBoxFlag() ? this.qq_box.active = !0 : this.qq_box.active = !1);
},
showVideoRank: function() {
window.Home.showVideoRank();
},
ShowPushList: function() {
this.PushList.active = !0;
for (var e = this.PushList.getChildByName("AppList"), t = 0; t < e.childrenCount; t++) {
var i = e.children[t];
i.stopAllActions();
i.setPosition(cc.v2(180 * t - 265, 0));
var o = i.getComponent("AppNodeJS"), n = 0;
n = this.IconSPList.length > t ? t : t - this.IconSPList.length;
o.isWin = !1;
o.curAppSp = this.IconSPList[n];
o.UpdateSP();
}
this.LastSpNum = 1;
this.schedule(this.SetPushListAnim, 5);
},
SetPushListAnim: function() {
for (var e = this, t = this.PushList.getChildByName("AppList"), i = Math.floor(Math.random() * (t.childrenCount - 1)) + 1, o = function(o) {
var n = t.children[o], s = cc.moveBy(1, cc.v2(-180, 0));
if (0 != o && o != i) n.runAction(s); else if (0 != o && o == i) {
var a = cc.scaleTo(.3, .8), c = cc.scaleTo(.3, 1);
n.runAction(cc.sequence(s, a, c));
} else 0 == o && n.runAction(cc.sequence(s, cc.callFunc(function() {
n.setPosition(cc.v2(n.position.x + 900, n.position.y));
n.setSiblingIndex(t.childrenCount - 1);
var i = n.getComponent("AppNodeJS");
i.curAppSp = e.IconSPList[e.LastSpNum];
i.UpdateSP();
e.LastSpNum++;
e.LastSpNum >= 4 && (e.LastSpNum = 0);
})));
}, n = 0; n < t.childrenCount; n++) o(n);
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
FavourPageJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c32fexIiLhAVb+FlbwnA31Z", "FavourPageJS");
cc.Class({
extends: cc.Component,
properties: {
favourPrefab: cc.Prefab,
favourList: cc.JsonAsset,
fazhenPrefab: cc.Prefab
},
onLoad: function() {
this.node.setContentSize(window.screenWidth, window.screenHight);
this.defination();
this.definePar();
this.SetFavourList();
window.Parent.myMusicSounds();
window.ShowFavourPage = !0;
},
onEnable: function() {
this.giveupBTN.active = !1;
this.okBTN.active = !1;
this.spBTN.active = !0;
this.RandomSetFazhen();
window.Parent.hidePushicon();
window.watchVideoTimes = 6;
window.isFirstPlayer = !0;
this.canTouch = !0;
var e = this;
this.scheduleOnce(function() {
window.Parent.PlayGuideAU(15);
e.scheduleOnce(function() {
e.canTouch = !0;
}, 5);
}, .3);
this.SetGuide();
},
onDisable: function() {
window.Home.LoadingNode.active = !0;
window.Home.LoadingNode.getComponent("LoadingNodeJS").SetProgress(0);
window.Home.dealLater();
window.Parent.audioEngine.stopEffect(window.Parent.audioSourcesMgr.myMusic);
5 == window.platform && window.Parent.showPushicon(256, 256, 200, 1500);
},
defination: function() {
this.node.zIndex = 999;
this.favourCon = this.node.getChildByName("Favour_Base").getChildByName("GRP_Favour");
this.changeBTN = this.node.getChildByName("Favour_Base").getChildByName("BTN_Change");
this.okBTN = this.node.getChildByName("Favour_Base").getChildByName("BTN_OK");
this.spBTN = this.node.getChildByName("Favour_Base").getChildByName("BTN_SP");
this.giveupBTN = this.node.getChildByName("Favour_Base").getChildByName("BTN_Giveup");
this.FazhenListNode = this.node.getChildByName("Favour_Base").getChildByName("FazhenList");
this.SetBTNEvent();
},
definePar: function() {
this.curFavourList = this.favourList.json;
this.selectList = [];
this.lastRanNum = -1;
this.canRandomAct = !1;
this.canTouch = !1;
},
SetBTNEvent: function() {
this.changeBTN.on(cc.Node.EventType.TOUCH_END, this.OnClickChange, this);
this.okBTN.on(cc.Node.EventType.TOUCH_END, this.OnClickOK, this);
this.giveupBTN.on(cc.Node.EventType.TOUCH_END, this.OnClickGiveup, this);
},
SetFavourList: function() {
var e = this;
console.log("设置偏好列表");
this.canRandomAct = !1;
this.curList = [];
for (var t = 0; t < this.selectList.length; t++) this.curList.push(this.selectList[t]);
for (var i = 0; i < this.curFavourList.length; i++) {
var o = this.curFavourList[i];
-1 == this.curList.indexOf(o) && this.curList.push(o);
}
var n = this;
if (0 == this.favourCon.childrenCount) for (var s = function(t) {
var i = .03 * t, o = cc.instantiate(e.favourPrefab), s = o.getChildByName("MoveCon");
s.position = cc.v2(0, 0);
s.stopAllActions();
s.setPosition(cc.v2(1080, s.position.y));
s.runAction(cc.sequence(cc.delayTime(i), cc.moveBy(.5, cc.v2(-1080, 0)), cc.callFunc(function() {
t == n.curList.length - 1 && n.scheduleOnce(function() {
n.canRandomAct = !0;
n.RandomMoveAct();
}, .5);
})));
var a = s.getChildByName("LB_Normal"), c = s.getChildByName("SP_Select").getChildByName("LB_Select");
s.getChildByName("SP_Select").active = !1;
a.getComponent(cc.Label).string = e.curList[t].favourListName;
c.getComponent(cc.Label).string = e.curList[t].favourListName;
o.targetOff(e);
s.on(cc.Node.EventType.TOUCH_END, function() {
e.OnClickSelect(null, t);
}, e);
e.schedule(function() {
var e = a.width;
o.width = e + 157;
s.width = e + 157;
s.getChildByName("SP_Select").width = e + 138;
}, .05);
o.parent = e.favourCon;
}, a = 0; a < this.curList.length; a++) s(a); else for (var c = function(t) {
var i = .03 * t, o = e.favourCon.children[t], s = o.getChildByName("MoveCon");
s.position = cc.v2(0, 0);
s.stopAllActions();
s.setPosition(cc.v2(1080, s.position.y));
s.runAction(cc.sequence(cc.delayTime(i), cc.moveBy(.5, cc.v2(-1080, 0)), cc.callFunc(function() {
t == n.favourCon.childrenCount - 1 && n.scheduleOnce(function() {
n.canRandomAct = !0;
n.RandomMoveAct();
}, .5);
})));
var a = s.getChildByName("LB_Normal"), c = s.getChildByName("SP_Select").getChildByName("LB_Select"), r = e.selectList.indexOf(e.curList[t]);
s.getChildByName("SP_Select").active = -1 != r;
a.getComponent(cc.Label).string = e.curList[t].favourListName;
c.getComponent(cc.Label).string = e.curList[t].favourListName;
o.targetOff(e);
s.on(cc.Node.EventType.TOUCH_END, function() {
e.OnClickSelect(null, t);
}, e);
e.schedule(function() {
var e = a.width;
o.width = e + 157;
s.width = e + 157;
s.getChildByName("SP_Select").width = e + 138;
}, .05);
o.parent = e.favourCon;
}, r = 0; r < this.favourCon.childrenCount; r++) c(r);
},
RandomMoveAct: function() {
var e = this;
if (0 != this.canRandomAct) {
for (var t = []; t.length < 5; ) {
var i = Math.floor(Math.random() * this.favourCon.childrenCount);
-1 == t.indexOf(i) && t.push(i);
}
for (var o = this, n = function(i) {
var n = t[i], s = e.favourCon.children[n].getChildByName("MoveCon"), a = (Math.random(), 
10 * Math.random() + 10), c = 10 * -Math.random() - 10;
Math.random() > .5 ? s.runAction(cc.sequence(cc.moveBy(3, cc.v2(c, 0)).easing(cc.easeSineIn()), cc.moveBy(3, cc.v2(-c, 0)).easing(cc.easeSineOut()), cc.callFunc(function() {
i == t.length - 1 && o.RandomMoveAct();
}))) : s.runAction(cc.sequence(cc.moveBy(3, cc.v2(a, 0)).easing(cc.easeSineIn()), cc.moveBy(3, cc.v2(-a, 0)).easing(cc.easeSineOut()), cc.callFunc(function() {
i == t.length - 1 && o.RandomMoveAct();
})));
}, s = 0; s < t.length; s++) n(s);
}
},
RandomSetFazhen: function() {
this.schedule(this.SetNewFazhen, 3, 9999, .1);
},
SetNewFazhen: function() {
var e = Math.random() + 1, t = Math.random() * window.screenWidth / 2, i = Math.random() * window.screenHight / 2, o = Math.random(), n = Math.random();
o > .5 && (t = -t);
n > .5 && (i = -i);
var s = cc.instantiate(this.fazhenPrefab);
s.setScale(e);
s.setPosition(cc.v2(t, i));
s.parent = this.FazhenListNode;
s.opacity = 0;
s.runAction(cc.sequence(cc.fadeTo(5, 80), cc.fadeTo(5, 0), cc.callFunc(function() {
s.active = !1;
s.destroy();
})));
},
SetGuide: function() {
var e = cc.instantiate(window.Parent.TipLeftPrefab);
e.parent = this.node;
e.getComponent("GuideTipsJS").SetTipsLabel("先选择你感兴趣的音乐类型,小彩会为你量身打造专属的音乐世界!");
e.position = cc.v2(-330, .35 * window.screenHight);
},
OnClickChange: function() {
if (0 != this.canTouch) {
console.log("点击进行切换列表");
window.Parent.ButtonSounds();
this.SetFavourList();
}
},
OnClickOK: function() {
if (0 != this.canTouch) {
console.log("点击选择完成");
window.Parent.ButtonSounds();
for (var e = 0; e < this.selectList.length; e++) {
var t = this.selectList[e], i = t.favourListName, o = t.favourListStyle.split(",");
if (o.length > 1) for (var n = 0; n < o.length; n++) {
var s = o[n];
window.FirstSelectFavour[s] = Number(window.FirstSelectFavour[s]);
isNaN(window.FirstSelectFavour[s]) && (window.FirstSelectFavour[s] = 0);
window.FirstSelectFavour[s] += 10;
} else {
isNaN(window.FirstSelectFavour[i]) && (window.FirstSelectFavour[i] = 0);
window.FirstSelectFavour[i] = Number(window.FirstSelectFavour[i]);
window.FirstSelectFavour[i] += 15;
}
}
console.log("FirstSelectFavour : ", window.FirstSelectFavour);
this.node.active = !1;
window.Parent.setlocalStorage("favourPageShow", 1);
window.Parent.setlocalStorage("GuideNum", 2);
}
},
OnClickGiveup: function() {
if (0 != this.canTouch) {
console.log("点击进行放弃");
window.Parent.ButtonSounds();
this.node.active = !1;
window.watchVideoTimes = 0;
window.isFirstPlayer = !1;
}
},
OnClickSelect: function(e, t) {
if (0 != this.canTouch) {
window.Parent.ButtonSounds();
t = Number(t);
console.log("选择列表中的第", t, "个");
var i = this.selectList.indexOf(this.curList[t]), o = this.favourCon.children[t].getChildByName("MoveCon");
if (-1 == i) {
this.selectList.push(this.curList[t]);
o.getChildByName("SP_Select").active = !0;
} else {
this.selectList.splice(i, 1);
o.getChildByName("SP_Select").active = !1;
}
if (0 == this.selectList.length) {
this.spBTN.active = !0;
this.okBTN.active = !1;
} else {
this.spBTN.active = !1;
this.okBTN.active = !0;
}
}
},
OnClickNoSelect: function() {
if (0 != this.canTouch) {
console.log("点击选择完成");
window.Parent.ButtonSounds();
window.Parent.showTips("您尚未选择兴趣爱好");
}
}
});
cc._RF.pop();
}, {} ],
FirstTipsNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ac39fW5B3VPIKX0mz95QrPc", "FirstTipsNodeJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
Top_Label: cc.Label
},
onLoad: function() {
this.node.setContentSize(window.screenWidth, window.screenHight);
this.topList = [ "通关当前歌曲可获得以下奖励哦！", "差一点点就能获得奖励啦！" ];
this.otherNode = this.node.getChildByName("Other");
this.noticeBTN = this.otherNode.getChildByName("BTN_Notice");
this.reviveBTN = this.otherNode.getChildByName("BTN_Revive");
this.topLabel = this.otherNode.getChildByName("Crown").getChildByName("LB_Top");
this.titleNode = this.otherNode.getChildByName("SP_Title");
this.giveUpNode = this.otherNode.getChildByName("BTN_GiveUp");
this.crownNode = this.otherNode.getChildByName("Crown");
this.node.zIndex = 21;
},
UpdateCurType: function(e, t, i) {
null != t && (this.curCallBack = t);
null != i && (this.curUNCallBack = i);
this.noticeBTN.active = !1;
this.reviveBTN.active = !1;
this.topLabel.active = !0;
this.giveUpNode.active = !1;
this.titleNode.active = !1;
if (e) {
this.reviveBTN.active = !0;
this.topLabel.getComponent(cc.Label).string = this.topList[1];
3 == window.platform ? this.scheduleOnce(function() {
this.giveUpNode.active = !0;
}, 3) : this.scheduleOnce(function() {
this.giveUpNode.active = !0;
}, .1);
} else {
this.noticeBTN.active = !0;
this.topLabel.getComponent(cc.Label).string = this.topList[0];
}
this.FirstTipsAnim(e);
},
OnClickClose: function() {
this.curCallBack = void 0;
this.curUNCallBack = void 0;
this.node.destroy();
},
OnClickVideo: function() {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "TwoReviveUI_Daily_ADClick", 1);
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
if (e.curCallBack) {
e.curCallBack();
e.curCallBack = void 0;
e.curUNCallBack = void 0;
}
e.node.active = !1;
}
});
},
OnClickGiveUp: function() {
this.node.active = !1;
if (this.curUNCallBack) {
this.curUNCallBack();
this.curCallBack = void 0;
this.curUNCallBack = void 0;
var e = this;
this.scheduleOnce(function() {
e.node.destroy();
}, 2);
}
},
FirstTipsAnim: function(e) {
this.titleNode.stopAllActions();
this.crownNode.stopAllActions();
this.reviveBTN.stopAllActions();
this.noticeBTN.stopAllActions();
this.reviveBTN.setPosition(800, this.reviveBTN.y);
this.noticeBTN.setPosition(800, this.noticeBTN.y);
e || this.scheduleOnce(function() {
this.titleNode.active = !0;
this.titleNode.setPosition(-800, this.titleNode.y);
this.titleNode.runAction(cc.sequence(cc.moveTo(.2, 100, this.titleNode.y), cc.moveTo(.05, 0, this.titleNode.y)));
}, .3);
this.scheduleOnce(function() {
this.crownNode.active = !0;
this.crownNode.setPosition(this.crownNode.x, 1500);
this.crownNode.runAction(cc.sequence(cc.moveTo(.2, this.crownNode.x, 300), cc.moveTo(.05, this.crownNode.x, 200)));
}, .1);
this.scheduleOnce(function() {
this.reviveBTN.runAction(cc.sequence(cc.moveTo(.2, -100, this.reviveBTN.y), cc.moveTo(.05, 0, this.reviveBTN.y)));
this.noticeBTN.runAction(cc.sequence(cc.moveTo(.2, -100, this.noticeBTN.y), cc.moveTo(.05, 0, this.noticeBTN.y)));
}, .5);
}
});
cc._RF.pop();
}, {
"./../Help/reportAnalytics": "reportAnalytics"
} ],
FollwNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "562a0ZTXYRLt4lebh3aj8TZ", "FollwNodeJS");
(function(e) {
e && e.__esModule;
})(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
CD: [ cc.Node ],
GoOnButton: cc.Node,
GetButton: cc.Node
},
onLoad: function() {
this.closeNode = this.node.getChildByName("close");
},
onEnable: function() {
if (0 == window.Home.hasFllowOfficial) {
this.GoOnButton.active = !0;
this.GetButton.active = !1;
} else {
this.GoOnButton.active = !1;
this.GetButton.active = !0;
}
if ("Douyin" != window.AppName) {
this.GoOnButton.active = !1;
this.GetButton.active = !0;
}
this.closeNode.active = !1;
this.scheduleOnce(function() {
this.closeNode.active = !0;
}, 3);
},
start: function() {},
close: function() {
this.node.active = !1;
window.Parent.ButtonSounds();
var e = this;
this.scheduleOnce(function() {
e.node.destroy();
cc.loader.releaseRes("PreFab/FollowNode", cc.Prefab);
}, 2);
},
update: function(e) {
if (!1 === this.GetButton.active && 1 == window.Home.hasFllowOfficial && 0 == window.Home.hasGetOfficialMusic) {
this.GoOnButton.active = !1;
this.GetButton.active = !0;
}
},
setCDPicture: function() {
if (window.Home.CDloadOk) {
for (var e = 0; e < this.Table.length; e++) this.CD[e].getChildByName("Mask").getChildByName("cd").getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[e];
this.unschedule(this.setCDPicture);
}
},
goFollow: function() {
window.Parent.ButtonSounds();
window.Home.FollowDouyin();
},
getMusic: function() {
window.Home.OnClickEggShell();
this.node.destroy();
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
GameNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2bd66T95rRPia4vZnKQdTzR", "GameNodeJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
PerfectFab: cc.Prefab,
WaterFab: cc.Prefab,
liuxingFab: cc.Prefab,
RoadLightFab2: cc.Prefab,
shortPointFab: cc.Prefab,
longPointFab: cc.Prefab,
ChangePointFab: cc.Prefab,
CrownFab: cc.Prefab,
perfectParticle: cc.Prefab,
BallTraing: cc.Node,
RoadLightfab: cc.Prefab,
RoadSpr: [ cc.SpriteFrame ],
CamerSprite1: cc.Node,
CamerSprite2: cc.Node,
FaceTips: cc.Node,
whale: cc.Node,
MaterialResList: [ cc.Material ],
BallMaterialResList: [ cc.Material ],
Role1PrefabList: [ cc.Prefab ],
Role2PrefabList: [ cc.Prefab ],
Role3PrefabList: [ cc.Prefab ],
Role4PrefabList: [ cc.Prefab ],
Role5PrefabList: [ cc.Prefab ],
RoleTips: cc.Node,
RoleTipsPrafab: cc.Prefab,
RoleSelectCon: cc.Node
},
onLoad: function() {
this.node.setContentSize(window.screenWidth, window.screenHight);
window.Game = this;
window.GameNode = this.node;
this.defination();
this.DataInit();
this.setschedule();
},
onEnable: function() {
window.Parent.hidePushicon();
window.Parent.hideNavigateSettle();
window.Parent.hideNavigateBoxBanner();
this.isGameSurprise = !1;
window.DiamondNode.active = !1;
window.CrownNode.active = !1;
if (3 == window.platform) {
window.PowerNode.active = !1;
window.Parent.hideBanner();
this.scheduleOnce(function() {
window.Record.matchGameNode();
}, .01);
window.isCustomRecord || (window.Record.RecordButton.active = !1);
if (window.FaceModle) {
this.CamerSprite1.active = !0;
this.CamerSprite2.active = !0;
window.Parent.reportAnalytics("game_camera_access");
window.Parent.reportCustomEvent("游戏事件", {
"人脸模式游戏开始": ""
});
} else {
this.CamerSprite1.active = !1;
this.CamerSprite2.active = !1;
}
} else window.Parent.showBanner();
this.forbidTouch();
this.showAnimation();
this.gameinit();
this.setColor();
this.reflashStar();
o.default.getInstance().reportAnalytics("View_Show_V2", "GamesPageUI_Show", 1);
console.log("输出列表信息");
this.RefreshRoleSelect();
},
onDisable: function() {
this.ClearAll();
},
update: function(e) {
if (this.gameStart) {
this.creatPoint();
this.musicTime += e;
window.PlayerCamera.x = this.Ball.x / 2;
1 == window.RoleModel && this.Role && (window.PlayerCamera.x = this.Role.x / 2);
this.BallTraing.y = this.BallModel.getChildByName("BallModel").y;
if (window.ConstellationNum < 12) {
this.timecunt1 += e;
if (this.timecunt1 >= 5) {
this.timecunt1 = 0;
this.CreatRoadLight();
}
}
} else {
this.BallParticle.active = !1;
if (this.Faill) {
this.Ball.y -= 1e3 * e;
1 == window.RoleModel && this.Role && (this.Role.y -= 1e3 * e);
}
}
this.colorChanging && this.setColor();
if (this.BallMove) {
this.Ball.x = this.movingBlock.x + this.DuceLength;
1 == window.RoleModel && this.Role && (this.Role.x = this.movingBlock.x + this.DuceLength);
}
},
defination: function() {
this.background = this.node.getChildByName("background");
this.background2 = this.node.getChildByName("background2");
this.skeleton = this.background2.getChildByName("skeleton");
this.Finger = this.node.getChildByName("Finger");
this.pauseNode = this.node.getChildByName("pauseNode");
this.pauseTitle = this.node.getChildByName("pauseTitle");
this.MusicLine = this.node.getChildByName("MusicLine");
this.musicLine = [];
for (var e = 0; e < 27; e++) {
this.musicLine[e] = this.MusicLine.getChildByName("line".concat(e));
this.musicLine[e].getComponent("LineJS").Number = e;
}
this.recordPositon = this.node.getChildByName("recordPositon");
this.Aurora0 = this.node.getChildByName("Aurora0");
this.Aurora1 = this.node.getChildByName("Aurora1");
this.Aurora2 = this.node.getChildByName("Aurora2");
this.lampbg = this.node.getChildByName("lampbg");
this.lamp = this.node.getChildByName("lampbg").getChildByName("lamp");
this.PlayerNode = this.node.getChildByName("PlayerNode");
this.Road = this.PlayerNode.getChildByName("Road");
this.RoadLight = this.Road.getChildByName("RoadLight");
this.Ball = this.PlayerNode.getChildByName("Ball");
this.breakParticle = this.Ball.getChildByName("breakParticle");
this.BallModel = this.Ball.getChildByName("BallModel");
this.BallParticle = this.BallModel.getChildByName("BallParticle");
this.Training = this.BallModel.getChildByName("Training");
this.Toucheara = this.node.getChildByName("Toucheara");
this.star = [];
for (e = 0; e < 3; e++) this.star[e] = this.node.getChildByName("progress_bg").getChildByName("star".concat(e));
this.progressLine = this.node.getChildByName("progress_bg").getChildByName("progress");
this.ScoreLable = this.node.getChildByName("Score");
window.PointMateral = this.MaterialResList;
window.ColorMateral = this.BallMaterialResList;
this.isLeftAnim = !1;
this.RoleTipsView = this.RoleTips.getChildByName("SP_Base").getChildByName("scrollview");
this.RoleTipsContent = this.RoleTipsView.getChildByName("view").getChildByName("content");
1 != Number(window.Parent.getlocalStorage("PlayGame")) && window.Parent.setlocalStorage("PlayGame", 1);
this.winBTN = this.node.getChildByName("WinBTN");
this.faillBTN = this.node.getChildByName("FaillBTN");
this.winBTN.active = !1;
this.faillBTN.active = !1;
},
showAnimation: function() {
var e = this;
if (window.SceneNumber > 0) {
this.Aurora1.active = !1;
this.Aurora2.active = !1;
} else {
this.Aurora1.active = !0;
this.Aurora2.active = !0;
this.lamp.active = !0;
this.Aurora1.stopAllActions();
this.Aurora2.stopAllActions();
this.lamp.stopAllActions();
this.Aurora1.runAction(cc.repeatForever(cc.sequence(cc.moveTo(20, -540, this.Aurora1.y), cc.moveTo(20, 0, this.Aurora1.y))));
this.Aurora2.runAction(cc.repeatForever(cc.sequence(cc.moveTo(20, 540, this.Aurora1.y), cc.moveTo(20, 1080, this.Aurora1.y))));
this.lamp.runAction(cc.repeatForever(cc.sequence(cc.moveTo(3, 680, this.lamp.y), cc.callFunc(function() {
e.lamp.x = -680;
}))));
}
},
setschedule: function() {
var e = 0;
this.schedule(function() {
this.creatLiuxing();
this.CreatWater();
++e % 2 == 0 && (this.Stealth = !0);
if (e % 4 == 0) {
e = 0;
this.ChangeColor();
this.ChangMove = !0;
this.CreatRoadLight2();
}
}, 5);
},
ClearAll: function() {
for (var e = 0; e < this.pointArr.length; e++) for (var t = 0; t < 3; t++) void 0 != this.pointArr[e][t] && this.pointArr[e][t].destroy();
for (e = 0; e < 4; e++) if (void 0 != this.SceneArr[e]) {
this.SceneArr[e].destroy();
this.SceneArr[e] = void 0;
}
},
DataInit: function() {
this.shortBlockPool = new cc.NodePool();
this.longBlockPool = new cc.NodePool();
this.LiuxingPool = new cc.NodePool();
this.TrilingColor = [ "#ff01d6", "#fff001", "#00caff" ];
this.LastColor = 1;
this.pointArr = [];
this.SceneArr = [];
this.colornum = 0;
this.color = [ [ 107, 0, 0 ], [ 126, 0, 65 ], [ 93, 0, 155 ], [ 0, 13, 160 ], [ 0, 107, 13 ], [ 124, 64, 0 ] ];
this.RandNum = [ [ 0, 1, 2 ], [ 0, 2, 1 ], [ 1, 0, 2 ], [ 1, 2, 0 ], [ 2, 0, 1 ], [ 2, 1, 0 ] ];
this.redNum = this.color[this.colornum][0];
this.greenNum = this.color[this.colornum][1];
this.blueNum = this.color[this.colornum][2];
this.perfectParticleColor = [ new cc.color("#FF02CE"), new cc.color("#fffa08"), new cc.color("#0bc3ff") ];
this.backgroundColor = [ new cc.color("#003D66"), new cc.color("#581919"), new cc.color("#033F6F"), new cc.color("#143D00"), new cc.color("#323B01"), new cc.color("#6B032D"), new cc.color("#001D5A"), new cc.color("#570D88"), new cc.color("#08207E"), new cc.color("#581932"), new cc.color("#4B3402"), new cc.color("#07374B") ];
this.RoadLightColor = [ new cc.color("#056CB1"), new cc.color("#A72E2E"), new cc.color("#086AB6"), new cc.color("#339902"), new cc.color("#8FA712"), new cc.color("#B3044A"), new cc.color("#063AA8"), new cc.color("#8512D1"), new cc.color("#0D32C5"), new cc.color("#B13667"), new cc.color("#B37D0B"), new cc.color("#3086A8") ];
this.RoadLightColor2 = [ new cc.color("#FFFFFF"), new cc.color("#FFEE25"), new cc.color("#FF83E6"), new cc.color("#55B4FF"), new cc.color("#4EA6AA"), new cc.color("#FF7764"), new cc.color("#FFEC18") ];
},
gameinit: function() {
this.isShowRelive = !1;
if (null != this.Role) {
this.Role.destroy();
this.Role = void 0;
}
1 == window.RoleModel ? this.Ball.active = !1 : this.Ball.active = !0;
for (var e = 0; e < window.Point_Table.length; e++) this.pointArr[e] = new Array();
for (e = 0; e < window.Point_Table.length; e++) for (var t = 0; t < 3; t++) this.pointArr[e][t] = void 0;
if (void 0 != this.Crown) {
this.Crown.destroy();
this.Crown = void 0;
}
this.hasCrown = !1;
if (0 == window.highLvSelect) switch (window.HardLevel) {
case 0:
window.FastModle = !1;
window.MoveModle = !1;
window.StealthModle = !1;
window.ColorModle = !1;
window.ShakeModle = !1;
window.activity_entry = !1;
break;

case 1:
window.FastModle = !1;
window.MoveModle = !0;
window.ColorModle = !0;
window.StealthModle = !1;
window.ShakeModle = !1;
window.activity_entry = !0;
var i = Number(window.Parent.getlocalStorage("HardLevel1" + window.playID));
1 === i && (this.hasCrown = !0);
break;

case 2:
window.FastModle = !1;
window.MoveModle = !0;
window.ColorModle = !0;
window.StealthModle = !0;
window.ShakeModle = !0;
window.activity_entry = !0;
1 === (i = Number(window.Parent.getlocalStorage("HardLevel2" + window.playID))) && (this.hasCrown = !0);
} else {
window.activity_entry = !0;
window.MoveModle = -1 != window.highModelList.indexOf(0);
window.StealthModle = -1 != window.highModelList.indexOf(1);
window.ColorModle = -1 != window.highModelList.indexOf(2);
window.ShakeModle = -1 != window.highModelList.indexOf(3);
3 == window.platform ? window.FaceModle = -1 != window.highModelList.indexOf(4) : window.FaceModle = !1;
window.FastModle = !1;
window.highModelList.length > 0 ? o.default.getInstance().reportAnalytics("View_Show_V2", "GamesPageUI_Extremity_Show", 1) : o.default.getInstance().reportAnalytics("View_Show_V2", "GamesPageUI_Normal_Show", 1);
}
this.createLongBoardTime = 5;
this.createShortBoardTime = 600;
this.canSelectColor = !0;
this.BoardOneNum = 60;
this.BoardTwoNum = 90;
this.showLongBoardMaxNum = 16;
this.showLongBoardMinNum = 12;
this.showSelectColor = 0;
this.creatShortNum = 0;
this.lastShortNum = 0;
this.curShortNum = 0;
this.LimShortNum = 0;
this.lastRanNum = -1;
this.changeShortNum = 0;
this.lastShortType = -1;
this.isEndSameBlock = !1;
this.isDownLevelOK = !1;
window.isReliveTimes = !1;
var n = Number(window.Parent.getlocalStorage("gameModel"));
if (0 == n) {
window.Parent.setlocalStorage("gameModel", 1);
n = 1;
}
window.gameHardModel = n;
console.log("当前玩家的难度为 : ", window.gameHardModel);
this.curModel = window.gameHardModel;
this.SetCurGameModel();
if (window.MoveModle) {
window.MoveModle = !1;
this.scheduleOnce(function() {
window.MoveModle = !0;
}, 3);
}
if (window.ColorModle) {
window.ColorModle = !1;
this.scheduleOnce(function() {
window.ColorModle = !0;
}, 7);
}
if (window.StealthModle) {
window.StealthModle = !1;
this.scheduleOnce(function() {
window.StealthModle = !0;
}, 10);
}
if (window.FaceModle) {
console.log("手指变蓝");
this.Finger.color = new cc.color("#B04BFF");
this.Finger.getChildByName("label").color = new cc.color("#B04BFF");
} else {
console.log("手指变白");
this.Finger.color = new cc.color("#FFFFFF");
this.Finger.getChildByName("label").color = new cc.color("#FFFFFF");
}
this.scheduleOnce(function() {
this.allowTouch();
if ((3 === window.platform || 5 === window.platform) && window.FaceModle && window.firstFaceModel) {
console.log("是否第一次人脸");
this.Finger.active = !1;
this.forbidTouch();
this.scheduleOnce(function() {
window.firstFaceModel = !1;
window.Parent.setlocalStorage("firstFaceModel", !1);
this.scheduleOnce(function() {
this.FaceTips.active = !1;
this.Finger.active = !0;
this.allowTouch();
}, .5);
}, 2);
this.FaceTips.active = !0;
this.flag0 = !1;
this.flag1 = !1;
}
}, .1);
this.Finger.active = !0;
this.reliveTimes = 0;
this.isTouching = !1;
this.pause = !1;
this.BallMove = !1;
this.ChangMove = !1;
this.Stealth = !1;
this.DuceLength = 0;
this.musicTime = 0;
this.touchPointNum = 0;
this.MusicLine.y = window.screenHight / 6.4 + 20;
this.lampbg.y = window.screenHight / 6.4;
this.Aurora0.y = this.lampbg.y - 100;
this.Aurora1.y = this.lampbg.y - 100;
this.Aurora2.y = this.lampbg.y - 100;
this.palyerSpeed = 1e3;
this.score = 0;
this.ScoreLable.getComponent(cc.Label).string = this.score;
this.comboom = 0;
this.pointcunt = 0;
this.pointzIndex = 500;
this.lastMoving = 0;
this.jumpCunt = 0;
this.gameStart = !1;
this.Gameend = !1;
this.CreatLongBorad = !1;
this.Faill = !1;
this.isRelive = !1;
this.BallParticle.active = !1;
this.StarNum = 0;
this.perfectNum = 0;
this.timecunt1 = 5;
window.PlayerCamera.setPosition(cc.v3(0, 800, 800));
this.whale.active = !1;
this.Ball.setPosition(cc.v3(0, 0, 0));
this.Ball.zIndex = 1e3;
this.ballColor = window.Parent.Random(0, 2);
this.perColor = this.ballColor;
this.BallModel.setScale(1);
this.BallModel.y = 0;
this.BallModel.getChildByName("BallModel").getComponent(cc.MeshRenderer).setMaterial(0, window.ColorMateral[this.ballColor]);
this.ballModle = window.ColorMateral[this.ballColor];
this.Training.getComponent(cc.MotionStreak).color = new cc.color(this.TrilingColor[this.ballColor]);
if (window.RoleModel) {
var s = null;
switch (window.RoleNum) {
case 1:
s = this.Role1PrefabList[this.ballColor];
break;

case 2:
s = this.Role2PrefabList[this.ballColor];
break;

case 3:
s = this.Role3PrefabList[this.ballColor];
break;

case 4:
s = this.Role4PrefabList[this.ballColor];
break;

case 5:
s = this.Role5PrefabList[this.ballColor];
}
var a = cc.instantiate(s);
a.name = "Role";
a.parent = this.PlayerNode;
this.Role = a;
this.Role.setPosition(cc.v3(0, 0, 0));
this.Role.zIndex = 1e3;
this.SetRoleAnim(0, 1.5);
}
var c = this, r = function() {
c.background2.active = !0;
c.RoadLight.active = !0;
c.lampbg.active = !0;
c.MusicLine.active = !1;
c.Aurora0.active = !1;
c.Aurora1.active = !1;
c.Aurora2.active = !1;
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/RoadPicture/Road0.png",
type: "png"
}, function(e, t) {
if (e) ; else {
c.RoadSpr[1] = new cc.SpriteFrame(t);
c.Road.getComponent(cc.Sprite).spriteFrame = c.RoadSpr[1];
}
});
c.Road.opacity = 255;
c.lampbg.color = new cc.color(c.backgroundColor[window.ConstellationNum]);
c.lamp.color = new cc.color(c.RoadLightColor[window.ConstellationNum]);
c.background2.color = new cc.color(c.backgroundColor[window.ConstellationNum]);
c.Road.color = new cc.color(c.backgroundColor[window.ConstellationNum]);
c.RoadLight.color = new cc.color(c.RoadLightColor[window.ConstellationNum]);
c.skeleton.getComponent(sp.Skeleton).skeletonData = window.XingzuoSpine;
c.skeleton.getComponent(sp.Skeleton).clearTracks();
c.skeleton.getComponent(sp.Skeleton).setAnimation(0, "1", !0);
var e = (window.screenHight - 1920) / 420;
c.skeleton.y = c.lampbg.y + 20 + 70 * e;
window.Parent.reportAnalytics("game_constellation_access");
window.Parent.reportCustomEvent("星座事件", {
"星座模式游戏开始": ""
});
window.FaceModle && window.Parent.reportCustomEvent("星座事件", {
"星座模式人脸模式游戏开始": ""
});
};
if (window.ConstellationNum < 12) {
o.default.getInstance().reportAnalytics("View_Show_V2", "GamesPageUI_Constellation_Show", 1);
window.XingzuoSpine = cc.loader.loadRes("XingzuoSpain/".concat(window.ConstellationNum, "/skeleton"), sp.SkeletonData);
window.XingzuoSpine ? r() : cc.loader.loadRes("XingzuoSpain/".concat(window.ConstellationNum, "/skeleton"), sp.SkeletonData, function(e, t) {
if (e) console.log(" 加载出错", e); else {
window.XingzuoSpine = t;
r();
}
});
} else {
this.background2.active = !1;
cc.log("场景编号", window.SceneNumber);
this.RoadLight.active = !1;
this.Road.color = new cc.color("#FFFFFF");
this.background.getComponent(cc.Sprite).spriteFrame = window.ScenBackground_Sprit[window.SceneNumber];
this.Road.getComponent(cc.Sprite).spriteFrame = window.Road_Sprit[window.SceneNumber];
if (window.SceneNumber > 0) {
this.Aurora0.active = !1;
this.Aurora1.active = !1;
this.Aurora2.active = !1;
this.lampbg.active = !1;
this.MusicLine.active = !1;
this.Road.opacity = 255;
this.background.color = new cc.color("#FFFFFF");
2 == window.SceneNumber && (this.whale.active = !0);
this.CreatScenFab();
} else {
this.lampbg.active = !0;
this.lampbg.color = new cc.color("#AD80D1");
this.Road.getComponent(cc.Sprite).spriteFrame = this.RoadSpr[0];
this.Road.opacity = 55;
this.lamp.color = new cc.color("#FFFFFF");
this.MusicLine.active = !0;
this.Aurora0.active = !0;
this.Aurora1.active = !0;
this.Aurora2.active = !0;
}
}
if (void 0 != this.FirstBlock) {
this.FirstBlock.destroy();
this.FirstBlock = void 0;
}
var l = cc.instantiate(this.ChangePointFab);
l.setPosition(0, -50, 0);
l.getChildByName("shadow").getComponent(cc.Sprite).spriteFrame = window.shortShadow_Sprit[this.ballColor];
l.getChildByName("BoradModel").getComponent(cc.MeshRenderer).setMaterial(0, window.PointMateral[this.ballColor]);
l.getComponent("BlockJS").BlockColor = this.ballColor;
l.getComponent("BlockJS").Game = this;
l.getComponent("BlockJS").type = "long";
this.FirstBlock = l;
this.PlayerNode.addChild(l);
cc.tween(l).to(.2, {
scaleX: 2.3
}).start();
this.star[0].active = !1;
this.star[1].active = !1;
this.star[2].active = !1;
for (e = 0; e < 10; e++) {
this.creatPoint();
if (9 == e) {
this.scheduleOnce(function() {
window.MusicLoadingNode.active = !1;
null != window.Home.firstTipsNode && (window.Home.firstTipsNode.active = !1);
0 == Number(window.Parent.getlocalStorage("isFirstTips")) && window.Home.showFirstTipsNode(!1);
}, .5);
this.scheduleOnce(function() {
c._Time = performance.now();
c._total = 0;
cc.director.on(cc.Director.EVENT_AFTER_DRAW, function() {
var e = performance.now() - c._Time;
c._total++;
if (e > 500) {
c._fps = 1e3 * c._total / e;
if (!window.gameFirstFPS) {
window.gameFirstFPS = c._fps;
window.isShake && (window.isShake = window.gameFirstFPS >= 45);
}
console.log("EVENT_AFTER_DRAW off ");
cc.director.off(cc.Director.EVENT_AFTER_DRAW);
}
});
}, 1.5);
}
}
this.RoleTips.active = !1;
this.curReliveTimes = 0;
},
setColor: function() {
if (!(window.ConstellationNum < 12 || window.SceneNumber > 0)) {
var e = new cc.Color();
e.setR(this.redNum);
e.setG(this.greenNum);
e.setB(this.blueNum);
this.background.color = e;
for (var t = 0; t < this.musicLine.length; t++) this.musicLine[t].color = e;
}
},
CreatScenFab: function() {
for (var e = 0; e < 4; e++) {
if (void 0 != this.SceneArr[e]) {
this.SceneArr[e].destroy();
this.SceneArr[e] = void 0;
}
var t = cc.instantiate(window.SceneFab[window.SceneNumber]);
t.setPosition(0, 7e3 * e - 7e3, 0);
t.zIndex = 1e4 - e;
this.Road.addChild(t);
this.SceneArr[e] = t;
}
},
creatPoint: function() {
if (!(this.pointcunt >= window.Point_Table.length)) {
this.gameTime = 1e3 * window.Parent.audioEngine.getCurrentTime();
Math.abs(this.gameTime / 1e3 - this.musicTime) > .2 ? this.gameTime = 1e3 * this.musicTime : this.musicTime = this.gameTime / 1e3;
var e = window.Point_Table[this.pointcunt].time + .15 - this.gameTime, t = Math.abs(e * this.palyerSpeed / 1e3);
if (!(this.pointcunt - this.jumpCunt > 5)) {
var i = 0;
if (this.pointcunt > 0) i = window.Point_Table[this.pointcunt].time - window.Point_Table[this.pointcunt - 1].time;
this.pointArr[this.pointcunt] = new Array();
var o = null;
this.SetCurGameModel();
if (this.isGameSurprise) if (this.CreatLongBorad && i > 200 || this.pointcunt === window.Point_Table.length - 1) {
this.lastLongBoradColor = this.ballColor;
var n = t;
(o = cc.instantiate(this.longPointFab)).zIndex = this.pointzIndex;
o.getChildByName("shadow").getComponent(cc.Sprite).spriteFrame = window.shortShadow_Sprit[this.ballColor];
o.getChildByName("BoradModel").getComponent(cc.MeshRenderer).setMaterial(0, window.PointMateral[this.ballColor]);
o.getComponent("BlockJS").Game = this;
o.getComponent("BlockJS").type = "long";
o.getComponent("BlockJS").BlockColor = this.ballColor;
o.getComponent("BlockJS").BlockNum0 = this.pointcunt;
o.getComponent("BlockJS").BlockNum1 = 0;
o.getComponent("BlockJS").moveType = 0;
o.setPosition(0, -50, -n);
this.PlayerNode.addChild(o);
this.pointArr[this.pointcunt][0] = o;
this.CreatLongBorad = !1;
this.scheduleOnce(function() {
this.CreatLongBorad = !0;
}, this.createLongBoardTime);
if (this.pointcunt === window.Point_Table.length - 1 && this.hasCrown) {
this.Crown = Tools.PlaceFabNode(this.CrownFab, cc.v3(0, 20, 0), this.pointArr[this.pointcunt][0]);
this.Crown.setScale(1, .5, 1.1);
}
} else if (window.MoveModle) {
for (var s = null, a = this.pointcunt; a > 0; a--) if (this.pointArr[a][0] && "long" === this.pointArr[a][0].getComponent("BlockJS").type) {
s = this.pointArr[a][0].getComponent("BlockJS").BlockColor;
break;
}
null === s && (s = this.ballColor);
w = (w = window.Parent.Random(0, 100)) < 15 ? 1 : w >= 15 && w < 40 ? 2 : 3;
for (a = 0; a < w; a++) {
n = t;
(o = this.shortBlockPool.size() > 0 ? this.shortBlockPool.get() : cc.instantiate(this.shortPointFab)).zIndex = this.pointzIndex;
o.getChildByName("shadow").getComponent(cc.Sprite).spriteFrame = window.shortShadow_Sprit[this.ballColor];
o.getChildByName("BoradModel").getComponent(cc.MeshRenderer).setMaterial(0, window.PointMateral[this.ballColor]);
o.getComponent("BlockJS").Game = this;
o.getComponent("BlockJS").type = "short";
o.getComponent("BlockJS").BlockColor = this.ballColor;
o.getComponent("BlockJS").BlockNum0 = this.pointcunt;
o.getComponent("BlockJS").BlockNum1 = a;
o.getComponent("BlockJS").moveType = w;
switch (w) {
case 1:
o.setPosition(0, -50, -n);
break;

case 2:
o.setPosition(400 * a - 200, -50, -n);
break;

case 3:
o.setPosition(300 * a - 300, -50, -n);
}
this.PlayerNode.addChild(o);
this.pointArr[this.pointcunt][a] = o;
this.LastColor = this.ballColor;
}
} else for (a = 0; a < 3; a++) {
n = t;
(o = this.shortBlockPool.size() > 0 ? this.shortBlockPool.get() : cc.instantiate(this.shortPointFab)).zIndex = this.pointzIndex;
o.getChildByName("shadow").getComponent(cc.Sprite).spriteFrame = window.shortShadow_Sprit[this.ballColor];
o.getChildByName("BoradModel").getComponent(cc.MeshRenderer).setMaterial(0, window.PointMateral[this.ballColor]);
o.getComponent("BlockJS").Game = this;
o.getComponent("BlockJS").type = "short";
o.getComponent("BlockJS").BlockColor = this.ballColor;
o.getComponent("BlockJS").BlockNum0 = this.pointcunt;
o.getComponent("BlockJS").BlockNum1 = a;
o.getComponent("BlockJS").moveType = 3;
o.setPosition(300 * a - 300, -50, -n);
this.PlayerNode.addChild(o);
this.pointArr[this.pointcunt][a] = o;
this.LastColor = this.ballColor;
} else if ((this.CreatLongBorad && i > 200 || this.pointcunt === window.Point_Table.length - 1) && 0 == this.isEndSameBlock) {
this.lastRanNum = -1;
this.lastShortNum = 0;
this.lastShortType = -1;
var c = window.Parent.Random(0, 2);
if (c === this.ballColor) return;
if (c === this.lastLongBoradColor) return;
this.lastLongBoradColor = c;
n = t;
(o = cc.instantiate(this.longPointFab)).zIndex = this.pointzIndex;
this.pointcunt === window.Point_Table.length - 1 && (c = this.ballColor);
this.perColor = c;
o.getChildByName("shadow").getComponent(cc.Sprite).spriteFrame = window.shortShadow_Sprit[c];
o.getChildByName("BoradModel").getComponent(cc.MeshRenderer).setMaterial(0, window.PointMateral[c]);
o.getComponent("BlockJS").Game = this;
o.getComponent("BlockJS").type = "long";
o.getComponent("BlockJS").BlockColor = c;
o.getComponent("BlockJS").BlockNum0 = this.pointcunt;
o.getComponent("BlockJS").BlockNum1 = 0;
o.getComponent("BlockJS").moveType = 0;
o.setPosition(0, -50, -n);
this.PlayerNode.addChild(o);
this.pointArr[this.pointcunt][0] = o;
this.CreatLongBorad = !1;
if (this.pointcunt === window.Point_Table.length - 1 && this.hasCrown) {
this.Crown = Tools.PlaceFabNode(this.CrownFab, cc.v3(0, 20, 0), this.pointArr[this.pointcunt][0]);
this.Crown.setScale(1, .5, 1.1);
}
} else {
this.creatShortNum++;
this.changeShortNum++;
this.isEndSameBlock = !1;
var r = this.creatShortNum, l = Math.floor(Math.random() * (this.showLongBoardMaxNum - this.showLongBoardMinNum)) + this.showLongBoardMinNum;
if (this.creatShortNum >= l) {
this.CreatLongBorad = !0;
this.creatShortNum = 0;
}
var d = window.Parent.Random(0, this.RandNum.length - 1);
if (i < this.createShortBoardTime && this.changeShortNum < .5 * this.showLongBoardMinNum) d = this.LastColor; else {
d = this.selectColor(d);
this.changeShortNum = 0;
}
var h = !1;
if (this.pointcunt > 2) {
if ("long" === this.pointArr[this.pointcunt - 1][0].getComponent("BlockJS").type && this.curModel < 5) {
h = !0;
var u = this.pointArr[this.pointcunt - 1][0].getComponent("BlockJS").BlockColor;
for (a = 0; a < 6; a++) if (this.RandNum[a][1] === u) {
d = a;
break;
}
}
} else {
h = !0;
for (u = this.FirstBlock.getComponent("BlockJS").BlockColor, a = 0; a < 6; a++) if (this.RandNum[a][1] === u) {
d = a;
break;
}
}
if (window.MoveModle) {
if (this.curModel <= 3) {
this.curModel = 3;
this.SetCurGameModel();
}
var w = window.Parent.Random(0, 100);
if (this.curModel >= 3 && this.curModel <= 5) if (0 != this.lastShortNum) if (this.curShortNum >= this.LimShortNum && 3 != this.lastShortNum) {
this.lastShortNum++;
this.curShortNum = 0;
w = this.lastShortNum;
var m = 0;
1 == this.lastShortNum ? m = this.BoardOneNum / 100 : 2 == this.lastShortNum && (m = (this.BoardTwoNum - this.BoardOneNum) / 100);
this.LimShortNum = Math.floor(this.showLongBoardMinNum * m);
} else {
this.curShortNum++;
w = this.lastShortNum;
} else {
w = w < this.BoardOneNum ? 1 : w >= this.BoardOneNum && w < this.BoardTwoNum ? 2 : 3;
this.lastShortNum = w;
var g = 0;
1 == this.lastShortNum ? g = this.BoardOneNum / 100 : 2 == this.lastShortNum && (g = this.BoardTwoNum / 100);
console.log("per : ", g);
this.LimShortNum = Math.floor(this.showLongBoardMinNum * g);
} else {
w = w < this.BoardOneNum ? 1 : w >= this.BoardOneNum && w < this.BoardTwoNum ? 2 : 3;
this.lastShortNum = w;
}
if (3 == w) {
if (0 == h) {
var p = !1;
if (this.curModel < 5) {
if (this.creatShortNum == this.showLongBoardMinNum - 2) {
console.log("重新设置尾部");
this.lastShortType = this.SetLastColor();
d = this.lastShortType;
p = !0;
} else if (-1 != this.lastShortType) {
console.log("重新设置尾部");
d = this.lastShortType;
p = !0;
}
if (i < .5 * this.createShortBoardTime) {
d = this.LastColor;
if (1 == p) {
console.log("重新设置极近点");
this.isEndSameBlock = !0;
this.creatShortNum = r;
this.CreatLongBorad = !1;
}
}
}
1 == this.changeShortNum && i < this.createShortBoardTime && (d = this.LastColor);
}
} else {
for (s = null, a = this.pointcunt; a > 0; a--) if (this.pointArr[a][0] && "long" === this.pointArr[a][0].getComponent("BlockJS").type) {
s = this.pointArr[a][0].getComponent("BlockJS").BlockColor;
break;
}
null === s && (s = this.ballColor);
for (var f = !1; !f; ) {
var S = window.Parent.Random(0, this.RandNum.length - 1);
for (a = 0; a < w; a++) if (this.RandNum[S][a] === s) {
d = S;
f = !0;
}
}
}
for (a = 0; a < w; a++) {
n = t;
(o = this.shortBlockPool.size() > 0 ? this.shortBlockPool.get() : cc.instantiate(this.shortPointFab)).zIndex = this.pointzIndex;
o.getChildByName("shadow").getComponent(cc.Sprite).spriteFrame = window.shortShadow_Sprit[this.RandNum[d][a]];
o.getChildByName("BoradModel").getComponent(cc.MeshRenderer).setMaterial(0, window.PointMateral[this.RandNum[d][a]]);
o.getComponent("BlockJS").Game = this;
o.getComponent("BlockJS").type = "short";
o.getComponent("BlockJS").BlockColor = this.RandNum[d][a];
o.getComponent("BlockJS").BlockNum0 = this.pointcunt;
o.getComponent("BlockJS").BlockNum1 = a;
o.getComponent("BlockJS").moveType = w;
switch (w) {
case 1:
o.setPosition(0, -50, -n);
break;

case 2:
o.setPosition(400 * a - 200, -50, -n);
break;

case 3:
o.setPosition(300 * a - 300, -50, -n);
}
this.PlayerNode.addChild(o);
this.pointArr[this.pointcunt][a] = o;
this.LastColor = d;
}
} else {
w = window.Parent.Random(0, 100);
if (this.curModel >= 3 && this.curModel <= 5) if (0 != this.lastShortNum) if (this.curShortNum >= this.LimShortNum && 3 != this.lastShortNum) {
this.lastShortNum++;
this.curShortNum = 0;
w = this.lastShortNum;
var N = 0;
1 == this.lastShortNum ? N = this.BoardOneNum / 100 : 2 == this.lastShortNum && (N = (this.BoardTwoNum - this.BoardOneNum) / 100);
this.LimShortNum = Math.floor(this.showLongBoardMinNum * N);
} else {
this.curShortNum++;
w = this.lastShortNum;
} else {
w = w < this.BoardOneNum ? 1 : w >= this.BoardOneNum && w < this.BoardTwoNum ? 2 : 3;
this.lastShortNum = w;
var v = 0;
1 == this.lastShortNum ? v = this.BoardOneNum / 100 : 2 == this.lastShortNum && (v = this.BoardTwoNum / 100);
console.log("per : ", v);
this.LimShortNum = Math.floor(this.showLongBoardMinNum * v);
} else {
w = w < this.BoardOneNum ? 1 : w >= this.BoardOneNum && w < this.BoardTwoNum ? 2 : 3;
this.lastShortNum = w;
}
if (3 == w) {
if (0 == h) {
var C = !1;
if (this.curModel < 5) {
if (this.creatShortNum == this.showLongBoardMinNum - 2) {
console.log("重新设置尾部");
this.lastShortType = this.SetLastColor();
d = this.lastShortType;
C = !0;
} else if (-1 != this.lastShortType) {
console.log("重新设置尾部");
d = this.lastShortType;
C = !0;
}
if (i < .5 * this.createShortBoardTime) {
d = this.LastColor;
if (1 == C) {
console.log("重新设置极近点");
this.isEndSameBlock = !0;
this.creatShortNum = r;
this.CreatLongBorad = !1;
}
}
}
1 == this.changeShortNum && i < this.createShortBoardTime && (d = this.LastColor);
}
} else {
for (s = null, a = this.pointcunt; a > 0; a--) if (this.pointArr[a][0] && "long" === this.pointArr[a][0].getComponent("BlockJS").type) {
s = this.pointArr[a][0].getComponent("BlockJS").BlockColor;
break;
}
null === s && (s = this.ballColor);
for (f = !1; !f; ) for (S = window.Parent.Random(0, this.RandNum.length - 1), a = 0; a < w; a++) if (this.RandNum[S][a] === s) {
d = S;
f = !0;
}
}
for (a = 0; a < w; a++) {
n = t;
(o = this.shortBlockPool.size() > 0 ? this.shortBlockPool.get() : cc.instantiate(this.shortPointFab)).zIndex = this.pointzIndex;
o.getChildByName("shadow").getComponent(cc.Sprite).spriteFrame = window.shortShadow_Sprit[this.RandNum[d][a]];
o.getChildByName("BoradModel").getComponent(cc.MeshRenderer).setMaterial(0, window.PointMateral[this.RandNum[d][a]]);
o.getComponent("BlockJS").Game = this;
o.getComponent("BlockJS").type = "short";
o.getComponent("BlockJS").BlockColor = this.RandNum[d][a];
o.getComponent("BlockJS").BlockNum0 = this.pointcunt;
o.getComponent("BlockJS").BlockNum1 = a;
o.getComponent("BlockJS").moveType = 3;
var y = 30 * Math.random(), B = 100 * Math.random();
switch (w) {
case 1:
B >= 50 && (y = -y);
y /= 2;
this.curModel >= 6 && (y *= 20);
o.setPosition(y, -50, -n);
break;

case 2:
0 == a && (y = -y);
o.setPosition(400 * a - 200 + y, -50, -n);
break;

case 3:
o.setPosition(300 * a - 300, -50, -n);
}
this.PlayerNode.addChild(o);
this.pointArr[this.pointcunt][a] = o;
this.LastColor = d;
}
}
}
this.pointcunt++;
this.pointzIndex--;
}
}
},
CreatWater: function() {
if (!(window.ConstellationNum < 12 || window.SceneNumber > 0)) {
var e = cc.instantiate(this.WaterFab), t = cc.instantiate(this.WaterFab);
if (window.Parent.Random(0, 9) < 5) var i = window.Parent.Random(-1e3, -500); else i = window.Parent.Random(500, 1e3);
var o = window.Parent.Random(200, 4e3);
e.setScale(0);
e.setPosition(i, o);
this.Road.addChild(e);
e.runAction(cc.scaleTo(2, 6));
this.scheduleOnce(function() {
e.runAction(cc.sequence(cc.fadeOut(.5), cc.callFunc(function() {
e.destroy();
})));
}, 1.5);
this.scheduleOnce(function() {
t.setScale(0);
t.setPosition(i, o);
this.Road.addChild(t);
t.runAction(cc.scaleTo(2, 4));
this.scheduleOnce(function() {
t.runAction(cc.sequence(cc.fadeOut(.5), cc.callFunc(function() {
t.destroy();
})));
}, 1.5);
}, .2);
}
},
CreatRoadLight: function() {
if (!(window.ConstellationNum >= 12) && this.gameStart) {
var e = cc.instantiate(this.RoadLightfab);
e.setPosition(0, 8e3, 0);
e.color = new cc.color(this.RoadLightColor[window.ConstellationNum]);
this.Road.addChild(e);
}
},
CreatRoadLight2: function() {
if (!(window.SceneNumber <= 0) && this.gameStart) {
var e = cc.instantiate(this.RoadLightFab2);
e.setPosition(0, 8e3, 0);
e.color = new cc.color(this.RoadLightColor2[window.SceneNumber]);
this.Road.addChild(e);
}
},
creatLiuxing: function() {
var e = this;
if (!(window.ConstellationNum < 12 || window.SceneNumber > 0)) {
if (this.LiuxingPool.size() > 0) var t = this.LiuxingPool.get(); else t = cc.instantiate(this.liuxingFab);
var i = window.Parent.Random(0, 1600), o = window.screenHight / 2 + 20;
t.opacity = 255;
t.setPosition(i, o);
window.ConstellationNum < 12 ? t.color = new cc.color(this.RoadLightColor[window.ConstellationNum]) : t.color = new cc.color("#E48DFF");
this.node.addChild(t);
t.runAction(cc.moveTo(2, i - 1017.6, o - 636));
this.scheduleOnce(function() {
t.runAction(cc.sequence(cc.fadeOut(.5), cc.callFunc(function() {
e.LiuxingPool.put(t);
})));
}, 1.5);
}
},
allowTouch: function() {
this.Toucheara.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.Toucheara.on(cc.Node.EventType.TOUCH_MOVE, this.touchmove, this);
this.Toucheara.on(cc.Node.EventType.TOUCH_END, this.touchend, this);
},
forbidTouch: function() {
this.Toucheara.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.Toucheara.off(cc.Node.EventType.TOUCH_MOVE, this.touchmove, this);
this.Toucheara.off(cc.Node.EventType.TOUCH_END, this.touchend, this);
},
touchStart: function(e) {
this.isTouching = !0;
if (3 === window.platform || 4 === window.platform || 5 === window.platform) this.touchPointNum++; else if (0 != e.getID()) return;
if (!this.gameStart) {
this.touchPointNum = 1;
this.BallMove = !1;
this.DuceLength = 0;
this.Finger.active = !1;
1 == this.RoleTips.active && this.CloseRoleTips();
this.gameStart = !0;
this.BallParticle.active = !0;
window.musicisplaying = !0;
if (this.isRelive) {
window.Parent.audioEngine.resumeMusic();
this.BallJump();
this.isRelive = !1;
if ("undefined" != typeof qq) {
var t = 1e3 * this.musicPauseTime;
window.Parent.audioEngine.setMusicTime(t);
}
} else if (this.pause) {
this.pauseNode.active = !1;
window.Parent.audioEngine.resumeMusic();
this.BallModel.resumeAllActions();
this.pause = !1;
if (window.RoleModel) {
this.Role.getComponent(cc.SkeletonAnimation).resume();
this.Role.resumeAllActions();
}
} else {
if (window.FastModle) {
window.FastModle = !1;
this.scheduleOnce(function() {
window.FastModle = !0;
}, 3);
}
this.CreatRoadLight2();
window.Parent.audioEngine.playMusic(window.Bgmusic, !1);
this.BallJump();
}
}
1 == this.RoleSelectCon.active && this.CloseRoleSelect();
},
touchmove: function(e) {
if (3 === window.platform || 4 === window.platform || 5 === window.platform) {
if (1 != this.touchPointNum) return;
} else if (0 != e.getID()) return;
if (5 === window.platform) if (window.MoveModle) var t = 2.5 * e.getDelta().x; else t = 2 * e.getDelta().x; else if (window.MoveModle) t = 3 * e.getDelta().x; else t = 2.5 * e.getDelta().x;
this.Ball.x += t;
this.Ball.x >= 400 && (this.Ball.x = 400);
this.Ball.x <= -400 && (this.Ball.x = -400);
if (1 == window.RoleModel && this.Role && this.Role) {
this.Role.x += t;
this.Role.x >= 400 && (this.Role.x = 400);
this.Role.x <= -400 && (this.Role.x = -400);
}
},
touchend: function(e) {
this.isTouching = !1;
if (3 === window.platform || 4 === window.platform || 5 === window.platform) {
this.touchPointNum--;
if (0 != this.touchPointNum || 4 === window.platform) return;
} else if (0 != e.getID()) return;
this.pauseGame();
},
faceMove: function(e) {
if (!0 !== this.isTouching && !this.Gameend) {
5 === window.platform ? this.Ball.x = 6 * e : this.Ball.x = 20 * -e;
this.Ball.x >= 400 && (this.Ball.x = 400);
this.Ball.x <= -400 && (this.Ball.x = -400);
if (1 == window.RoleModel && this.Role) {
5 === window.platform ? this.Role.x = 6 * e : this.Role.x = 20 * -e;
this.Role.x >= 400 && (this.Role.x = 400);
this.Role.x <= -400 && (this.Role.x = -400);
}
if (window.firstFaceModel) {
this.Ball.x > 100 && (this.flag0 = !0);
this.Ball.x < -100 && (this.flag1 = !0);
if (1 == window.RoleModel && this.Role) {
this.Role.x > 100 && (this.flag0 = !0);
this.Role.x < -100 && (this.flag1 = !0);
}
if (this.flag0 && this.flag1) {
window.firstFaceModel = !1;
window.Parent.setlocalStorage("firstFaceModel", !1);
this.scheduleOnce(function() {
this.FaceTips.active = !1;
this.Finger.active = !0;
this.allowTouch();
}, .5);
}
}
}
},
BallJump: function() {
if (1 == window.RoleModel && this.Role) {
var e = this;
if (this.jumpCunt === window.Point_Table.length) {
this.forbidTouch();
this.BallTraing.active = !1;
if (window.HardLevel > 0 && this.hasCrown) {
e.gameStart = !1;
e.CrownAction();
cc.tween(window.PlayerCamera).to(.5, {
x: 0
}).call(function() {}).start();
1 == window.RoleModel && e.scheduleOnce(function() {
e.SetRoleAnim(7, 1, function() {
e.SetRoleAnim(8, 0);
e.scheduleOnce(function() {
e.showWinNode();
}, 1.5);
});
}, .3);
} else {
1 == window.RoleModel ? this.gameStart = !1 : this.palyerSpeed = 3e3;
cc.tween(this.Ball).to(.5, {
x: 0
}, {
y: 0
}).start();
1 == window.RoleModel && e.scheduleOnce(function() {
e.SetRoleAnim(7, 1, function() {
e.SetRoleAnim(8, 0);
e.scheduleOnce(function() {
e.showWinNode();
}, 1.5);
});
}, .3);
}
} else if (this.pointArr[this.jumpCunt][0] && 1 == this.pointArr[this.jumpCunt][0].active) {
var t = .5 * (d = Math.abs(this.Role.z - this.pointArr[this.jumpCunt][0].z - 10));
if ((f = d / this.palyerSpeed) > 1.2) {
t *= .3;
var i = f - .375 - .25, o = function() {
e.SetRoleAnim(4, .75);
}, n = function() {
e.SetRoleAnim(3, 0, o, i);
};
e.SetRoleAnim(2, 0, n);
e.RoleAction = e.Role.runAction(cc.sequence(cc.jumpTo(f, e.Role.position.x, 0, t, 1).easing(cc.easeInOut(.5)), cc.callFunc(function() {
e.checkBlock();
})));
} else if (f <= .85) {
f < .3 && (t *= .1);
var s = f / .65, a = 0;
a = this.isLeftAnim ? 5 : 6;
this.isLeftAnim = !this.isLeftAnim;
e.SetRoleAnim(a, s);
e.RoleAction = e.Role.runAction(cc.sequence(cc.jumpTo(f, e.Role.position.x, 0, t, 1).easing(cc.easeInOut(.5)), cc.callFunc(function() {
e.checkBlock();
})));
} else {
t *= .65;
if (Math.floor(100 * Math.random()) >= 50) {
var c = f / .85;
e.SetRoleAnim(1, c);
e.RoleAction = e.Role.runAction(cc.sequence(cc.jumpTo(f, e.Role.position.x, 0, t, 1).easing(cc.easeInOut(.5)), cc.callFunc(function() {
e.checkBlock();
})));
} else {
var r = f / .65, l = 0;
l = this.isLeftAnim ? 5 : 6;
this.isLeftAnim = !this.isLeftAnim;
e.SetRoleAnim(l, r);
e.RoleAction = e.Role.runAction(cc.sequence(cc.jumpTo(f, e.Role.position.x, 0, t, 1).easing(cc.easeInOut(.5)), cc.callFunc(function() {
e.checkBlock();
})));
}
}
} else {
if (this.isRelive || this.pause) var d = (window.Point_Table[this.jumpCunt].time - 1e3 * this.musicPauseTime) / 1e3 * this.palyerSpeed; else d = (window.Point_Table[this.jumpCunt].time - 1e3 * window.Parent.audioEngine.getCurrentTime()) / 1e3 * this.palyerSpeed;
t = .5 * (d = Math.abs(d));
if ((f = d / this.palyerSpeed) > 1.3) {
t *= .3;
var h = f - .18 - .3;
o = function() {
e.SetRoleAnim(4, .75);
}, n = function() {
e.SetRoleAnim(3, 0, o, h);
};
e.SetRoleAnim(2, 0, n);
e.RoleAction = e.Role.runAction(cc.sequence(cc.jumpTo(f, e.Role.position.x, 0, t, 1).easing(cc.easeInOut(.5)), cc.callFunc(function() {
e.checkBlock();
})));
} else if (f <= .65) {
f < .3 && (t *= .1);
var u = f / 1, w = 0;
w = this.isLeftAnim ? 5 : 6;
this.isLeftAnim = !this.isLeftAnim;
e.SetRoleAnim(w, u);
e.RoleAction = e.Role.runAction(cc.sequence(cc.jumpTo(f, e.Role.position.x, 0, t, 1).easing(cc.easeInOut(.5)), cc.callFunc(function() {
e.checkBlock();
})));
} else {
t *= .65;
if (Math.floor(100 * Math.random()) >= 50) {
var m = f / 1.3;
e.SetRoleAnim(1, m);
e.RoleAction = e.Role.runAction(cc.sequence(cc.jumpTo(f, e.Role.position.x, 0, t, 1).easing(cc.easeInOut(.5)), cc.callFunc(function() {
e.checkBlock();
})));
} else {
var g = f / 1, p = 0;
p = this.isLeftAnim ? 5 : 6;
this.isLeftAnim = !this.isLeftAnim;
e.SetRoleAnim(p, g);
e.RoleAction = e.Role.runAction(cc.sequence(cc.jumpTo(f, e.Role.position.x, 0, t, 1).easing(cc.easeInOut(.5)), cc.callFunc(function() {
e.checkBlock();
})));
}
}
}
} else {
e = this;
if (this.jumpCunt === window.Point_Table.length) {
this.forbidTouch();
this.BallTraing.active = !1;
if (window.HardLevel > 0 && this.hasCrown) {
e.gameStart = !1;
e.CrownAction();
cc.tween(window.PlayerCamera).to(.5, {
x: 0
}).call(function() {}).start();
cc.tween(e.BallModel).to(.2, {
scale: 0
}).call(function() {
e.BallParticle.active = !1;
e.breakParticle.y = e.BallModel.y;
e.breakParticle.getComponent(cc.ParticleSystem).resetSystem();
e.scheduleOnce(function() {
e.BallTraing.active = !0;
}, 1);
}).start();
} else {
this.palyerSpeed = 3e3;
cc.tween(this.Ball).to(.5, {
x: 0
}, {
y: 0
}).start();
this.BallAction = this.BallModel.runAction(cc.sequence(cc.jumpTo(.5, 0, 600, 0, 1).easing(cc.easeInOut(.5)), cc.callFunc(function() {
cc.tween(e.BallModel).to(.5, {
scale: 0
}).call(function() {
e.BallParticle.active = !1;
e.breakParticle.y = e.BallModel.y;
e.breakParticle.getComponent(cc.ParticleSystem).resetSystem();
e.scheduleOnce(function() {
e.gameStart = !1;
e.BallTraing.active = !0;
e.showWinNode();
}, 1);
}).start();
})));
}
} else if (this.pointArr[this.jumpCunt][0] && 1 == this.pointArr[this.jumpCunt][0].active) {
var f = (d = Math.abs(this.Ball.z - this.pointArr[this.jumpCunt][0].z - 10)) / this.palyerSpeed;
(t = d) <= 200 && (t = 200);
t >= 400 && (t = 400);
this.Training.getComponent(cc.MotionStreak).fadeTime = f / 3;
this.BallModel.stopAllActions();
this.BallAction = this.BallModel.runAction(cc.sequence(cc.jumpTo(f, 0, 0, t, 1).easing(cc.easeInOut(.5)), cc.callFunc(function() {
e.checkBlock();
})));
} else {
if (this.isRelive || this.pause) d = (window.Point_Table[this.jumpCunt].time - 1e3 * this.musicPauseTime) / 1e3 * this.palyerSpeed; else d = (window.Point_Table[this.jumpCunt].time - 1e3 * window.Parent.audioEngine.getCurrentTime()) / 1e3 * this.palyerSpeed;
f = (d = Math.abs(d)) / this.palyerSpeed;
(t = d) <= 200 && (t = 200);
t >= 400 && (t = 400);
this.Training.getComponent(cc.MotionStreak).fadeTime = f / 3;
this.BallAction = this.BallModel.runAction(cc.sequence(cc.jumpTo(f, 0, 0, t, 1).easing(cc.easeInOut(.5)), cc.callFunc(function() {
console.log(101010);
e.checkBlock();
})));
}
}
},
checkBlock: function() {
var e = !1;
if (1 == window.RoleModel && this.Role) {
this.hasOnborad = !1;
this.ColorRight = !0;
for (var t = 0; t < 3; t++) if (void 0 != this.pointArr[this.jumpCunt][t] && "short" === this.pointArr[this.jumpCunt][0].getComponent("BlockJS").type && 1 == this.pointArr[this.jumpCunt][t].active) {
if ((r = Math.abs(this.Role.x - this.pointArr[this.jumpCunt][t].x)) <= 180) {
if (this.pointArr[this.jumpCunt][t].getComponent("BlockJS").change) {
this.pointArr[this.jumpCunt][t].getChildByName("BoradModel").getComponent(cc.MeshRenderer).setMaterial(0, window.PointMateral[this.pointArr[this.jumpCunt][t].getComponent("BlockJS").BlockColor]);
this.pointArr[this.jumpCunt][t].getChildByName("shadow").getComponent(cc.Sprite).spriteFrame = window.shortShadow_Sprit[this.pointArr[this.jumpCunt][t].getComponent("BlockJS").BlockColor];
}
this.hasOnborad = !0;
var i = this.pointArr[this.jumpCunt][t].getComponent("BlockJS").BlockColor;
if (this.ballColor != i && 0 == e) {
this.ColorRight = !1;
this.movingBlock = this.pointArr[this.jumpCunt][t];
this.DuceLength = this.Role.x - this.pointArr[this.jumpCunt][t].x;
this.BallMove = !0;
} else if (this.ballColor == i) {
e = !0;
this.ColorRight = !0;
this.movingBlock = null;
this.DuceLength = 0;
this.BallMove = !1;
}
if (this.ColorRight && this.ballColor == i) {
window.Parent.shakePhone("short");
this.starMusicLine();
if (r < 50) {
this.pointArr[this.jumpCunt][t].getChildByName("perfectParticle").active = !0;
this.pointArr[this.jumpCunt][t].getChildByName("perfectParticle").getComponent(cc.ParticleSystem).startColor = this.perfectParticleColor[i];
this.pointArr[this.jumpCunt][t].getChildByName("perfectParticle").getComponent(cc.ParticleSystem).resetSystem();
this.showPerfect(this.comboom);
this.comboom++;
this.pointArr[this.jumpCunt][t].getChildByName("perfactLight").active = !0;
var o = this.jumpCunt, n = t;
this.scheduleOnce(function() {
this.pointArr[o][n].getChildByName("perfactLight").active = !1;
}, .2);
this.perfectNum++;
this.reflashStar();
} else this.comboom = 0;
this.addScore(this.comboom + 1);
cc.tween(this.pointArr[this.jumpCunt][t].getChildByName("BoradModel")).to(.1, {
position: cc.v3(0, -20, 0)
}).to(.1, {
position: cc.v3(0, 0, 0)
}).start();
cc.tween(this.pointArr[this.jumpCunt][t].getChildByName("shadow")).to(.1, {
position: cc.v3(0, -70, 0)
}).to(.1, {
position: cc.v3(0, -50, 0)
}).start();
this.pointArr[this.jumpCunt][t].getChildByName("block_ef").setScale(0);
this.pointArr[this.jumpCunt][t].getChildByName("block_ef").opacity = 255;
this.pointArr[this.jumpCunt][t].getChildByName("block_ef").active = !0;
this.pointArr[this.jumpCunt][t].getChildByName("block_ef").runAction(cc.scaleTo(.5, 4));
this.pointArr[this.jumpCunt][t].getChildByName("block_ef").runAction(cc.fadeOut(.4));
}
}
}
if ("long" === this.pointArr[this.jumpCunt][0].getComponent("BlockJS").type) {
window.Parent.shakePhone("short");
if ((r = Math.abs(this.Role.x - this.pointArr[this.jumpCunt][0].x)) < 50) {
i = this.pointArr[this.jumpCunt][0].getComponent("BlockJS").BlockColor;
this.pointArr[this.jumpCunt][0].getChildByName("perfectParticle").active = !0;
this.pointArr[this.jumpCunt][0].getChildByName("perfectParticle").getComponent(cc.ParticleSystem).startColor = this.perfectParticleColor[i];
this.pointArr[this.jumpCunt][0].getChildByName("perfectParticle").getComponent(cc.ParticleSystem).resetSystem();
this.showPerfect(this.comboom);
this.comboom++;
o = this.jumpCunt;
this.pointArr[this.jumpCunt][0].getChildByName("perfactLight").active = !0;
this.scheduleOnce(function() {
this.pointArr[o][0].getChildByName("perfactLight").active = !1;
}, .2);
} else this.comboom = 0;
this.addScore(this.comboom + 1);
this.starMusicLine();
this.hasOnborad = !0;
this.perfectNum++;
this.reflashStar();
cc.tween(this.pointArr[this.jumpCunt][0].getChildByName("BoradModel")).to(.1, {
position: cc.v3(0, -20, 0)
}).to(.1, {
position: cc.v3(0, 0, 0)
}).start();
cc.tween(this.pointArr[this.jumpCunt][0].getChildByName("shadow")).to(.1, {
position: cc.v3(0, -70, 0)
}).to(.1, {
position: cc.v3(0, -50, 0)
}).start();
this.pointArr[this.jumpCunt][0].getChildByName("block_ef").setScale(0);
this.pointArr[this.jumpCunt][0].getChildByName("block_ef").opacity = 255;
this.pointArr[this.jumpCunt][0].getChildByName("block_ef").active = !0;
this.pointArr[this.jumpCunt][0].getChildByName("block_ef").runAction(cc.scaleTo(.5, 4));
this.pointArr[this.jumpCunt][0].getChildByName("block_ef").runAction(cc.fadeOut(.4));
this.BallModel.getChildByName("BallModel").getComponent(cc.MeshRenderer).setMaterial(0, window.ColorMateral[this.pointArr[this.jumpCunt][0].getComponent("BlockJS").BlockColor]);
this.ballModle = window.ColorMateral[this.pointArr[this.jumpCunt][0].getComponent("BlockJS").BlockColor];
this.ballColor = this.pointArr[this.jumpCunt][0].getComponent("BlockJS").BlockColor;
this.Training.getComponent(cc.MotionStreak).color = new cc.color(this.TrilingColor[this.ballColor]);
if (window.RoleModel) {
var s = null;
switch (window.RoleNum) {
case 1:
s = this.Role1PrefabList[this.ballColor];
break;

case 2:
s = this.Role2PrefabList[this.ballColor];
break;

case 3:
s = this.Role3PrefabList[this.ballColor];
break;

case 4:
s = this.Role4PrefabList[this.ballColor];
break;

case 5:
s = this.Role5PrefabList[this.ballColor];
}
var a = this.Role, c = cc.instantiate(s);
c.name = "Role";
c.parent = this.PlayerNode;
this.Role = c;
this.Role.setPosition(a.position);
this.Role.zIndex = 1e3;
a.destroy();
}
}
if (this.hasOnborad && this.ColorRight) {
this.Training.setPosition(0, 0);
this.BallModel.getChildByName("BallModel").setPosition(0, 0);
this.tiltCamera();
this.jumpCunt++;
this.BallJump();
} else {
this.forbidTouch();
window.Parent.shakePhone("long");
this.musicPauseTime = window.Parent.audioEngine.getCurrentTime();
4 === window.platform ? window.Parent.audioEngine.stopAll() : window.Parent.audioEngine.pauseMusic();
window.musicisplaying = !1;
this.gameStart = !1;
if (this.hasOnborad) {
this.BallModel.y = 0;
this.Gameend = !0;
this.scheduleOnce(function() {
this.Role.runAction(cc.blink(1.5, 3));
}, .2);
this.scheduleOnce(function() {
this.showRelive();
}, 2);
} else {
this.Role.zIndex = 10;
this.Faill = !0;
this.Gameend = !0;
this.scheduleOnce(function() {
this.showRelive();
}, 1);
}
}
} else {
this.hasOnborad = !1;
this.ColorRight = !0;
for (t = 0; t < 3; t++) if (void 0 != this.pointArr[this.jumpCunt][t] && "short" === this.pointArr[this.jumpCunt][0].getComponent("BlockJS").type && 1 == this.pointArr[this.jumpCunt][t].active) {
if ((r = Math.abs(this.Ball.x - this.pointArr[this.jumpCunt][t].x)) <= 200) {
if (this.pointArr[this.jumpCunt][t].getComponent("BlockJS").change) {
this.pointArr[this.jumpCunt][t].getChildByName("BoradModel").getComponent(cc.MeshRenderer).setMaterial(0, window.PointMateral[this.pointArr[this.jumpCunt][t].getComponent("BlockJS").BlockColor]);
this.pointArr[this.jumpCunt][t].getChildByName("shadow").getComponent(cc.Sprite).spriteFrame = window.shortShadow_Sprit[this.pointArr[this.jumpCunt][t].getComponent("BlockJS").BlockColor];
}
this.hasOnborad = !0;
i = this.pointArr[this.jumpCunt][t].getComponent("BlockJS").BlockColor;
if (this.ballColor != i && 0 == e) {
this.ColorRight = !1;
this.movingBlock = this.pointArr[this.jumpCunt][t];
this.DuceLength = this.Ball.x - this.pointArr[this.jumpCunt][t].x;
this.BallMove = !0;
} else if (this.ballColor == i) {
e = !0;
this.ColorRight = !0;
this.movingBlock = null;
this.DuceLength = 0;
this.BallMove = !1;
}
if (this.ColorRight && this.ballColor == i) {
window.Parent.shakePhone("short");
this.starMusicLine();
if (r < 50) {
this.pointArr[this.jumpCunt][t].getChildByName("perfectParticle").active = !0;
this.pointArr[this.jumpCunt][t].getChildByName("perfectParticle").getComponent(cc.ParticleSystem).startColor = this.perfectParticleColor[i];
this.pointArr[this.jumpCunt][t].getChildByName("perfectParticle").getComponent(cc.ParticleSystem).resetSystem();
this.showPerfect(this.comboom);
this.comboom++;
this.pointArr[this.jumpCunt][t].getChildByName("perfactLight").active = !0;
o = this.jumpCunt, n = t;
this.scheduleOnce(function() {
this.pointArr[o][n].getChildByName("perfactLight").active = !1;
}, .2);
this.perfectNum++;
this.reflashStar();
} else this.comboom = 0;
this.addScore(this.comboom + 1);
cc.tween(this.pointArr[this.jumpCunt][t].getChildByName("BoradModel")).to(.1, {
position: cc.v3(0, -20, 0)
}).to(.1, {
position: cc.v3(0, 0, 0)
}).start();
cc.tween(this.pointArr[this.jumpCunt][t].getChildByName("shadow")).to(.1, {
position: cc.v3(0, -70, 0)
}).to(.1, {
position: cc.v3(0, -50, 0)
}).start();
this.pointArr[this.jumpCunt][t].getChildByName("block_ef").setScale(0);
this.pointArr[this.jumpCunt][t].getChildByName("block_ef").opacity = 255;
this.pointArr[this.jumpCunt][t].getChildByName("block_ef").active = !0;
this.pointArr[this.jumpCunt][t].getChildByName("block_ef").runAction(cc.scaleTo(.5, 4));
this.pointArr[this.jumpCunt][t].getChildByName("block_ef").runAction(cc.fadeOut(.4));
}
}
}
if ("long" === this.pointArr[this.jumpCunt][0].getComponent("BlockJS").type) {
window.Parent.shakePhone("short");
var r;
if ((r = Math.abs(this.Ball.x - this.pointArr[this.jumpCunt][0].x)) < 50) {
i = this.pointArr[this.jumpCunt][0].getComponent("BlockJS").BlockColor;
this.pointArr[this.jumpCunt][0].getChildByName("perfectParticle").active = !0;
this.pointArr[this.jumpCunt][0].getChildByName("perfectParticle").getComponent(cc.ParticleSystem).startColor = this.perfectParticleColor[i];
this.pointArr[this.jumpCunt][0].getChildByName("perfectParticle").getComponent(cc.ParticleSystem).resetSystem();
this.showPerfect(this.comboom);
this.comboom++;
o = this.jumpCunt;
this.pointArr[this.jumpCunt][0].getChildByName("perfactLight").active = !0;
this.scheduleOnce(function() {
this.pointArr[o][0].getChildByName("perfactLight").active = !1;
}, .2);
} else this.comboom = 0;
this.addScore(this.comboom + 1);
this.starMusicLine();
this.hasOnborad = !0;
this.perfectNum++;
this.reflashStar();
cc.tween(this.pointArr[this.jumpCunt][0].getChildByName("BoradModel")).to(.1, {
position: cc.v3(0, -20, 0)
}).to(.1, {
position: cc.v3(0, 0, 0)
}).start();
cc.tween(this.pointArr[this.jumpCunt][0].getChildByName("shadow")).to(.1, {
position: cc.v3(0, -70, 0)
}).to(.1, {
position: cc.v3(0, -50, 0)
}).start();
this.pointArr[this.jumpCunt][0].getChildByName("block_ef").setScale(0);
this.pointArr[this.jumpCunt][0].getChildByName("block_ef").opacity = 255;
this.pointArr[this.jumpCunt][0].getChildByName("block_ef").active = !0;
this.pointArr[this.jumpCunt][0].getChildByName("block_ef").runAction(cc.scaleTo(.5, 4));
this.pointArr[this.jumpCunt][0].getChildByName("block_ef").runAction(cc.fadeOut(.4));
this.BallModel.getChildByName("BallModel").getComponent(cc.MeshRenderer).setMaterial(0, window.ColorMateral[this.pointArr[this.jumpCunt][0].getComponent("BlockJS").BlockColor]);
this.ballModle = window.ColorMateral[this.pointArr[this.jumpCunt][0].getComponent("BlockJS").BlockColor];
this.ballColor = this.pointArr[this.jumpCunt][0].getComponent("BlockJS").BlockColor;
this.Training.getComponent(cc.MotionStreak).color = new cc.color(this.TrilingColor[this.ballColor]);
if (window.RoleModel) {
var l = null;
switch (window.RoleNum) {
case 1:
l = this.Role1PrefabList[this.ballColor];
break;

case 2:
l = this.Role2PrefabList[this.ballColor];
break;

case 3:
l = this.Role3PrefabList[this.ballColor];
break;

case 4:
l = this.Role4PrefabList[this.ballColor];
break;

case 5:
l = this.Role5PrefabList[this.ballColor];
}
var d = this.Role, h = cc.instantiate(l);
h.name = "Role";
h.parent = this.PlayerNode;
this.Role = h;
this.Role.setPosition(d.position);
this.Role.zIndex = 1e3;
d.destroy();
}
}
if (this.hasOnborad && this.ColorRight) {
this.Training.setPosition(0, 0);
this.BallModel.getChildByName("BallModel").setPosition(0, 0);
this.tiltCamera();
this.jumpCunt++;
this.BallJump();
} else {
this.forbidTouch();
window.Parent.shakePhone("long");
this.musicPauseTime = window.Parent.audioEngine.getCurrentTime();
4 === window.platform ? window.Parent.audioEngine.stopAll() : window.Parent.audioEngine.pauseMusic();
window.musicisplaying = !1;
this.gameStart = !1;
if (this.hasOnborad) {
this.BallModel.y = 0;
this.Gameend = !0;
this.scheduleOnce(function() {
this.Ball.runAction(cc.blink(1.5, 3));
}, .2);
this.scheduleOnce(function() {
this.showRelive();
}, 2);
} else {
this.Ball.zIndex = 10;
this.Faill = !0;
this.Gameend = !0;
this.scheduleOnce(function() {
this.showRelive();
}, 1);
}
}
}
},
ChangeColor: function() {
if (!(window.SceneNumber > 0)) {
this.colorChanging = !0;
var e = this.colornum + 1;
e >= this.color.length && (e = 0);
var t = this.color[e][0] - this.color[this.colornum][0], i = this.color[e][1] - this.color[this.colornum][1], o = this.color[e][2] - this.color[this.colornum][2], n = 300, s = n;
this.Change = function() {
this.redNum += t / s;
this.blueNum += o / s;
this.greenNum += i / s;
if (0 === --n) {
this.redNum = this.color[e][0];
this.greenNum = this.color[e][1];
this.blueNum = this.color[e][2];
this.unschedule(this.Change);
this.colornum++;
this.colornum >= this.color.length && (this.colornum = 0);
this.colorChanging = !1;
}
};
this.schedule(this.Change, .01, 300, 0);
}
},
showRelive: function() {
if (1 != this.isShowRelive) {
console.log("创建复活界面");
this.isShowRelive = !0;
var e = cc.instantiate(window.ReliveNodeFab);
e.setPosition(0, 0);
window.ParentNode.addChild(e);
e.zIndex = 10;
}
},
showWinNode: function() {
var e = cc.instantiate(window.ChangeHighNodeFab);
e.setPosition(0, 0);
e.zIndex = 11;
window.ParentNode.addChild(e);
e.getComponent("NewChangeHighNodeJS").UpdateOther(function() {
window.Parent.audioEngine.stopAll();
if (window.WinNode) {
window.WinNode.active = !0;
window.WinNode.zIndex = 11;
} else {
var e = cc.instantiate(window.WinNodeFab);
e.setPosition(0, 0);
e.zIndex = 11;
window.ParentNode.addChild(e);
}
});
var t = window.playID, i = Number(window.Parent.getlocalStorage("StarNum" + t));
window.Game.StarNum > i && window.Parent.setlocalStorage("StarNum" + t, window.Game.StarNum);
},
GameRelive: function() {
var e = this;
console.log("游戏复活回调");
this.reliveTimes++;
this.curReliveTimes++;
if (window.Parent.getlocalStorage("FirstSurprise")) {
if (Math.floor(100 * Math.random()) + 20 * this.reliveTimes >= 80) {
this.isGameSurprise = !0;
this.reliveTimes = 0;
}
} else {
this.isGameSurprise = !0;
window.Parent.setlocalStorage("FirstSurprise", 1);
}
var t = Number(window.Parent.getlocalStorage("EggShellClock1"));
if (1 != t && 1 == window.Home.hasFllowOfficial && 3 == window.platform || 3 != window.platform && 1 != t) {
this.isGameSurprise = !0;
window.Parent.setlocalStorage("EggShellClock1", 1);
window.Parent.showTips("解锁彩蛋");
window.Parent.reportAnalytics("eggs_MusicUnlock_number");
} else 1 == t && (this.isGameSurprise = !1);
if (this.isGameSurprise) {
for (var i = 0; i < this.pointArr.length; i++) for (var o = this.pointArr[i], n = 0; n < o.length; n++) {
var s = o[n];
null != s && void 0 != s && (s.getComponent("BlockJS").BlockColor = this.ballColor);
}
this.scheduleOnce(function() {
e.isGameSurprise = !1;
}, 15);
}
this.Gameend = !1;
this.BallModel.getChildByName("BallModel").getComponent(cc.MeshRenderer).setMaterial(0, this.ballModle);
this.comboom = 0;
this.Finger.active = !0;
this.isRelive = !0;
window.isGaming = !0;
this.Ball.zIndex = 1e3;
this.Ball.y = 0;
if (1 == window.RoleModel && this.Role) {
this.Role.zIndex = 1e3;
this.Role.y = 0;
}
this.BallModel.y = 0;
this.Training.active = !1;
this.allowTouch();
this.Faill = !1;
for (var a = 0; a < 3; a++) {
if (void 0 != this.pointArr[this.jumpCunt][a] && this.pointArr[this.jumpCunt][a].getComponent("BlockJS").BlockColor == this.ballColor) {
this.Ball.x = this.pointArr[this.jumpCunt][a].x;
1 == window.RoleModel && this.Role && (this.Role.x = this.pointArr[this.jumpCunt][a].x);
this.movingBlock = this.pointArr[this.jumpCunt][a];
this.DuceLength = 0;
this.BallMove = !0;
if (this.pointArr[this.jumpCunt][a].getComponent("BlockJS").change) {
this.pointArr[this.jumpCunt][a].getChildByName("BoradModel").getComponent(cc.MeshRenderer).setMaterial(0, window.PointMateral[this.pointArr[this.jumpCunt][a].getComponent("BlockJS").BlockColor]);
this.pointArr[this.jumpCunt][a].getChildByName("shadow").getComponent(cc.Sprite).spriteFrame = window.shortShadow_Sprit[this.pointArr[this.jumpCunt][a].getComponent("BlockJS").BlockColor];
}
}
for (var c = 0; c < 6; c++) if (this.jumpCunt + c < window.Point_Table.length && void 0 != this.pointArr[this.jumpCunt + c][a]) {
this.pointArr[this.jumpCunt + c][a].getChildByName("BoradModel").getComponent(cc.MeshRenderer).setMaterial(0, window.PointMateral[this.pointArr[this.jumpCunt + c][a].getComponent("BlockJS").BlockColor]);
this.pointArr[this.jumpCunt + c][a].getChildByName("shadow").getComponent(cc.Sprite).spriteFrame = window.shortShadow_Sprit[this.pointArr[this.jumpCunt + c][a].getComponent("BlockJS").BlockColor];
}
}
window.PlayerCamera.x = this.Ball.x / 2;
1 == window.RoleModel && this.Role && (window.PlayerCamera.x = this.Role.x / 2);
if (window.MoveModle) {
window.MoveModle = !1;
this.scheduleOnce(function() {
window.MoveModle = !0;
}, 3);
}
if (window.ColorModle) {
window.ColorModle = !1;
this.scheduleOnce(function() {
window.ColorModle = !0;
}, 5);
}
if (window.StealthModle) {
window.StealthModle = !1;
this.scheduleOnce(function() {
window.StealthModle = !0;
}, 5);
}
if (window.FaceModle) for (a = 0; a < 3; a++) if (void 0 != this.pointArr[this.jumpCunt][a] && 0 === this.pointArr[this.jumpCunt][a].x) {
this.movingBlock = this.pointArr[this.jumpCunt][a];
this.DuceLength = 0;
this.BallMove = !0;
this.Ball.x = this.pointArr[this.jumpCunt][a].x;
1 == window.RoleModel && this.Role && (this.Role.x = this.pointArr[this.jumpCunt][a].x);
var r = this.pointArr[this.jumpCunt][a].getComponent("BlockJS").BlockColor;
this.ballModle = window.ColorMateral[r];
this.ballColor = r;
this.Training.getComponent(cc.MotionStreak).color = new cc.color(this.TrilingColor[r]);
this.BallModel.getChildByName("BallModel").getComponent(cc.MeshRenderer).setMaterial(0, window.ColorMateral[r]);
if (window.RoleModel) {
var l = null;
switch (window.RoleNum) {
case 1:
l = this.Role1PrefabList[this.ballColor];
break;

case 2:
l = this.Role2PrefabList[this.ballColor];
break;

case 3:
l = this.Role3PrefabList[this.ballColor];
break;

case 4:
l = this.Role4PrefabList[this.ballColor];
break;

case 5:
l = this.Role5PrefabList[this.ballColor];
}
var d = this.Role, h = cc.instantiate(l);
h.name = "Role";
h.parent = this.PlayerNode;
this.Role = h;
this.Role.setPosition(d.position);
this.Role.zIndex = 1e3;
d.destroy();
}
window.PlayerCamera.x = this.Ball.x / 2;
1 == window.RoleModel && this.Role && (window.PlayerCamera.x = this.Role.x / 2);
cc.log(this.Ball.x);
break;
}
this.Training.active = !0;
this.jumpCunt++;
window.MissionNumber[3]++;
window.Parent.setlocalStorage("MissionNumber3", window.MissionNumber[3]);
},
GameReplay: function() {
window.Parent.UIMaskNode.active = !1;
3 == window.platform && window.isCustomRecord;
window.Parent.audioEngine.stopAll();
this.ClearAll();
this.node.active = !1;
this.node.active = !0;
this.isGameSurprise = !1;
},
reflashStar: function() {
this.progress = this.perfectNum / window.Point_Table.length;
this.progressLine.height = 483 * this.progress;
this.progressLine.height >= 483 && (this.progressLine.height = 483);
if (this.progressLine.height >= 105 && !1 === this.star[0].active) {
this.star[0].setScale(0);
this.star[0].active = !0;
this.star[0].runAction(cc.sequence(cc.scaleTo(.2, 1.5), cc.scaleTo(.2, 1)));
this.StarNum = 1;
}
if (this.progressLine.height >= 225 && !1 === this.star[1].active) {
this.star[1].setScale(0);
this.star[1].active = !0;
this.star[1].runAction(cc.sequence(cc.scaleTo(.2, 1.5), cc.scaleTo(.2, 1)));
this.StarNum = 2;
}
if (this.progressLine.height >= 360 && !1 === this.star[2].active) {
this.star[2].setScale(0);
this.star[2].active = !0;
this.star[2].runAction(cc.sequence(cc.scaleTo(.2, 1.5), cc.scaleTo(.2, 1)));
this.StarNum = 3;
}
},
starMusicLine: function() {
if (!(window.SceneNumber > 0 || window.ConstellationNum < 12)) if (window.isShake) for (var e = 0; e < this.musicLine.length; e++) {
var t = 1 - Math.abs(this.musicLine[e].getComponent("LineJS").Number - 13) / 15, i = window.Parent.Random(10, 50) / 100 + t / 2;
this.musicLine[e].getComponent("LineJS").targetlength = i;
this.musicLine[e].getComponent("LineJS").changeTime = .06;
this.musicLine[e].getComponent("LineJS").starChangetLine();
} else this.MusicLine.active = !1;
},
addScore: function(e) {
var t = this;
this.score += e;
this.ScoreLable.runAction(cc.sequence(cc.scaleTo(.1, 1.3), cc.callFunc(function() {
t.ScoreLable.getComponent(cc.Label).string = t.score;
}), cc.scaleTo(.1, 1)));
},
showPerfect: function(e) {
var t = cc.instantiate(this.PerfectFab);
t.setPosition(350, 100);
var i = t.getChildByName("num").getComponent(cc.Label);
i.string = e > 0 ? "X" + e : "";
this.node.addChild(t);
this.scheduleOnce(function() {
t.runAction(cc.fadeOut(.3));
}, .7);
t.runAction(cc.sequence(cc.moveBy(1, 0, 250), cc.callFunc(function() {
t.destroy();
})));
},
pauseGame: function() {
if (!window.FaceModle && "ios" !== window.PhoneType) {
cc.log("暂停游戏");
this.pause = !0;
this.Finger.active = !0;
this.pauseNode.active = !0;
this.gameStart = !1;
this.BallModel.pauseAllActions();
if (window.RoleModel) {
this.Role.getComponent(cc.SkeletonAnimation).pause();
this.Role.pauseAllActions();
}
this.musicPauseTime = window.Parent.audioEngine.getCurrentTime();
window.Parent.audioEngine.pauseMusic();
}
},
tiltCamera: function() {
if (window.ShakeModle) {
window.PlayerCamera.stopAllActions();
var e = this.Ball.x / 400 * 5;
if (1 == window.RoleModel && this.Role) e = this.Role.x / 400 * 5;
window.PlayerCamera.runAction(cc.sequence(cc.rotate3DTo(.1, cc.v3(-30, 0, e)), cc.callFunc(function() {
window.PlayerCamera.runAction(cc.rotate3DTo(.3, cc.v3(-30, 0, 0)));
})));
this.PlayerNode.stopAllActions();
this.PlayerNode.runAction(cc.sequence(cc.moveTo(.1, 0, -30), cc.moveTo(.1, 0, 0)));
}
},
ChangBlock: function(e) {
if (this.gameStart && this.ChangMove) {
this.ChangMove = !1;
var t = window.Parent.selectelement([ 0, 1, 2 ], window.Parent.Random(2, 3));
if (2 === t.length) {
var i = this.pointArr[e][t[0]].x;
cc.tween(this.pointArr[e][t[0]]).to(.5, {
x: this.pointArr[e][t[1]].x
}).start();
cc.tween(this.pointArr[e][t[1]]).to(.5, {
x: i
}).start();
}
if (3 === t.length) {
var o = this.pointArr[e][t[0]].x, n = this.pointArr[e][t[1]].x, s = this.pointArr[e][t[2]].x;
cc.tween(this.pointArr[e][t[0]]).to(.5, {
x: n
}).start();
cc.tween(this.pointArr[e][t[1]]).to(.5, {
x: s
}).start();
cc.tween(this.pointArr[e][t[2]]).to(.5, {
x: o
}).start();
}
}
},
CrownAction: function() {
var e = this;
this.Crown.getComponent("CrownJS").startRotate();
cc.tween(this.Crown).to(1, {
x: this.Crown.x,
y: this.Crown.y + 200,
z: this.Crown.z - 1e3
}).call(function() {
e.scheduleOnce(function() {
0 == window.RoleModel && e.showWinNode();
}, 1);
}).start();
},
SetRoleAnim: function(e) {
var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0;
if (window.RoleModel || !this.pause) {
var n = this.Role.getComponent(cc.SkeletonAnimation), s = n.getClips()[e], a = n.play(s.name, 0);
3 != e && 0 != e && 8 != e && (a.wrapMode = 1);
0 != t && (a.speed = 1 / t);
var c = this, r = function e() {
n.stop(s.name);
n.off("finished", e, c);
n.currentClip = null;
i && i();
};
if (0 == o) n.on("finished", r, this); else {
var l = function e() {
if (0 == c.pause) {
r();
c.unschedule(e);
}
};
this.scheduleOnce(function() {
this.schedule(l, .1);
}, o);
}
}
},
GetRoleAnimTime: function() {
for (var e = this.Role.getComponent(cc.SkeletonAnimation).getClips(), t = 0; t < e.length; t++) {
var i = e[t];
console.log("sample Time : ", i.duration);
}
},
ReflashRoleTips: function() {
var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
if (0 == this.RoleTips.active) {
this.RoleTips.active = !0;
this.RoleTips.getComponent(cc.Widget).enabled = !0;
this.RoleTips.setPosition(cc.v2(0, -585));
}
if (1 == e) {
this.RoleTipsContent.width = 350 * window.roleName.length * .8 + 200;
for (var t = 0; t < window.roleName.length; t++) {
var i = cc.instantiate(this.RoleTipsPrafab), o = i.getComponent("RoleTipsBgJS");
o.Number = t;
o.RoleName = window.roleName[t];
o.RoleSpr = window.Role_Sprit[t];
o.GameJS = this;
i.parent = this.RoleTipsContent;
i.setPosition(cc.v2(240 + 280 * t, 120));
}
this.Finger.setPosition(cc.v2(0, 120));
} else {
for (var n = 0; n < this.RoleTipsContent.childrenCount; n++) {
this.RoleTipsContent.children[n].getComponent("RoleTipsBgJS").UpdateBTNActive();
}
this.UpdateModel();
}
},
UpdateModel: function() {
1 == window.RoleModel ? this.Ball.active = !1 : this.Ball.active = !0;
if (null != this.Role) {
this.Role.destroy();
this.Role = void 0;
}
if (window.RoleModel) {
var e = null;
switch (window.RoleNum) {
case 1:
e = this.Role1PrefabList[this.ballColor];
break;

case 2:
e = this.Role2PrefabList[this.ballColor];
break;

case 3:
e = this.Role3PrefabList[this.ballColor];
break;

case 4:
e = this.Role4PrefabList[this.ballColor];
break;

case 5:
e = this.Role5PrefabList[this.ballColor];
}
var t = cc.instantiate(e);
t.name = "Role";
t.parent = this.PlayerNode;
this.Role = t;
this.Role.setPosition(cc.v3(0, 0, 0));
this.Role.zIndex = 1e3;
this.SetRoleAnim(0, 1.5);
}
},
OnClickCloseRoleTips: function() {
window.Parent.ButtonSounds();
this.CloseRoleTips();
},
CloseRoleTips: function() {
this.RoleTips.getComponent(cc.Widget).enabled = !1;
var e = this, t = cc.moveTo(.2, cc.v2(0, -1400));
this.RoleTips.runAction(cc.sequence(t, cc.callFunc(function() {
e.RoleTips.active = !1;
})));
this.Finger.setPosition(cc.v2(0, -780));
},
OnClickWin: function() {
this.showWinNode();
},
OnClickFaill: function() {
this.showRelive();
},
selectColor: function(e) {
var t = !0;
100 * Math.random() <= this.showSelectColor && (t = !1);
if (1 == t) {
for (var i = 0, o = [], n = 0; n < 3; n++) if (this.RandNum[this.LastColor][n] === this.perColor) {
i = n;
break;
}
for (n = 0; n < this.RandNum.length; n++) 0 === i ? this.RandNum[n][2] != this.perColor && o.push(n) : 1 === i ? o.push(n) : 2 === i && this.RandNum[n][0] != this.perColor && o.push(n);
return o[window.Parent.Random(0, o.length - 1)];
}
if (0 == t) return e;
},
SetLastColor: function() {
for (var e = [], t = 0; t < this.RandNum.length; t++) this.RandNum[t][1] == this.perColor && e.push(t);
return e[window.Parent.Random(0, e.length - 1)];
},
consoleData: function() {
for (var e = 0; e < window.Point_Table.length; e++) console.log("第" + e + "个数据 : " + window.Point_Table[e].time / 1e3);
},
RefreshRoleSelect: function() {
this.RoleSelectCon.active = !0;
this.RoleSelectCon.getComponent(cc.Widget).enabled = !0;
this.RoleSelectCon.position = cc.v2(0, 0);
},
CloseRoleSelect: function() {
var e = this, t = this.RoleSelectCon.getComponent("RoleSelectConJS");
if (0 == t.isHide) {
t.isHide = !0;
t.SetCurMaskType(!1);
}
this.RoleSelectCon.getComponent(cc.Widget).enabled = !1;
var i = cc.moveTo(.2, cc.v2(400, this.RoleSelectCon.y));
this.RoleSelectCon.runAction(cc.sequence(i, cc.callFunc(function() {
e.RoleSelectCon.active = !1;
})));
},
SetCurGameModel: function() {
console.log("当前难度为 : ", this.curModel);
switch (this.curModel) {
case 1:
this.createLongBoardTime = 6;
this.createShortBoardTime = 800;
this.canSelectColor = !0;
this.BoardOneNum = 0;
this.BoardTwoNum = 0;
this.showLongBoardMaxNum = 16;
this.showLongBoardMinNum = 12;
this.showSelectColor = 0;
break;

case 2:
this.createLongBoardTime = 5;
this.createShortBoardTime = 600;
this.canSelectColor = !0;
this.BoardOneNum = 0;
this.BoardTwoNum = 0;
this.showLongBoardMaxNum = 13;
this.showLongBoardMinNum = 10;
this.showSelectColor = 0;
break;

case 3:
this.createLongBoardTime = 4;
this.createShortBoardTime = 500;
this.canSelectColor = !0;
this.BoardOneNum = 10;
this.BoardTwoNum = 20;
this.showLongBoardMaxNum = 11;
this.showLongBoardMinNum = 8;
this.showSelectColor = 0;
break;

case 4:
this.createLongBoardTime = 3;
this.createShortBoardTime = 400;
this.canSelectColor = !1;
this.BoardOneNum = 20;
this.BoardTwoNum = 40;
this.showLongBoardMaxNum = 9;
this.showLongBoardMinNum = 6;
this.showSelectColor = 0;
break;

case 5:
this.createLongBoardTime = 3;
this.createShortBoardTime = 300;
this.canSelectColor = !1;
this.BoardOneNum = 30;
this.BoardTwoNum = 60;
this.showLongBoardMaxNum = 7;
this.showLongBoardMinNum = 4;
this.showSelectColor = 10;
break;

case 6:
this.createLongBoardTime = 3;
this.createShortBoardTime = 200;
this.canSelectColor = !1;
this.BoardOneNum = 30;
this.BoardTwoNum = 60;
this.showLongBoardMaxNum = 5;
this.showLongBoardMinNum = 3;
this.showSelectColor = 20;
break;

case 7:
this.createLongBoardTime = 3;
this.createShortBoardTime = 100;
this.canSelectColor = !1;
this.BoardOneNum = 30;
this.BoardTwoNum = 60;
this.showLongBoardMaxNum = 5;
this.showLongBoardMinNum = 3;
this.showSelectColor = 60;
break;

case 8:
this.createLongBoardTime = 3;
this.createShortBoardTime = 0;
this.canSelectColor = !1;
this.BoardOneNum = 30;
this.BoardTwoNum = 60;
this.showLongBoardMaxNum = 5;
this.showLongBoardMinNum = 3;
this.showSelectColor = 80;
}
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
GaussianBlur: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "eb94eiuFUBLgZ/JurZw1es7", "GaussianBlur");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var c = e.length - 1; c >= 0; c--) (n = e[c]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, s = this && this.__awaiter || function(e, t, i, o) {
return new (i || (i = Promise))(function(n, s) {
function a(e) {
try {
r(o.next(e));
} catch (e) {
s(e);
}
}
function c(e) {
try {
r(o.throw(e));
} catch (e) {
s(e);
}
}
function r(e) {
e.done ? n(e.value) : new i(function(t) {
t(e.value);
}).then(a, c);
}
r((o = o.apply(e, t || [])).next());
});
}, a = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: c(0),
throw: c(1),
return: c(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function c(e) {
return function(t) {
return r([ e, t ]);
};
}
function r(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
e("../../misc/EditorAsset");
var c = cc._decorator, r = c.ccclass, l = c.property, d = c.requireComponent, h = c.executeInEditMode, u = c.disallowMultiple, w = c.executionOrder, m = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._effect = null;
t._radius = 10;
t.sprite = null;
t.material = null;
return t;
}
Object.defineProperty(t.prototype, "effect", {
get: function() {
return this._effect;
},
set: function(e) {
this._effect = e;
this.init();
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "radius", {
get: function() {
return this._radius;
},
set: function(e) {
this._radius = e > 50 ? 50 : e;
this.updateProperties();
},
enumerable: !0,
configurable: !0
});
t.prototype.onLoad = function() {
this.init();
};
t.prototype.resetInEditor = function() {
this.init();
};
t.prototype.init = function() {
return s(this, void 0, void 0, function() {
return a(this, function(e) {
switch (e.label) {
case 0:
return [ 3, 2 ];

case 1:
e.sent();
e.label = 2;

case 2:
if (!this._effect) return [ 2 ];
this.sprite = this.node.getComponent(cc.Sprite);
this.sprite.spriteFrame && (this.sprite.spriteFrame.getTexture().packable = !1);
this.material = cc.Material.create(this._effect);
this.sprite.setMaterial(0, this.material);
this.updateProperties();
return [ 2 ];
}
});
});
};
t.prototype.updateProperties = function() {
this.material.setProperty("size", this.getNodeSize());
this.material.setProperty("radius", this.radius);
};
t.prototype.getNodeSize = function() {
return cc.v2(this.node.width, this.node.height);
};
n([ l ], t.prototype, "_effect", void 0);
n([ l({
type: cc.EffectAsset,
tooltip: !1,
readonly: !0
}) ], t.prototype, "effect", null);
n([ l ], t.prototype, "_radius", void 0);
n([ l({
tooltip: !1
}) ], t.prototype, "radius", null);
return t = n([ r, d(cc.Sprite), h, u, w(-100) ], t);
}(cc.Component);
i.default = m;
cc._RF.pop();
}, {
"../../misc/EditorAsset": "EditorAsset"
} ],
GetRoleAnimJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "918aelsZ29HTJxlWpiSj7CK", "GetRoleAnimJS");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.node.setContentSize(window.screenWidth, window.screenHight);
this.defination();
},
onEnable: function() {
window.Parent.startRecord();
this.StartAnim();
window.Parent.audioEngine.pauseMusic();
},
onDisable: function() {
this.scheduleOnce(function() {
this.node.destroy();
}, 2);
window.Parent.audioEngine.resumeMusic();
},
defination: function() {
this.animNode = this.node.getChildByName("GRP_Anim");
this.bgNode = this.animNode.getChildByName("SP_BG");
this.titleNode = this.animNode.getChildByName("SP_Title");
this.titleAnim = this.titleNode.getChildByName("Anim");
this.titleAnim2 = this.titleNode.getChildByName("Anim2");
this.titleAnim3 = this.titleNode.getChildByName("Anim3");
this.roleNode = this.animNode.getChildByName("SP_Role");
this.roleName = this.animNode.getChildByName("SP_RoleName");
this.roleNameLB = this.roleName.getChildByName("LB_RoleName");
this.shareBTN = this.animNode.getChildByName("BTN_Share");
this.continueBTN = this.animNode.getChildByName("BTN_Continue");
this.scheduleOnce(function() {
this.roleNode.getComponent(cc.Sprite).spriteFrame = window.HomeRole_Sprit[window.RoleNum];
this.roleNameLB.getComponent(cc.Label).string = window.roleName[window.RoleNum];
}, 1);
},
StartAnim: function() {
var e = this;
this.titleNode.setScale(0);
this.titleNode.active = !0;
var t = this;
(function() {
e.titleAnim.active = !1;
e.titleAnim3.active = !1;
e.titleAnim2.active = !1;
e.titleNode.setScale(0);
e.titleNode.position = cc.v2(0, 0);
e.bgNode.setScale(0);
e.bgNode.active = !1;
e.shareBTN.active = !0;
e.continueBTN.active = !0;
e.shareBTN.stopAllActions();
e.shareBTN.position = cc.v2(800, -270);
e.shareBTN.setScale(1);
e.continueBTN.position = cc.v2(-800, -275);
e.continueBTN.setScale(1);
e.roleNode.active = !1;
e.roleNode.setScale(0);
e.roleName.active = !0;
e.roleName.setScale(0);
window.Parent.getroleSounds();
cc.tween(e.titleNode).to(.5, {
scaleY: 1.75,
scaleX: 1.8
}).to(.25, {
scale: 1.6
}, {
easing: "cubicOut"
}).to(.25, {
scale: 1.2,
position: cc.v2(0, 500)
}, {
easing: "cubicOut"
}).call(function() {
t.scheduleOnce(function() {
t.titleAnim3.active = !0;
t.titleAnim2.active = !0;
}, .2);
t.bgNode.setScale(0, 1);
t.bgNode.active = !0;
cc.tween(t.bgNode).to(.15, {
scaleX: 1
}).to(.3, {
scale: 1.3
}).call(function() {
t.roleNode.active = !0;
window.Parent.newWowSounds();
cc.tween(t.roleNode).to(.4, {
scale: 1.3
}, {
easing: "quadOut"
}).to(.2, {
scale: .8
}).to(.5, {
scale: 1
}, {
easing: "elasticOut"
}).call(function() {
t.titleAnim.active = !0;
t.scheduleOnce(function() {
cc.tween(t.roleName).to(.15, {
scale: 1
}, {
easing: "cubicOut"
}).call(function() {
t.scheduleOnce(function() {
window.Parent.stopRecord();
}, 1);
}).start();
}, .05);
t.scheduleOnce(function() {
window.Parent.ButtonSounds();
cc.tween(e.shareBTN).to(.15, {
position: cc.v2(280, -270)
}, {
easing: "quadOut"
}).to(.1, {
scaleX: .6,
scaleY: 1.4,
position: cc.v2(120, -270)
}).to(.2, {
scaleX: 1.2,
scaleY: .8,
position: cc.v2(450, -270)
}, {
easing: "quadIn"
}).to(.1, {
scale: 1,
position: cc.v2(280, -270)
}, {
easing: "quadOut"
}).call(function() {
e.shareBTN.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.2, 1.1), cc.rotateTo(.1, 30), cc.rotateTo(.1, -25), cc.rotateTo(.1, 20), cc.rotateTo(.1, 0), cc.scaleTo(.2, 1), cc.delayTime(3))));
}).start();
cc.tween(e.continueBTN).to(.15, {
position: cc.v2(-210, -275)
}, {
easing: "quadOut"
}).to(.1, {
scaleX: .6,
scaleY: 1.4,
position: cc.v2(-80, -275)
}).to(.2, {
scaleX: 1.2,
scaleY: .8,
position: cc.v2(-370, -275)
}, {
easing: "quadIn"
}).to(.1, {
scale: 1,
position: cc.v2(-210, -275)
}, {
easing: "quadOut"
}).start();
}, 1);
}).start();
}).to(.2, {
scale: 1
}).start();
}).to(.2, {
scaleX: 1.5
}, {
easing: "sineIn"
}).to(.2, {
scaleX: 1.2
}, {
easing: "quadOut"
}).start();
})();
},
OnClickShare: function() {
window.Parent.ButtonSounds();
var e = this;
window.Parent.shareRecord(null, function() {
e.node.active = !1;
});
},
OnClickContinue: function() {
window.Parent.ButtonSounds();
this.node.active = !1;
}
});
cc._RF.pop();
}, {} ],
GetVideoNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b2ff8lL4y1MhLdoMtSfsg8z", "GetVideoNodeJS");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
window.GetVideo = this;
window.GetVideoNode = this.node;
this.node.setContentSize(window.screenWidth, window.screenHight);
this.node.zIndex = 102;
this.topNode = this.node.getChildByName("LB_Top");
this.giveUpNode = this.node.getChildByName("BTN_GiveUp");
this.videoNode = this.node.getChildByName("BTN_Video");
this.numNode = this.videoNode.getChildByName("LB_Num");
this.sceneNode = this.node.getChildByName("SceneBg");
this.topList = [ "加油获得新皮肤吧!", "真的要放弃机会吗?" ];
this.isGameEnd = !1;
},
onEnable: function() {
var e = this;
this.giveUpNode.active = !1;
3 == window.platform ? this.scheduleOnce(function() {
e.giveUpNode.active = !0;
}, 1) : this.scheduleOnce(function() {
e.giveUpNode.active = !0;
}, .2);
},
SetSceneAnim: function() {
for (var e = this, t = function(t) {
var i = e.node.children[t], o = cc.moveBy(.3, cc.v2(-900, 0));
if ("Mask" != i.name && "BTN_GiveUp" != i.name) {
i.setPosition(i.position.x + 900, i.position.y);
var n = .05 + .02 * t;
e.scheduleOnce(function() {
i.runAction(o);
}, n);
}
}, i = 0; i < this.node.childrenCount; i++) t(i);
},
SetSceneJS: function(e, t) {
e && (this.callBack = e);
t && (this.UNCallBack = t);
window.Parent.reportAnalytics("revive_ToUnlock_page_access");
for (var i = window.videoTimes, o = null, n = null, s = 0; s < window.SceneUnlockNumber.length; s++) {
var a = window.SceneUnlockNumber[s];
console.log(a);
if (a > i && null == o) {
o = s;
n = a;
break;
}
}
if (null == o) this.node.active = !1; else {
this.node.active = !0;
this.isGameEnd ? this.numNode.getComponent(cc.Label).string = "继续游戏" : this.numNode.getComponent(cc.Label).string = i.toString() + " / " + n.toString();
this.numNode.getComponent(cc.Label).fontSize = 45;
}
this.tipsLabel = [ "炫酷好玩的节奏世界！", "森林里不止有魔法也有快乐的节奏哦！", "那是遨游在天空的大鱼", "传说那里有一群可爱的蓝精灵！", "夏日炎炎，有你超甜！", "住在这里的神明是一位美丽的仙子！", "去见识一下沙漠里的大骆驼吧！" ];
this.sceneNode.getChildByName("Mask").getChildByName("scene").getComponent(cc.Sprite).spriteFrame = window.sceneStorebg_Sprit[o];
},
OnClickVideoBTN: function() {
window.Parent.reportAnalytics("revive_ToUnlock_vedio_click");
window.Parent.ButtonSounds();
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
console.log("播放视频成功,获得奖励");
e.callBack();
e.closeNode();
} else {
console.log("播放视频失败,无法获取奖励");
e.UNCallBack();
e.closeNode();
}
});
},
OnClickGiveUpBTN: function() {
window.Parent.ButtonSounds();
this.UNCallBack();
this.closeNode();
},
closeNode: function() {
this.isGameEnd = !1;
this.callBack = void 0;
this.UNCallBack = void 0;
window.GetVideo = void 0;
window.GetVideoNode = void 0;
this.node.destroy();
}
});
cc._RF.pop();
}, {} ],
GiftCodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "12878kXLrFN5IC16q9RwaG4", "GiftCodeJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
InputText: cc.Node,
FollowBase: cc.Node
},
onLoad: function() {
this.node.setContentSize(window.screenWidth, window.screenHight);
this.baseNode = this.node.getChildByName("Base");
this.GiftCodeAnim();
3 == window.platform ? this.FollowBase.active = !0 : this.FollowBase.active = !1;
},
onEnable: function() {
o.default.getInstance().reportAnalytics("View_Show_V2", "ConversionUI_Show", 1);
5 == window.platform && window.Parent.hidePushicon();
},
CheckGiftCode: function() {
window.Parent.ButtonSounds();
var e = this.InputText.getComponent(cc.EditBox).string.toUpperCase();
switch (this.GetGiftStr(e)) {
case 0:
window.Parent.showTips("当前礼品码无效");
break;

case 1:
window.Parent.setlocalStorage("GiftCode_" + e, 1);
window.Parent.showTips("礼品码兑换成功");
this.InputText.string = "";
this.node.destroy();
for (var t = 0; t < window.Home.GiftcodeMusicTable.length; t++) {
var i = window.Home.GiftcodeMusicTable[t];
i.ex_cdkey.toUpperCase() == e && window.Home.AddTableMusicList(2, i.musicId);
}
cc.loader.releaseRes("PreFab/GiftNode", cc.Prefab);
break;

case 2:
window.Parent.showTips("当前礼品码已经兑换");
}
},
GetGiftStr: function(e) {
if (window.Home.GiftcodeList.includes(e)) {
return 1 == window.Parent.getlocalStorage("GiftCode_" + e) ? 2 : 1;
}
return 0;
},
OnClickClose: function() {
window.Parent.ButtonSounds();
this.node.destroy();
cc.loader.releaseRes("PreFab/GiftNode", cc.Prefab);
5 == window.platform && window.Parent.showPushicon(256, 256, 200, 1500);
},
OnClickFollow: function() {
window.Home.OnClickDouyin();
},
OnClickCopy: function() {
window.Parent.ButtonSounds();
console.log("OnClickCopy");
window.Parent.showTips("复制成功");
},
GiftCodeAnim: function() {
this.baseNode.setScale(.4);
var e = cc.scaleTo(.15, 1);
this.baseNode.opacity = 0;
var t = cc.fadeIn(.15);
this.baseNode.runAction(e);
this.baseNode.runAction(t);
}
});
cc._RF.pop();
}, {
"./../Help/reportAnalytics": "reportAnalytics"
} ],
GiftJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5d870IFQ5JNVICctpmPydwd", "GiftJS");
cc.Class({
extends: cc.Component,
properties: {
GiftMusicPrefab: cc.Prefab
},
onLoad: function() {
window.GiftNode = this.node;
window.GiftNodeJS = this;
this.defination();
this.definePar();
this.SetBTNEvent();
this.DealGiftList();
window.Home.DayGiftList.length < 3 && (this.node.active = !1);
window.Home.lockDayGiftList && window.Home.lockDayGiftList.length < 3 && 0 == window.manualDate && 1 == window.Home.isShowDate && (this.node.active = !1);
},
onEnable: function() {},
defination: function() {
this.GiftBG = this.node.getChildByName("SP_BG");
this.GiftContent = this.node.getChildByName("view").getChildByName("content");
this.GiftBTN = this.node.getChildByName("BTN_Gift");
},
definePar: function() {},
SetBTNEvent: function() {
this.GiftBTN.on(cc.Node.EventType.TOUCH_END, this.OnClickGift, this);
},
DealGiftList: function() {
this.giftList = [];
var e = window.Home.lockDayGiftList;
if (0 != e.length) {
for (var t = 0; t < e.length; t++) {
var i = null, o = (i = this.GiftContent.children[t] ? this.GiftContent.children[t] : cc.instantiate(this.GiftMusicPrefab)).getComponent("OtherSelectJS"), n = window.Home.lockDayGiftList[t];
i.active = !0;
o.musicName = n.musicName;
o.musicID = n.musicId;
o.musicURL = n.musicFile;
o.orderNumber = n.orderNumber;
o.singerName = n.singerName;
o.unlockType = n.unlockType;
o.unlockNumber = Number(n.unlockCost);
o.pointURL = n.json_normal;
o.listenNum = Number(n.ex_listen);
o.curType = 4;
this.giftList[t] = o;
this.GiftContent.children[t] ? o.UpdateMusicInfo(!0) : this.GiftContent.addChild(i);
}
this.node.height = 220 * e.length + 190;
this.GiftBG.height = 220 * e.length + 180;
e.length >= 3 && (this.GiftBTN.active = !1);
3 == Number(window.Parent.getlocalStorage("GuideNum")) && this.scheduleOnce(function() {
window.Home.AutoGuide();
}, .1);
}
},
OnClickGift: function() {
console.log(" 点击显示礼物界面 ");
window.Parent.ButtonSounds();
window.manualDate = !0;
window.Home.ShowDateGift();
}
});
cc._RF.pop();
}, {} ],
GuideBlockJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bc267K0DRJAvaXBHLbfsYPn", "GuideBlockJS");
cc.Class({
extends: cc.Component,
properties: {
isBreak: !1,
type: "short",
BlockColor: 0
},
onLoad: function() {
this.defination();
this.definePar();
},
onEnable: function() {
this.node.getChildByName("perfectParticle").active = !1;
this.node.opacity = 0;
this.node.scaleX = 0;
this.isshow = !1;
this.ismoving = !1;
this.change = !1;
this.node.getChildByName("block_ef").color = new cc.color(this.block_efColor[this.BlockColor]);
1 === this.moveType && (window.Parent.Random(0, 1) ? cc.tween(this.node).sequence(cc.tween().to(1.5, {
x: 300
}), cc.tween().to(3, {
x: -300
}), cc.tween().to(1.5, {
x: 0
})).repeatForever().start() : cc.tween(this.node).sequence(cc.tween().to(1.5, {
x: -300
}), cc.tween().to(3, {
x: 300
}), cc.tween().to(1.5, {
x: 0
})).repeatForever().start());
2 === this.moveType && (this.node.x > 0 ? cc.tween(this.node).sequence(cc.tween().to(1, {
x: 300
}), cc.tween().to(1.5, {
x: 150
}), cc.tween().to(.5, {
x: 200
})).repeatForever().start() : cc.tween(this.node).sequence(cc.tween().to(1, {
x: -300
}), cc.tween().to(1.5, {
x: -150
}), cc.tween().to(.5, {
x: -200
})).repeatForever().start());
var e = this;
if (this.Game.Ball.z - this.node.z < 2e3 && !this.isshow) {
this.isshow = !0;
this.node.opacity = 255;
"short" === this.type ? cc.tween(this.node).to(.2, {
scaleX: 2
}).start() : cc.tween(this.node).to(.2, {
scaleX: 2.3
}).call(function() {
e.CheckGuideData();
}).start();
}
this.arrowAnim.active = !1;
},
update: function(e) {
var t = this;
if (this.Game.gameStart) {
this.node.z += e * this.Game.playerSpeed;
this.Game.Ball.z - this.node.z < -1e3 && 255 === this.node.opacity && (this.node.opacity = 0);
if (this.Game.Ball.z - this.node.z < 2e3 && !this.isshow) {
this.isshow = !0;
this.node.opacity = 255;
"short" === this.type ? cc.tween(this.node).to(.2, {
scaleX: 2
}).start() : cc.tween(this.node).to(.2, {
scaleX: 2.3
}).call(function() {
t.CheckGuideData();
}).start();
}
if (this.Game.Ball.z - this.node.z < -5e3) if ("long" == this.type) {
this.node.destroy();
void 0 != this.BlockNum0 && void 0 != this.BlockNum1 && (this.Game.pointArr[this.BlockNum0][this.BlockNum1] = void 0);
} else {
this.Game.shortBlockPool.put(this.node);
this.Game.pointArr[this.BlockNum0][this.BlockNum1] = void 0;
}
}
},
defination: function() {
this.arrowAnim = this.node.getChildByName("Arrow_Anim");
this.arrowAnim.active = !1;
},
definePar: function() {
this.block_efColor = [ "#ff01d6", "#fff001", "#00caff" ];
},
CheckGuideData: function() {
if (1 == window.GuideGame.LongBoardCount) {
window.Guide.LightNode = this.node;
this.arrowAnim.active = !0;
window.Guide.GuideChangeBlock();
}
}
});
cc._RF.pop();
}, {} ],
GuideGameJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "639f6kwaZBMeK9+rTCw6HR8", "GuideGameJS");
cc.Class({
extends: cc.Component,
properties: {
PlayerCamera: cc.Node,
liuxingFab: cc.Prefab,
RoadLightFab2: cc.Prefab,
shortPointFab: cc.Prefab,
longPointFab: cc.Prefab,
RoadSpr: [ cc.SpriteFrame ]
},
onLoad: function() {
this.definePar();
this.defineCommonPar();
this.defination();
},
onEnable: function() {
this.definePar();
this.gameinit();
this.setColor();
},
onDisable: function() {
this.ClearAll();
},
update: function(e) {
if (this.gameStart) {
this.creatPoint(this.createBoardNum);
this.musicTime += e;
this.PlayerCamera.x = this.Ball.x / 2;
this.Training.y = this.BallModel.getChildByName("BallModel").y;
} else {
this.BallParticle.active = !1;
this.Faill && (this.Ball.y -= 1e3 * e);
}
this.colorChanging && this.setColor();
this.BallMove && (this.Ball.x = this.movingBlock.x + this.DuceLength);
},
defineCommonPar: function() {
window.GuideGame = this;
window.GuideGameNode = this.node;
this.node.setContentSize(cc.view.getVisibleSize().width, cc.view.getVisibleSize().height);
},
defination: function() {
this.bg = this.node.getChildByName("background");
this.Aurora0 = this.node.getChildByName("Aurora0");
this.Aurora1 = this.node.getChildByName("Aurora1");
this.Aurora2 = this.node.getChildByName("Aurora2");
this.MusicLine = this.node.getChildByName("MusicLine");
this.musicLine = [];
for (var e = 0; e < 27; e++) {
this.musicLine[e] = this.MusicLine.getChildByName("line".concat(e));
this.musicLine[e].getComponent("LineJS").Number = e;
}
this.ScoreNode = this.node.getChildByName("Score");
this.progressNode = this.node.getChildByName("progress_bg");
this.PlayerNode = this.node.getChildByName("PlayerNode");
this.Road = this.PlayerNode.getChildByName("Road");
this.RoadLight = this.Road.getChildByName("RoadLight");
this.Ball = this.PlayerNode.getChildByName("Ball");
this.breakParticle = this.Ball.getChildByName("breakParticle");
this.BallModel = this.Ball.getChildByName("BallModel");
this.BallParticle = this.BallModel.getChildByName("BallParticle");
this.Training = this.BallModel.getChildByName("Training");
this.pauseNode = this.node.getChildByName("pauseNode");
this.pauseTitle = this.pauseNode.getChildByName("pauseTitle");
this.Toucheara = this.node.getChildByName("Toucheara");
this.Finger = this.node.getChildByName("Finger");
this.FingerLabel = this.Finger.getChildByName("label");
this.lampbg = this.node.getChildByName("lampbg");
this.lamp = this.node.getChildByName("lampbg").getChildByName("lamp");
},
definePar: function() {
this.colornum = 0;
this.color = [ [ 107, 0, 0 ], [ 126, 0, 65 ], [ 93, 0, 155 ], [ 0, 13, 160 ], [ 0, 107, 13 ], [ 124, 64, 0 ] ];
this.redNum = this.color[this.colornum][0];
this.greenNum = this.color[this.colornum][1];
this.blueNum = this.color[this.colornum][2];
this.RandNum = [ [ 0, 1, 2 ], [ 0, 2, 1 ], [ 1, 0, 2 ], [ 1, 2, 0 ], [ 2, 0, 1 ], [ 2, 1, 0 ] ];
this.TrilingColor = [ "#ff01d6", "#fff001", "#00caff" ];
this.RoadLightColor2 = [ new cc.color("#FFFFFF"), new cc.color("#FFEE25"), new cc.color("#FF83E6"), new cc.color("#55B4FF"), new cc.color("#4EA6AA"), new cc.color("#FF7764"), new cc.color("#FFEC18") ];
this.perfectParticleColor = [ new cc.color("#FF02CE"), new cc.color("#fffa08"), new cc.color("#0bc3ff") ];
this.pointArr = [];
this.musicTime = 0;
this.createBoardNum = 1;
this.LiuxingPool = new cc.NodePool();
this.shortBlockPool = new cc.NodePool();
this.longBlockPool = new cc.NodePool();
this.gameStart = !1;
this.BallMove = !1;
this.isRelive = !1;
this.pause = !1;
this.Faill = !1;
this.Gameend = !1;
this.touchPointNum = 0;
this.perfectNum = 0;
this.jumpCunt = 0;
this.pointcunt = 0;
this.LastColor = 1;
this.CreatLongBorad = !1;
this.pointzIndex = 500;
this.playerSpeed = 1e3;
this.allowDirect = !1;
this.DuceLength = 0;
this.pauseTimes = 0;
this.LongBoardCount = 0;
},
LoadRes: function() {
this.allResNum = 0;
this.resnum = 0;
var e = this;
this.allResNum++;
this.bgSP = null;
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/BGPicture/background0.jpg",
type: "jpg"
}, function(t, i) {
if (t) ; else {
e.bgSP = new cc.SpriteFrame(i);
console.log("场景背景 加载完成");
e.bg.getComponent(cc.Sprite).spriteFrame = e.bgSP;
e.resnum++;
e.resnum >= e.allResNum && e.LoadMusicData();
}
});
this.allResNum++;
this.roadSP = null;
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/RoadPicture/Road0.png",
type: "png"
}, function(t, i) {
if (t) ; else {
e.roadSP = new cc.SpriteFrame(i);
console.log("场景路面 加载完成");
e.Road.getComponent(cc.Sprite).spriteFrame = e.roadSP;
e.resnum++;
e.resnum >= e.allResNum && e.LoadMusicData();
}
});
this.allResNum++;
window.shortShadow_Sprit = [];
cc.loader.loadResDir("短节奏点影子", cc.SpriteFrame, function(t, i) {
if (t) console.log("短节奏点影子加载出错"); else {
console.log("短节奏点影子加载完成");
for (var o = 0; o < i.length; o++) window.shortShadow_Sprit[o] = i.find(function(e) {
return e.name === "a".concat(o);
});
e.resnum++;
e.resnum >= e.allResNum && e.LoadMusicData();
}
});
this.allResNum++;
window.PointMateral = [];
cc.loader.loadResDir("节奏点材质", cc.Material, function(t, i) {
if (t) console.log("节奏点材质加载出错"); else {
console.log("节奏点材质加载完成");
for (var o = 0; o < i.length; o++) window.PointMateral[o] = i.find(function(e) {
return e.name === "a".concat(o);
});
e.resnum++;
e.resnum >= e.allResNum && e.LoadMusicData();
}
});
this.allResNum++;
window.ColorMateral = [];
cc.loader.loadResDir("球球材质", cc.Material, function(t, i) {
if (t) console.log("球球材质加载出错"); else {
console.log("球球材质加载完成");
for (var o = 0; o < i.length; o++) window.ColorMateral[o] = i.find(function(e) {
return e.name === "a".concat(o);
});
e.resnum++;
e.resnum >= e.allResNum && e.LoadMusicData();
}
});
this.allResNum++;
cc.loader.loadRes("PreFab/GuideModelSelect", cc.Prefab, function(t, i) {
if (t) console.log("GuideModelSelect 加载出错"); else {
console.log("GuideModelSelect 加载完成");
window.GuideModelPre = i;
e.resnum++;
e.resnum >= e.allResNum && e.LoadMusicData();
}
});
},
LoadMusicData: function() {
console.log("加载新手音乐资源");
var e = this;
this.curMusicData = [];
this.curPointData = [];
for (var t = 0; t < window.NetMusicTable.length; t++) {
var i = window.NetMusicTable[t];
"新手关卡" == i.musicName && (this.curMusicData = i);
}
this.musicOK = !1;
this.pointOK = !1;
window.Guide.LoadMusic(this.curMusicData.musicFile, this.curMusicData.musicId, function(t) {
console.log("加载音乐资源ok");
e.musicOK = !0;
1 == e.musicOK && 1 == e.pointOK && e.SetPointData();
window.Bgmusic = t;
});
window.Guide.LoadPoint(this.curMusicData.json_normal, this.curMusicData.musicId, function(t) {
console.log("记载节奏点");
for (var i = t, o = 0, n = 0; n < i.length; n++) {
var s = i[n];
if ("light" == s.pressKey) {
e.curPointData[o] = s;
o++;
}
}
for (var a = 0; a < e.curPointData.length; a++) e.pointArr[a] = new Array();
for (a = 0; a < e.curPointData.length; a++) for (var c = 0; c < 3; c++) e.pointArr[a][c] = void 0;
e.pointOK = !0;
1 == e.musicOK && 1 == e.pointOK && e.SetPointData();
});
},
gameinit: function() {
window.Guide.LoadingNode.active = !0;
console.log("游戏初始化");
this.ballColor = Math.floor(2 * Math.random());
this.Ball.setPosition(cc.v3(0, 0, 0));
this.Ball.zIndex = 1e3;
this.PlayerCamera.setPosition(cc.v3(0, 800, 800));
this.lampbg.active = !0;
this.lampbg.color = new cc.color("#AD80D1");
this.lampbg.y = cc.view.getVisibleSize().height / 6.4;
this.lamp.color = new cc.color("#FFFFFF");
this.Road.color = new cc.color("#FFFFFF");
this.Road.getComponent(cc.Sprite).spriteFrame = this.RoadSpr[0];
this.Road.opacity = 55;
this.MusicLine.active = !0;
this.MusicLine.y = cc.view.getVisibleSize().height / 6.4 + 20;
this.Aurora0.active = !0;
this.Aurora1.active = !0;
this.Aurora2.active = !0;
this.Aurora0.y = this.lampbg.y - 100;
this.Aurora1.y = this.lampbg.y - 100;
this.Aurora2.y = this.lampbg.y - 100;
this.Finger.color = new cc.color("#FFFFFF");
this.Finger.getChildByName("label").color = new cc.color("#FFFFFF");
this.LoadRes();
this.setschedule();
this.scheduleOnce(function() {
this.allowTouch();
}, .1);
0 == window.Guide.guideNum && cc.director.preloadScene("Game");
},
SetPointData: function() {
var e = this;
console.log("设置对应的点信息");
if (this.FirstBlock) {
this.FirstBlock.destroy();
this.FirstBlock = void 0;
}
var t = cc.instantiate(this.longPointFab);
t.setPosition(0, -50, 0);
t.getChildByName("shadow").getComponent(cc.Sprite).spriteFrame = window.shortShadow_Sprit[this.ballColor];
t.getChildByName("BoradModel").getComponent(cc.MeshRenderer).setMaterial(0, window.PointMateral[this.ballColor]);
t.getComponent("GuideBlockJS").BlockColor = this.ballColor;
t.getComponent("GuideBlockJS").Game = this;
t.getComponent("GuideBlockJS").type = "long";
this.FirstBlock = t;
this.PlayerNode.addChild(t);
this.perColor = this.ballColor;
this.BallModel.setScale(1);
this.BallModel.y = 0;
this.BallModel.getChildByName("BallModel").getComponent(cc.MeshRenderer).setMaterial(0, window.ColorMateral[this.ballColor]);
this.ballModle = window.ColorMateral[this.ballColor];
this.Training.getComponent(cc.MotionStreak).color = new cc.color(this.TrilingColor[this.ballColor]);
for (var i = 0; i < 10; i++) {
this.creatPoint(this.createBoardNum);
9 == i && (this.Ball.active = !0);
}
this.scheduleOnce(function() {
window.Guide.LoadingNode.active = !1;
window.Guide.StartWelcome();
}, 1);
1 == window.Guide.guideNum && this.scheduleOnce(function() {
e.CreatLongBorad = !0;
}, 4.5);
},
setschedule: function() {
var e = 0;
this.schedule(function() {
this.creatLiuxing();
if (++e % 4 == 0) {
e = 0;
this.ChangeColor();
this.CreatRoadLight2();
}
}, 1);
},
setColor: function() {
var e = new cc.Color();
e.setR(this.redNum);
e.setG(this.greenNum);
e.setB(this.blueNum);
this.bg.color = e;
for (var t = 0; t < this.musicLine.length; t++) this.musicLine[t].color = e;
},
ChangeColor: function() {
this.colorChanging = !0;
var e = this.colornum + 1;
e >= this.color.length && (e = 0);
var t = this.color[e][0] - this.color[this.colornum][0], i = this.color[e][1] - this.color[this.colornum][1], o = this.color[e][2] - this.color[this.colornum][2], n = 300, s = n;
this.Change = function() {
this.redNum += t / s;
this.blueNum += o / s;
this.greenNum += i / s;
if (0 === --n) {
this.redNum = this.color[e][0];
this.greenNum = this.color[e][1];
this.blueNum = this.color[e][2];
this.unschedule(this.Change);
this.colornum++;
this.colornum >= this.color.length && (this.colornum = 0);
this.colorChanging = !1;
}
};
this.schedule(this.Change, .01, 300, 0);
},
creatLiuxing: function() {
var e = this;
if (this.LiuxingPool.size() > 0) var t = this.LiuxingPool.get(); else t = cc.instantiate(this.liuxingFab);
var i = 1600 * Math.random(), o = cc.view.getVisibleSize().height / 2 + 20;
t.opacity = 255;
t.setPosition(i, o);
t.color = new cc.color("#E48DFF");
this.node.addChild(t);
t.runAction(cc.moveTo(2, i - 1017.6, o - 636));
this.scheduleOnce(function() {
t.runAction(cc.sequence(cc.fadeOut(.5), cc.callFunc(function() {
e.LiuxingPool.put(t);
})));
}, 1.5);
},
CreatRoadLight2: function() {
if (!(window.SceneNumber <= 0) && this.gameStart) {
var e = cc.instantiate(this.RoadLightFab2);
e.setPosition(0, 8e3, 0);
e.color = new cc.color(this.RoadLightColor2[window.SceneNumber]);
this.Road.addChild(e);
}
},
starMusicLine: function() {
for (var e = 0; e < this.musicLine.length; e++) {
var t = 1 - Math.abs(this.musicLine[e].getComponent("LineJS").Number - 13) / 15, i = (Math.floor(40 * Math.random()) + 10) / 100 + t / 2;
this.musicLine[e].getComponent("LineJS").targetlength = i;
this.musicLine[e].getComponent("LineJS").changeTime = .06;
this.musicLine[e].getComponent("LineJS").starChangetLine();
}
},
ClearAll: function() {
for (var e = 0; e < this.pointArr.length; e++) for (var t = 0; t < 3; t++) void 0 != this.pointArr[e][t] && this.pointArr[e][t].destroy();
},
allowTouch: function() {
this.Toucheara.on(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.Toucheara.on(cc.Node.EventType.TOUCH_MOVE, this.touchmove, this);
this.Toucheara.on(cc.Node.EventType.TOUCH_END, this.touchend, this);
},
forbidTouch: function() {
this.Toucheara.off(cc.Node.EventType.TOUCH_START, this.touchStart, this);
this.Toucheara.off(cc.Node.EventType.TOUCH_MOVE, this.touchmove, this);
this.Toucheara.off(cc.Node.EventType.TOUCH_END, this.touchend, this);
},
touchStart: function(e) {
if (3 === window.platform || 4 === window.platform || 5 === window.platform) this.touchPointNum++; else if (0 != e.getID()) return;
if (!this.gameStart) {
this.touchPointNum = 1;
this.BallMove = !1;
this.DuceLength = 0;
this.Finger.active = !1;
this.gameStart = !0;
this.BallParticle.active = !0;
window.musicisplaying = !0;
if (this.isRelive) {
this.pauseNode.active = !1;
console.log("复活恢复音乐");
window.Guide.audioEngine.resumeMusic();
this.BallJump();
this.isRelive = !1;
if ("undefined" != typeof qq) {
var t = 1e3 * this.musicPauseTime;
window.Guide.audioEngine.setMusicTime(t);
}
} else if (this.pause) {
this.pauseNode.active = !1;
console.log("暂停恢复音乐");
window.Guide.audioEngine.resumeMusic();
this.BallModel.resumeAllActions();
this.pause = !1;
} else {
this.CreatRoadLight2();
window.Guide.audioEngine.playMusic(window.Bgmusic, !1);
this.BallJump();
}
}
if (window.Guide) {
if (window.Guide.curTipNode && 1 == window.Guide.curTipNode.active) {
window.Guide.curTipNode.getComponent("GuideTipsJS").HideTipsAnim();
window.Guide.curTipNode = null;
}
window.Guide.pressAnim && (window.Guide.pressAnim.active = !1);
if (window.Guide.LightNode) {
window.Guide.LightNode.group = "Player";
window.Guide.LightNode.getChildByName("Arrow_Anim").group = "Player";
window.Guide.LightNode.parent = this.PlayerNode;
window.Guide.LightNode.position = window.Guide.LastLightPos;
window.Guide.LightNode = null;
}
}
},
touchmove: function(e) {
if (3 === window.platform || 4 === window.platform || 5 === window.platform) {
if (1 != this.touchPointNum) return;
} else if (0 != e.getID()) return;
if (1 == this.allowDirect) {
if (5 === window.platform) if (window.MoveModle) var t = 2.5 * e.getDelta().x; else t = 2 * e.getDelta().x; else if (window.MoveModle) t = 3 * e.getDelta().x; else t = 2.5 * e.getDelta().x;
this.Ball.x += t;
this.Ball.x >= 400 && (this.Ball.x = 400);
this.Ball.x <= -400 && (this.Ball.x = -400);
}
},
touchend: function(e) {
if (3 === window.platform || 4 === window.platform || 5 === window.platform) {
this.touchPointNum--;
if (0 != this.touchPointNum || 4 === window.platform) return;
} else if (0 != e.getID()) return;
this.pauseGame();
},
pauseGame: function() {
if ("ios" !== window.PhoneType) {
cc.log("暂停游戏");
this.pauseTimes++;
1 == this.pauseTimes && window.Guide.GuideContinue();
this.pause = !0;
this.Finger.active = !0;
this.pauseNode.active = !0;
this.gameStart = !1;
this.BallModel.pauseAllActions();
this.musicPauseTime = window.Guide.audioEngine.getCurrentTime();
window.Guide.audioEngine.pauseMusic();
this.FingerLabel.active = this.allowDirect;
}
},
GameReplay: function() {
window.Guide.audioEngine.stopAll();
this.ClearAll();
this.node.active = !1;
this.node.active = !0;
},
creatPoint: function(e) {
if (!(this.pointcunt >= this.curPointData.length)) {
this.gameTime = 1e3 * window.Guide.audioEngine.getCurrentTime();
isNaN(this.gameTime) && (this.gameTime = 0);
if (Math.abs(this.gameTime / 1e3 - this.musicTime) > .2) {
console.log("音乐时间有误");
this.gameTime = 1e3 * this.musicTime;
} else this.musicTime = this.gameTime / 1e3;
var t = this.curPointData[this.pointcunt].time + .15 - this.gameTime, i = Math.abs(t * this.playerSpeed / 1e3);
if (!(this.pointcunt - this.jumpCunt > 8)) {
var o = 0;
if (this.pointcunt > 0) o = this.curPointData[this.pointcunt].time - this.curPointData[this.pointcunt - 1].time;
console.log("forwardTime ： ", o);
this.pointArr[this.pointcunt] = new Array();
var n = null;
console.log("开始创建板子");
var s = this;
if (this.pointcunt == this.curPointData.length - 1 || this.CreatLongBorad && o > 200) {
console.log("创建长板");
this.aimNum = null;
var a = Math.floor(2 * Math.random());
if (a === this.ballColor) return;
if (a === this.lastLongBoradColor) return;
this.lastLongBoradColor = a;
var c = i;
(n = cc.instantiate(this.longPointFab)).zIndex = this.pointzIndex;
this.pointcunt === this.curPointData.length - 1 && (a = this.ballColor);
this.perColor = a;
n.getChildByName("shadow").getComponent(cc.Sprite).spriteFrame = window.shortShadow_Sprit[a];
n.getChildByName("BoradModel").getComponent(cc.MeshRenderer).setMaterial(0, window.PointMateral[a]);
n.getComponent("GuideBlockJS").Game = this;
n.getComponent("GuideBlockJS").type = "long";
n.getComponent("GuideBlockJS").BlockColor = a;
n.getComponent("GuideBlockJS").BlockNum0 = this.pointcunt;
n.getComponent("GuideBlockJS").BlockNum1 = 0;
n.getComponent("GuideBlockJS").moveType = 0;
n.setPosition(0, -50, -c);
this.PlayerNode.addChild(n);
this.pointArr[this.pointcunt][0] = n;
this.CreatLongBorad = !1;
this.LongBoardCount++;
3 == window.GuideGame.createBoardNum && this.scheduleOnce(function() {
s.CreatLongBorad = !0;
}, 8);
} else {
console.log("创建短板");
var r = Math.floor(Math.random() * (this.RandNum.length - 1));
r = this.LastColor;
if (3 == e) if (null == this.aimNum) {
if (this.pointcunt > 2) {
if ("long" === this.pointArr[this.pointcunt - 1][0].getComponent("GuideBlockJS").type) for (var l = this.pointArr[this.pointcunt - 1][0].getComponent("GuideBlockJS").BlockColor, d = 0; d < 6; d++) if (this.RandNum[d][1] === l) {
r = d;
break;
}
} else for (l = this.FirstBlock.getComponent("GuideBlockJS").BlockColor, d = 0; d < 6; d++) if (this.RandNum[d][1] === l) {
r = d;
break;
}
this.aimNum = r;
} else r = this.aimNum; else if (null == this.aimNum) {
var h = null;
for (d = this.pointcunt; d > 0; d--) if (this.pointArr[d][0] && "long" === this.pointArr[d][0].getComponent("GuideBlockJS").type) {
h = this.pointArr[d][0].getComponent("GuideBlockJS").BlockColor;
break;
}
null === h && (h = this.ballColor);
for (var u = !1; !u; ) {
var w = Math.floor(Math.random() * (this.RandNum.length - 1));
for (d = 0; d < e; d++) if (this.RandNum[w][d] === h) {
r = w;
u = !0;
s.aimNum = r;
}
}
} else r = this.aimNum;
for (d = 0; d < e; d++) {
c = i;
(n = this.shortBlockPool.size() > 0 ? this.shortBlockPool.get() : cc.instantiate(this.shortPointFab)).zIndex = this.pointzIndex;
n.getChildByName("shadow").getComponent(cc.Sprite).spriteFrame = window.shortShadow_Sprit[this.RandNum[r][d]];
n.getChildByName("BoradModel").getComponent(cc.MeshRenderer).setMaterial(0, window.PointMateral[this.RandNum[r][d]]);
n.getComponent("GuideBlockJS").Game = this;
n.getComponent("GuideBlockJS").type = "short";
n.getComponent("GuideBlockJS").BlockColor = this.RandNum[r][d];
n.getComponent("GuideBlockJS").BlockNum0 = this.pointcunt;
n.getComponent("GuideBlockJS").BlockNum1 = d;
n.getComponent("GuideBlockJS").moveType = 3;
switch (e) {
case 1:
n.setPosition(0, -50, -c);
break;

case 2:
n.setPosition(400 * d - 200, -50, -c);
break;

case 3:
n.setPosition(300 * d - 300, -50, -c);
}
this.PlayerNode.addChild(n);
this.pointArr[this.pointcunt][d] = n;
this.LastColor = r;
}
}
this.pointcunt++;
this.pointzIndex--;
if (0 == window.Guide.guideNum) if (14 == this.pointcunt) {
window.GuideGame.createBoardNum = 2;
window.GuideGame.CreatLongBorad = !0;
} else if (32 == this.pointcunt) {
window.GuideGame.createBoardNum = 3;
window.GuideGame.CreatLongBorad = !0;
}
}
}
},
BallJump: function() {
var e = this;
console.log("目标节奏点", this.jumpCunt);
if (this.jumpCunt === this.curPointData.length) {
this.forbidTouch();
this.Training.active = !1;
this.playerSpeed = 3e3;
cc.tween(this.Ball).to(.5, {
x: 0
}, {
y: 0
}).start();
this.BallAction = this.BallModel.runAction(cc.sequence(cc.jumpTo(.5, 0, 600, 0, 1).easing(cc.easeInOut(.5)), cc.callFunc(function() {
cc.tween(e.BallModel).to(.5, {
scale: 0
}).call(function() {
e.BallParticle.active = !1;
e.breakParticle.y = e.BallModel.y;
e.breakParticle.getComponent(cc.ParticleSystem).resetSystem();
e.scheduleOnce(function() {
e.gameStart = !1;
e.Training.active = !0;
e.showWinNode();
}, 1);
}).start();
})));
} else if (this.pointArr[this.jumpCunt][0] && 1 == this.pointArr[this.jumpCunt][0].active) {
var t = (i = Math.abs(this.Ball.z - this.pointArr[this.jumpCunt][0].z - 10)) / this.playerSpeed;
(o = i) <= 200 && (o = 200);
o >= 400 && (o = 400);
this.Training.getComponent(cc.MotionStreak).fadeTime = t / 3;
this.BallModel.stopAllActions();
this.BallAction = this.BallModel.runAction(cc.sequence(cc.jumpTo(t, 0, 0, o, 1).easing(cc.easeInOut(.5)), cc.callFunc(function() {
e.checkBlock();
})));
} else {
if (this.isRelive || this.pause) var i = (this.curPointData[this.jumpCunt].time - 1e3 * this.musicPauseTime) / 1e3 * this.playerSpeed; else i = (this.curPointData[this.jumpCunt].time - 1e3 * window.Guide.audioEngine.getCurrentTime()) / 1e3 * this.playerSpeed;
var o;
t = (i = Math.abs(i)) / this.playerSpeed;
(o = i) <= 200 && (o = 200);
o >= 400 && (o = 400);
this.Training.getComponent(cc.MotionStreak).fadeTime = t / 3;
this.BallAction = this.BallModel.runAction(cc.sequence(cc.jumpTo(t, 0, 0, o, 1).easing(cc.easeInOut(.5)), cc.callFunc(function() {
e.checkBlock();
})));
}
3 == this.jumpCunt && 0 == this.pauseTimes && window.Guide.GuidePause();
},
checkBlock: function() {
var e = this;
console.log("判断是否结束游戏");
var t = !1;
this.hasOnborad = !1;
this.ColorRight = !0;
for (var i = 0; i < 3; i++) if (void 0 != this.pointArr[this.jumpCunt][i] && "short" === this.pointArr[this.jumpCunt][0].getComponent("GuideBlockJS").type && 1 == this.pointArr[this.jumpCunt][i].active) {
if ((a = Math.abs(this.Ball.x - this.pointArr[this.jumpCunt][i].x)) <= 150) {
if (this.pointArr[this.jumpCunt][i].getComponent("GuideBlockJS").change) {
this.pointArr[this.jumpCunt][i].getChildByName("BoradModel").getComponent(cc.MeshRenderer).setMaterial(0, window.PointMateral[this.pointArr[this.jumpCunt][i].getComponent("GuideBlockJS").BlockColor]);
this.pointArr[this.jumpCunt][i].getChildByName("shadow").getComponent(cc.Sprite).spriteFrame = window.shortShadow_Sprit[this.pointArr[this.jumpCunt][i].getComponent("GuideBlockJS").BlockColor];
}
this.hasOnborad = !0;
var o = this.pointArr[this.jumpCunt][i].getComponent("GuideBlockJS").BlockColor;
if (this.ballColor != o && 0 == t) {
this.ColorRight = !1;
this.movingBlock = this.pointArr[this.jumpCunt][i];
this.DuceLength = this.Ball.x - this.pointArr[this.jumpCunt][i].x;
this.BallMove = !0;
} else if (this.ballColor == o) {
t = !0;
this.ColorRight = !0;
this.movingBlock = null;
this.DuceLength = 0;
this.BallMove = !1;
}
if (this.ColorRight && this.ballColor == o) {
window.Guide.shakePhone("short");
this.starMusicLine();
if (a < 50) {
this.pointArr[this.jumpCunt][i].getChildByName("perfectParticle").active = !0;
this.pointArr[this.jumpCunt][i].getChildByName("perfectParticle").getComponent(cc.ParticleSystem).startColor = this.perfectParticleColor[o];
this.pointArr[this.jumpCunt][i].getChildByName("perfectParticle").getComponent(cc.ParticleSystem).resetSystem();
this.pointArr[this.jumpCunt][i].getChildByName("perfactLight").active = !0;
var n = this.jumpCunt, s = i;
this.scheduleOnce(function() {
this.pointArr[n][s].getChildByName("perfactLight").active = !1;
}, .2);
this.perfectNum++;
}
cc.tween(this.pointArr[this.jumpCunt][i].getChildByName("BoradModel")).to(.1, {
position: cc.v3(0, -20, 0)
}).to(.1, {
position: cc.v3(0, 0, 0)
}).start();
cc.tween(this.pointArr[this.jumpCunt][i].getChildByName("shadow")).to(.1, {
position: cc.v3(0, -70, 0)
}).to(.1, {
position: cc.v3(0, -50, 0)
}).start();
this.pointArr[this.jumpCunt][i].getChildByName("block_ef").setScale(0);
this.pointArr[this.jumpCunt][i].getChildByName("block_ef").opacity = 255;
this.pointArr[this.jumpCunt][i].getChildByName("block_ef").active = !0;
this.pointArr[this.jumpCunt][i].getChildByName("block_ef").runAction(cc.scaleTo(.5, 4));
this.pointArr[this.jumpCunt][i].getChildByName("block_ef").runAction(cc.fadeOut(.4));
}
}
}
if ("long" === this.pointArr[this.jumpCunt][0].getComponent("GuideBlockJS").type) {
window.Guide.shakePhone("short");
var a;
if ((a = Math.abs(this.Ball.x - this.pointArr[this.jumpCunt][0].x)) < 50) {
o = this.pointArr[this.jumpCunt][0].getComponent("GuideBlockJS").BlockColor;
this.pointArr[this.jumpCunt][0].getChildByName("perfectParticle").active = !0;
this.pointArr[this.jumpCunt][0].getChildByName("perfectParticle").getComponent(cc.ParticleSystem).startColor = this.perfectParticleColor[o];
this.pointArr[this.jumpCunt][0].getChildByName("perfectParticle").getComponent(cc.ParticleSystem).resetSystem();
n = this.jumpCunt;
this.pointArr[this.jumpCunt][0].getChildByName("perfactLight").active = !0;
this.scheduleOnce(function() {
this.pointArr[n][0].getChildByName("perfactLight").active = !1;
}, .2);
}
this.starMusicLine();
this.hasOnborad = !0;
this.perfectNum++;
cc.tween(this.pointArr[this.jumpCunt][0].getChildByName("BoradModel")).to(.1, {
position: cc.v3(0, -20, 0)
}).to(.1, {
position: cc.v3(0, 0, 0)
}).start();
cc.tween(this.pointArr[this.jumpCunt][0].getChildByName("shadow")).to(.1, {
position: cc.v3(0, -70, 0)
}).to(.1, {
position: cc.v3(0, -50, 0)
}).start();
this.pointArr[this.jumpCunt][0].getChildByName("block_ef").setScale(0);
this.pointArr[this.jumpCunt][0].getChildByName("block_ef").opacity = 255;
this.pointArr[this.jumpCunt][0].getChildByName("block_ef").active = !0;
this.pointArr[this.jumpCunt][0].getChildByName("block_ef").runAction(cc.scaleTo(.5, 4));
this.pointArr[this.jumpCunt][0].getChildByName("block_ef").runAction(cc.fadeOut(.4));
this.BallModel.getChildByName("BallModel").getComponent(cc.MeshRenderer).setMaterial(0, window.ColorMateral[this.pointArr[this.jumpCunt][0].getComponent("GuideBlockJS").BlockColor]);
this.ballModle = window.ColorMateral[this.pointArr[this.jumpCunt][0].getComponent("GuideBlockJS").BlockColor];
this.ballColor = this.pointArr[this.jumpCunt][0].getComponent("GuideBlockJS").BlockColor;
this.Training.getComponent(cc.MotionStreak).color = new cc.color(this.TrilingColor[this.ballColor]);
if (0 == window.Guide.guideNum) if (1 == this.LongBoardCount) {
this.allowDirect = !0;
window.Guide.GuideTipsMove();
this.pointArr[this.jumpCunt][0].getComponent("GuideBlockJS").arrowAnim.active = !1;
if (this.pointArr[this.jumpCunt + 1]) {
for (var c = null, r = 0; r < this.pointArr[this.jumpCunt + 1].length; r++) {
var l = this.pointArr[this.jumpCunt + 1][r];
l.getComponent("GuideBlockJS").BlockColor == this.pointArr[this.jumpCunt][0].getComponent("GuideBlockJS").BlockColor && (c = l);
}
c.getComponent("GuideBlockJS").arrowAnim.active = !0;
window.Guide.LastLightPos = c.position;
window.Guide.LightNode = c;
var d = window.Guide.LightNode.parent.convertToWorldSpaceAR(window.Guide.LightNode.position), h = window.GuideGameNode.convertToNodeSpaceAR(d);
window.Guide.LightNode.parent = window.GuideGameNode;
window.Guide.LightNode.position = h;
window.Guide.LightNode.getChildByName("Arrow_Anim").group = "Model";
window.Guide.LightNode.group = "Model";
}
this.scheduleOnce(function() {
e.CreatLongBorad = !0;
e.createBoardNum = 3;
}, 5);
} else if (2 == this.LongBoardCount) {
window.Guide.GuideTriple();
if (this.pointArr[this.jumpCunt + 1]) {
for (var u = null, w = 0; w < this.pointArr[this.jumpCunt + 1].length; w++) {
var m = this.pointArr[this.jumpCunt + 1][w];
m.getComponent("GuideBlockJS").BlockColor == this.pointArr[this.jumpCunt][0].getComponent("GuideBlockJS").BlockColor && (u = m);
}
u.getComponent("GuideBlockJS").arrowAnim.active = !0;
window.Guide.LastLightPos = u.position;
window.Guide.LightNode = u;
var g = window.Guide.LightNode.parent.convertToWorldSpaceAR(window.Guide.LightNode.position), p = window.GuideGameNode.convertToNodeSpaceAR(g);
window.Guide.LightNode.parent = window.GuideGameNode;
window.Guide.LightNode.position = p;
window.Guide.LightNode.getChildByName("Arrow_Anim").group = "Model";
window.Guide.LightNode.group = "Model";
}
}
} else for (var f = 0; f < this.pointArr[this.jumpCunt].length; f++) {
var S = this.pointArr[this.jumpCunt][f].getComponent("GuideBlockJS");
1 == S.arrowAnim.active && (S.arrowAnim.active = !1);
}
if (this.hasOnborad && this.ColorRight) {
this.Training.setPosition(0, 0);
this.BallModel.getChildByName("BallModel").setPosition(0, 0);
this.jumpCunt++;
this.BallJump();
} else {
this.forbidTouch();
window.Guide.shakePhone("long");
this.musicPauseTime = window.Guide.audioEngine.getCurrentTime();
4 === window.platform ? window.Guide.audioEngine.stopAll() : window.Guide.audioEngine.pauseMusic();
window.musicisplaying = !1;
this.gameStart = !1;
if (this.hasOnborad) {
this.BallModel.y = 0;
this.Gameend = !0;
this.scheduleOnce(function() {
this.Ball.runAction(cc.blink(1.5, 3));
}, .2);
this.scheduleOnce(function() {
this.GameRelive();
window.Guide.GuideDeadError();
}, 2);
} else {
this.Ball.zIndex = 10;
this.Faill = !0;
this.Gameend = !0;
this.scheduleOnce(function() {
this.GameRelive();
window.Guide.GuideDeadFall();
}, 1);
}
}
},
GameRelive: function() {
console.log("玩家复活");
this.BallModel.getChildByName("BallModel").getComponent(cc.MeshRenderer).setMaterial(0, this.ballModle);
this.comboom = 0;
this.Finger.active = !0;
this.isRelive = !0;
window.isGaming = !0;
this.Ball.zIndex = 1e3;
this.Ball.y = 0;
this.BallModel.y = 0;
this.Training.active = !1;
this.allowTouch();
this.Faill = !1;
for (var e = 0; e < 3; e++) {
if (void 0 != this.pointArr[this.jumpCunt][e] && this.pointArr[this.jumpCunt][e].getComponent("GuideBlockJS").BlockColor == this.ballColor) {
this.Ball.x = this.pointArr[this.jumpCunt][e].x;
this.movingBlock = this.pointArr[this.jumpCunt][e];
this.DuceLength = 0;
this.BallMove = !0;
if (this.pointArr[this.jumpCunt][e].getComponent("GuideBlockJS").change) {
this.pointArr[this.jumpCunt][e].getChildByName("BoradModel").getComponent(cc.MeshRenderer).setMaterial(0, window.PointMateral[this.pointArr[this.jumpCunt][e].getComponent("GuideBlockJS").BlockColor]);
this.pointArr[this.jumpCunt][e].getChildByName("shadow").getComponent(cc.Sprite).spriteFrame = window.shortShadow_Sprit[this.pointArr[this.jumpCunt][e].getComponent("GuideBlockJS").BlockColor];
}
}
for (var t = 0; t < 6; t++) if (this.jumpCunt + t < this.curPointData.length && void 0 != this.pointArr[this.jumpCunt + t][e]) {
this.pointArr[this.jumpCunt + t][e].getChildByName("BoradModel").getComponent(cc.MeshRenderer).setMaterial(0, window.PointMateral[this.pointArr[this.jumpCunt + t][e].getComponent("GuideBlockJS").BlockColor]);
this.pointArr[this.jumpCunt + t][e].getChildByName("shadow").getComponent(cc.Sprite).spriteFrame = window.shortShadow_Sprit[this.pointArr[this.jumpCunt + t][e].getComponent("GuideBlockJS").BlockColor];
}
}
this.PlayerCamera.x = this.Ball.x / 2;
this.Training.active = !0;
this.jumpCunt++;
},
showWinNode: function() {
console.log("展示对应胜利界面");
if (0 == window.Guide.guideNum) {
window.Guide.guideNum = 1;
cc.sys.localStorage.setItem("GuideNum", 1);
window.Guide.GuideEnd();
this.scheduleOnce(function() {
cc.director.loadScene("Game");
}, 6);
}
},
ShowModelSelect: function() {
window.Guide.GuideWin();
this.scheduleOnce(function() {
var e = cc.instantiate(window.GuideModelPre);
e.setPosition(0, 0);
window.GuideNode.addChild(e);
}, 2);
}
});
cc._RF.pop();
}, {} ],
GuideMainConJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6744feU9s9BR6LJAaTpb6bf", "GuideMainConJS");
var o = c(e("./../../Script/Help/DonaldManager")), n = c(e("./../Help/audioEngineMamager")), s = c(e("./../Help/GuideSourcesManager")), a = c(e("./../../SDK/ASCAd"));
function c(e) {
return e && e.__esModule ? e : {
default: e
};
}
cc.Class({
extends: cc.Component,
properties: {
TipLeftPrefab: cc.Prefab,
TipRightPrefab: cc.Prefab
},
onLoad: function() {
this.initaudioEngine();
this.defineCommonPar();
this.defination();
this.definePar();
this.FitIOS();
this.SetBTNEvent();
},
onEnable: function() {},
defineCommonPar: function() {
window.Guide = this;
window.GuideNode = this.node;
this.node.setContentSize(cc.view.getVisibleSize().width, cc.view.getVisibleSize().height);
if (5 == window.platform) {
var e = Number(jsb.reflection.callStaticMethod("systemSetting", "isPhone")), t = this.node.getComponent(cc.Canvas);
if (0 == e) {
t.fitHeight = !0;
t.fitWidth = !1;
} else {
t.fitHeight = !1;
t.fitWidth = !0;
}
}
},
defination: function() {
this.MaskNode = this.node.getChildByName("GameMask");
this.MaskNode.active = !0;
this.welcomeAnim = this.node.getChildByName("Welcome_Anim");
this.pressAnim = this.node.getChildByName("Press_Anim");
this.LoadingNode = this.node.getChildByName("MusicLoadingNode");
this.LoadingNode.zIndex = 101;
this.LightNode = null;
this.copyLightNode = null;
},
definePar: function() {
this.guideNum = Number(cc.sys.localStorage.getItem("GuideNum"));
cc.sys.localStorage.setItem("powerNum", 20);
cc.sys.localStorage.setItem("gameModel", 2);
},
FitIOS: function() {
if (5 == window.platform) {
var e = Number(jsb.reflection.callStaticMethod("systemSetting", "isPhone")), t = this.node.getComponent(cc.Canvas);
if (0 == e) {
t.fitHeight = !0;
t.fitWidth = !1;
} else {
t.fitHeight = !1;
t.fitWidth = !0;
}
}
},
SetBTNEvent: function() {},
LoadPoint: function(e, t, i) {
o.default.getInstance().LoadPoint(e, t, i);
},
LoadMusic: function(e, t, i) {
o.default.getInstance().LoadMusic(e, t, i);
},
initaudioEngine: function() {
n.default.getInstance().initaudioEngine();
cc.sys.platform === cc.sys.VIVO_GAME && (this.innerAudioContext = qg.createInnerAudioContext());
cc.sys.platform === cc.sys.OPPO_GAME && (this.innerAudioContext = qg.createInnerAudioContext());
if (4 === window.platform && !window.TestModle) {
console.log("QQ音频接口初始化");
this.innerAudioContext = qq.createInnerAudioContext();
}
this.audioEngine = {
playMusic: function(e, t, i) {
n.default.getInstance().playMusic(e, t, i);
},
stopAll: function() {
n.default.getInstance().stopMusic();
},
pauseMusic: function() {
n.default.getInstance().pauseMusic();
},
resumeMusic: function() {
n.default.getInstance().resumeMusic();
},
getCurrentTime: function() {
return n.default.getInstance().getCurrentTime();
},
setMusicTime: function(e) {
n.default.getInstance().setMusicTime(e);
},
setVolume: function(e) {
n.default.getInstance().setMusicVolume(e);
},
stopEffect: function(e) {
n.default.getInstance().stopEffect(e);
}
};
this.guideSourcesMgr = s.default.getInstance();
},
PlayGuideAU: function(e) {
console.log("播放第", e, "个语音");
var t = "Guide" + e.toString() + "_AU";
this.guideSourcesMgr.playCurSounds(t);
},
shakePhone: function(e) {
window.TestModle || (5 == window.platform ? a.default.getInstance().phoneVibrate(e) : 2 == window.platform ? this.node.getComponent("AndroidSDK").shakePhone(e) : a.default.getInstance().phoneVibrate(e));
},
StartWelcome: function() {
this.schedule(this.GuideWelcome, .1);
},
GuideWelcome: function() {
var e = this;
if (1 != this.guideNum && 0 != this.guideSourcesMgr.LoadAUComplete) {
console.log("开始播放欢迎动画");
this.PlayGuideAU(1);
this.scheduleOnce(function() {
e.welcomeAnim.active = !0;
e.welcomeAnim.getComponent(sp.Skeleton).setAnimation(0, "animation", !1);
e.welcomeAnim.getComponent(sp.Skeleton).setCompleteListener(function(t, i) {
if ("animation" == (t.animation ? t.animation.name : "")) {
console.log("欢迎动画播放完毕");
e.welcomeAnim.active = !1;
e.scheduleOnce(function() {
e.GuideTipsPress();
}, .4);
}
});
}, .2);
this.unschedule(this.GuideWelcome);
}
},
GuideTipsPress: function() {
if (1 != this.guideNum) {
var e = this;
console.log("播放按住屏幕指引");
this.pressAnim.active = !0;
this.pressAnim.getComponent(sp.Skeleton).setAnimation(0, "animation", !0);
var t = cc.instantiate(this.TipRightPrefab);
t.parent = this.node;
t.getComponent("GuideTipsJS").SetTipsLabel("手指按住屏幕,让球球开始往前跳跃!");
t.position = cc.v2(330, .35 * cc.view.getVisibleSize().height);
this.scheduleOnce(function() {
e.PlayGuideAU(2);
e.scheduleOnce(function() {
e.MaskNode.active = !1;
}, 4);
}, .3);
this.curTipNode = t;
}
},
GuidePause: function() {
var e = this;
if (1 != this.guideNum) {
console.log("播放提示玩家暂停指引");
this.MaskNode.active = !0;
var t = cc.instantiate(this.TipLeftPrefab);
t.parent = this.node;
t.getComponent("GuideTipsJS").SetTipsLabel("松开手指后，游戏就会暂停哦~");
t.position = cc.v2(-330, .35 * cc.view.getVisibleSize().height);
this.curTipNode = t;
this.scheduleOnce(function() {
e.PlayGuideAU(3);
}, .3);
this.scheduleOnce(function() {
e.MaskNode.active = !1;
if (0 == window.GuideGame.pauseTimes) {
window.GuideGame.forbidTouch();
window.GuideGame.pauseGame();
window.GuideGame.allowTouch();
}
}, 4.5);
}
},
GuideContinue: function() {
if (1 != this.guideNum) {
console.log("播放提示玩家继续游戏指引");
var e = this;
window.GuideGame.forbidTouch();
window.GuideGame.pauseGame();
this.MaskNode.active = !0;
var t = function() {
console.log("提示按住屏幕指引");
e.scheduleOnce(function() {
e.PlayGuideAU(4);
}, .3);
var t = cc.instantiate(e.TipLeftPrefab);
t.parent = e.node;
t.getComponent("GuideTipsJS").SetTipsLabel("再次按住屏幕，游戏就会继续啦!");
t.position = cc.v2(-330, .35 * cc.view.getVisibleSize().height);
e.scheduleOnce(function() {
e.curTipNode = t;
window.GuideGame.allowTouch();
e.MaskNode.active = !1;
}, 3.5);
};
if (this.curTipNode) {
this.curTipNode.getComponent("GuideTipsJS").HideTipsAnim();
this.scheduleOnce(t, .5);
} else t();
}
},
GuideChangeBlock: function() {
if (1 != this.guideNum) {
console.log("播放提示玩家前方为变色木块");
window.GuideGame.forbidTouch();
window.GuideGame.pauseGame();
var e = this, t = cc.instantiate(e.TipLeftPrefab);
t.parent = e.node;
t.getComponent("GuideTipsJS").SetTipsLabel("出现了一个变色跳板，踩一下试试~");
t.position = cc.v2(-330, .35 * cc.view.getVisibleSize().height);
e.scheduleOnce(function() {
e.PlayGuideAU(5);
}, .3);
e.scheduleOnce(function() {
e.curTipNode = t;
window.GuideGame.allowTouch();
}, 2.5);
this.LastLightPos = this.LightNode.position;
var i = this.LightNode.parent.convertToWorldSpaceAR(this.LightNode.position), o = window.GuideGameNode.convertToNodeSpaceAR(i);
this.LightNode.parent = window.GuideGameNode;
this.LightNode.position = o;
this.LightNode.getChildByName("Arrow_Anim").group = "Model";
this.LightNode.group = "Model";
}
},
GuideTipsMove: function() {
var e = this;
if (1 != this.guideNum) {
var t = this;
this.MaskNode.active = !0;
console.log("播放玩家能够进行左右移动球");
window.GuideGame.forbidTouch();
window.GuideGame.pauseGame();
var i = cc.instantiate(t.TipLeftPrefab);
i.parent = t.node;
i.getComponent("GuideTipsJS").SetTipsLabel("注意前面有两个色块,我们可以左右滑动控制球球啦!");
i.position = cc.v2(-330, .35 * cc.view.getVisibleSize().height);
t.curTipNode = i;
this.scheduleOnce(function() {
e.PlayGuideAU(6);
}, .3);
this.scheduleOnce(function() {
t.PlayGuideAU(7);
i.getComponent("GuideTipsJS").SetTipsLabel("好了!跳向对应颜色的方块吧~");
t.scheduleOnce(function() {
window.GuideGame.allowTouch();
t.MaskNode.active = !1;
}, 3);
}, 5.2);
}
},
GuideDeadError: function() {
if (1 != this.guideNum) {
console.log("播放踩错的语音");
this.PlayGuideAU(8);
window.GuideGame.forbidTouch();
window.GuideGame.pauseGame();
this.scheduleOnce(function() {
window.GuideGame.allowTouch();
}, 2.5);
}
},
GuideDeadFall: function() {
if (1 != this.guideNum) {
console.log("播放踩空的语音");
this.PlayGuideAU(9);
window.GuideGame.forbidTouch();
window.GuideGame.pauseGame();
this.scheduleOnce(function() {
window.GuideGame.allowTouch();
}, 2.5);
}
},
GuideTriple: function() {
var e = this;
if (1 != this.guideNum) {
var t = this;
this.MaskNode.active = !0;
console.log("提示下一个为三个颜色");
window.GuideGame.forbidTouch();
window.GuideGame.pauseGame();
var i = cc.instantiate(this.TipLeftPrefab);
i.parent = this.node;
i.getComponent("GuideTipsJS").SetTipsLabel("小心喽,前面是3个不同的颜色,不要选错。");
i.position = cc.v2(-330, .35 * cc.view.getVisibleSize().height);
this.curTipNode = i;
this.scheduleOnce(function() {
e.PlayGuideAU(10);
}, .3);
this.scheduleOnce(function() {
t.MaskNode.active = !1;
window.GuideGame.allowTouch();
}, 3.5);
}
},
GuideWin: function() {
console.log("对玩家获胜所进行下一步的引导");
this.PlayGuideAU(11);
},
GuideMove: function() {
console.log("玩家点击移动模式之后提示");
this.PlayGuideAU(12);
},
GuideEnd: function() {
var e = this;
console.log("试玩关卡结束,正式进入游戏");
var t = cc.instantiate(this.TipLeftPrefab);
t.parent = this.node;
t.getComponent("GuideTipsJS").SetTipsLabel("哇哦，太棒了呢，闯关成功!");
t.position = cc.v2(-330, .35 * cc.view.getVisibleSize().height);
this.curTipNode = t;
this.scheduleOnce(function() {
e.PlayGuideAU(13);
e.scheduleOnce(function() {
e.PlayGuideAU(14);
t.getComponent("GuideTipsJS").SetTipsLabel("我们去外面看看吧!");
}, 3);
}, .3);
}
});
cc._RF.pop();
}, {
"./../../SDK/ASCAd": "ASCAd",
"./../../Script/Help/DonaldManager": "DonaldManager",
"./../Help/GuideSourcesManager": "GuideSourcesManager",
"./../Help/audioEngineMamager": "audioEngineMamager"
} ],
GuideModelSelectJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6531fZO7ixE8L33MLZu2P0D", "GuideModelSelectJS");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.defineCommonPar();
this.defination();
this.definePar();
this.ModelAnim();
},
defineCommonPar: function() {
this.node.zIndex = 100;
this.node.setContentSize(cc.view.getVisibleSize().width, cc.view.getVisibleSize().height);
},
defination: function() {
this.douyinBase = this.node.getChildByName("Base_Douyin");
this.normalBase = this.node.getChildByName("Base_Normal");
this.startBTN = this.node.getChildByName("BTN_Start");
this.guideGRP1 = this.node.getChildByName("GRP_Guide1");
this.guideGRP2 = this.node.getChildByName("GRP_Guide2");
this.handNode = this.node.getChildByName("SP_Hand");
this.handNode.active = !1;
this.handNode.setScale(2, 2);
this.maskNode = this.node.getChildByName("Mask");
},
definePar: function() {
this.useModel = [];
this.BTNList = null;
if (3 == window.platform) {
this.douyinBase.active = !0;
this.normalBase.active = !1;
this.BTNList = this.douyinBase.getChildByName("List");
} else {
this.douyinBase.active = !1;
this.normalBase.active = !0;
this.BTNList = this.normalBase.getChildByName("List");
}
this.canTouch = !1;
},
ModelAnim: function() {
for (var e = this, t = function(t) {
var i = e.BTNList.children[t];
i.setScale(0);
var n = .1 * t + .75;
e.scheduleOnce(function() {
i.active = !0;
i.runAction(cc.sequence(cc.scaleTo(.19, 1.1), cc.scaleTo(.13, .9), cc.scaleTo(.13, 1.05), cc.scaleTo(.16, .95), cc.scaleTo(.16, 1), cc.callFunc(function() {
var n = i.getChildByName("Select");
n.active = !0;
n.opacity = 0;
n.runAction(cc.sequence(cc.fadeTo(.15, 255), cc.fadeTo(.15, 0), cc.callFunc(function() {
n.active = !1;
n.opacity = 255;
t == e.BTNList.childrenCount - 1 && o();
})));
})));
}, n);
}, i = 0; i < e.BTNList.childrenCount; i++) t(i);
var o = function() {
e.handNode.active = !0;
3 == window.platform ? e.handNode.setPosition(360, -220) : e.handNode.setPosition(220, -215);
var t = cc.moveTo(.5, cc.v2(0, 0));
e.handNode.runAction(cc.sequence(t, cc.callFunc(function() {
e.guideGRP1.active = !0;
e.handNode.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.35, 2.6), cc.scaleTo(.35, 2))));
e.maskNode.active = !1;
e.canTouch = !0;
})));
};
},
OnClickStart: function() {
if (0 != this.canTouch) {
this.node.active = !1;
window.GuideGame.GameReplay();
}
},
OnClickModel: function(e, t) {
if (0 != this.canTouch) {
t = Number(t);
var i = this.useModel.indexOf(t);
if (-1 != i) {
this.useModel.splice(i, 1);
this.BTNList.children[t].getChildByName("Select").active = !1;
} else {
this.useModel.push(t);
this.BTNList.children[t].getChildByName("Select").active = !0;
}
}
},
OnClickGuide: function(e, t) {
var i = this;
switch (t = Number(t)) {
case 1:
i.maskNode.active = !0;
i.guideGRP1.active = !1;
i.handNode.stopAllActions();
var o = cc.moveTo(.5, cc.v2(170, -475));
i.handNode.runAction(cc.sequence(o, cc.callFunc(function() {
i.guideGRP2.active = !0;
i.handNode.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.35, 2.6), cc.scaleTo(.35, 2))));
})));
this.OnClickModel(null, 0);
break;

case 2:
i.guideGRP1.active = !1;
i.guideGRP2.active = !1;
i.handNode.active = !1;
i.handNode.stopAllActions();
i.OnClickStart();
}
}
});
cc._RF.pop();
}, {} ],
GuideSourcesManager: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "83831wJbrRB+IMUCdxSd8pC", "GuideSourcesManager");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var c = e.length - 1; c >= 0; c--) (n = e[c]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./../Help/DonaldManager"), a = e("./../Help/audioEngineMamager"), c = cc._decorator, r = c.ccclass, l = (c.property, 
function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.SoundsNameList = [];
t.SoundsAUList = [];
t.GuideAU_Num = 25;
t.LoadCompleteNum = 0;
t.LoadAUComplete = !1;
return t;
}
i = t;
t.getInstance = function() {
i.instance || (i.instance = new i());
return i.instance;
};
t.prototype.SoundsInit = function() {
for (var e = 1; e <= this.GuideAU_Num; e++) {
var t = "Guide" + e.toString() + "_AU";
this.DonaldSounds(t);
this.SoundsNameList.push(t);
}
};
t.prototype.DonaldSounds = function(e) {
var t = this;
s.default.getInstance().LoadMusic("https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/GuideAU/" + e + ".mp3", "" + e, function(i) {
t[e] = i;
console.log(e, "下载成功");
t.LoadCompleteNum++;
t.LoadCompleteNum >= t.GuideAU_Num && (t.LoadAUComplete = !0);
});
};
t.prototype.playCurSounds = function(e) {
if (-1 != this.SoundsNameList.indexOf(e)) {
for (var t = e + "_Con", i = 0; i < this.SoundsAUList.length; i++) {
var o = this.SoundsAUList[i];
a.default.getInstance().stopEffect(o);
}
this.SoundsAUList[t] = a.default.getInstance().playEffect(this[e], 1, !1);
}
};
var i;
return t = i = n([ r ], t);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {
"./../Help/DonaldManager": "DonaldManager",
"./../Help/audioEngineMamager": "audioEngineMamager"
} ],
GuideTipsJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "980f9cPYFhExKamJkTdjkAY", "GuideTipsJS");
cc.Class({
extends: cc.Component,
properties: {
isLeft: !0
},
onLoad: function() {
this.defination();
this.definePar();
this.ShowTipsAnim();
},
onDisable: function() {},
defination: function() {
this.baseNode = this.node.getChildByName("SP_Base");
this.headNode = this.node.getChildByName("SP_Head");
this.insideSP = this.headNode.getChildByName("SP_Inside");
this.outsideSP = this.headNode.getChildByName("SP_Outside");
this.rotateSP = this.headNode.getChildByName("SP_Rotate");
this.scanSP = this.headNode.getChildByName("SP_Scan");
this.roleSP = this.headNode.getChildByName("SP_Role");
this.tipsNode = this.node.getChildByName("LB_Tips");
this.baseNode.active = !1;
this.insideSP.active = !1;
this.outsideSP.active = !1;
this.rotateSP.active = !1;
this.scanSP.active = !1;
this.roleSP.active = !1;
this.tipsNode.active = !1;
},
definePar: function() {},
ShowTipsAnim: function() {
var e = this;
this.insideSP.setScale(2);
this.insideSP.active = !0;
cc.tween(this.insideSP).to(.2, {
scale: 1
}).call(function() {
e.scanSP.active = !0;
cc.tween(e.scanSP).to(.3, {
rotation: 360
}).call(function() {
e.baseNode.active = !0;
e.baseNode.width = 0;
cc.tween(e.baseNode).to(.2, {
width: 662
}).call(function() {
e.scheduleOnce(function() {
e.tipsNode.active = !0;
e.tipsNode.opacity = 0;
cc.tween(e.tipsNode).to(.2, {
opacity: 255
}).start();
}, .05);
}).start();
e.rotateSP.active = !0;
cc.tween(e.rotateSP).repeatForever(cc.tween().by(1.5, {
angle: -360
})).start();
e.roleSP.active = !0;
e.roleSP.setScale(0);
cc.tween(e.roleSP).to(.15, {
scale: 1
}).start();
}).to(.1, {
opacity: 0
}).call(function() {
e.scanSP.active = !1;
}).start();
}).to(.3, {
opacity: 0
}).call(function() {
e.insideSP.active = !1;
}).start();
},
HideTipsAnim: function() {
var e = this, t = this;
cc.tween(this.baseNode).to(.1, {
width: 0
}).call(function() {
cc.tween(e.node).to(.1, {
scaleY: 0
}).call(function() {
t.node.destroy();
}).start();
}).start();
},
SetTipsLabel: function(e) {
this.tipsNode.getComponent(cc.Label).string = e;
}
});
cc._RF.pop();
}, {} ],
HollowOut: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "86d36S/H/xO77T7Y0w3O3wl", "HollowOut");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var c = e.length - 1; c >= 0; c--) (n = e[c]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, s = this && this.__awaiter || function(e, t, i, o) {
return new (i || (i = Promise))(function(n, s) {
function a(e) {
try {
r(o.next(e));
} catch (e) {
s(e);
}
}
function c(e) {
try {
r(o.throw(e));
} catch (e) {
s(e);
}
}
function r(e) {
e.done ? n(e.value) : new i(function(t) {
t(e.value);
}).then(a, c);
}
r((o = o.apply(e, t || [])).next());
});
}, a = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: c(0),
throw: c(1),
return: c(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function c(e) {
return function(t) {
return r([ e, t ]);
};
}
function r(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
e("../../misc/EditorAsset");
var c, r = cc._decorator, l = r.ccclass, d = r.property, h = r.requireComponent, u = r.executeInEditMode, w = r.disallowMultiple, m = r.executionOrder;
(function(e) {
e[e.Rect = 1] = "Rect";
e[e.Circle = 2] = "Circle";
})(c = i.HollowOutShape || (i.HollowOutShape = {}));
var g = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._effect = null;
t._shape = c.Rect;
t._center = cc.v2();
t._width = 300;
t._height = 300;
t._round = 1;
t._radius = 200;
t._feather = .5;
t.sprite = null;
t.material = null;
t.tweenRes = null;
return t;
}
Object.defineProperty(t.prototype, "effect", {
get: function() {
return this._effect;
},
set: function(e) {
this._effect = e;
this.init();
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "shape", {
get: function() {
return this._shape;
},
set: function(e) {
this._shape = e;
this.updateProperties();
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "center", {
get: function() {
return this._center;
},
set: function(e) {
this._center = e;
this.updateProperties();
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "width", {
get: function() {
return this._width;
},
set: function(e) {
this._width = e;
this.updateProperties();
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "height", {
get: function() {
return this._height;
},
set: function(e) {
this._height = e;
this.updateProperties();
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "round", {
get: function() {
return this._round;
},
set: function(e) {
this._round = e;
this.updateProperties();
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "radius", {
get: function() {
return this._radius;
},
set: function(e) {
this._radius = e;
this.updateProperties();
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "feather", {
get: function() {
return this._feather;
},
set: function(e) {
this._feather = e;
this.updateProperties();
},
enumerable: !0,
configurable: !0
});
t.prototype.onLoad = function() {
this.init();
};
t.prototype.resetInEditor = function() {
this.init();
};
t.prototype.init = function() {
return s(this, void 0, void 0, function() {
return a(this, function(e) {
switch (e.label) {
case 0:
return [ 3, 2 ];

case 1:
e.sent();
e.label = 2;

case 2:
if (!this._effect) return [ 2 ];
this.sprite = this.node.getComponent(cc.Sprite);
this.sprite.spriteFrame && (this.sprite.spriteFrame.getTexture().packable = !1);
this.material = cc.Material.create(this._effect);
this.sprite.setMaterial(0, this.material);
this.updateProperties();
return [ 2 ];
}
});
});
};
t.prototype.updateProperties = function() {
switch (this._shape) {
case c.Rect:
this.rect(this._center, this._width, this._height, this._round, this._feather);
break;

case c.Circle:
this.circle(this._center, this._radius, this._feather);
}
};
t.prototype.rect = function(e, t, i, o, n) {
this._shape = c.Rect;
null !== e && (this._center = e);
null !== t && (this._width = t);
null !== i && (this._height = i);
if (null !== o) {
this._round = o >= 0 ? o : 0;
var s = Math.min(this._width / 2, this._height / 2);
this._round = this._round <= s ? this._round : s;
}
if (null !== n) {
this._feather = n >= 0 ? n : 0;
this._feather = this._feather <= this._round ? this._feather : this._round;
}
this.material.setProperty("size", this.getNodeSize());
this.material.setProperty("center", this.getCenter(this._center));
this.material.setProperty("width", this.getWidth(this._width));
this.material.setProperty("height", this.getHeight(this._height));
this.material.setProperty("round", this.getRound(this._round));
this.material.setProperty("feather", this.getFeather(this._feather));
};
t.prototype.circle = function(e, t, i) {
this._shape = c.Circle;
null !== e && (this._center = e);
null !== t && (this._radius = t);
null !== i && (this._feather = i >= 0 ? i : 0);
this.material.setProperty("size", this.getNodeSize());
this.material.setProperty("center", this.getCenter(this._center));
this.material.setProperty("width", this.getWidth(2 * this._radius));
this.material.setProperty("height", this.getHeight(2 * this._radius));
this.material.setProperty("round", this.getRound(this._radius));
this.material.setProperty("feather", this.getFeather(this._feather));
};
t.prototype.rectTo = function(e, t, i, o, n, s) {
var a = this;
void 0 === n && (n = 0);
void 0 === s && (s = 0);
return new Promise(function(r) {
cc.Tween.stopAllByTarget(a);
a.unscheduleAllCallbacks();
a.tweenRes && a.tweenRes();
a.tweenRes = r;
n > i / 2 && (n = i / 2);
n > o / 2 && (n = o / 2);
s > n && (s = n);
a._shape = c.Rect;
cc.tween(a).to(e, {
center: t,
width: i,
height: o,
round: n,
feather: s
}).call(function() {
a.scheduleOnce(function() {
if (a.tweenRes) {
a.tweenRes();
a.tweenRes = null;
}
});
}).start();
});
};
t.prototype.circleTo = function(e, t, i, o) {
var n = this;
void 0 === o && (o = 0);
return new Promise(function(s) {
cc.Tween.stopAllByTarget(n);
n.unscheduleAllCallbacks();
n.tweenRes && n.tweenRes();
n.tweenRes = s;
n._shape = c.Circle;
cc.tween(n).to(e, {
center: t,
radius: i,
feather: o
}).call(function() {
n.scheduleOnce(function() {
if (n.tweenRes) {
n.tweenRes();
n.tweenRes = null;
}
});
}).start();
});
};
t.prototype.reset = function() {
this.rect(cc.v2(), 0, 0, 0, 0);
};
t.prototype.nodeSize = function() {
this._radius = Math.sqrt(this.node.width * this.node.width + this.node.height * this.node.height) / 2;
this.rect(this.node.getPosition(), this.node.width, this.node.height, 0, 0);
};
t.prototype.getCenter = function(e) {
var t = (e.x + this.node.width / 2) / this.node.width, i = (-e.y + this.node.height / 2) / this.node.height;
return cc.v2(t, i);
};
t.prototype.getNodeSize = function() {
return cc.v2(this.node.width, this.node.height);
};
t.prototype.getWidth = function(e) {
return e / this.node.width;
};
t.prototype.getHeight = function(e) {
return e / this.node.width;
};
t.prototype.getRound = function(e) {
return e / this.node.width;
};
t.prototype.getFeather = function(e) {
return e / this.node.width;
};
n([ d ], t.prototype, "_effect", void 0);
n([ d({
type: cc.EffectAsset,
tooltip: !1,
readonly: !0
}) ], t.prototype, "effect", null);
n([ d ], t.prototype, "_shape", void 0);
n([ d({
type: cc.Enum(c),
tooltip: !1
}) ], t.prototype, "shape", null);
n([ d ], t.prototype, "_center", void 0);
n([ d({
tooltip: !1
}) ], t.prototype, "center", null);
n([ d ], t.prototype, "_width", void 0);
n([ d({
tooltip: !1,
visible: function() {
return this.shape === c.Rect;
}
}) ], t.prototype, "width", null);
n([ d ], t.prototype, "_height", void 0);
n([ d({
tooltip: !1,
visible: function() {
return this.shape === c.Rect;
}
}) ], t.prototype, "height", null);
n([ d ], t.prototype, "_round", void 0);
n([ d({
tooltip: !1,
visible: function() {
return this.shape === c.Rect;
}
}) ], t.prototype, "round", null);
n([ d ], t.prototype, "_radius", void 0);
n([ d({
tooltip: !1,
visible: function() {
return this.shape === c.Circle;
}
}) ], t.prototype, "radius", null);
n([ d ], t.prototype, "_feather", void 0);
n([ d({
tooltip: !1,
visible: function() {
return this.shape === c.Circle || this.round > 0;
}
}) ], t.prototype, "feather", null);
return t = n([ l, h(cc.Sprite), u, w, m(-100) ], t);
}(cc.Component);
i.default = g;
cc._RF.pop();
}, {
"../../misc/EditorAsset": "EditorAsset"
} ],
HomeNode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "532a3Sqz9pAhrLo2D6u4HTw", "HomeNode");
e("console");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
FaceCamerNode: cc.Node,
LoadingNode: cc.Node,
MusicLoadingNode: cc.Node,
PowerNode: cc.Node,
SignNodeFab: cc.Prefab,
musicSelectFab: cc.Prefab,
QuickButtonbg: cc.Prefab,
morgamePosition: cc.Node,
AchieveButton: cc.Node,
CheckButton: cc.Node,
subscriptionButton: cc.Node,
moreButtonbg: cc.Node,
crownStoreButton: cc.Node,
constellationButton: cc.Node,
DailyButton: cc.Node,
scrollview: cc.Node,
view: cc.Node,
content: cc.Node,
Constellationdetail: cc.Node,
Collectscrollview: cc.Node,
Collectview: cc.Node,
Collectcontent: cc.Node,
Crownscrollview: cc.Node,
Crownview: cc.Node,
Crowncontent: cc.Node,
Logo: cc.Node,
descriptionLable: cc.Label,
tips1Lable: cc.Label,
dataLable: cc.Label,
titleLable: cc.Label,
ICONPosNode: cc.Node,
SearchListNode: cc.Node,
ReplayNode: cc.Node
},
onLoad: function() {
window.isFirstSign = !1;
window.Parent.reportAnalytics("home_page_access");
window.Home = this;
window.HomeNode = this.node;
this.node.setContentSize(window.screenWidth, window.screenHight);
this.getlocalStorage();
this.reflashData();
this.dealwithTable();
this.defination();
this.loadLightRes();
this.LoadingNode.zIndex = 1e3;
this.LoadingNode.active = !0;
this.creatMusicList(0);
this.creatCrownSelect();
this.createEggShell();
this.UpdateMusicList();
this.schedule(function() {
this.checkAchievement();
if (4 === window.platform && !this.isshowBlockAd && window.Parent.getBlockAdFlag()) {
var e = window.Tools.getWorldPosition(this.blockAdPositon);
cc.log(e);
window.Parent.showBlockAd("landscape", e.x, e.y, 1);
this.isshowBlockAd = !0;
}
}, 1, 99999, .1);
switch (window.platform) {
case 0:
case 2:
case 5:
this.moreButtonbg.height = 280;
break;

case 1:
this.checkQQBox();
this.moreButtonbg.height = 280;
break;

case 3:
if ("ios" != window.PhoneType) {
this.moreButtonbg.height = 280;
this.ReplayNode.active = !1;
} else {
this.moreButtonbg.height = 440;
this.ReplayNode.active = !0;
}
this.subscriptionButton.on(cc.Node.EventType.TOUCH_END, this.subscription, this);
if (!window.TestModle) {
tt.requestSubscribeMessage;
tt.addShortcut && "ios" != window.PhoneType && (this.AddDeskButton.active = !0);
"Douyin" === window.AppName && tt.checkFollowAwemeState ? this.CustomButton.active = !0 : this.AddDeskButton.setPosition(this.CustomButton.position);
}
break;

case 4:
this.moreButtonbg.height = 280;
window.TestModle ? this.qq_box.active = !0 : this.schedule(function() {
this.checkQQBox();
}, 5);
}
this.scrollUp = !1;
if (3 == window.platform && 0 == window.TestModle) {
console.log("浮窗引导组件");
var e = new Date(), t = window.Parent.getlocalStorage("lastshowfavday");
console.log("lastShowDayStr : " + t);
var i = Number(window.Parent.getlocalStorage("showFavTimes"));
if (t) {
var o = new Date(t.replace(/-/g, "/"));
if (e - o >= 6048e5 && i < 2) {
console.log("Start 浮窗");
tt.showFavoriteGuide({
type: "bar",
content: "一键添加到我的小程序",
position: "bottom",
success: function(t) {
console.log("引导组件展示成功");
window.Parent.setlocalStorage("lastshowfavday", e.toString());
i++;
window.Parent.setlocalStorage("showFavTimes", i);
window.Parent.reportAnalytics("collect_Show");
},
fail: function(e) {
console.log("引导组件展示失败");
}
});
}
} else {
console.log("Start 浮窗");
tt.showFavoriteGuide({
type: "bar",
content: "一键添加到我的小程序",
position: "bottom",
success: function(t) {
console.log("引导组件展示成功");
window.Parent.setlocalStorage("lastshowfavday", e.toString());
i++;
window.Parent.setlocalStorage("showFavTimes", i);
window.Parent.reportAnalytics("collect_Show");
},
fail: function(e) {
console.log("引导组件展示失败");
}
});
}
}
},
onEnable: function() {
window.Parent.hidePushicon();
window.Parent.showBanner();
window.Parent.hideNavigateSettle();
window.Parent.hideNavigateBoxBanner();
window.MusicName = "";
this.checkDailyReward();
window.Parent.reportCustomEvent("游戏事件", {
"首页展示": ""
});
if (3 == window.platform) {
this.FaceCamerNode.active = !1;
window.GameStart = !1;
window.PowerNode.active = !0;
this.scheduleOnce(function() {
window.Record.matchHomeNode();
window.Record.RecordButton.active = !0;
}, .01);
}
5 === window.platform && window.Parent.getComponent("IosSDK").stopCaver();
window.DiamondNode.active = !0;
window.CrownNode.active = !0;
this.scheduleOnce(function() {
this.playMusic();
}, .3);
this.checkQQBox();
this.checkAchievement();
this.spText.active = !1;
this.clickOther = 0;
this.setTipsAnim = !1;
if (this.eggShellBTN) {
this.eggShellBTN.stopAllActions();
this.EggshellAllClear() || 2 != window.platform && this.eggShellBTN.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.2, 1.1), cc.rotateTo(.1, 30), cc.rotateTo(.1, -25), cc.rotateTo(.1, 20), cc.rotateTo(.1, 0), cc.scaleTo(.2, 1), cc.delayTime(1))));
}
this.showNormaolMusic(1);
5 == window.platform && window.Parent.showPushicon(256, 256, 200, 1500);
},
onDisable: function() {
this.closemoreGame();
if (4 === window.platform && this.isshowBlockAd) {
window.Parent.hideBlockAd();
this.isshowBlockAd = !1;
}
5 == window.platform && window.Parent.hidePushicon();
},
start: function() {},
update: function(e) {
this.runcrcloe(this.point0, 0, 0, e, 150, 0);
this.runcrcloe(this.point1, 0, 0, e, 102, 1);
this.ScrollViewBack();
this.clickOther >= 2 && 0 == this.setTipsAnim && 2 != window.platform && 1 != window.platform && (this.spText.active = !0);
},
getlocalStorage: function() {
window.scenName = [ "炫彩节奏", "绿野仙踪", "梦幻海洋", "海上世界", "暮色山川", "樱花之都", "沙漠古道" ];
window.roleName = [ "普通球", "华丽蓝蓝", "歌手里昂", "未来歌姬" ];
var e = this;
window.hasshowNewSong = 0;
window.signTimes = Number(window.Parent.getlocalStorage("signTimes"));
window.isfirstgetCrown = Number(window.Parent.getlocalStorage("isfirstgetCrown"));
window.hasshowStoreTips = Number(window.Parent.getlocalStorage("hasshowStoreTips"));
window.MissionCrownNumber = Number(window.Parent.getlocalStorage("MissionCrownNumber"));
window.SceneNumber = Number(window.Parent.getlocalStorage("SceneNumber"));
window.ColectTable = window.Parent.getlocalStorage("ColectTable");
window.MusicBagTable = window.Parent.getlocalStorage("MusicBagTable");
window.unlockCrownMusicName = window.Parent.getlocalStorage("unlockCrownMusicName");
window.videoTimes = Number(window.Parent.getlocalStorage("videoTimes"));
null == window.unlockCrownMusicName && (window.unlockCrownMusicName = "");
null == window.MusicBagTable && (window.MusicBagTable = "");
null == window.ColectTable && (window.ColectTable = "");
window.AchieveNumber = [];
window.AchieveLevel = [];
window.MissionNumber = [];
window.MissionHasget = [];
this.missionTargetNum = [];
window.sceneIsUnlock = [];
this.beishu = 1;
window.roleIsUnlock = [];
for (var t = 0; t < window.scenName.length; t++) {
window.sceneIsUnlock[t] = window.Parent.getlocalStorage("sceneIsUnlock" + t);
"true" === window.sceneIsUnlock[t] || 0 == t ? window.sceneIsUnlock[t] = !0 : window.sceneIsUnlock[t] = !1;
}
for (t = 0; t < window.roleName.length; t++) {
window.roleIsUnlock[t] = window.Parent.getlocalStorage("roleIsUnlock" + t);
"true" === window.roleIsUnlock[t] || 0 == t ? window.roleIsUnlock[t] = !0 : window.roleIsUnlock[t] = !1;
}
window.SceneUnlockNumber = [ 0, 2, 2, 2, 18, 18, 18 ];
window.SceneUnlockType = [ "video", "video", "video", "video", "crown", "crown", "crown" ];
window.RoleUnlockNumber = [ 0, 3, 2, 12 ];
window.RoleUnlockType = [ "video", "video", "video", "crown" ];
for (t = 0; t < window.AchieveTable.length; t++) {
window.AchieveNumber[t] = Number(window.Parent.getlocalStorage("AchieveNumber" + t));
window.AchieveLevel[t] = Number(window.Parent.getlocalStorage("AchieveLevel" + t));
}
window.yinfuNumber = Number(window.Parent.getlocalStorage("yinfuNumber"));
window.firstFaceModel = window.Parent.getlocalStorage("firstFaceModel");
window.hasshowFaceTips = Number(window.Parent.getlocalStorage("hasshowFaceTips"));
"false" === window.firstFaceModel ? window.firstFaceModel = !1 : window.firstFaceModel = !0;
if (3 === window.platform) {
window.hasShare = window.Parent.getlocalStorage("hasShare");
"true" === window.hasShare ? window.hasShare = !0 : window.hasShare = !1;
window.hasGet = window.Parent.getlocalStorage("hasGet");
"true" === window.hasGet ? window.hasGet = !0 : window.hasGet = !1;
window.hasfollow = window.Parent.getlocalStorage("hasfollow");
"true" === window.hasfollow ? window.hasfollow = !0 : window.hasfollow = !1;
window.hasfollow = !0;
this.hasFllowOfficial = Number(window.Parent.getlocalStorage("hasFllowOfficial"));
if (isNaN(this.hasFllowOfficial)) {
console.log("hasFllowOfficial数据有误");
this.hasFllowOfficial = 0;
window.Parent.setlocalStorage("hasFllowOfficial", e.hasFllowOfficial);
}
this.hasGetOfficialMusic = Number(window.Parent.getlocalStorage("hasGetOfficialMusic"));
window.powerNum = Number(window.Parent.getlocalStorage("powerNum"));
isNaN(window.powerNum) && (window.powerNum = 20);
this.LastTime = Number(window.Parent.getlocalStorage("LastTime"));
var i = Math.abs((new Date().getTime() - this.LastTime) / 1e3);
window.powerNum += Math.floor(i / 30);
window.powerNum >= 20 && (window.powerNum = 20);
window.powerNum <= 0 && (window.powerNum = 0);
this.PowerNode.getChildByName("PowerBg").getChildByName("num").getComponent(cc.Label).string = window.powerNum + "/20";
window.Parent.setlocalStorage("powerNum", window.powerNum);
if (!window.TestModle && "devtools" != window.PhoneType && "Douyin" === window.AppName && tt.checkFollowAwemeState) tt.checkFollowAwemeState({
success: function(t) {
console.log("是否关注抖音号", t.hasFollowed);
if (t.hasFollowed) {
e.scheduleOnce(function() {
e.CustomButton.getChildByName("Mask").getChildByName("fallowTips").active = !1;
}, .1);
e.hasFllowOfficial = 1;
window.Parent.setlocalStorage("hasFllowOfficial", e.hasFllowOfficial);
if (1 != Number(window.Parent.getlocalStorage("EggShellClock0"))) {
window.Parent.setlocalStorage("EggShellClock0", 1);
window.Parent.reportAnalytics("eggs_MusicUnlock_number");
}
} else {
if (1 === e.hasGetOfficialMusic) {
e.hasFllowOfficial = 0;
window.Parent.showTips("取消关注");
e.cancelFollowMusic();
window.Parent.reportAnalytics("officialID_follow_wrong");
window.Parent.reportCustomEvent("官号事件", {
"官号取消关注": ""
});
}
e.CustomButton.stopAllActions();
e.CustomButton.getChildByName("Mask").getChildByName("fallowTips").active = !0;
e.CustomButton.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.2, 1.1), cc.rotateTo(.1, 30), cc.rotateTo(.1, -25), cc.rotateTo(.1, 20), cc.rotateTo(.1, 0), cc.scaleTo(.2, 1), cc.delayTime(1))));
}
},
fail: function(e) {
console.log("---- check fail,", e);
},
complete: function(e) {
console.log("---- check complete, res: ", e);
}
}); else if ("Douyin" != window.AppName) {
this.hasFllowOfficial = 1;
window.Parent.setlocalStorage("hasFllowOfficial", this.hasFllowOfficial);
}
if (3 == window.platform && window.TestModle || 3 == window.platform && "Douyin" != window.AppName) {
if (1 != Number(window.Parent.getlocalStorage("EggShellClock0"))) {
window.Parent.setlocalStorage("EggShellClock0", 1);
window.Parent.reportAnalytics("eggs_MusicUnlock_number");
}
}
} else if (3 != window.platform) {
if (1 != Number(window.Parent.getlocalStorage("EggShellClock0"))) {
window.Parent.setlocalStorage("EggShellClock0", 1);
window.Parent.reportAnalytics("eggs_MusicUnlock_number");
}
}
this.perviewmusicNum = Number(window.Parent.getlocalStorage("perviewmusicNum"));
if (cc.sys.os === cc.sys.OS_IOS && 5 == window.platform) {
1 != Number(window.Parent.getlocalStorage("EggShellClock0")) && window.Parent.setlocalStorage("EggShellClock0", 1);
}
window.RoleModel = window.Parent.getlocalStorage("RoleModel");
"true" === window.RoleModel ? window.RoleModel = !0 : window.RoleModel = !1;
window.RoleNum = Number(window.Parent.getlocalStorage("RoleNum"));
window.modelSelect = 0;
window.highLvSelect = !0;
window.highModelList = [];
window.isShowIOS = !1;
},
dealwithTable: function() {
this.newFlag = !1;
this.musicTable = [];
this.perViewTable = [];
this.CrownMusicTable = [];
this.SurpriseMusicTable = [];
this.GiftcodeMusicTable = [];
this.GiftcodeList = [];
this.newSongTable = [];
this.UnlockList = [];
for (var e = 0; e < window.NetMusicTable.length; e++) if (window.NetMusicTable[e].ex_notice) {
this.perViewTable.push(window.NetMusicTable[e]);
var t = new Date(window.NetMusicTable[e].ex_notice).getTime();
new Date().getTime();
new Date().getTime() > t && this.musicTable.push(window.NetMusicTable[e]);
} else window.NetMusicTable[e].ex_bag ? this.CrownMusicTable.push(window.NetMusicTable[e]) : window.NetMusicTable[e].ex_surprise ? this.SurpriseMusicTable.push(window.NetMusicTable[e]) : window.NetMusicTable[e].ex_cdkey ? this.GiftcodeMusicTable.push(window.NetMusicTable[e]) : this.musicTable.push(window.NetMusicTable[e]);
this.AddNewSongTabel();
for (var i = 0, o = [], n = 0; n < this.GiftcodeMusicTable.length; n++) {
var s = this.GiftcodeMusicTable[n].ex_cdkey.toUpperCase();
if (!o.includes(s)) {
o[i] = s;
this.GiftcodeList[i] = s;
i++;
}
}
this.GiftAllClear();
},
defination: function() {
this.lightNode = this.node.getChildByName("lightNode");
this.QuickStartButton = this.lightNode.getChildByName("QuickStartButton");
this.qq_box = this.lightNode.getChildByName("qq_box");
this.blockAdPositon = this.lightNode.getChildByName("blockAdPositon");
this.tableSelectbg = this.node.getChildByName("tableSelectbg");
this.NormalTableButton = this.tableSelectbg.getChildByName("NormalTableButton");
this.SummerTableButton = this.tableSelectbg.getChildByName("SummerTableButton");
this.StudyTableButton = this.tableSelectbg.getChildByName("StudyTableButton");
this.ParkTableButton = this.tableSelectbg.getChildByName("ParkTableButton");
this.RestTableButton = this.tableSelectbg.getChildByName("RestTableButton");
this.ColectionTableButton = this.tableSelectbg.getChildByName("ColectionTableButton");
this.QuickStartButton.zIndex = 2;
this.playLight = this.node.getChildByName("lightNode").getChildByName("playLight");
this.recordPositon = this.node.getChildByName("lightNode").getChildByName("recordPositon");
this.bglight = this.playLight.getChildByName("bglight");
this.crown = this.playLight.getChildByName("crown");
this.circle0 = this.playLight.getChildByName("circle0");
this.circle1 = this.playLight.getChildByName("circle1");
this.circle2 = this.playLight.getChildByName("circle2");
this.point0 = this.playLight.getChildByName("point0");
this.point1 = this.playLight.getChildByName("point1");
this.CD = this.lightNode.getChildByName("Mask").getChildByName("CD");
this.moreButton = this.lightNode.getChildByName("moreButton");
this.AddDeskButton = this.lightNode.getChildByName("AddDeskButton");
this.CustomButton = this.lightNode.getChildByName("CustomButton");
this.point = this.moreButton.getChildByName("point");
this.SongName = this.lightNode.getChildByName("SongName");
this.star = [];
for (var e = 0; e < 4; e++) this.star[e] = cc.find("Canvas/HomeNode/lightNode/star".concat(e));
this.logcunt = 0;
this.LoadNodeNumber = 0;
this.PageType = "HomeMusic";
window.playNum = 0;
window.playName = "";
this.descriptionString = [ "白羊座有一种让人看见就觉得开心的感觉，因为总是看起来都是那么地热情、阳光、乐观、坚强，对朋友也慷慨大方，性格直来直往，就是有点小脾气。白羊男有大男人主义的性格，而白羊女就是女汉子的形象。", "金牛座很保守，喜欢稳定，一旦有什么变动就会觉得心里不踏实，性格也比较慢热，但你是理财高手，对于投资理财都有着独特的见解。金牛男的性格有点儿自我，而金牛女就喜欢投资自己，想要过得更好。", "双子座喜欢追求新鲜感，有点儿小聪明，就是耐心不够，往往做事都是三分钟热度，难以坚持，但是你的可爱性格会让很多人都喜欢跟你做朋友。双子男表面很花心，其实深情，而双子女就喜欢求新和求变。", "巨蟹座的情绪容易敏感，也缺乏安全感，容易对一件事情上心，做事情有坚持到底的毅力，为人重情重义，对朋友、家人都特别忠实，巨蟹男是一等一的好男人，顾家爱家人，巨蟹女充满母性光环，非常有爱心。", "狮子座有着宏伟的理想，总想靠自己的努力成为人上人，你向往高高在上的优越感，也期待被仰慕被崇拜的感觉，有点儿自信有点儿自大。狮子男的大男人气息很重，爱面子，狮子女热情阳光，对朋友讲义气。", "处女座虽然常常被黑，但你还是依然坚持追求自己的完美主义，因为在你看来，生活不能将就，追求的完美更不能将就，有目标才有进步，当然也需要鼓励。处女男的毅力很强，能坚持，处女女的求知欲很强。", "天秤座常常追求平等、和谐，擅于察言观色，交际能力很强，因此真心朋友不少，因为你也足够真诚，但是最大的缺点就是面对选择总是犹豫不决。天秤男容易在乎自己而忽略别人，天秤女就喜欢被陪伴的感觉。", "天蝎座精力旺盛、占有欲极强，对于生活很有目标，不达到目的誓不罢休，复仇心理重，记仇会让自己不顾一切报复曾经伤害过你的人。天蝎男自我主义色彩很强烈，天蝎女的自我保护意识很强，不容易接近。", "射手座崇尚自由，勇敢、果断、独立，身上有一股勇往直前的劲儿，不管有多困难，只要想，就能做，你的毅力和自信是难以击倒的。射手男酷爱自由，讨厌被束缚，射手女性格简单直接，不耍心计，可是任性。", "摩羯座是十二星座中最有耐心，为事最小心、也是最善良的星座。他们做事脚踏实地，也比较固执，不达目的是不会放手的。他们的忍耐力也是出奇的强大，同时也非常勤奋。然而含蓄不善于表达，缺乏安全感。", "水瓶座的人很聪明，他们最大的特点是创新，追求独一无二的生活，个人主义色彩很浓重的星座。他们对人友善又注重隐私。水瓶座绝对算得上是”友谊之星“，他喜欢结交每一类朋友，但是确很难与他们交心。", "双鱼座是十二宫最后一个星座，他集合了所有星座的优缺点于一身，同时受水象星座的情绪化影响，使他们原来复杂的性格又添加了更复杂的一笔。双鱼座的人最大的优点是有一颗善良的心，他们很愿意帮助别人。" ];
this.tips1String = [ "白羊座", "金牛座", "双子座", "巨蟹座", "狮子座", "处女座", "天秤座", "天蝎座", "射手座", "摩羯座", "水瓶座", "双鱼座" ];
this.DataString = [ "3月21日-4月19日", "4月20日-5月20日", "5月21日-6月21日", "6月22日-7月22日", "7月23日-8月22日", "8月23日-9月22日", "9月23日-10月23日", "10月24日-11月22日", "11月23日-12月21日", "12月22日-1月19日", "1月20日-2月18日", "2月19日-3月20日" ];
window.ConstellationNum = 12;
this.eggShellBTN = this.lightNode.getChildByName("EggShell");
window.isEggShell = !1;
this.spText = this.tableSelectbg.getChildByName("sp_text");
window.hasshowXingzuoTips = !1;
this.giftCodeBTN = this.lightNode.getChildByName("GiftCodeButton");
this.curSelectList = -1;
},
loadLightRes: function() {
var e = this;
this.allButtonNum = 0;
var t = this;
this.CD_Sprit = [];
this.cdcunt = 0;
t.allNum = 0;
t.loadnum = 0;
for (var i = function(i) {
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/MusicGames/CDPicture/".concat(i, ".png"),
type: "png"
}, function(o, n) {
if (o) ; else {
t.CD_Sprit[i] = new cc.SpriteFrame(n);
e.cdcunt++;
if (e.cdcunt >= 21) {
console.log("CD下载完成");
t.CDloadOk = !0;
}
}
});
}, o = 0; o < 21; o++) i(o);
cc.loader.loadResDir("霓虹灯贴图/bglight_Sprit", cc.SpriteFrame, function(e, i) {
if (e) console.log("bglight_Sprit加载出错"); else {
t.bglight_Sprit = [];
for (var o = 0; o < i.length; o++) t.bglight_Sprit[o] = i.find(function(e) {
return e.name === "".concat(o);
});
t.loadok0 = !0;
t.changeLight();
}
});
cc.loader.loadResDir("霓虹灯贴图/crown_Sprit", cc.SpriteFrame, function(e, i) {
if (e) console.log("crown_Sprit加载出错"); else {
t.crown_Sprit = [];
for (var o = 0; o < i.length; o++) t.crown_Sprit[o] = i.find(function(e) {
return e.name === "".concat(o);
});
t.loadok1 = !0;
t.changeLight();
}
});
cc.loader.loadResDir("霓虹灯贴图/circle0_Sprit", cc.SpriteFrame, function(e, i) {
if (e) console.log("circle0_Sprit加载出错"); else {
t.circle0_Sprit = [];
for (var o = 0; o < i.length; o++) t.circle0_Sprit[o] = i.find(function(e) {
return e.name === "".concat(o);
});
t.loadok2 = !0;
t.changeLight();
}
});
cc.loader.loadResDir("霓虹灯贴图/circle1_Sprit", cc.SpriteFrame, function(e, i) {
if (e) console.log("circle1_Sprit加载出错"); else {
t.circle1_Sprit = [];
for (var o = 0; o < i.length; o++) t.circle1_Sprit[o] = i.find(function(e) {
return e.name === "".concat(o);
});
t.loadok3 = !0;
t.changeLight();
}
});
t.allNum++;
var n = 0;
window.sceneStorebg_Sprit = [];
for (var s = function(e) {
0 == e ? cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/ScenePicture/scene".concat(e, ".png"),
type: "png"
}, function(i, o) {
if (i) ; else {
window.sceneStorebg_Sprit[e] = new cc.SpriteFrame(o);
if (++n >= 7) {
console.log("商店背景资源加载完成");
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
}
}) : 0 != e && cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/ScenePicture/scene".concat(e, ".jpg"),
type: "jpg"
}, function(i, o) {
if (i) ; else {
window.sceneStorebg_Sprit[e] = new cc.SpriteFrame(o);
if (++n >= 7) {
console.log("商店背景资源加载完成");
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
}
});
}, a = 0; a < 7; a++) s(a);
t.allNum++;
var c = 0;
window.Role_Sprit = [];
for (var r = function(e) {
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/RolePicture2/role".concat(e, ".png"),
type: "png"
}, function(i, o) {
if (i) ; else {
c++;
window.Role_Sprit[e] = new cc.SpriteFrame(o);
if (c >= 4) {
console.log("人物界面资源 加载完成");
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
}
});
}, l = 0; l < 4; l++) r(l);
t.allNum++;
var d = 0;
window.endSceneStorebg_Sprit = [];
for (var h = function(e) {
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/EndScenePicture/scene".concat(e, ".png"),
type: "png"
}, function(i, o) {
if (i) ; else {
d++;
window.endSceneStorebg_Sprit[e] = new cc.SpriteFrame(o);
if (d >= 3) {
console.log("结算背景 加载完成");
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
}
});
}, u = 0; u < 3; u++) h(u);
t.allNum++;
var w = 0;
window.ConstellationTitle_Spr = [];
for (var m = function(e) {
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/ConstellationTitleSprites/T".concat(e, ".png"),
type: "png"
}, function(i, o) {
if (i) ; else {
w++;
window.ConstellationTitle_Spr[e] = new cc.SpriteFrame(o);
if (w >= 12) {
console.log("星座名称 加载完成");
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
}
});
}, g = 0; g < 12; g++) m(g);
t.allNum++;
var p = 0;
window.ConstellationLogo_Spr = [];
for (var f = function(e) {
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/ConstellationLogoSprites/TT".concat(e, ".png"),
type: "png"
}, function(i, o) {
if (i) ; else {
p++;
window.ConstellationLogo_Spr[e] = new cc.SpriteFrame(o);
if (p >= 12) {
console.log("星座图标 加载完成");
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
}
});
}, S = 0; S < 12; S++) f(S);
t.allNum++;
cc.loader.loadRes("PreFab/FaceTipsNode", cc.Prefab, function(e, i) {
if (e) console.log("FaceTipsNode 加载出错"); else {
console.log("FaceTipsNode 加载完成");
t.FaceTipsNodeFab = i;
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
t.allNum++;
cc.loader.loadRes("PreFab/Newrecommend", cc.Prefab, function(e, i) {
if (e) console.log("Newrecommend 加载出错"); else {
console.log("Newrecommend 加载完成");
t.NewrecommendFab = i;
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
t.allNum++;
cc.loader.loadRes("PreFab/XingZuoTipsNode", cc.Prefab, function(e, i) {
if (e) console.log("XingZuoTipsNode 加载出错"); else {
console.log("XingZuoTipsNode 加载完成");
t.XingZuoTipsNodeFab = i;
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
t.allNum++;
cc.loader.loadRes("PreFab/NewModelSelect", cc.Prefab, function(e, i) {
if (e) console.log("NewModelSelect 加载出错"); else {
console.log("NewModelSelect 加载完成");
t.NewModelSelectFab = i;
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
t.allNum++;
cc.loader.loadRes("PreFab/FirstTipsNode", cc.Prefab, function(e, i) {
if (e) console.log("FirstTipsNode 加载出错"); else {
console.log("FirstTipsNode 加载完成");
t.FirstTipsNodeFab = i;
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
t.allNum++;
cc.loader.loadRes("PreFab/ShareNode", cc.Prefab, function(e, i) {
if (e) console.log("ShareNode 加载出错"); else {
console.log("ShareNode 加载完成");
window.ShareNodeFab = i;
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
t.allNum++;
cc.loader.loadRes("PreFab/ShareAppNode", cc.Prefab, function(e, i) {
if (e) console.log("ShareAppNode 加载出错"); else {
console.log("ShareAppNode 加载完成");
window.ShareAppNodeFab = i;
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
t.crownStoreButton.active = !0;
window.TestModle || 0 === t.hasGetOfficialMusic && tt.checkFollowAwemeState && "Douyin" == window.AppName && (t.crownStoreButton.getChildByName("point").active = !0);
t.constellationButton.active = !0;
t.eggShellBTN.active = !0;
this.EggshellAllClear() || 2 != window.platform && t.eggShellBTN.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.2, 1.1), cc.rotateTo(.1, 30), cc.rotateTo(.1, -25), cc.rotateTo(.1, 20), cc.rotateTo(.1, 0), cc.scaleTo(.2, 1), cc.delayTime(1))));
t.giftCodeBTN.active = !0;
t.allNum++;
cc.loader.loadRes("PreFab/FollowNode", cc.Prefab, function(e, i) {
if (e) console.log("FollowNode 加载出错"); else {
console.log("FollowNode 加载完成");
t.FollowNodeFab = i;
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
},
creatMusicList: function(e) {
this.curMusicData = [];
this.curGiftData = [];
for (var t = 0, i = 0; i < this.SurpriseMusicTable.length; i++) {
if (1 == Number(window.Parent.getlocalStorage("EggShellClock2")) && "L46" == this.SurpriseMusicTable[i].musicId) switch (e) {
case 0:
this.curMusicData[t] = this.SurpriseMusicTable[i];
this.curGiftData[t] = !1;
t++;
break;

case 1:
if ("流行" == this.SurpriseMusicTable[i].style) {
this.curMusicData[t] = this.SurpriseMusicTable[i];
this.curGiftData[t] = !1;
t++;
}
break;

case 2:
if ("悠扬" == this.SurpriseMusicTable[i].style) {
this.curMusicData[t] = this.SurpriseMusicTable[i];
this.curGiftData[t] = !1;
t++;
}
break;

case 3:
if ("节奏" == this.SurpriseMusicTable[i].style) {
this.curMusicData[t] = this.SurpriseMusicTable[i];
this.curGiftData[t] = !1;
t++;
}
break;

case 4:
if ("轻音" == this.SurpriseMusicTable[i].style) {
this.curMusicData[t] = this.SurpriseMusicTable[i];
this.curGiftData[t] = !1;
t++;
}
}
}
for (var o = 0; o < this.GiftcodeMusicTable.length; o++) {
var n = this.GiftcodeMusicTable[o].ex_cdkey.toUpperCase();
if (1 == Number(window.Parent.getlocalStorage("GiftCode_" + n))) switch (e) {
case 0:
this.curMusicData[t] = this.GiftcodeMusicTable[o];
this.curGiftData[t] = !0;
t++;
break;

case 1:
if ("流行" == this.GiftcodeMusicTable[o].style) {
this.curMusicData[t] = this.GiftcodeMusicTable[o];
this.curGiftData[t] = !1;
t++;
}
break;

case 2:
if ("悠扬" == this.GiftcodeMusicTable[o].style) {
this.curMusicData[t] = this.GiftcodeMusicTable[o];
this.curGiftData[t] = !1;
t++;
}
break;

case 3:
if ("节奏" == this.GiftcodeMusicTable[o].style) {
this.curMusicData[t] = this.GiftcodeMusicTable[o];
this.curGiftData[t] = !1;
t++;
}
break;

case 4:
if ("轻音" == this.GiftcodeMusicTable[o].style) {
this.curMusicData[t] = this.GiftcodeMusicTable[o];
this.curGiftData[t] = !1;
t++;
}
}
}
for (var s = 0; s < this.musicTable.length; s++) switch (e) {
case 0:
this.curMusicData[t] = this.musicTable[s];
this.curGiftData[t] = !0;
t++;
break;

case 1:
if ("流行" == this.musicTable[s].style) {
this.curMusicData[t] = this.musicTable[s];
this.curGiftData[t] = !1;
t++;
}
break;

case 2:
if ("悠扬" == this.musicTable[s].style) {
this.curMusicData[t] = this.musicTable[s];
this.curGiftData[t] = !1;
t++;
}
break;

case 3:
if ("节奏" == this.musicTable[s].style) {
this.curMusicData[t] = this.musicTable[s];
this.curGiftData[t] = !1;
t++;
}
break;

case 4:
if ("轻音" == this.musicTable[s].style) {
this.curMusicData[t] = this.musicTable[s];
this.curGiftData[t] = !1;
t++;
}
}
this.musicArr = [];
this.content.height = 222 * (this.curMusicData.length - 1) + 600;
if (0 != this.content.childrenCount) {
this.scrollview.getComponent(cc.ScrollView).scrollToTop();
for (var a = this.curMusicData.length, c = 0; c < this.content.childrenCount; c++) {
var r = this.content.children[c];
r.active = a > c + 1;
if (a >= c + 1) {
r.setPosition(0, -120 - 222 * c);
r.getComponent("musicSelectJS").contentPosition = cc.v2(0, -120 - 222 * c);
r.getComponent("musicSelectJS").musicType = "HomeMusic";
r.getComponent("musicSelectJS").musicName = this.curMusicData[c].musicName;
r.getComponent("musicSelectJS").singerName = this.curMusicData[c].singerName;
r.getComponent("musicSelectJS").orderNumber = this.curMusicData[c].orderNumber;
r.getComponent("musicSelectJS").unlockType = this.curMusicData[c].unlockType;
r.getComponent("musicSelectJS").unlockNumber = Number(this.curMusicData[c].unlockCost);
r.getComponent("musicSelectJS").musicID = this.curMusicData[c].musicId;
r.getComponent("musicSelectJS").NewFlag = this.curMusicData[c].ex_new;
r.getComponent("musicSelectJS").musicURL = this.curMusicData[c].musicFile;
r.getComponent("musicSelectJS").pointURL = this.curMusicData[c].json_normal;
r.getComponent("musicSelectJS").musicNumber = c;
r.getComponent("musicSelectJS").Home = this;
r.getComponent("musicSelectJS").homeModel = 1;
r.getComponent("musicSelectJS").musicStyle = this.curMusicData[c].style;
r.getComponent("musicSelectJS").isGift = this.curGiftData[c];
r.getComponent("musicSelectJS").listenNum = this.curMusicData[c].ex_listen;
r.getComponent("musicSelectJS").UpdateMusicInfo();
this.musicArr[c] = r;
}
}
} else for (var l = 0; l < 10; l++) {
var d = cc.instantiate(this.musicSelectFab);
d.setPosition(0, -120 - 222 * l);
d.getComponent("musicSelectJS").contentPosition = cc.v2(0, -120 - 222 * l);
d.getComponent("musicSelectJS").musicType = "HomeMusic";
d.getComponent("musicSelectJS").musicName = this.curMusicData[l].musicName;
d.getComponent("musicSelectJS").singerName = this.curMusicData[l].singerName;
d.getComponent("musicSelectJS").orderNumber = this.curMusicData[l].orderNumber;
d.getComponent("musicSelectJS").unlockType = this.curMusicData[l].unlockType;
d.getComponent("musicSelectJS").unlockNumber = Number(this.curMusicData[l].unlockCost);
d.getComponent("musicSelectJS").musicID = this.curMusicData[l].musicId;
d.getComponent("musicSelectJS").NewFlag = this.curMusicData[l].ex_new;
d.getComponent("musicSelectJS").musicURL = this.curMusicData[l].musicFile;
d.getComponent("musicSelectJS").pointURL = this.curMusicData[l].json_normal;
d.getComponent("musicSelectJS").musicNumber = l;
d.getComponent("musicSelectJS").Home = this;
d.getComponent("musicSelectJS").homeModel = 1;
d.getComponent("musicSelectJS").musicStyle = this.curMusicData[l].style;
d.getComponent("musicSelectJS").isGift = this.curGiftData[l];
d.getComponent("musicSelectJS").listenNum = this.curMusicData[l].ex_listen;
this.content.addChild(d);
this.musicArr[l] = d;
}
this.firstNum = 0;
this.lastNum = 9;
0 == e && (this.MusicData = this.curMusicData);
},
UpdateMusicList: function() {
this.scrollDirect = 0;
this.scrollview.on("scrolling", this.OnScrollingEvent, this);
this.scrollview.on("scroll-began", this.OnScrollBeganEvent, this);
},
OnScrollBeganEvent: function(e) {
console.log("OnScrollBeganEvent");
this.lastOffsetY = this.scrollview.getComponent(cc.ScrollView).getScrollOffset().y;
},
OnScrollingEvent: function(e) {
console.log("OnScrollingEvent");
var t = this.scrollview.getComponent(cc.ScrollView).getScrollOffset().y, i = this.lastOffsetY > t;
this.scrollDirect = i ? 2 : 1;
this.lastOffsetY = t;
if (!(this.lastOffsetY < 0 && 0 == this.firstNum || this.lastOffsetY > this.content.height && this.lastNum == this.curMusicData.length - 1 || this.lastNum > this.curMusicData.length - 1 || this.firstNum < 0)) if (this.lastOffsetY >= 222 * (this.firstNum + 1) && this.lastNum < this.curMusicData.length - 1) {
if (null == this.curMusicData[this.lastNum + 1] || void 0 == this.curMusicData[this.lastNum + 1]) return;
var o = this.content.children[0];
o.setSiblingIndex(9);
o.setPosition(cc.v2(o.position.x, o.position.y - 2220));
this.firstNum++;
this.lastNum++;
o.getComponent("musicSelectJS").musicName = this.curMusicData[this.lastNum].musicName;
o.getComponent("musicSelectJS").orderNumber = this.curMusicData[this.lastNum].orderNumber;
o.getComponent("musicSelectJS").unlockType = this.curMusicData[this.lastNum].unlockType;
o.getComponent("musicSelectJS").unlockNumber = Number(this.curMusicData[this.lastNum].unlockCost);
o.getComponent("musicSelectJS").musicID = this.curMusicData[this.lastNum].musicId;
o.getComponent("musicSelectJS").NewFlag = this.curMusicData[this.lastNum].ex_new;
o.getComponent("musicSelectJS").musicURL = this.curMusicData[this.lastNum].musicFile;
o.getComponent("musicSelectJS").pointURL = this.curMusicData[this.lastNum].json_normal;
o.getComponent("musicSelectJS").musicNumber = this.lastNum;
o.getComponent("musicSelectJS").homeModel = 1;
o.getComponent("musicSelectJS").musicStyle = this.curMusicData[this.lastNum].style;
o.getComponent("musicSelectJS").listenNum = this.curMusicData[this.lastNum].ex_listen;
o.getComponent("musicSelectJS").UpdateMusicInfo();
for (var n = 0; n < this.musicArr; n++) this.musicArr[n] = this.musicArr[n + 1];
this.musicArr[9] = o;
} else if (this.lastOffsetY <= 222 * this.firstNum) {
if (null == this.curMusicData[this.firstNum - 1] || void 0 == this.curMusicData[this.firstNum - 1]) return;
var s = this.content.children[9];
s.setSiblingIndex(0);
s.setPosition(cc.v2(s.position.x, s.position.y + 2220));
this.firstNum--;
this.lastNum--;
s.getComponent("musicSelectJS").musicName = this.curMusicData[this.firstNum].musicName;
s.getComponent("musicSelectJS").orderNumber = this.curMusicData[this.firstNum].orderNumber;
s.getComponent("musicSelectJS").unlockType = this.curMusicData[this.firstNum].unlockType;
s.getComponent("musicSelectJS").unlockNumber = Number(this.curMusicData[this.firstNum].unlockCost);
s.getComponent("musicSelectJS").musicID = this.curMusicData[this.firstNum].musicId;
s.getComponent("musicSelectJS").NewFlag = this.curMusicData[this.firstNum].ex_new;
s.getComponent("musicSelectJS").musicURL = this.curMusicData[this.firstNum].musicFile;
s.getComponent("musicSelectJS").pointURL = this.curMusicData[this.firstNum].json_normal;
s.getComponent("musicSelectJS").musicNumber = this.firstNum;
s.getComponent("musicSelectJS").homeModel = 1;
s.getComponent("musicSelectJS").musicStyle = this.curMusicData[this.firstNum].style;
s.getComponent("musicSelectJS").listenNum = this.curMusicData[this.firstNum].ex_listen;
s.getComponent("musicSelectJS").UpdateMusicInfo();
for (var a = this.musicArr.length - 1; a > 0; a--) this.musicArr[a] = this.musicArr[a - 1];
this.musicArr[0] = s;
}
},
creatMusicSelect: function() {
this.musicArr = [];
this.content.height = 222 * this.musicTable.length + 600;
for (var e = 0; e < this.musicTable.length; e++) {
var t = cc.instantiate(this.musicSelectFab);
t.setPosition(0, -120 - 222 * e);
t.getComponent("musicSelectJS").contentPosition = cc.v2(0, -120 - 222 * e);
t.getComponent("musicSelectJS").musicType = "HomeMusic";
t.getComponent("musicSelectJS").musicName = this.musicTable[e].musicName;
t.getComponent("musicSelectJS").singerName = this.musicTable[e].singerName;
t.getComponent("musicSelectJS").orderNumber = this.musicTable[e].orderNumber;
t.getComponent("musicSelectJS").unlockType = this.musicTable[e].unlockType;
t.getComponent("musicSelectJS").unlockNumber = Number(this.musicTable[e].unlockCost);
t.getComponent("musicSelectJS").musicID = this.musicTable[e].musicId;
t.getComponent("musicSelectJS").NewFlag = this.musicTable[e].ex_new;
t.getComponent("musicSelectJS").musicURL = this.musicTable[e].musicFile;
t.getComponent("musicSelectJS").pointURL = this.musicTable[e].json_normal;
t.getComponent("musicSelectJS").musicNumber = e;
t.getComponent("musicSelectJS").Home = this;
t.getComponent("musicSelectJS").homeModel = 1;
t.getComponent("musicSelectJS").musicStyle = this.musicTable[e].style;
t.getComponent("musicSelectJS").listenNum = this.musicTable[e].ex_listen;
this.content.addChild(t);
this.musicArr[e] = t;
}
this.listCreatOk = !0;
},
creatCrownSelect: function() {
this.CrownArr = [];
for (var e = this.musicTable.length, t = 0; t < this.CrownMusicTable.length; t++) {
var i = cc.instantiate(this.musicSelectFab);
i.getComponent("musicSelectJS").musicType = "CrownMusic";
i.getComponent("musicSelectJS").musicName = this.CrownMusicTable[t].musicName;
i.getComponent("musicSelectJS").singerName = this.CrownMusicTable[t].singerName;
i.getComponent("musicSelectJS").orderNumber = this.CrownMusicTable[t].orderNumber;
i.getComponent("musicSelectJS").unlockType = this.CrownMusicTable[t].unlockType;
i.getComponent("musicSelectJS").unlockNumber = Number(this.CrownMusicTable[t].unlockCost);
i.getComponent("musicSelectJS").musicID = this.CrownMusicTable[t].musicId;
i.getComponent("musicSelectJS").NewFlag = this.CrownMusicTable[t].ex_new;
i.getComponent("musicSelectJS").musicURL = this.CrownMusicTable[t].musicFile;
i.getComponent("musicSelectJS").pointURL = this.CrownMusicTable[t].json_normal;
i.getComponent("musicSelectJS").musicNumber = t + e;
i.getComponent("musicSelectJS").Home = this;
i.getComponent("musicSelectJS").homeModel = 1;
i.getComponent("musicSelectJS").musicStyle = this.CrownMusicTable[t].style;
i.getComponent("musicSelectJS").listenNum = this.CrownMusicTable[t].ex_listen;
this.CrownArr[t] = i;
}
},
createEggShell: function() {
this.EggShellArr = [];
for (var e = this.musicArr.length, t = 0; t < this.SurpriseMusicTable.length; t++) {
var i = cc.instantiate(this.musicSelectFab);
i.getComponent("musicSelectJS").musicType = "EggShellMusic";
i.getComponent("musicSelectJS").musicName = this.SurpriseMusicTable[t].musicName;
i.getComponent("musicSelectJS").singerName = this.SurpriseMusicTable[t].singerName;
i.getComponent("musicSelectJS").orderNumber = this.SurpriseMusicTable[t].orderNumber;
i.getComponent("musicSelectJS").unlockType = this.SurpriseMusicTable[t].unlockType;
i.getComponent("musicSelectJS").unlockNumber = Number(this.SurpriseMusicTable[t].unlockCost);
i.getComponent("musicSelectJS").musicID = this.SurpriseMusicTable[t].musicId;
i.getComponent("musicSelectJS").NewFlag = this.SurpriseMusicTable[t].ex_new;
i.getComponent("musicSelectJS").musicURL = this.SurpriseMusicTable[t].musicFile;
i.getComponent("musicSelectJS").pointURL = this.SurpriseMusicTable[t].json_normal;
i.getComponent("musicSelectJS").musicNumber = t + e;
i.getComponent("musicSelectJS").Home = this;
i.getComponent("musicSelectJS").homeModel = 1;
i.getComponent("musicSelectJS").musicStyle = this.SurpriseMusicTable[t].style;
i.getComponent("musicSelectJS").listenNum = this.SurpriseMusicTable[t].ex_listen;
this.EggShellArr[t] = i;
}
},
createGiftCode: function() {
for (var e = this.musicArr.length, t = 0; t < this.GiftcodeMusicTable.length; t++) {
var i = cc.instantiate(this.musicSelectFab);
i.getComponent("musicSelectJS").musicType = "EggShellMusic";
i.getComponent("musicSelectJS").musicName = this.GiftcodeMusicTable[t].musicName;
i.getComponent("musicSelectJS").singerName = this.GiftcodeMusicTable[t].singerName;
i.getComponent("musicSelectJS").orderNumber = this.GiftcodeMusicTable[t].orderNumber;
i.getComponent("musicSelectJS").unlockType = this.GiftcodeMusicTable[t].unlockType;
i.getComponent("musicSelectJS").unlockNumber = Number(this.GiftcodeMusicTable[t].unlockCost);
i.getComponent("musicSelectJS").musicID = this.GiftcodeMusicTable[t].musicId;
i.getComponent("musicSelectJS").NewFlag = "Y";
i.getComponent("musicSelectJS").musicURL = this.GiftcodeMusicTable[t].musicFile;
i.getComponent("musicSelectJS").pointURL = this.GiftcodeMusicTable[t].json_normal;
i.getComponent("musicSelectJS").musicNumber = t + e;
i.getComponent("musicSelectJS").Home = this;
i.getComponent("musicSelectJS").homeModel = 1;
var o = window.Parent.getlocalStorage("Haslisten" + this.musicID);
i.getComponent("musicSelectJS").Haslisten = "true" == o;
i.getComponent("musicSelectJS").isGift = !0;
i.getComponent("musicSelectJS").musicStyle = this.GiftcodeMusicTable[t].style;
i.getComponent("musicSelectJS").listenNum = this.GiftcodeMusicTable[t].ex_listen;
this.musicArr[t + e] = i;
}
},
playMusic: function() {
if (!window.isGaming && !window.musicisplaying) {
var e = 0;
if ("HomeMusic" === this.PageType) {
e = this.perviewmusicNum && this.perviewmusicNum < this.curMusicData.length ? this.perviewmusicNum : 0;
var t = this, i = this.curMusicData[e];
window.Parent.LoadMusic(i.musicFile, i.musicId, function(o) {
window.playName = i.musicName;
window.playID = i.musicId;
window.playNum = e;
window.playURL = i.musicFile;
window.playPoint = i.json_normal;
window.isLoadingFirstHomeMusic = !1;
window.musicisplaying = !0;
window.Home.UpdateQuickStartStatus();
window.Home.CDloadOk && (window.Home.CD.getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[i.orderNumber % 20]);
cc.tween(window.Home.CD).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
window.Home.SongName.getComponent(cc.Label).string = i.musicName;
console.log("播放音乐");
window.Parent.audioEngine.playMusic(o, !0);
for (var n = 0; n < t.content.childrenCount; n++) {
var s = t.content.children[n].getComponent("musicSelectJS");
s.musicID == window.playID && s.UpdateMusicInfo();
}
window.Parent.audioEngine.setMusicTime(Number(i.ex_listen));
});
}
}
},
showcruntlist: function() {
if ("HomeMusic" === this.PageType) {
var e = 1 - window.playNum / (this.musicTable.length - 1);
cc.log("HomeMusic", e);
this.scrollview.getComponent(cc.ScrollView).scrollToPercentVertical(e, .3);
}
},
CDbuttonClick: function() {},
stopMusicPlaying: function() {
for (var e = 0; e < this.musicArr.length; e++) (this.musicArr[e].parent === this.content || this.musicArr[e].parent === this.Crowncontent || this.musicArr[e].parent === this.Collectcontent || null != this.musicArr[e].parent && "MusicList" === this.musicArr[e].parent.name) && this.musicArr[e].getComponent("musicSelectJS").stopMusic();
if (0 != this.Crowncontent.childrenCount) for (var t = 0; t < this.Crowncontent.childrenCount; t++) {
var i = this.Crowncontent.children[t].getComponent("CrownMusicListJS").unclockMusicListNode;
if (i) for (var o = 0; o < i.childrenCount; o++) {
i.children[o].getComponent("musicSelectJS").stopMusic();
}
}
for (var n = 0; n < this.content.childrenCount; n++) {
this.content.children[n].getComponent("musicSelectJS").stopMusic();
}
},
playSounds: function() {
var e = this.content.y - this.LastContentPositon;
e < 0 && (e = -e);
if (!(e < 160)) {
this.LastContentPositon = this.content.y;
window.Parent.FanyeSounds();
}
},
changeLight: function() {
if (this.loadok0 && this.loadok1 && this.loadok2 && this.loadok3) {
for (var e = 0; e < 4; e++) this.star[e].runAction(cc.repeatForever(cc.sequence(cc.fadeTo(window.Parent.Random(20, 40) / 10, 50), cc.fadeTo(window.Parent.Random(20, 40) / 10, 255))));
this.colorNum = 0;
this.schedule(function() {
this.colorNum++;
this.colorNum >= 4 && (this.colorNum = 0);
this.bglight.getComponent(cc.Sprite).spriteFrame = this.bglight_Sprit[this.colorNum];
this.crown.getComponent(cc.Sprite).spriteFrame = this.crown_Sprit[this.colorNum];
this.circle1.getComponent(cc.Sprite).spriteFrame = this.circle1_Sprit[this.colorNum];
this.circle0.getComponent(cc.Sprite).spriteFrame = this.circle0_Sprit[this.colorNum];
}, 1);
this.schedule(function() {
var e = cc.instantiate(this.QuickButtonbg);
e.setPosition(this.QuickStartButton.x, this.QuickStartButton.y);
this.lightNode.addChild(e);
e.zIndex = 0;
e.setScale(.8);
e.runAction(cc.scaleTo(.5, 1.3));
e.runAction(cc.sequence(cc.fadeOut(.5), cc.callFunc(function() {
e.destroy();
})));
}, .3);
}
},
startGame: function() {
console.log("window.playName : ", window.playName);
o.default.getInstance().reportAnalytics("Song_Message", "Song_Click", window.playName);
this.stopMusicPlaying();
this.node.active = !1;
this.MusicLoadingNode.active = !0;
window.Game && (window.Game.isGameSurprise = !1);
},
quickStart: function() {
var e = this.musicTable[window.playNum];
if (void 0 != window.playNum || null != window.playNum) if (e) {
var t = e.musicName;
if (t != window.playName) {
window.playNum = null;
this.quickStart();
return;
}
console.log("Play musicName : ", t);
var i = e.musicId, o = e.unlockType, n = e.unlockCost;
"true" == window.Parent.getlocalStorage("isUnlock" + i) || "coin" == o && 0 == n ? this.showModleSelect() : window.Parent.showTips("尚未解锁");
} else {
var s = this.CrownMusicTable[window.playNum - this.musicTable.length], a = s.musicName;
if (a != window.playName) {
window.playNum = null;
this.quickStart();
return;
}
console.log("Play musicName : ", a);
var c = s.musicId, r = s.unlockType, l = s.unlockCost, d = s.ex_bag;
if (-1 != window.unlockCrownMusicName.indexOf(d)) {
"true" == window.Parent.getlocalStorage("isUnlock" + c) || "coin" == r && 0 == l ? this.showModleSelect() : window.Parent.showTips("尚未解锁");
} else window.Parent.showTips("当前曲包尚未解锁");
} else if (window.playName) {
var h = this.FindCurSong();
null == h ? window.Parent.showTips("快速播放歌曲出现错误") : "other" == h || this.quickStart();
}
},
FindCurSong: function() {
if (window.playName) {
for (var e = 0; e < window.Home.musicTable.length; e++) {
var t = window.Home.musicTable[e].musicName;
if (window.playName == t) {
console.log("musicName : ", t);
window.playNum = e;
return e;
}
}
for (var i = 0; i < window.Home.CrownMusicTable.length; i++) {
var o = window.Home.CrownMusicTable[i].musicName;
if (window.playName == o) {
console.log("musicName : ", o);
var n = i + window.Home.musicTable.length;
window.playNum = n;
return n;
}
}
for (var s = 0; s < window.Home.GiftcodeMusicTable.length; s++) {
var a = window.Home.GiftcodeMusicTable[s], c = a.musicName, r = a.musicId, l = a.unlockType, d = a.unlockCost;
if (window.playName == c) {
console.log("musicName : ", c);
"true" == window.Parent.getlocalStorage("isUnlock" + r) || "coin" == l && 0 == d ? this.showModleSelect() : window.Parent.showTips("尚未解锁");
return "other";
}
}
for (var h = 0; h < window.Home.SurpriseMusicTable.length; h++) {
var u = window.Home.SurpriseMusicTable[h], w = u.musicName, m = u.musicId, g = u.unlockType, p = u.unlockCost;
if (window.playName == w) {
console.log("musicName : ", w);
"true" == window.Parent.getlocalStorage("isUnlock" + m) || "coin" == g && 0 == p ? this.showModleSelect() : window.Parent.showTips("尚未解锁");
return "other";
}
}
return null;
}
return null;
},
reflashData: function() {
this.crownStoreButton.getChildByName("point").active = !0;
this.crownStoreButton.getChildByName("tips").active = !0;
if (2 == window.platform) {
this.crownStoreButton.getChildByName("tips").active = !1;
this.crownStoreButton.getChildByName("point").active = !1;
}
var e = window.Parent.getlocalStorage("lastday2"), t = String(new Date().getDay());
if (t != e) {
e = t;
window.Parent.setlocalStorage("lastday2", e);
window.hasShare = !1;
window.Parent.setlocalStorage("hasShare", window.hasShare);
window.hasGet = !1;
window.Parent.setlocalStorage("hasGet", window.hasGet);
window.MissionCrownNumber = 0;
window.Parent.setlocalStorage("MissionCrownNumber", 0);
for (var i = 0; i < window.MissionNumber.length; i++) {
window.MissionNumber[i] = 0;
window.Parent.setlocalStorage("MissionNumber" + i, window.MissionNumber[i]);
window.MissionHasget[i] = !1;
window.Parent.setlocalStorage("MissionHasget" + i, window.MissionHasget[i]);
}
window.yinfuNumber = 0;
window.Parent.setlocalStorage("yinfuNumber", window.yinfuNumber);
window.Parent.setlocalStorage("isFirstTips", 0);
window.Parent.setlocalStorage("showRecord", 0);
window.hasshowFaceTips = 0;
window.Parent.setlocalStorage("hasshowFaceTips", window.hasshowFaceTips);
}
},
checkDailyReward: function() {
this.lastday = window.Parent.getlocalStorage("singlastday");
this.curnday = String(new Date().getDay());
if (this.curnday != this.lastday) 1 == this.moreButton.active && this.scheduleOnce(function() {
this.showCheckNode(!1);
}, .5); else {
window.isFirstSign = !0;
1 == this.moreButton.active && window.Home.showNewSong();
}
},
showModleSelect: function(e) {
if (this.modelSelectNode) {
e && (this.modelSelectNode.getComponent("NewModelSelectJS").callBack = e);
this.modelSelectNode.active = !0;
this.modelSelectNode.zIndex = 29;
} else {
var t = cc.instantiate(this.NewModelSelectFab);
t.parent = this.node.parent;
this.modelSelectNode = t;
e && (t.getComponent("NewModelSelectJS").callBack = e);
t.active = !0;
t.zIndex = 29;
}
},
showmoreButton: function() {
console.log("showmoreButton");
this.moreButton.active = !0;
this.LoadingNode.active = !1;
this.lastday = window.Parent.getlocalStorage("singlastday");
this.curnday = String(new Date().getDay());
this.scheduleOnce(function() {
this.curnday != this.lastday ? this.showCheckNode() : 2 != window.platform ? this.showOfficailTips() : this.showNewSong();
}, .2);
},
showmoreButtons: function() {
console.log("showmoreButtons");
var e = this;
this.moreButton.stopAllActions();
this.moreButtonbg.stopAllActions();
if (window.btn2) {
window.btn2.destroy();
window.btn2 = void 0;
}
if (!1 === this.moreButtonbg.active) {
this.moreButton.getComponent(cc.Button).interactable = !1;
this.moreButtonbg.setScale(0);
this.moreButtonbg.active = !0;
this.moreButtonbg.zIndex = 3;
this.moreButtonbg.runAction(cc.scaleTo(.2, 1, 1));
this.moreButton.getChildByName("add").runAction(cc.rotateTo(.2, 135));
this.scheduleOnce(function() {
this.creatTuijianGame();
this.moreButton.getComponent(cc.Button).interactable = !0;
}, .21);
} else {
this.moreButton.getComponent(cc.Button).interactable = !1;
this.moreButtonbg.runAction(cc.sequence(cc.scaleTo(.2, 0, 0), cc.callFunc(function() {
e.moreButtonbg.active = !1;
e.moreButton.getComponent(cc.Button).interactable = !0;
})));
this.moreButton.getChildByName("add").runAction(cc.rotateTo(.2, 0));
if (window.btn2) {
window.btn2.destroy();
window.btn2 = void 0;
}
}
window.platform;
},
showDailiyMission: function() {
this.closemoreGame();
window.Parent.ButtonSounds();
if (this.DailyMissionNode) this.DailyMissionNode.active = !0; else {
var e = cc.instantiate(this.DailiyMissionNodeFab);
e.setPosition(0, 0);
window.ParentNode.addChild(e);
e.zIndex = 20;
this.DailyMissionNode = e;
}
!0 === this.moreButtonbg.active && this.showmoreButtons();
window.Parent.hideBlockAd();
5 == window.platform && window.Parent.hidePushicon();
},
showColectMusic: function() {
console.log("展示收藏音乐");
window.Parent.reportAnalytics("pack6_MusicList_click");
window.Parent.reportCustomEvent("游戏事件", {
"展示喜欢歌单": ""
});
this.PageType = "ColectMusic";
this.scrollview.setScale(0);
this.Collectscrollview.setScale(1);
this.Crownscrollview.setScale(0);
this.SearchListNode.setScale(0);
this.Collectscrollview.getComponent("ColectMusicJS").NewReflashTabel();
this.NormalTableButton.active = !1;
this.SummerTableButton.active = !1;
this.StudyTableButton.active = !1;
this.ParkTableButton.active = !1;
this.RestTableButton.active = !1;
this.ColectionTableButton.active = !0;
},
showNormaolMusic: function() {
var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
if (0 != this.curSelectList || 0 != e || 0 != t) {
console.log("展示推荐音乐");
this.curSelectList = 0;
window.Parent.reportAnalytics("ALL1_MusicList_click");
window.Parent.reportCustomEvent("游戏事件", {
"展示全部音乐": ""
});
this.PageType = "HomeMusic";
this.scrollview.setScale(1);
this.Collectscrollview.setScale(0);
this.Crownscrollview.setScale(0);
this.SearchListNode.setScale(0);
this.NormalTableButton.active = !0;
this.SummerTableButton.active = !1;
this.StudyTableButton.active = !1;
this.ParkTableButton.active = !1;
this.RestTableButton.active = !1;
this.ColectionTableButton.active = !1;
this.Crowncontent.active = !1;
this.creatMusicList(0);
this.clickOther++;
}
},
showCrownMusic: function() {
if (5 != this.curSelectList) {
console.log("展示音乐包音乐");
this.curSelectList = 5;
window.Parent.reportAnalytics("pack6_MusicList_click");
window.Parent.reportCustomEvent("游戏事件", {
"展示音乐包音乐": ""
});
this.PageType = "CrownMusic";
this.Crowncontent.active = !0;
this.scrollview.setScale(0);
this.Collectscrollview.setScale(0);
this.Crownscrollview.setScale(1);
this.SearchListNode.setScale(0);
this.Crownscrollview.getComponent("CrownMusicJS").NewReflashTabel();
this.NormalTableButton.active = !1;
this.SummerTableButton.active = !1;
this.StudyTableButton.active = !1;
this.ParkTableButton.active = !1;
this.RestTableButton.active = !1;
this.ColectionTableButton.active = !0;
this.setTipsAnim = !0;
this.spText.active = !1;
}
},
showCheckNode: function(e) {
if (!window.isGaming) {
this.closemoreGame();
0 != e && window.Parent.ButtonSounds();
var t = cc.instantiate(this.SignNodeFab);
t.setPosition(0, 0);
window.ParentNode.addChild(t);
t.zIndex = 1001;
this.lastday = window.Parent.getlocalStorage("singlastday");
this.curnday = String(new Date().getDay());
this.lastday != this.curnday ? t.getComponent("SignNodeJS").HideCloseBTN(!1) : t.getComponent("SignNodeJS").HideCloseBTN(!0);
!0 === this.moreButtonbg.active && this.showmoreButtons();
window.Parent.hideBlockAd();
5 == window.platform && window.Parent.hidePushicon();
}
},
showAchieveNode: function() {
this.closemoreGame();
window.Parent.ButtonSounds();
this.LoadingNode.active = !0;
var e = this, t = function() {
var t = cc.instantiate(e.AchieveNodeFab);
t.setPosition(0, 0);
window.ParentNode.addChild(t);
t.zIndex = 20;
!0 === e.moreButtonbg.active && e.showmoreButtons();
window.Parent.hideBlockAd();
e.LoadingNode.active = !1;
}, i = function() {
cc.loader.loadRes("PreFab/AchieveNode", cc.Prefab, function(i, o) {
if (i) console.log("AchieveNode加载出错"); else {
console.log("AchieveNode加载完成");
e.AchieveNodeFab = o;
t();
}
});
};
e.AchieveNodeFab ? t() : function() {
e.allResNum = 0;
e.resnum = 0;
e.resLoadOk = !1;
e.allResNum++;
var t = 0;
window.title = [];
for (var o = function(o) {
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/AchievePicture/a".concat(o, ".png"),
type: "png"
}, function(n, s) {
if (n) ; else {
t++;
window.title[o] = new cc.SpriteFrame(s);
if (t >= 6) {
console.log("成就名称 加载完成");
e.resnum++;
e.resnum >= e.allResNum && (e.resLoadOk = !0);
1 == e.resLoadOk && i();
}
}
});
}, n = 0; n < 6; n++) o(n);
e.allResNum++;
var s = 0;
window.AchieveLamp = [];
for (var a = function(t) {
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/LampPicture/lamp".concat(t, ".png"),
type: "png"
}, function(o, n) {
if (o) ; else {
s++;
window.AchieveLamp[t] = new cc.SpriteFrame(n);
if (s >= 4) {
console.log("成就彩灯 加载完成");
e.resnum++;
e.resnum >= e.allResNum && (e.resLoadOk = !0);
1 == e.resLoadOk && i();
}
}
});
}, c = 0; c < 4; c++) a(c);
}();
5 == window.platform && window.Parent.hidePushicon();
},
showCrownStore: function(e) {
var t = this;
this.LoadingNode.active = !0;
cc.loader.loadRes("PreFab/NewCrownStoreFab", cc.Prefab, function(i, o) {
if (i) console.log("NewCrownStoreFab 加载出错"); else {
console.log("CrownStoreFab加载完成");
console.log("NewCrownStoreFab加载完成");
t.crownStoreButton.getChildByName("point").active = !1;
t.crownStoreButton.getChildByName("tips").active = !1;
console.log("展示皇冠商店");
t.closemoreGame();
var n = cc.instantiate(o);
n.setPosition(0, 0);
window.ParentNode.addChild(n);
n.zIndex = 20;
1 == e && t.scheduleOnce(function() {
n.getComponent("NewCrownStoreJS").selectStore(null, 0);
}, .2);
!0 === t.moreButtonbg.active && t.showmoreButtons();
window.Parent.hideBlockAd();
t.LoadingNode.active = !1;
}
});
5 == window.platform && window.Parent.hidePushicon();
},
showXingzuoNode: function() {
0 == window.hasshowXingzuoTips && (window.hasshowXingzuoTips = !0);
window.Parent.reportAnalytics("constellation_page_access");
this.closemoreGame();
var e = this;
cc.loader.loadRes("PreFab/ConstellationNode", cc.Prefab, function(t, i) {
if (t) console.log("ConstellationNode 加载出错"); else {
console.log("ConstellationNode加载完成");
var o = cc.instantiate(i);
o.setPosition(0, 0);
window.ParentNode.addChild(o);
o.zIndex = 20;
!0 === e.moreButtonbg.active && e.showmoreButtons();
window.Parent.hideBlockAd();
}
});
5 == window.platform && window.Parent.hidePushicon();
},
showVideoRank: function() {
console.log("展示视屏排行榜");
this.closemoreGame();
if (this.videoRankNode) this.videoRankNode.active = !0; else {
var e = cc.instantiate(this.VideoRankNodeFab);
e.setPosition(0, 0);
window.ParentNode.addChild(e);
e.zIndex = 2e3;
this.videoRankNode = e;
}
!0 === this.moreButtonbg.active && this.showmoreButtons();
window.Parent.hideBlockAd();
5 == window.platform && window.Parent.hidePushicon();
},
showOfficailTips: function() {
window.isFirstSign = !0;
if (3 != window.platform || this.EggshellAllClear()) this.showXingzuoTips(); else {
var e = cc.instantiate(this.FollowNodeFab);
e.setPosition(0, 0);
window.ParentNode.addChild(e);
e.zIndex = 1e3;
this.followNode = e;
}
},
shwoFaceTips: function() {
this.showXingzuoTips();
},
showXingzuoTips: function() {
if (1 != window.hasshowXingzuoTips) if (this.ConstellationAllClear()) this.ConstellationAllClear() && this.EggshellAllClear() && this.showNewSong(!0); else {
var e = cc.instantiate(this.XingZuoTipsNodeFab);
e.setPosition(0, 0);
window.ParentNode.addChild(e);
e.zIndex = 1e3;
}
},
showConstellationdetail: function(e) {
window.ConstellationNum = e;
this.lightNode.active = !1;
this.Logo.getComponent(cc.Sprite).spriteFrame = window.ConstellationLogo_Spr[e];
this.descriptionLable.string = "       " + this.descriptionString[e];
this.tips1Lable.string = this.tips1String[e];
this.dataLable.string = this.DataString[e];
this.titleLable.string = this.tips1String[e] + "性格特点";
this.Constellationdetail.active = !0;
window.Home.newSongTable.length > 0 && window.Home.showNewSong();
window.Parent.reportCustomEvent("星座事件", {
"展示星座详细": this.tips1String[e]
});
},
showNewSong: function() {
var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
if (2 != window.platform && 5 != window.platform) {
window.Parent.showRecommendNum++;
var t = Number(window.Parent.getlocalStorage("PlayGame"));
console.log("curBool : ", t);
1 != t && 0 == e || this.scheduleOnce(function() {
var e = cc.instantiate(this.NewrecommendFab);
e.setPosition(0, 0);
window.ParentNode.addChild(e);
e.zIndex = 1e3;
this.LoadingNode.active = !1;
}, .2);
}
},
closeConstellationdetail: function() {
window.ConstellationNum = 12;
this.Constellationdetail.active = !1;
this.lightNode.active = !0;
this.showXingzuoNode();
},
runcrcloe: function(e, t, i, o, n, s) {
if (window.musicisplaying) {
var a = t, c = i, r = 3.1415926 / (700 / n / o);
e.angle += 59.7 * r;
var l = Math.cos(r), d = Math.sin(r), h = e.x - a, u = e.y - c, w = h * l - u * d, m = u * l + h * d;
e.x = a + w;
e.y = c + m;
if (1 == s) {
if (e.x >= 5 && e.x < 10 && e.y < 0) {
e.x = 148.91;
e.y = -81.2;
}
if (e.x >= -10 && e.x < -5 && e.y > 0) {
e.x = -149.48;
e.y = 83;
}
}
}
},
checkAchievement: function() {
for (var e = 0, t = 0; t < window.AchieveTable.length; t++) {
var i = [];
i[0] = Number(window.AchieveTable[t].Number0);
i[1] = Number(window.AchieveTable[t].Number1);
i[2] = Number(window.AchieveTable[t].Number2);
i[3] = Number(window.AchieveTable[t].Number3);
i[4] = Number(window.AchieveTable[t].Number4);
i[5] = Number(window.AchieveTable[t].Number5);
window.AchieveNumber[t] >= i[window.AchieveLevel[t]] && e++;
}
if (e > 0) {
this.AchieveButton.getChildByName("point").active = !0;
this.AchieveButton.getChildByName("point").stopAllActions();
this.AchieveButton.getChildByName("point").runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.5, 1), cc.scaleTo(.5, .8))));
} else this.AchieveButton.getChildByName("point").active = !1;
if (window.hasfollow) this.subscriptionButton.getChildByName("point").active = !1; else {
this.subscriptionButton.getChildByName("point").active = !0;
this.subscriptionButton.getChildByName("point").stopAllActions();
this.subscriptionButton.getChildByName("point").runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.5, 1), cc.scaleTo(.5, .8))));
}
var o = this.AchieveButton.getChildByName("point").active, n = this.subscriptionButton.getChildByName("point").active;
if (o || n && this.subscriptionButton.active) {
this.point.active = !0;
this.point.stopAllActions();
this.point.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.5, 1), cc.scaleTo(.5, .8))));
} else this.point.active = !1;
},
creatTuijianGame: function() {
if (3 === window.platform && !window.TestModle) {
var e = this.morgamePosition.parent.convertToWorldSpaceAR(this.morgamePosition.position), t = (e.x - 100) / window.screenWidth, i = (window.screenHight - e.y - 100) / window.screenHight, o = t * tt.getSystemInfoSync().screenWidth, n = i * tt.getSystemInfoSync().screenHeight;
window.btn2 = tt.createMoreGamesButton({
type: "image",
image: "moreGame.png",
actionType: "box",
style: {
left: o,
top: n,
width: 53,
height: 63,
lineHeight: 40,
backgroundColor: "",
textColor: "",
textAlign: "center",
fontSize: 16,
borderRadius: 4,
borderWidth: 0,
borderColor: ""
},
appLaunchOptions: [ {
appId: "ttXXXXXX",
query: "foo=bar&baz=qux",
extraData: {}
} ],
onNavigateToMiniGame: function(e) {
console.log("跳转其他小游戏", e);
}
});
window.btn2.onTap(function() {
console.log("点击更多游戏");
});
}
},
closemoreGame: function() {
console.log("销毁更多游戏");
if (window.btn) {
window.btn.destroy();
window.btn = void 0;
}
if (window.btn2) {
window.btn2.destroy();
window.btn2 = void 0;
}
window.platform;
},
addDeskTop: function() {
window.Parent.reportAnalytics("desktop_click");
window.Parent.reportCustomEvent("游戏事件", {
"添加桌面按钮点击": ""
});
tt.addShortcut({
success: function(e) {
e.status;
var t = e.errMsg;
console.log(e);
console.log("API调用成功结果:    " + t);
},
fail: function(e) {
var t = e.errMsg;
console.log("API调用失败结果:    " + t);
}
});
},
FollowDouyin: function() {
if (3 == window.platform) if (window.TestModle) {
this.hasFllowOfficial = 1;
window.Parent.setlocalStorage("hasFllowOfficial", this.hasFllowOfficial);
} else {
var e = this;
window.Parent.reportAnalytics("officialID_page_access");
window.Parent.reportCustomEvent("官号事件", {
"官号页面展示": ""
});
tt.openAwemeUserProfile({
success: function(t) {
console.log("---- open success, res: ", t);
if (t.hasFollowed) {
console.log("hasFllowOfficial True", e.hasFllowOfficial);
if (0 == e.hasFllowOfficial) {
e.hasFllowOfficial = 1;
window.Parent.showTips("关注成功");
window.Parent.reportAnalytics("officialID_follow_right");
window.Parent.reportCustomEvent("官号事件", {
"官号成功关注": ""
});
e.followNode && (e.followNode.active = !1);
e.CustomButton.getChildByName("Mask").getChildByName("fallowTips").active = !1;
e.CustomButton.stopAllActions();
e.CustomButton.setScale(1);
e.CustomButton.angle = 0;
e.OnClickEggShell();
}
if (1 != Number(window.Parent.getlocalStorage("EggShellClock0"))) {
window.Parent.setlocalStorage("EggShellClock0", 1);
window.Parent.reportAnalytics("eggs_MusicUnlock_number");
}
} else {
console.log("hasFllowOfficial Fail", e.hasFllowOfficial);
if (1 == e.hasFllowOfficial) {
e.hasFllowOfficial = 0;
e.CustomButton.stopAllActions();
e.CustomButton.getChildByName("Mask").getChildByName("fallowTips").active = !0;
e.crownStoreButton.getChildByName("point").active = !0;
e.CustomButton.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.2, 1.1), cc.rotateTo(.1, 30), cc.rotateTo(.1, -25), cc.rotateTo(.1, 20), cc.rotateTo(.1, 0), cc.scaleTo(.2, 1), cc.delayTime(1))));
window.Parent.showTips("取消关注");
e.cancelFollowMusic();
window.Parent.reportAnalytics("officialID_follow_wrong");
window.Parent.reportCustomEvent("官号事件", {
"官号取消关注": ""
});
}
}
window.Parent.setlocalStorage("hasFllowOfficial", e.hasFllowOfficial);
},
fail: function(e) {
console.log("---- open fail, err: ", e);
"openAwemeUserProfile:fail not login" === e.errMsg ? window.Parent.showTips("请先登录账号") : window.Parent.showTips("暂不支持此应用");
},
complete: function(e) {}
});
}
},
DouyinLogin: function() {
var e = this;
if (3 == window.platform && !window.TestModle) {
tt.login({
success: function(t) {
console.log("抖音登录成功");
var i = t.code;
tt.getUserInfo({
success: function(e) {
var t = e.userInfo.nickName, o = e.userInfo.avatarUrl, n = e.userInfo.gender, s = "https://www.ascmob.com", a = {
channelId: 5144154,
gameId: 5144,
gameVersion: "1.0.0",
signParam: {
code: i,
nickName: t,
gender: n,
avatar: o
}
};
console.log(JSON.stringify(a));
var c = "".concat(s, "/fastgameserver/user/getH5SDkUserInfo"), r = new XMLHttpRequest();
r.open("POST", c, !0);
r.setRequestHeader("Content-type", "application/json");
r.send(a);
window.LogLable.getComponent(cc.Label).string = r.readyState + "/" + r.status;
r.onreadystatechange = function() {
if (4 == r.readyState && r.status >= 200 && r.status < 400) {
var e = JSON.parse(r.responseText);
if (null != e) {
var t = e.data.token, i = e.data.userId;
a = {
channelId: 5144154,
tplId: "demo_notify_tpl_4",
userId: i
};
c = "".concat(s, "/fastgameserver/user/usersubscribe/receiveSubscribe");
r.open("POST", c, !0);
r.setRequestHeader("Content-type", "application/json");
r.setRequestHeader("X-Token", t);
r.send(a);
r.onreadystatechange = function() {
window.LogLable.getComponent(cc.Label).string = r.readyState + "/" + r.status;
if (4 == r.readyState && r.status >= 200 && r.status < 400) {
JSON.parse(r.responseText);
console.log("订阅成功");
window.Parent.showTips("订阅成功");
}
};
}
}
};
},
fail: function(t) {
console.log("getUserInfo调用失败");
window.Parent.showTips("请授权");
e.scheduleOnce(function() {
tt.openSetting();
}, 1.5);
}
});
}
});
}
},
subscription: function() {
var e = this;
console.log("订阅消息");
window.Parent.reportAnalytics("subscription_click");
window.Parent.reportCustomEvent("游戏事件", {
"抖音订阅按钮点击": ""
});
this.subscriptionButton.getChildByName("point").active = !1;
window.hasfollow = !0;
window.Parent.setlocalStorage("hasfollow", window.hasfollow);
window.TestModle || tt.requestSubscribeMessage({
tmplIds: [ "demo_notify_tpl_4" ],
success: function(t) {
console.log("订阅成功", t);
e.DouyinLogin();
},
fail: function(t) {
console.log("订阅失败", t.errMsg, t.errCode);
if (1005 === t.errCode) {
console.log("已经订阅");
e.DouyinLogin();
} else "requestSubscribeMessage:fail not supported by current application" === t.errMsg ? window.Parent.showTips("这个应用不支持订阅") : window.Parent.showTips("订阅失败");
}
});
},
qqshowmorGame: function() {
4 == window.platform ? window.Parent.showQQAppBox() : 1 == window.platform && "undefined" != typeof qg && window.Parent.showNavigateBoxPortal();
},
checkQQBox: function() {
if (4 == window.platform || 1 == window.platform) {
4 == window.platform && (window.Parent.getQQBoxFlag() ? this.qq_box.active = !0 : this.qq_box.active = !1);
1 == window.platform && "undefined" != typeof qg && (window.Parent.getNavigateBoxPortalFlag() && qg.getSystemInfoSync().platformVersionCode >= 1076 ? this.qq_box.active = !0 : this.qq_box.active = !1);
}
},
showLogLable: function() {
this.logcunt++;
this.logcunt >= 10 && (window.LogLable.active = !0);
},
cancelFollowMusic: function() {
console.log("取消关注音乐包", window.MusicBagTable);
var e = window.MusicBagTable.split(",");
e = window.Tools.unique(e);
for (var t = [], i = 0; i < e.length; i++) {
t.push(e[i]);
}
for (var o = "", n = 0; n < t.length; n++) o = "" == o ? t[n] : o + "," + t[n];
window.MusicBagTable = o;
e = window.unlockCrownMusicName.split(",");
e = window.Tools.unique(e);
cc.log(e, 1);
for (var s = 0; s < e.length; s++) ;
cc.log(e, 2);
o = "";
for (var a = 0; a < e.length; a++) o = "" == o ? e[a] : o + "," + e[a];
window.unlockCrownMusicName = o;
window.Home.hasFllowOfficial = 0;
window.Home.hasGetOfficialMusic = 0;
window.Parent.setlocalStorage("hasFllowOfficial", window.Home.hasFllowOfficial);
window.Parent.setlocalStorage("hasGetOfficialMusic", window.Home.hasGetOfficialMusic);
window.Parent.setlocalStorage("MusicBagTable", window.MusicBagTable);
window.Parent.setlocalStorage("unlockCrownMusicName", window.unlockCrownMusicName);
},
showDouyinVideo: function() {
console.log("展示抖音视屏");
tt.navigateToVideoView({
videoId: "131045450d28426302524c110f7b436d51542b420078466c525142460d724561535541410e7f"
});
},
showGetVideoNode: function(e, t) {
var i = cc.instantiate(this.GetVideoNodeFab);
i.setPosition(0, 0);
window.ParentNode.addChild(i);
i.active = !1;
window.GetVideo.isGameEnd = !0;
window.GetVideo.SetSceneAnim();
window.GetVideo.SetSceneJS(e, t);
},
showFirstTipsNode: function(e, t, i) {
var o = cc.instantiate(this.FirstTipsNodeFab);
o.setPosition(0, 0);
window.ParentNode.addChild(o);
o.zIndex = 20;
o.getComponent("FirstTipsNodeJS").UpdateCurType(e, t, i);
},
showSummerMusic: function() {
if (1 != this.curSelectList) {
console.log("展示夏天音乐");
this.curSelectList = 1;
window.Parent.reportAnalytics("summer2_MusicList_click");
window.Parent.reportCustomEvent("游戏事件", {
"展示夏天音乐": ""
});
this.PageType = "HomeMusic";
this.scrollview.setScale(1);
this.Collectscrollview.setScale(0);
this.Crownscrollview.setScale(0);
this.SearchListNode.setScale(0);
this.Crowncontent.active = !1;
this.creatMusicList(1);
this.NormalTableButton.active = !1;
this.SummerTableButton.active = !0;
this.StudyTableButton.active = !1;
this.ParkTableButton.active = !1;
this.RestTableButton.active = !1;
this.ColectionTableButton.active = !1;
this.clickOther++;
}
},
showStudyMusic: function() {
if (2 != this.curSelectList) {
console.log("展示学习音乐");
this.curSelectList = 2;
window.Parent.reportAnalytics("study3_MusicList_click");
window.Parent.reportCustomEvent("游戏事件", {
"展示学习音乐": ""
});
this.PageType = "HomeMusic";
this.scrollview.setScale(1);
this.Collectscrollview.setScale(0);
this.Crownscrollview.setScale(0);
this.SearchListNode.setScale(0);
this.Crowncontent.active = !1;
this.creatMusicList(2);
this.NormalTableButton.active = !1;
this.SummerTableButton.active = !1;
this.StudyTableButton.active = !0;
this.ParkTableButton.active = !1;
this.RestTableButton.active = !1;
this.ColectionTableButton.active = !1;
this.clickOther++;
}
},
showParkMusic: function() {
if (3 != this.curSelectList) {
console.log("展示公园音乐");
this.curSelectList = 3;
window.Parent.reportAnalytics("park4_MusicList_click");
window.Parent.reportCustomEvent("游戏事件", {
"展示公园音乐": ""
});
this.PageType = "HomeMusic";
this.scrollview.setScale(1);
this.Collectscrollview.setScale(0);
this.Crownscrollview.setScale(0);
this.SearchListNode.setScale(0);
this.Crowncontent.active = !1;
this.creatMusicList(3);
this.NormalTableButton.active = !1;
this.SummerTableButton.active = !1;
this.StudyTableButton.active = !1;
this.ParkTableButton.active = !0;
this.RestTableButton.active = !1;
this.ColectionTableButton.active = !1;
this.clickOther++;
}
},
showRestMusic: function() {
if (4 != this.curSelectList) {
console.log("展示休息音乐");
this.curSelectList = 4;
window.Parent.reportAnalytics("rest5_MusicList_click");
window.Parent.reportCustomEvent("游戏事件", {
"展示休息音乐": ""
});
this.PageType = "HomeMusic";
this.scrollview.setScale(1);
this.Collectscrollview.setScale(0);
this.Crownscrollview.setScale(0);
this.SearchListNode.setScale(0);
this.Crowncontent.active = !1;
this.creatMusicList(4);
this.NormalTableButton.active = !1;
this.SummerTableButton.active = !1;
this.StudyTableButton.active = !1;
this.ParkTableButton.active = !1;
this.RestTableButton.active = !0;
this.ColectionTableButton.active = !1;
this.clickOther++;
}
},
OnClickEggShell: function() {
console.log("点击彩蛋");
window.Parent.ButtonSounds();
this.LoadingNode.active = !0;
var e = this;
cc.loader.loadRes("PreFab/EggShellNode", cc.Prefab, function(t, i) {
if (t) console.log("EggShellNode 加载出错"); else {
console.log("EggShellNode 加载完成");
var o = cc.instantiate(i);
o.setPosition(0, 0);
o.zIndex = 11;
window.ParentNode.addChild(o);
e.closemoreGame();
!0 === e.moreButtonbg.active && e.showmoreButtons();
window.Parent.hideBlockAd();
e.LoadingNode.active = !1;
}
});
5 == window.platform && window.Parent.hidePushicon();
},
ScrollViewBack: function() {
var e = Number(window.Parent.getlocalStorage("scrollNum"));
if (e < 6) if (this.content.y <= 300 && 0 == this.scrollUp) {
this.scrollUp = !0;
window.Parent.setlocalStorage("scrollNum", e + 1);
} else this.content.y > 300 && (this.scrollUp = !1); else {
if (1 != Number(window.Parent.getlocalStorage("EggShellClock2"))) {
window.Parent.setlocalStorage("EggShellClock2", 1);
window.Parent.showTips("解锁彩蛋");
this.showNormaolMusic(0, !0);
window.Parent.reportAnalytics("eggs_MusicUnlock_number");
if (this.eggShellBTN) {
this.eggShellBTN.stopAllActions();
if (!this.EggshellAllClear()) {
this.eggShellBTN.angle = 0;
2 != window.platform && this.eggShellBTN.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.2, 1.1), cc.rotateTo(.1, 30), cc.rotateTo(.1, -25), cc.rotateTo(.1, 20), cc.rotateTo(.1, 0), cc.scaleTo(.2, 1), cc.delayTime(1))));
}
}
}
}
},
OnClickGiftCode: function() {
console.log("点击兑换码");
window.Parent.ButtonSounds();
this.LoadingNode.active = !0;
var e = this;
cc.loader.loadRes("PreFab/GiftNode", cc.Prefab, function(t, i) {
if (t) console.log("GiftNode 加载出错"); else {
console.log("GiftNode 加载完成");
var o = cc.instantiate(i);
o.setPosition(0, 0);
o.zIndex = 13;
window.ParentNode.addChild(o);
e.closemoreGame();
!0 === e.moreButtonbg.active && e.showmoreButtons();
window.Parent.hideBlockAd();
e.LoadingNode.active = !1;
}
});
},
GiftAllClear: function() {
for (var e = 0, t = 0; t < this.GiftcodeList.length; t++) {
var i = this.GiftcodeList[t];
1 == Number(window.Parent.getlocalStorage("GiftCode_" + i)) && e++;
}
console.log("clockNum : ", e);
return e == this.GiftcodeList.length;
},
EggshellAllClear: function() {
for (var e = 0; e < 3; e++) {
var t = "EggShellClock" + e;
if (1 != Number(window.Parent.getlocalStorage(t))) return !1;
}
return !0;
},
ConstellationAllClear: function() {
for (var e = 0, t = 0; t < 12; t++) {
var i = "LogoisUnlock" + t.toString();
if ("true" == window.Parent.getlocalStorage(i) && ++e >= 3) return !0;
}
return !1;
},
AddNewSongTabel: function() {
console.log("设置新歌推荐");
this.newSongTable = [];
for (var e = 0; e < this.musicTable.length; e++) {
var t = this.musicTable[e], i = t.musicId, o = t.unlockType;
"true" == window.Parent.getlocalStorage("isUnlock" + i) || "video" == o && this.newSongTable.push(t);
}
},
RemoveSongTabel: function(e) {
for (var t = this.newSongTable.length - 1; t >= 0; t--) {
if (e == this.newSongTable[t].musicId) {
this.newSongTable.splice(t, 1);
break;
}
}
},
ShowReplay: function() {
if (3 == window.platform) {
window.isShowIOS = !0;
var e = cc.instantiate(this.NewrecommendFab);
e.setPosition(0, 0);
window.ParentNode.addChild(e);
e.zIndex = 1e3;
this.LoadingNode.active = !1;
this.closemoreGame();
}
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics",
console: 5
} ],
HotJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "76709x/yshGoZCiz1Dqm1Hs", "HotJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
OtherMusicPrefab: cc.Prefab
},
onLoad: function() {
window.HotNode = this.node;
window.HotNodeJS = this;
this.defination();
this.definePar();
this.SetBTNEvent();
this.SetHotMusic();
},
defination: function() {
this.HotBG = this.node.getChildByName("SP_BG");
this.HotContent = this.node.getChildByName("view").getChildByName("content");
this.HotChange = this.node.getChildByName("BTN_Change");
},
definePar: function() {
this.CanRefreshHot = !0;
},
SetBTNEvent: function() {
this.HotChange.on(cc.Node.EventType.TOUCH_END, this.OnClickRefreshHot, this);
},
SetHotMusic: function() {
var e = this, t = this;
this.node.active = !0;
var i = !1;
if (this.HotContent.childrenCount > 0) {
i = !0;
for (var o = function(t) {
var i = e.HotContent.children[t], o = .08 * t;
e.scheduleOnce(function() {
i.getComponent("OtherSelectJS").TurnOutAnim();
}, o);
}, n = 0; n < this.HotContent.childrenCount; n++) o(n);
for (var s = 0; s < window.Home.HistoryHotList.length; s++) {
var a = window.Home.HistoryHotList[s], c = window.Home.homeMusicTable.indexOf(a);
-1 != c && window.Home.homeMusicTable.splice(c, 1);
}
}
this.hotList = [];
if (window.Home.curHotListData && window.Home.curHotListData.length > 0) {
window.Home.hotTable = window.Home.curHotListData;
window.Home.curHotListData = [];
} else {
window.Home.hotTable = this.DealHotList();
this.SaveHotList();
}
if (window.Home.hotTable) {
this.node.height = 220 * window.Home.hotTable.length + 180 + 50;
this.HotBG.height = 220 * window.Home.hotTable.length + 180;
for (var r = function(o) {
var n = function() {
var e = window.Home.hotTable[o], n = null, s = (n = 0 == i ? cc.instantiate(t.OtherMusicPrefab) : t.HotContent.children[o]).getComponent("OtherSelectJS");
s.musicName = e.musicName;
s.musicID = e.musicId;
s.musicURL = e.musicFile;
s.orderNumber = e.orderNumber;
s.singerName = e.singerName;
s.unlockType = e.unlockType;
s.unlockNumber = Number(e.unlockCost);
s.pointURL = e.json_normal;
s.listenNum = Number(e.ex_listen);
s.curType = 2;
t.hotList[o] = s;
window.Home.homeMusicTable.push(e);
0 == i && t.HotContent.addChild(n);
if (1 == i) {
s.UpdateMusicInfo(!0);
var a = .05 * o + .1;
t.scheduleOnce(function() {
s.TurnInAnim();
}, a);
}
};
if (0 == i) n(); else {
var s = .08 * o + .2;
e.scheduleOnce(function() {
n();
}, s);
}
}, l = 0; l < window.Home.hotTable.length; l++) r(l);
}
},
DealHotList: function() {
var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, t = [], i = window.Home.lockHotList, o = window.Home.unplayHotList, n = window.Home.unAllStarHotList, s = window.Home.unlockHotList;
if (e) for (var a = 0; a < e.length; a++) t.push(e[a]);
if (t.length < 5) for (var c = 0; c < i.length; c++) {
var r = i[c];
if (-1 == window.Home.HistoryHotList.indexOf(r) && -1 == window.Home.OtherMusicTable.indexOf(r) && -1 == window.Home.hotTable.indexOf(r) && -1 == window.Home.likeTable.indexOf(r) && -1 == window.Home.DayGiftList.indexOf(r) && -1 == window.Home.dayPlayList.indexOf(r)) {
t.push(r);
window.Home.HistoryHotList.push(r);
if (t.length >= 5) break;
}
}
if (t.length < 5) for (var l = 0; l < o.length; l++) {
var d = o[l];
if (-1 == window.Home.HistoryHotList.indexOf(d) && -1 == window.Home.OtherMusicTable.indexOf(d) && -1 == window.Home.hotTable.indexOf(d) && -1 == window.Home.likeTable.indexOf(d) && -1 == window.Home.DayGiftList.indexOf(d) && -1 == window.Home.dayPlayList.indexOf(d)) {
t.push(d);
window.Home.HistoryHotList.push(d);
if (t.length >= 5) break;
}
}
if (t.length < 5) for (var h = 0; h < n.length; h++) {
var u = n[h];
if (-1 == window.Home.HistoryHotList.indexOf(u) && -1 == window.Home.OtherMusicTable.indexOf(u) && -1 == window.Home.hotTable.indexOf(u) && -1 == window.Home.likeTable.indexOf(u) && -1 == window.Home.DayGiftList.indexOf(u) && -1 == window.Home.dayPlayList.indexOf(u)) {
t.push(u);
window.Home.HistoryHotList.push(u);
if (t.length >= 5) break;
}
}
if (t.length < 5) for (var w = 0; w < s.length; w++) {
var m = s[w];
if (-1 == window.Home.HistoryHotList.indexOf(m) && -1 == window.Home.OtherMusicTable.indexOf(m) && -1 == window.Home.hotTable.indexOf(m) && -1 == window.Home.likeTable.indexOf(m) && -1 == window.Home.DayGiftList.indexOf(m) && -1 == window.Home.dayPlayList.indexOf(m)) {
t.push(m);
window.Home.HistoryHotList.push(m);
if (t.length >= 5) break;
}
}
if (t.length < 5) {
window.Home.HistoryHotList.splice(0, window.Home.HistoryHotList.length);
t = this.DealHotList(t);
}
return t;
},
SaveHotList: function() {
for (var e = "", t = 0; t < window.Home.hotTable.length; t++) {
var i = window.Home.hotTable[t].musicId;
e = "" == e ? i : e + "," + i;
}
window.Parent.setlocalStorage("curHotIDList", e);
},
OnClickRefreshHot: function() {
if (0 != this.CanRefreshHot && 0 != window.Home.LoadMusicOk) {
window.Home.playMusicListNum3 = -1;
this.CanRefreshHot = !1;
console.log("切换热门歌曲");
window.Parent.ButtonSounds();
o.default.getInstance().reportAnalytics("View_Show_V2", "HotMusicUI_Change", 1);
this.SetHotMusic();
var e = this;
this.scheduleOnce(function() {
e.CanRefreshHot = !0;
}, 1);
}
}
});
cc._RF.pop();
}, {
"./../Help/reportAnalytics": "reportAnalytics"
} ],
IntersController: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "69227bR3ThIo6/ZwUv5LQc9", "IntersController");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../tools/SdkTools"), n = e("../nativeAd/NativeController"), s = e("../../tools/OtherFunctions"), a = e("./IntersTest"), c = e("./IntersVivo"), r = e("./IntersTiktok"), l = e("./IntersQQ"), d = e("./IntersWX"), h = e("./IntersXM"), u = function() {
function e() {
this.ID_SystemIntersId = "";
this.SW_SystemIntersSwitch = !1;
this.SW_NativeIntersSwitch = !1;
this.SW_IntersBaseControlSwitch = !1;
this.NUM_NativeIntersPercent = 0;
this.NUM_IntersIntervalNum = 0;
this.NUM_IntersIntervalTime = 0;
this.NUM_IntersDelayTime = 0;
this.NUM_IntersDelayPercent = 0;
this.NUM_IntersStartNum = 0;
this.intersShowTime = 0;
this.intersNowInterval = 0;
this.intersNowTime = 0;
this.deskTimes = 0;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.runIntersInterval = function() {
var e = this;
this.NUM_IntersIntervalTime > 0 && setInterval(function() {
e.intersNowTime++;
}, 1e3);
};
e.prototype.getIntersFlag = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
if (s.default.getInstance().SW_DesktopSwitch && s.default.getInstance().SW_IntersToDesktop && 0 != s.default.getInstance().NUM_DeskAutoMostTimes && 0 != s.default.getInstance().NUM_IntersAddDesktopNumber) return !0;
console.log("ASCSDK", "桌面开关未开启或次数未设置");
return !1;

case o.Game_Platform.GP_Test:
return !0;

case o.Game_Platform.GP_Android:
return jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "SendMessageGetAdFlag", "(Ljava/lang/String;)Z", "getIntersFlag");

case o.Game_Platform.GP_IOS:
return "1" == jsb.reflection.callStaticMethod("DJADManagerVC", "getIntersFlag");

default:
if (!this.SW_SystemIntersSwitch && !this.SW_NativeIntersSwitch) {
console.log("ASCSDK", "插屏开关未开启");
return;
}
return this.getSystemIntersFlag() || n.default.getInstance().getIconNativeFlag() || n.default.getInstance().getImageNativeFlag() || s.default.getInstance().NUM_IntersAddDesktopNumber > 0;
}
};
e.prototype.createSystemInters = function() {
if (this.SW_SystemIntersSwitch) switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
console.log("ASCSDK", "OPPO 已关闭插屏广告");
break;

case o.Game_Platform.GP_Vivo:
c.default.getInstance().createSystemInters(this.ID_SystemIntersId);
break;

case o.Game_Platform.GP_Tiktok:
r.default.getInstance().createSystemInters(this.ID_SystemIntersId);
break;

case o.Game_Platform.GP_QQ:
l.default.getInstance().createSystemInters(this.ID_SystemIntersId);
break;

case o.Game_Platform.GP_WX:
d.default.getInstance().createSystemInters(this.ID_SystemIntersId);
break;

case o.Game_Platform.GP_XM:
h.default.getInstance().createSystemInters(this.ID_SystemIntersId);
} else console.log("ASCSDK", "系统插屏开关未开启");
};
e.prototype.getSystemIntersFlag = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Vivo:
return c.default.getInstance().getSystemIntersFlag();

case o.Game_Platform.GP_Tiktok:
return r.default.getInstance().getSystemIntersFlag();

case o.Game_Platform.GP_QQ:
return l.default.getInstance().getSystemIntersFlag();

case o.Game_Platform.GP_WX:
return d.default.getInstance().getSystemIntersFlag();

case o.Game_Platform.GP_XM:
return h.default.getInstance().getSystemIntersFlag();

default:
return !1;
}
};
e.prototype.showInters = function() {
var e = this;
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
this.intersShowTime++;
this.intersShowTime == s.default.getInstance().NUM_IntersAddDesktopNumber && this.deskTimes < s.default.getInstance().NUM_DeskAutoMostTimes ? s.default.getInstance().getDeskTopFlag(function(t) {
if (t) {
e.deskTimes++;
e.intersShowTime = 0;
console.log("ASCSDK", "插屏变添加桌面");
s.default.getInstance().addDeskTop(function(e) {});
}
}) : console.log("ASCSDK", "插屏变添加桌面次数未达到或自动弹添加桌面次数已达上限或已成功添加桌面");
return;

case o.Game_Platform.GP_Test:
a.default.getInstance().showInters();
return;

case o.Game_Platform.GP_Android:
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", "{'calling_method_name':'showInters','calling_method_params':0}");
return;

case o.Game_Platform.GP_IOS:
jsb.reflection.callStaticMethod("DJADManagerVC", "showInters");
return;

default:
if (!this.SW_SystemIntersSwitch && !this.SW_NativeIntersSwitch) {
console.log("ASCSDK", "插屏开关未开启");
return;
}
}
var t = this;
this.intersShowTime++;
if (s.default.getInstance().SW_IntersToDesktop && this.intersShowTime <= s.default.getInstance().NUM_IntersAddDesktopNumber) {
console.log("ASCSDK", "第" + s.default.getInstance().NUM_IntersAddDesktopNumber + "次插屏变添加桌面", "当前第" + this.intersShowTime + "个");
if (this.intersShowTime == s.default.getInstance().NUM_IntersAddDesktopNumber) {
s.default.getInstance().getDeskTopFlag(function(e) {
if (e) {
console.log("ASCSDK", "插屏变添加桌面");
s.default.getInstance().addDeskTop(function(e) {});
}
});
return;
}
}
if (this.SW_IntersBaseControlSwitch) {
if (this.intersShowTime < this.NUM_IntersStartNum) {
console.log("ASCSDK", "插屏开始次数未达到", this.intersShowTime, "目标次数", this.NUM_IntersStartNum);
return;
}
if (this.intersNowInterval < this.NUM_IntersIntervalNum) {
console.log("ASCSDK", "插屏间隔次数未达到", this.intersNowInterval, "目标次数", this.NUM_IntersIntervalNum);
this.intersNowInterval++;
return;
}
if (this.intersNowTime < this.NUM_IntersIntervalTime) {
console.log("ASCSDK", "插屏间隔时间未达到", this.intersNowTime, "目标时间", this.NUM_IntersIntervalTime);
t = this;
s.default.getInstance().SW_DesktopSwitch && this.deskTimes < s.default.getInstance().NUM_DeskAutoMostTimes && s.default.getInstance().getDeskTopFlag(function(e) {
if (e) {
t.deskTimes++;
s.default.getInstance().addDeskTop(function() {
console.log("ASCSDK", "插屏间隔弹桌面");
});
}
});
return;
}
}
this.intersNowInterval = 0;
if (this.SW_SystemIntersSwitch && this.SW_NativeIntersSwitch) if (Math.floor(100 * Math.random()) >= this.NUM_NativeIntersPercent) {
console.log("ASCSDK", "系统插屏优先");
if (this.getSystemIntersFlag()) {
console.log("ASCSDK", "系统插屏可以展示");
this.showSystemInters();
} else {
console.log("ASCSDK", "系统插屏没有加载完成");
if (n.default.getInstance().getIconNativeFlag() || n.default.getInstance().getImageNativeFlag()) {
console.log("ASCSDK", "改为展示原生插屏");
this.showNativeInters();
}
}
} else {
console.log("ASCSDK", "原生插屏优先");
if (n.default.getInstance().getIconNativeFlag() || n.default.getInstance().getImageNativeFlag()) {
console.log("ASCSDK", "原生插屏可以展示");
this.showNativeInters();
} else {
console.log("ASCSDK", "原生插屏没有加载到");
if (this.getSystemIntersFlag()) {
console.log("ASCSDK", "改为展示系统插屏");
this.showSystemInters();
}
}
} else if (this.SW_SystemIntersSwitch) {
console.log("ASCSDK", "只打开了系统插屏");
this.showSystemInters();
} else if (this.SW_NativeIntersSwitch) {
console.log("ASCSDK", "只打开了原生插屏");
this.showNativeInters();
} else console.log("ASCSDK", "系统插屏开关和原生插屏开关都没有打开");
};
e.prototype.showSystemInters = function() {
if (this.NUM_IntersDelayTime > 0) {
if (Math.floor(100 * Math.random()) < this.NUM_IntersDelayPercent) {
console.log("ASCSDK", "插屏延迟时间(ms):" + this.NUM_IntersDelayTime);
setTimeout(function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
console.log("ASCSDK", "OPPO 已关闭插屏广告");
break;

case o.Game_Platform.GP_Vivo:
c.default.getInstance().showSystemInters();
break;

case o.Game_Platform.GP_Tiktok:
r.default.getInstance().showSystemInters();
break;

case o.Game_Platform.GP_QQ:
l.default.getInstance().showSystemInters();
break;

case o.Game_Platform.GP_WX:
d.default.getInstance().showSystemInters();
break;

case o.Game_Platform.GP_XM:
h.default.getInstance().showSystemInters();
}
}, this.NUM_IntersDelayTime);
} else switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
console.log("ASCSDK", "OPPO 已关闭插屏广告");
break;

case o.Game_Platform.GP_Vivo:
c.default.getInstance().showSystemInters();
break;

case o.Game_Platform.GP_Tiktok:
r.default.getInstance().showSystemInters();
break;

case o.Game_Platform.GP_QQ:
l.default.getInstance().showSystemInters();
break;

case o.Game_Platform.GP_WX:
d.default.getInstance().showSystemInters();
break;

case o.Game_Platform.GP_XM:
h.default.getInstance().showSystemInters();
}
} else switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
console.log("ASCSDK", "OPPO 已关闭插屏广告");
break;

case o.Game_Platform.GP_Vivo:
c.default.getInstance().showSystemInters();
break;

case o.Game_Platform.GP_Tiktok:
r.default.getInstance().showSystemInters();
break;

case o.Game_Platform.GP_QQ:
l.default.getInstance().showSystemInters();
break;

case o.Game_Platform.GP_WX:
d.default.getInstance().showSystemInters();
break;

case o.Game_Platform.GP_XM:
h.default.getInstance().showSystemInters();
}
};
e.prototype.showNativeInters = function() {
if (this.NUM_IntersDelayTime > 0) {
if (Math.floor(100 * Math.random()) < this.NUM_IntersDelayPercent) {
console.log("ASCSDK", "插屏延迟时间(ms):" + this.NUM_IntersDelayTime);
setTimeout(function() {
n.default.getInstance().showNativeInters();
}, this.NUM_IntersDelayTime);
} else n.default.getInstance().showNativeInters();
} else n.default.getInstance().showNativeInters();
};
return e;
}();
i.default = u;
cc._RF.pop();
}, {
"../../tools/OtherFunctions": "OtherFunctions",
"../../tools/SdkTools": "SdkTools",
"../nativeAd/NativeController": "NativeController",
"./IntersQQ": "IntersQQ",
"./IntersTest": "IntersTest",
"./IntersTiktok": "IntersTiktok",
"./IntersVivo": "IntersVivo",
"./IntersWX": "IntersWX",
"./IntersXM": "IntersXM"
} ],
IntersOppo: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4c468GgyQ5COo8wKFVEOzTi", "IntersOppo");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function e() {
this.SW_OnIntersShow = !1;
this.systemIntersAd = null;
this.isLoadSystemInter = !1;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createSystemInters = function(e) {
var t = this;
console.log("ASCSDK", "OPPO 插屏广告初始化", e);
var i = this;
qg.getSystemInfoSync().platformVersionCode > 1061 ? this.systemIntersAd = qg.createInterstitialAd({
adUnitId: e
}) : this.systemIntersAd = qg.createInsertAd({
posId: e
});
this.systemIntersAd.onLoad(function() {
console.log("ASCSDK", "OPPO 插屏广告加载完成");
t.isLoadSystemInter = !0;
});
this.systemIntersAd.onError(function(e) {
console.log("ASCSDK", "OPPO 插屏加载失败：" + JSON.stringify(e));
});
this.systemIntersAd.onShow(function(e) {
console.log("ASCSDK", "OPPO 插屏展示错误：" + JSON.stringify(e));
});
qg.getSystemInfoSync().platformVersionCode >= 1051 && this.systemIntersAd.onClose(function() {
i.SW_OnIntersShow = !1;
});
this.systemIntersAd.load();
};
e.prototype.getSystemIntersFlag = function() {
return this.isLoadSystemInter;
};
e.prototype.showSystemInters = function() {};
return e;
}();
i.default = o;
cc._RF.pop();
}, {} ],
IntersQQ: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8808eHthWpDVZvvZNpxHq9B", "IntersQQ");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../tools/SdkTools"), n = function() {
function e() {
this.SW_OnIntersShow = !1;
this.systemIntersAd = null;
this.isLoadSystemInter = !1;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.getSystemIntersFlag = function() {
return this.isLoadSystemInter;
};
e.prototype.createSystemInters = function(e) {
if (o.default.getInstance().isversionNewThanEngineVersion("1.12.0")) {
console.log("ASCSDK", "QQ 插屏广告初始化", e);
var t = this;
this.systemIntersAd = qq.createInterstitialAd({
adUnitId: e
});
this.systemIntersAd.onLoad(function() {
console.log("ASCSDK", "QQ 插屏广告加载完成");
t.isLoadSystemInter = !0;
});
this.systemIntersAd.onError(function(e) {
console.log("ASCSDK", "QQ 插屏广告加载失败：" + JSON.stringify(e));
t.isLoadSystemInter = !1;
t.systemIntersAd && setTimeout(function() {
t.systemIntersAd && t.systemIntersAd.load();
}, 3e4);
});
this.systemIntersAd.load();
} else console.log("ASCSDK", "QQ 平台版本过低,创建插屏失败 return");
};
e.prototype.showSystemInters = function() {
if (this.systemIntersAd && this.isLoadSystemInter) {
console.log("ASCSDK", "QQ 展示系统插屏==================");
this.systemIntersAd.show();
} else console.log("ASCSDK", "QQ 系统插屏广告未加载");
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"../../tools/SdkTools": "SdkTools"
} ],
IntersTest: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "20304RypeZKk5eCukyIF4Uk", "IntersTest");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../tools/SdkTools"), n = e("../../ui/CocosUI"), s = function() {
function e() {
this.NIUIInfo = null;
this.nativeIntersErrorTimes = 0;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.showInters = function() {
console.log("ASCSDK", "Test showInters===========================");
this.NIUIInfo = {
layerBg: null,
exit: null
};
var e = this;
o.default.loadImage([ "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeIntersRes/layerBg.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeIntersRes/nativeClose.png" ], function(t, i) {
if (t) {
console.log("ASCSDK", "测试插屏资源加载错误:" + JSON.stringify(t));
if (e.nativeIntersErrorTimes < 5) {
e.nativeIntersErrorTimes++;
e.showInters();
}
} else {
e.NIUIInfo.layerBg = i[0];
e.NIUIInfo.exit = i[1];
var o = new cc.Node("layerBg");
o.addComponent(cc.Sprite);
o.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(e.NIUIInfo.layerBg);
setTimeout(function() {
o.width = cc.winSize.width;
o.height = cc.winSize.height;
o.x = cc.winSize.width / 2;
o.y = cc.winSize.height / 2;
}, .5);
o.zIndex = 30003;
o.opacity = 150;
var s = cc.director.getScene();
s.addChild(o);
"" != n.default.getInstance().cocosGroup && (o.group = n.default.getInstance().cocosGroup);
o.on(cc.Node.EventType.TOUCH_START, function(e) {});
var a = new cc.Node("text");
a.color = cc.Color.RED;
a.addComponent(cc.Label);
a.getComponent(cc.Label).string = "这是一个测试插屏,请点击右上角关闭";
a.getComponent(cc.Label).fontSize = 50;
a.getComponent(cc.Label).lineHeight = 50;
o.addChild(a);
var c = new cc.Node("exit");
c.addComponent(cc.Sprite);
c.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(e.NIUIInfo.exit);
setTimeout(function() {
c.x = cc.winSize.width / 2 * 3 / 4;
c.y = cc.winSize.height / 2 * 3 / 5;
}, 1);
c.zIndex = 30010;
o.addChild(c);
c.on(cc.Node.EventType.TOUCH_START, function(e) {
console.log("ASCSDK", "关闭测试插屏");
s.removeChild(o);
});
}
});
};
return e;
}();
i.default = s;
cc._RF.pop();
}, {
"../../tools/SdkTools": "SdkTools",
"../../ui/CocosUI": "CocosUI"
} ],
IntersTiktok: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "eada8UZu9RLSY2cYoQOBeVT", "IntersTiktok");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../tools/SdkTools"), n = e("./IntersController"), s = function() {
function e() {
this.SW_OnIntersShow = !1;
this.systemIntersAd = null;
this.isLoadSystemInter = !1;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.getSystemIntersFlag = function() {
return this.isLoadSystemInter;
};
e.prototype.createSystemInters = function(e) {
var t = this;
console.log("ASCSDK", "Tiktok 插屏广告初始化", e);
var i = tt.getSystemInfoSync().appName;
if ("Toutiao" == i || "Douyin" == i && !o.default.getInstance().isversionNewThanEngineVersion("1.71")) {
this.systemIntersAd = tt.createInterstitialAd({
adUnitId: e
});
var s = this;
this.systemIntersAd.onLoad(function() {
console.log("ASCSDK", "Tiktok 插屏广告加载完成");
t.isLoadSystemInter = !0;
});
this.systemIntersAd.onError(function(e) {
console.log("ASCSDK", "Tiktok 插屏加载失败：" + JSON.stringify(e));
t.systemIntersAd && setTimeout(function() {
s.systemIntersAd && s.systemIntersAd.load();
}, 3e4);
});
this.systemIntersAd.onClose(function() {
console.log("ASCSDK", "Tiktok 关闭插屏,重新创建插屏广告");
s.systemIntersAd.destroy();
s.createSystemInters(n.default.getInstance().ID_SystemIntersId);
s.isLoadSystemInter = !1;
s.systemIntersAd.load();
});
this.systemIntersAd.load();
} else console.log("ASCSDK", "非抖音/今日头条平台 或抖音平台版本过低 return");
};
e.prototype.showSystemInters = function() {
if (this.systemIntersAd) {
console.log("ASCSDK", "Tiktok 展示系统插屏==================");
this.systemIntersAd.show();
} else console.log("ASCSDK", "Tiktok 系统插屏广告未初始化");
};
return e;
}();
i.default = s;
cc._RF.pop();
}, {
"../../tools/SdkTools": "SdkTools",
"./IntersController": "IntersController"
} ],
IntersVivo: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d1462+rPrtL+4l0abIwYQsL", "IntersVivo");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("./IntersController"), n = function() {
function e() {
this.SW_OnIntersShow = !1;
this.systemIntersAd = null;
this.isLoadSystemInter = !1;
this.sysLoadErrNum = 0;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createSystemInters = function(e) {
var t = this;
console.log("ASCSDK", "VIVO 系统插屏广告初始化", e);
var i = e;
this.systemIntersAd = qg.createInterstitialAd({
posId: e
});
this.systemIntersAd.onLoad(function() {
console.log("ASCSDK", "VIVO 系统插屏广告加载完成");
t.isLoadSystemInter = !0;
});
this.systemIntersAd.onError(function(e) {
console.log("ASCSDK", "VIVO 系统插屏加载失败：" + JSON.stringify(e));
t.isLoadSystemInter = !1;
if (1008 != e.errCode) {
t.sysLoadErrNum++;
console.log("ASCSDK", "VIVO 系统插屏加载错误次数:" + t.sysLoadErrNum);
t.sysLoadErrNum < 5 && setTimeout(function() {
t.createSystemInters(i);
}, 1e4);
}
});
this.systemIntersAd.onClose(function() {
console.log("ASCSDK", "VIVO 系统插屏广告关闭");
o.default.getInstance().intersNowTime = 0;
t.isLoadSystemInter = !1;
setTimeout(function() {
t.createSystemInters(i);
}, 1e4);
});
};
e.prototype.getSystemIntersFlag = function() {
return this.isLoadSystemInter;
};
e.prototype.showSystemInters = function() {
if (this.systemIntersAd) {
console.log("ASCSDK", "VIVO showSystemInters==================");
this.systemIntersAd.show().then(function() {
console.log("ASCSDK", "VIVO 系统插屏广告展示成功==================");
}).catch(function(e) {
console.log("ASCSDK", "VIVO 系统插屏展示错误:" + JSON.stringify(e));
o.default.getInstance().intersNowTime = 0;
});
} else console.log("ASCSDK", "VIVO 未创建系统插屏广告");
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"./IntersController": "IntersController"
} ],
IntersWX: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "fed23V1hVJI07ANeHpeLZoT", "IntersWX");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function e() {
this.systemIntersAd = null;
this.isLoadSystemInter = !1;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.getSystemIntersFlag = function() {
return this.isLoadSystemInter;
};
e.prototype.createSystemInters = function(e) {
console.log("ASCSDK", "WX 插屏广告初始化", e);
var t = this;
this.systemIntersAd = wx.createInterstitialAd({
adUnitId: e
});
this.systemIntersAd.onLoad(function() {
console.log("ASCSDK", "WX 插屏广告加载完成");
t.isLoadSystemInter = !0;
});
this.systemIntersAd.onError(function(e) {
console.log("ASCSDK", "WX 插屏广告加载失败：" + JSON.stringify(e));
t.isLoadSystemInter = !1;
t.systemIntersAd && setTimeout(function() {
t.systemIntersAd && t.systemIntersAd.load();
}, 3e4);
});
this.systemIntersAd.load();
};
e.prototype.showSystemInters = function() {
if (this.systemIntersAd && this.isLoadSystemInter) {
console.log("ASCSDK", "WX showSystemInters==================");
this.systemIntersAd.show();
} else console.log("ASCSDK", "WX 系统插屏广告未加载");
};
return e;
}();
i.default = o;
cc._RF.pop();
}, {} ],
IntersXM: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b9b25ifcQZGx7NrqIUTj1ZN", "IntersXM");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("./IntersController"), n = function() {
function e() {
this.systemIntersAd = null;
this.isLoadSystemInter = !1;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.getSystemIntersFlag = function() {
return this.isLoadSystemInter;
};
e.prototype.createSystemInters = function(e) {
var t = this;
console.log("ASCSDK", "XM 插屏广告初始化", e);
var i = this;
this.systemIntersAd = qg.createInterstitialAd({
adUnitId: e
});
this.systemIntersAd.onLoad(function() {
console.log("ASCSDK", "XM 插屏广告加载完成");
i.isLoadSystemInter = !0;
});
this.systemIntersAd.onError(function(e) {
console.log("ASCSDK", "XM 插屏广告加载失败：" + JSON.stringify(e));
i.isLoadSystemInter = !1;
i.systemIntersAd && setTimeout(function() {
i.systemIntersAd && i.systemIntersAd.load();
}, 3e4);
});
this.systemIntersAd.onClose(function() {
console.log("ASCSDK", "XM 系统插屏广告关闭");
o.default.getInstance().intersNowTime = 0;
t.isLoadSystemInter = !1;
setTimeout(function() {
t.createSystemInters(e);
}, 1e4);
});
};
e.prototype.showSystemInters = function() {
if (this.systemIntersAd && this.isLoadSystemInter) {
console.log("ASCSDK", "XM showSystemInters==================");
this.systemIntersAd.show();
} else console.log("ASCSDK", "XM 系统插屏广告未加载");
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"./IntersController": "IntersController"
} ],
IosSDK: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "52c01RAZhNGYpgkLX7LCpWn", "IosSDK");
cc.Class({
extends: cc.Component,
properties: {},
startAVCapture: function(e, t) {
e = String(e);
t = String(t);
console.log("开启摄像头", e, t);
cc.sys.os == cc.sys.OS_IOS && 5 == window.platform && jsb.reflection.callStaticMethod("appAVCaptureClass", "startAVCapture:withH:", e, t);
},
alertCav: function() {
console.log("IOS弹窗获取摄像头权限");
cc.sys.os == cc.sys.OS_IOS && 5 == window.platform && jsb.reflection.callStaticMethod("appAVCaptureClass", "alertCav");
},
getCavInfo: function() {
if (cc.sys.os == cc.sys.OS_IOS && 5 == window.platform) {
var e = Number(jsb.reflection.callStaticMethod("appAVCaptureClass", "getCavInfo"));
console.log("获取摄像头是否有权限", e);
return e;
}
},
stopCaver: function() {
if (cc.sys.os == cc.sys.OS_IOS && 5 == window.platform) {
var e = Number(jsb.reflection.callStaticMethod("appAVCaptureClass", "stopCaver"));
console.log("停止摄像头");
return e;
}
}
});
window.cameraCallback = function(e) {
console.log("视频动作回调", e);
window.isStartCamera && (window.isStartCamera = !1);
e = Number(e) - 250;
window.Game && window.Game.faceMove(e);
return "callback suc";
};
cc._RF.pop();
}, {} ],
LikeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f11d0GPhWtC/KwtwWcpjFDE", "LikeJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
OtherMusicPrefab: cc.Prefab
},
onLoad: function() {
window.LikeNode = this.node;
window.LikeNodeJS = this;
this.defination();
this.definePar();
this.SetBTNEvent();
this.SetLikeMusic();
},
defination: function() {
this.LikeBG = this.node.getChildByName("SP_BG");
this.LikeContent = this.node.getChildByName("view").getChildByName("content");
this.LikeChange = this.node.getChildByName("BTN_Change");
},
definePar: function() {
this.CanRefreshLike = !0;
},
SetBTNEvent: function() {
this.LikeChange.on(cc.Node.EventType.TOUCH_END, this.OnClickRefreshLike, this);
},
SetLikeMusic: function() {
var e = this, t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], i = this;
this.node.active = !0;
var o = !1;
if (this.LikeContent.childrenCount > 0) {
o = !0;
for (var n = function(t) {
var i = e.LikeContent.children[t], o = .08 * t;
e.scheduleOnce(function() {
i.getComponent("OtherSelectJS").TurnOutAnim();
}, o);
}, s = 0; s < this.LikeContent.childrenCount; s++) n(s);
for (var a = 0; a < window.Home.HistoryLikeList.length; a++) {
var c = window.Home.HistoryLikeList[a], r = window.Home.homeMusicTable.indexOf(c);
-1 != r && window.Home.homeMusicTable.splice(r, 1);
}
window.Home.DownListScore(window.Home.likeTable, !0, 2);
}
this.likeList = [];
if (window.Home.curLikeListData && window.Home.curLikeListData.length > 0) {
window.Home.likeTable = window.Home.curLikeListData;
window.Home.curLikeListData = [];
} else {
window.Home.likeTable = this.DealLikeList();
this.SaveLikeList();
}
if (window.Home.likeTable) {
this.node.height = 220 * window.Home.likeTable.length + 180 + 50;
this.LikeBG.height = 220 * window.Home.likeTable.length + 180;
for (var l = function(n) {
var s = function() {
var e = window.Home.likeTable[n], s = null, a = (s = 0 == o ? cc.instantiate(i.OtherMusicPrefab) : i.LikeContent.children[n]).getComponent("OtherSelectJS");
a.musicName = e.musicName;
a.musicID = e.musicId;
a.musicURL = e.musicFile;
a.orderNumber = e.orderNumber;
a.singerName = e.singerName;
a.unlockType = e.unlockType;
a.unlockNumber = Number(e.unlockCost);
a.pointURL = e.json_normal;
a.listenNum = Number(e.ex_listen);
a.curType = 3;
i.likeList[n] = a;
window.Home.homeMusicTable.push(e);
0 == o && i.LikeContent.addChild(s);
if (1 == t) {
a.UpdateMusicInfo(!0);
var c = .05 * n + .1;
i.scheduleOnce(function() {
a.TurnInAnim();
}, c);
}
};
if (0 == t) s(); else {
var a = .08 * n + .2;
e.scheduleOnce(function() {
s();
}, a);
}
}, d = 0; d < window.Home.likeTable.length; d++) l(d);
}
},
DealLikeList: function() {
var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, t = [], i = window.Home.newSongTable, o = window.Home.needPlayTable, n = window.Home.unlockTable, s = window.Home.musicTable;
if (e) for (var a = 0; a < e.length; a++) t.push(e[a]);
if (t.length < 5) for (var c = 0; c < i.length; c++) {
var r = i[c];
if (-1 == window.Home.HistoryLikeList.indexOf(r) && -1 == window.Home.OtherMusicTable.indexOf(r) && -1 == window.Home.hotTable.indexOf(r) && -1 == window.Home.likeTable.indexOf(r) && -1 == window.Home.DayGiftList.indexOf(r) && -1 == window.Home.dayPlayList.indexOf(r)) {
t.push(r);
window.Home.HistoryLikeList.push(r);
if (t.length >= 5) break;
}
}
if (t.length < 5) for (var l = 0; l < o.length; l++) {
var d = o[l];
if (-1 == window.Home.HistoryLikeList.indexOf(d) && -1 == window.Home.OtherMusicTable.indexOf(d) && -1 == window.Home.hotTable.indexOf(d) && -1 == window.Home.likeTable.indexOf(d) && -1 == window.Home.DayGiftList.indexOf(d) && -1 == window.Home.dayPlayList.indexOf(d)) {
t.push(d);
window.Home.HistoryLikeList.push(d);
if (t.length >= 5) break;
}
}
if (t.length < 5) for (var h = 0; h < n.length; h++) {
var u = n[h];
if (-1 == window.Home.HistoryLikeList.indexOf(u) && -1 == window.Home.OtherMusicTable.indexOf(u) && -1 == window.Home.hotTable.indexOf(u) && -1 == window.Home.likeTable.indexOf(u) && -1 == window.Home.DayGiftList.indexOf(u) && -1 == window.Home.dayPlayList.indexOf(u)) {
t.push(u);
window.Home.HistoryLikeList.push(u);
if (t.length >= 5) break;
}
}
if (t.length < 5) for (var w = 0; w < s.length; w++) {
var m = s[w];
if (-1 == window.Home.HistoryLikeList.indexOf(m) && -1 == window.Home.OtherMusicTable.indexOf(m) && -1 == window.Home.hotTable.indexOf(m) && -1 == window.Home.likeTable.indexOf(m) && -1 == window.Home.DayGiftList.indexOf(m) && -1 == window.Home.dayPlayList.indexOf(m)) {
t.push(m);
window.Home.HistoryLikeList.push(m);
if (t.length >= 5) break;
}
}
if (t.length < 5) {
window.Home.HistoryLikeList.splice(0, window.Home.HistoryLikeList.length);
t = this.DealLikeList(t);
}
return t;
},
SaveLikeList: function() {
for (var e = "", t = 0; t < window.Home.likeTable.length; t++) {
var i = window.Home.likeTable[t].musicId;
e = "" == e ? i : e + "," + i;
}
window.Parent.setlocalStorage("curLikeIDList", e);
},
OnClickRefreshLike: function() {
if (0 != this.CanRefreshLike && 0 != window.Home.LoadMusicOk) {
window.Home.playMusicListNum5 = -1;
this.CanRefreshLike = !1;
console.log("切换猜你喜欢的歌曲");
window.Parent.ButtonSounds();
o.default.getInstance().reportAnalytics("View_Show_V2", "GuessYouLikeUI_Change", 1);
this.SetLikeMusic(!0);
var e = this;
this.scheduleOnce(function() {
e.CanRefreshLike = !0;
}, 1);
}
}
});
cc._RF.pop();
}, {
"./../Help/reportAnalytics": "reportAnalytics"
} ],
LimitNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9ee8foZzApCTptQgRjPAfDW", "LimitNodeJS");
cc.Class({
extends: cc.Component,
properties: {
AnimList: cc.Node
},
onLoad: function() {
this.node.setContentSize(window.screenWidth, window.screenHight);
},
onEnable: function() {
cc.tween(this.AnimList).to(.2, {
scale: 1.3
}).to(.8, {
scale: 1
}, {
easing: cc.easing.elasticOut
}).start();
},
onDisable: function() {
this.scheduleOnce(function() {
this.node.destroy();
}, 2);
window.Home.isshowBlockAd = !1;
},
OnClickClose: function() {
window.Parent.ButtonSounds();
this.node.active = !1;
}
});
cc._RF.pop();
}, {} ],
LineJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "79525f75j9FmYcdUrX5C995", "LineJS");
cc.Class({
extends: cc.Component,
properties: {
Number: 0
},
onLoad: function() {
this.startLine = !1;
this.targetlength = 0;
this.changeTime = 0;
this.node.active = !1;
},
start: function() {},
update: function(e) {
!1 === this.startLine && (this.node.getComponent(cc.Sprite).fillRange -= e * this.beishu);
},
starChangetLine: function() {
this.cunt = 0;
this.beishu = 1 - Math.abs(this.Number - 13) / 60;
var e = this.targetlength * this.beishu - this.node.getComponent(cc.Sprite).fillRange, t = this.changeTime / 5;
this.eachLenth = e / 5;
this.schedule(function() {
this.node.active = !0;
this.cunt++;
this.startLine = !0;
this.node.getComponent(cc.Sprite).fillRange += this.eachLenth;
this.cunt >= 5 && (this.startLine = !1);
}, t, 5, 0);
}
});
cc._RF.pop();
}, {} ],
LoadingJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c4382oGIKNHH6gv9dC9sgiA", "LoadingJS");
var o = r(e("../SDK/ASCAd")), n = r(e("../SDK/sdkConfig")), s = r(e("./Help/AudioSourcesMamager")), a = r(e("./Help/GuideSourcesManager")), c = r(e("./Help/reportAnalytics"));
function r(e) {
return e && e.__esModule ? e : {
default: e
};
}
(function() {
if ("undefined" != typeof tt) {
var e = tt.getUpdateManager();
e.onUpdateReady(function() {
console.log("onUpdateReady TT");
tt.showModal({
title: "更新提示",
content: "新版本已经准备好，是否立即使用？",
success: function(t) {
t.confirm ? e.applyUpdate() : tt.showToast({
icon: "none",
title: "小程序下一次「冷启动」时会使用新版本"
});
}
});
});
}
})();
var l = cc.Enum({
VIVO: 0,
"OPPO&VIVO": 1,
"安卓": 2,
"抖音": 3,
QQ: 4,
IOS: 5,
"快手": 6,
"小米": 7
});
cc.Class({
extends: cc.Component,
properties: {
platform: {
default: 0,
tooltip: "选择打包平台",
type: l
},
percelText: cc.Node,
defaultTable: cc.JsonAsset
},
onLoad: function() {
this.lastNum = 0;
window.platform = this.platform;
"undefined" == typeof tt && 3 == window.platform || "undefined" == typeof qq && 4 == window.platform || "undefined" == typeof qg && 1 == window.platform ? window.TestModle = !0 : window.TestModle = !1;
console.log("window.TestModle : " + window.TestModle);
var e = this;
e.loadingPicture = e.node.getChildByName("loading");
if (2 == window.platform) {
e.loadingPicture.active = !0;
e.scheduleOnce(function() {
e.loadingPicture.runAction(cc.fadeOut(.5));
}, 1);
}
if (5 == window.platform) {
var t = Number(jsb.reflection.callStaticMethod("systemSetting", "isPhone")), i = this.node.parent.getComponent(cc.Canvas);
if (0 == t) {
i.fitHeight = !0;
i.fitWidth = !1;
} else {
i.fitHeight = !1;
i.fitWidth = !0;
}
}
this.OnClickAgree();
c.default.getInstance().reportAnalytics("View_Show_V2", "HomeLoding_First_Show", 1);
},
start: function() {
6 === window.platform && kwaigame.readyGo();
},
update: function(e) {
if (this.lodeOk && this.ok) {
console.log("进入游戏页");
if (1 == Number(cc.sys.localStorage.getItem("favourPageShow"))) cc.director.loadScene("Game"); else {
Number(cc.sys.localStorage.getItem("GuideNum")) >= 1 ? cc.director.loadScene("Game") : cc.director.loadScene("Guide");
}
}
},
LoadMusicTable: function() {
console.log("开始下载音乐单");
var e = this;
if (window.TestModle) {
n.default.getInstance().channelId = "0";
this.TableURL = "https://tencentcnd.minigame.xplaymobile.com/MusicGames/Gamelist/TikTok/MusicColorBall3D_11Guide.json";
} else switch (window.platform) {
case 6:
case 0:
this.TableURL = "https://tencentcnd.minigame.xplaymobile.com/MusicGames/Gamelist/VIVO/MusicColorBall3D_2.json";
break;

case 1:
this.TableURL = "https://tencentcnd.minigame.xplaymobile.com/MusicGames/Gamelist/VIVO/MusicColorBall3D_10.json";
break;

case 2:
this.TableURL = "https://tencentcnd.minigame.xplaymobile.com/MusicGames/Gamelist/Android/MusicColorBall3D_9_card.json";
break;

case 3:
this.TableURL = "https://tencentcnd.minigame.xplaymobile.com/MusicGames/Gamelist/TikTok/MusicColorBall3D_11Guide.json";
if (!tt.getSystemInfoSync().screenWidth) return;
console.log("上报事件,homeloading_page_access");
tt.reportAnalytics("homeloading_page_access", {});
tt.getSystemInfo({
success: function(e) {
window.AppName = e.appName;
window.PhoneType = e.platform;
console.log("App信息", window.AppName);
console.log("手机平台", window.PhoneType);
}
});
break;

case 4:
this.TableURL = "https://tencentcnd.minigame.xplaymobile.com/MusicGames/Gamelist/QQ/MusicColorBall3D_10.json";
console.log(qq.getSystemInfoSync().screenWidth);
if (!qq.getSystemInfoSync().screenWidth) return;
qq.getSystemInfo({
success: function(e) {
console.log("手机平台", e.platform);
window.PhoneType = e.platform;
}
});
break;

case 5:
this.TableURL = "https://tencentcnd.minigame.xplaymobile.com/MusicGames/Gamelist/IOS/MusicColorBall3D_11Guide.json";
if (cc.sys.os === cc.sys.OS_IOS && 5 === window.platform) {
console.log("IOS上报事件,homeloading_page_access");
jsb.reflection.callStaticMethod("AppController", "showUMWithType:", "homeloading_page_access");
}
break;

case 6:
this.TableURL = "https://tencentcnd.minigame.xplaymobile.com/MusicGames/Gamelist/Kuaishou/MusicColorBall3D_2.json";
break;

case 7:
this.TableURL = "https://tencentcnd.minigame.xplaymobile.com/MusicGames/Gamelist/VIVO/MusicColorBall3D_10.json";
}
var t = this.TableURL;
window.TableURL = this.TableURL;
if (cc.sys.platform === cc.sys.VIVO_GAME) qg.download({
url: t,
success: function(t) {
console.log("网络音乐单下载成功, 文件位置 : ".concat(t.tempFilePath));
cc.loader.load("".concat(t.tempFilePath), function(t, i) {
if (t) {
console.log("音乐单加载失败" + t);
o.default.getInstance().showToast("当前无网络，请联网后重新尝试");
window.NetMusicTable || (window.NetMusicTable = e.defaultTable.json);
} else {
console.log("音乐单加载成功");
var n = String(i);
window.NetMusicTable = JSON.parse(n);
e.ok = !0;
e.unschedule(e.LoadMusicTable);
}
});
},
fail: function(t, i) {
console.log("网络音乐单下载失败, code = ".concat(i));
o.default.getInstance().showToast("当前无网络，请联网后重新尝试");
window.NetMusicTable || (window.NetMusicTable = e.defaultTable.json);
}
}); else if (cc.sys.platform === cc.sys.OPPO_GAME) qg.downloadFile({
url: t,
success: function(t) {
console.log("网络音乐单下载成功, code = ".concat(t.tempFilePath));
cc.loader.load("".concat(t.tempFilePath), function(t, i) {
if (t) {
console.log("音乐单加载失败" + t);
o.default.getInstance().showToast("当前无网络，请联网后重新尝试");
window.NetMusicTable || (window.NetMusicTable = e.defaultTable.json);
} else {
console.log("音乐单加载成功");
var n = String(i);
window.NetMusicTable = JSON.parse(n);
e.ok = !0;
e.unschedule(e.LoadMusicTable);
}
});
},
fail: function(t) {
console.log("网络音乐单下载失败, code = ".concat(t));
o.default.getInstance().showToast("当前无网络，请联网后重新尝试");
window.NetMusicTable || (window.NetMusicTable = e.defaultTable.json);
},
complete: function() {}
}); else {
this.httpGet(t, function(t) {
console.log("网络音乐单下载成功");
window.NetMusicTable = t;
e.ok = !0;
e.unschedule(e.LoadMusicTable);
window.NetMusicTable || (window.NetMusicTable = e.defaultTable.json);
});
}
},
httpGet: function(e, t) {
var i = new XMLHttpRequest();
i.onreadystatechange = function() {
if (4 == i.readyState && i.status >= 200 && i.status < 400) {
var e = i.responseText;
t(JSON.parse(e));
} else 4 == i.readyState && i.status >= 400 && console.log("网络音乐单下载失败");
};
i.open("GET", e, !0);
i.send();
},
changeTitile: function() {
this.addcunt++;
this.addcunt > 5 && (this.addcunt = 0);
switch (this.addcunt) {
case 0:
this.adding.getComponent(cc.Label).string = "加载中";
break;

case 1:
this.adding.getComponent(cc.Label).string = "加载中.";
break;

case 2:
this.adding.getComponent(cc.Label).string = "加载中..";
break;

case 3:
this.adding.getComponent(cc.Label).string = "加载中...";
break;

case 4:
this.adding.getComponent(cc.Label).string = "加载中....";
break;

case 5:
this.adding.getComponent(cc.Label).string = "加载中.....";
}
},
checkOnLine: function() {
7 != window.platform && !1 === navigator.onLine && o.default.getInstance().showToast("当前无网络，请联网后重新尝试");
},
loadFabRes: function() {
var e = this;
this.resnum = 0;
this.allResNum = 0;
this.resLoadOk = !1;
cc.loader.loadResDir("球球材质", cc.Material, function(t, i) {
e.allResNum++;
if (t) console.log("球球材质加载出错"); else {
window.ColorMateral = [];
for (var o = 0; o < i.length; o++) window.ColorMateral[o] = i.find(function(e) {
return e.name === "a".concat(o);
});
e.resnum++;
e.resnum >= e.allResNum && (e.resLoadOk = !0);
}
});
cc.loader.loadResDir("节奏点材质", cc.Material, function(t, i) {
e.allResNum++;
if (t) console.log("节奏点材质加载出错"); else {
window.PointMateral = [];
for (var o = 0; o < i.length; o++) window.PointMateral[o] = i.find(function(e) {
return e.name === "a".concat(o);
});
e.resnum++;
e.resnum >= e.allResNum && (e.resLoadOk = !0);
}
});
cc.loader.loadResDir("短节奏点影子", cc.SpriteFrame, function(t, i) {
e.allResNum++;
if (t) console.log("短节奏点影子加载出错"); else {
window.shortShadow_Sprit = [];
for (var o = 0; o < i.length; o++) window.shortShadow_Sprit[o] = i.find(function(e) {
return e.name === "a".concat(o);
});
e.resnum++;
e.resnum >= e.allResNum && (e.resLoadOk = !0);
}
});
cc.loader.loadRes("PreFab/FiallNode", cc.Prefab, function(t, i) {
e.allResNum++;
if (t) console.log("FiallNode加载出错"); else {
window.FiallNodeFab = i;
e.resnum++;
e.resnum >= e.allResNum && (e.resLoadOk = !0);
}
});
cc.loader.loadRes("PreFab/ReliveNode", cc.Prefab, function(t, i) {
e.allResNum++;
if (t) console.log("ReliveNode加载出错"); else {
window.ReliveNodeFab = i;
e.resnum++;
e.resnum >= e.allResNum && (e.resLoadOk = !0);
}
});
cc.loader.loadRes("PreFab/WinNode", cc.Prefab, function(t, i) {
e.allResNum++;
if (t) console.log("WinNode加载出错"); else {
window.WinNodeFab = i;
e.resnum++;
e.resnum >= e.allResNum && (e.resLoadOk = !0);
}
});
},
UpdateVersion: function(e) {
console.log("UpdateVersion Func ");
var t = tt.getUpdateManager();
console.log("updateManager : " + JSON.stringify(t));
t.onCheckForUpdate(function(t) {
console.log("onCheckForUpdate : ", t.hasUpdate);
t.hasUpdate ? tt.showToast({
title: "即将有更新请留意"
}) : e();
});
t.onUpdateReady(function() {
console.log("onUpdateReady TT");
tt.showModal({
title: "更新提示",
content: "新版本已经准备好，是否立即使用？",
success: function(i) {
if (i.confirm) t.applyUpdate(); else {
tt.showToast({
icon: "none",
title: "小程序下一次「冷启动」时会使用新版本"
});
e();
}
}
});
});
t.onUpdateFailed(function() {
console.log("onUpdateFailed TT");
tt.showToast({
title: "更新失败，下次启动继续..."
});
e();
});
},
UpdatePercelText: function(e) {
if (!(e >= 100)) {
this.lastNum < e ? this.lastNum = e : e = this.lastNum;
this.percelText.getComponent(cc.Label).string = e + "%";
}
},
OnClickAgree: function() {
var t = this;
this.lodeOk = !1;
if (1 == Number(cc.sys.localStorage.getItem("favourPageShow"))) cc.director.preloadScene("Game", function(e, i, o) {
var n = Math.floor(e / i * 100);
t.UpdatePercelText(n);
}, function() {
t.lodeOk = !0;
}); else {
Number(cc.sys.localStorage.getItem("GuideNum")) >= 1 ? cc.director.preloadScene("Game", function(e, i, o) {
var n = Math.floor(e / i * 100);
t.UpdatePercelText(n);
}, function() {
t.lodeOk = !0;
}) : cc.director.preloadScene("Guide", function(e, i, o) {
var n = Math.floor(e / i * 100);
t.UpdatePercelText(n);
}, function() {
t.lodeOk = !0;
});
}
console.log("window.TestModle : " + window.TestModle);
s.default.getInstance().SoundsInit();
a.default.getInstance().SoundsInit();
console.log("loadFunc +++++++++++++++++++++++");
window.screenWidth = cc.view.getVisibleSize().width;
window.screenHight = cc.view.getVisibleSize().height;
console.log("屏幕可视宽高", window.screenWidth, window.screenHight);
t.node.setContentSize(window.screenWidth, window.screenHight);
t.Headset = t.node.getChildByName("Headset");
t.adding = t.node.getChildByName("adding");
t.Headset.runAction(cc.repeatForever(cc.sequence(cc.fadeTo(2, 100), cc.fadeTo(2, 255))));
t.addcunt = 0;
t.checkOnLine();
t.schedule(function() {
t.changeTitile();
t.checkOnLine();
}, .5);
t.ok = !1;
t.schedule(t.LoadMusicTable, 3, 9999, .1);
if (6 === window.platform) {
e("kwaigame");
kwaigame.init({
appId: "ks658932921253558438"
});
}
window.isShake = !0;
3 == window.platform && 0 == window.TestModle && tt.sendtoTAQ({
convert_id: "1675886430055499",
event_type: "active"
});
this.percelText.getComponent(cc.Label).string = "0%";
window.needCloseCrown = !1;
var i = Number(cc.sys.localStorage.getItem("favourPageShow")), o = Number(cc.sys.localStorage.getItem("GuideNum"));
1 == i && 0 == o && cc.sys.localStorage.setItem("GuideNum", 7);
}
});
cc._RF.pop();
}, {
"../SDK/ASCAd": "ASCAd",
"../SDK/sdkConfig": "sdkConfig",
"./Help/AudioSourcesMamager": "AudioSourcesMamager",
"./Help/GuideSourcesManager": "GuideSourcesManager",
"./Help/reportAnalytics": "reportAnalytics",
kwaigame: 12
} ],
LoadingNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e6a88P/8M1FhZ/6B8sfdcsU", "LoadingNodeJS");
cc.Class({
extends: cc.Component,
properties: {
PercelLabel: cc.Node,
TimeOutLabel: cc.Node,
LoadingLabel: cc.Node
},
onLoad: function() {
this.lastNum = 0;
this.curStrList = [ "正在加载游戏资源", "正在加载歌单资源" ];
},
onEnable: function() {
this.unschedule(this.PleaseReLoad);
this.lastNum = 0;
this.PercelLabel.getComponent(cc.Label).string = "0%";
this.TimeOutLabel.active = !1;
this.scheduleOnce(this.PleaseReLoad, 15);
},
update: function(e) {
0 != window.Home.allNum && 0 != window.Home.loadnum && 0 == window.Home.loadAllOk && (this.PercelLabel.getComponent(cc.Label).string = Math.floor(window.Home.loadnum / window.Home.allNum * 100).toString() + "%");
},
SetProgress: function(e) {
var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
if (100 != e) {
this.lastNum < e ? this.lastNum = e : e = this.lastNum;
this.PercelLabel.getComponent(cc.Label).string = Math.floor(e).toString() + "%";
this.LoadingLabel.getComponent(cc.Label).string = 1 == t ? this.curStrList[0] : this.curStrList[1];
}
},
PleaseReLoad: function() {
this.TimeOutLabel.active = !0;
}
});
cc._RF.pop();
}, {} ],
LogoFabJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "16e55zfibtDO7NzVBWM//p1", "LogoFabJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
videoButton: cc.Node
},
onLoad: function() {
this.node.getChildByName("Logo").getComponent(cc.Sprite).spriteFrame = window.ConstellationLogo_Spr[this.Number];
this.node.getChildByName("Title").getComponent(cc.Sprite).spriteFrame = window.ConstellationTitle_Spr[this.Number];
this.isUnlock = window.Parent.getlocalStorage("LogoisUnlock" + this.Number);
"true" == this.isUnlock ? this.isUnlock = !0 : this.isUnlock = !1;
},
onEnable: function() {
if (this.isUnlock) {
this.videoButton.active = !1;
this.node.getComponent(cc.Button).interactable = !0;
} else {
this.videoButton.active = !0;
this.node.getComponent(cc.Button).interactable = !1;
}
},
start: function() {},
showDitel: function() {
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "ConstellationUI_NoADClick", 1);
window.Parent.ButtonSounds();
this.Constellation.showDitel(this.Number);
},
videoButtonClick: function() {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "ConstellationUI_ADClick", 1);
var e = this;
window.Parent.ButtonSounds();
window.Parent.showVideo(function(t) {
if (t) {
e.isUnlock = !0;
window.Parent.setlocalStorage("LogoisUnlock" + e.Number, e.isUnlock);
e.node.active = !1;
e.node.active = !0;
}
});
}
});
cc._RF.pop();
}, {
"../Help/reportAnalytics": "reportAnalytics"
} ],
ModelRolebgJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d46ceLZWy5CUJflptAeEvqL", "ModelRolebgJS");
(function(e) {
e && e.__esModule;
})(e("../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
RoleSP: cc.Node,
NameLabel: cc.Node,
crownBTN: cc.Node,
videoBTN: cc.Node,
diamondBTN: cc.Node,
isUsing: cc.Node,
useBTN: cc.Node,
ActivityNode: cc.Node,
CurLB: cc.Node,
LastLB: cc.Node
},
onLoad: function() {},
onEnable: function() {
this.NameLabel.getComponent(cc.Label).string = this.RoleName;
this.RoleSP.getComponent(cc.Sprite).spriteFrame = this.RoleSpr;
this.UpdateBTNActive();
},
UpdateBTNActive: function() {
var e = window.RoleUnlockType[this.Number], t = window.Parent.getlocalStorage("RoleModel");
t = "true" === t;
if ("video" === e) {
this.crownBTN.active = !1;
this.videoBTN.active = !0;
this.isUsing.active = !1;
this.useBTN.active = !1;
this.diamondBTN.active = !1;
var i = Number(window.Parent.getlocalStorage("roleUnlockNum_" + this.Number));
1 == window.isActivity && 1 == this.Number ? this.videoBTN.getChildByName("num").getComponent(cc.Label).string = "0/1" : this.videoBTN.getChildByName("num").getComponent(cc.Label).string = i + "/" + window.RoleUnlockNumber[this.Number];
if (1 == t) {
if (i >= window.RoleUnlockNumber[this.Number] || window.roleIsUnlock[this.Number]) {
if (!window.roleIsUnlock[this.Number]) {
window.roleIsUnlock[this.Number] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + this.Number, !0);
}
console.log("UpdateBTNActive 1 : ", window.RoleNum);
this.videoBTN.active = !1;
this.isUsing.active = window.RoleNum == this.Number;
this.useBTN.active = !(window.RoleNum == this.Number);
}
} else if (0 == t && 0 == this.Number) {
console.log("UpdateBTNActive 2 : ", window.RoleNum);
this.videoBTN.active = !1;
this.isUsing.active = !0;
this.useBTN.active = !1;
} else if (0 == t && 0 != this.Number && (i >= window.RoleUnlockNumber[this.Number] || window.roleIsUnlock[this.Number])) {
if (!window.roleIsUnlock[this.Number]) {
window.roleIsUnlock[this.Number] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + this.Number, !0);
}
console.log("UpdateBTNActive 3 : ", window.RoleNum);
this.videoBTN.active = !1;
this.isUsing.active = !1;
this.useBTN.active = !0;
}
} else if ("crown" === e) {
this.crownBTN.active = !0;
this.videoBTN.active = !1;
this.isUsing.active = !1;
this.useBTN.active = !1;
this.diamondBTN.active = !1;
this.crownBTN.getChildByName("num").getComponent(cc.Label).string = window.RoleUnlockNumber[this.Number];
if (1 == t) {
if (window.roleIsUnlock[this.Number]) {
this.crownBTN.active = !1;
this.isUsing.active = window.RoleNum == this.Number;
this.useBTN.active = !(window.RoleNum == this.Number);
}
} else if (0 == t && 0 == this.Number) {
this.crownBTN.active = !1;
this.isUsing.active = !0;
this.useBTN.active = !1;
} else if (0 == t && 0 != this.Number && window.roleIsUnlock[this.Number]) {
this.crownBTN.active = !1;
this.isUsing.active = !1;
this.useBTN.active = !0;
}
} else if ("diamond" === e) {
this.crownBTN.active = !1;
this.videoBTN.active = !1;
this.isUsing.active = !1;
this.useBTN.active = !1;
this.diamondBTN.active = !0;
this.diamondBTN.getChildByName("num").getComponent(cc.Label).string = window.RoleUnlockNumber[this.Number];
if (1 == t) {
if (window.roleIsUnlock[this.Number]) {
this.diamondBTN.active = !1;
this.isUsing.active = window.RoleNum == this.Number;
this.useBTN.active = !(window.RoleNum == this.Number);
}
} else if (0 == t && 0 == this.Number) {
this.diamondBTN.active = !1;
this.isUsing.active = !0;
this.useBTN.active = !1;
} else if (0 == t && 0 != this.Number && window.roleIsUnlock[this.Number]) {
this.diamondBTN.active = !1;
this.isUsing.active = !1;
this.useBTN.active = !0;
}
}
this.UpdateActivity();
},
OnClickCrown: function() {
window.Parent.ButtonSounds();
var e = window.RoleUnlockNumber[this.Number];
if (window.CrownNum >= e) {
window.Crown.reduceCrown(e);
window.roleIsUnlock[this.Number] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + this.Number, !0);
this.UpdateBTNActive();
} else {
window.needCloseCrown = !0;
window.CrownNode.active = !0;
0 == window.getCrownNum ? window.Crown.showAddCrownNode() : this.TipNode.active = !0;
}
},
OnClickDiamond: function() {
window.Parent.ButtonSounds();
var e = window.RoleUnlockNumber[this.Number];
if (window.DiamonNum >= e) {
window.Diamon.reduceDiamond(e);
window.roleIsUnlock[this.Number] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + this.Number, !0);
this.UpdateBTNActive();
} else window.Diamon.showAddDimondNode();
},
OnClickVideo: function() {
window.Parent.ButtonSounds();
var e = this;
window.Parent.showVideo(function(t) {
if (t) if (1 == window.isActivity && 1 == e.Number) {
window.roleIsUnlock[e.Number] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + e.Number, !0);
e.UpdateBTNActive();
} else {
var i = Number(window.Parent.getlocalStorage("roleUnlockNum_" + e.Number));
i++;
window.Parent.setlocalStorage("roleUnlockNum_" + e.Number, i);
e.UpdateBTNActive();
}
});
},
OnClickUse: function() {
if (0 == this.Number) {
window.RoleModel = !1;
window.Parent.setlocalStorage("RoleModel", !1);
} else {
window.RoleModel = !0;
window.RoleNum = this.Number;
window.Parent.setlocalStorage("RoleModel", !0);
window.Parent.setlocalStorage("RoleNum", window.RoleNum);
}
this.GameJS.ShowRoleList();
window.Home.UpdateHomeRoleList();
},
UpdateActivity: function() {
var e = window.Parent.getlocalStorage("roleIsUnlock" + this.Number);
e = "true" == e;
this.ActivityNode.active = !1;
}
});
cc._RF.pop();
}, {
"../Help/reportAnalytics": "reportAnalytics"
} ],
ModelScenebgJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b8b68m2PFRP4qs8bf7CIid5", "ModelScenebgJS");
(function(e) {
e && e.__esModule;
})(e("../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
SceneSP: cc.Node,
NameLabel: cc.Node,
crownBTN: cc.Node,
videoBTN: cc.Node,
diamondBTN: cc.Node,
isUsing: cc.Node,
useBTN: cc.Node
},
onLoad: function() {},
onEnable: function() {
this.NameLabel.getComponent(cc.Label).string = this.SceneName;
this.SceneSP.getComponent(cc.Sprite).spriteFrame = this.SceneSprit;
this.UpdateBTNActive();
},
UpdateBTNActive: function() {
var e = window.SceneUnlockType[this.Number];
if ("video" === e) {
this.crownBTN.active = !1;
this.videoBTN.active = !0;
this.isUsing.active = !1;
this.useBTN.active = !1;
this.diamondBTN.active = !1;
var t = Number(window.Parent.getlocalStorage("sceneUnlockNum_" + this.Number));
this.videoBTN.getChildByName("num").getComponent(cc.Label).string = t + "/" + window.SceneUnlockNumber[this.Number];
if (t >= window.SceneUnlockNumber[this.Number] || window.sceneIsUnlock[this.Number]) {
if (!window.sceneIsUnlock[this.Number]) {
window.sceneIsUnlock[this.Number] = !0;
window.Parent.setlocalStorage("sceneIsUnlock" + this.Number, !0);
}
this.videoBTN.active = !1;
this.isUsing.active = window.SceneNumber == this.Number;
this.useBTN.active = !(window.SceneNumber == this.Number);
}
} else if ("crown" === e) {
this.crownBTN.active = !0;
this.videoBTN.active = !1;
this.isUsing.active = !1;
this.useBTN.active = !1;
this.diamondBTN.active = !1;
this.crownBTN.getChildByName("num").getComponent(cc.Label).string = window.SceneUnlockNumber[this.Number];
if (window.sceneIsUnlock[this.Number]) {
this.crownBTN.active = !1;
this.isUsing.active = window.SceneNumber == this.Number;
this.useBTN.active = !(window.SceneNumber == this.Number);
}
}
},
OnClickCrown: function() {
window.Parent.ButtonSounds();
var e = window.SceneUnlockNumber[this.Number];
if (window.CrownNum >= e) {
window.Crown.reduceCrown(e);
window.sceneIsUnlock[this.Number] = !0;
window.Parent.setlocalStorage("sceneIsUnlock" + this.Number, !0);
this.UpdateBTNActive();
} else {
window.needCloseCrown = !0;
window.CrownNode.active = !0;
0 == window.getCrownNum ? window.Crown.showAddCrownNode() : this.TipNode.active = !0;
}
},
OnClickDiamond: function() {},
OnClickVideo: function() {
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
var i = Number(window.Parent.getlocalStorage("sceneUnlockNum_" + e.Number));
i++;
window.Parent.setlocalStorage("sceneUnlockNum_" + e.Number, i);
e.UpdateBTNActive();
}
});
},
OnClickUse: function() {
window.SceneNumber = this.Number;
this.GameJS.ShowSceneList();
}
});
cc._RF.pop();
}, {
"../Help/reportAnalytics": "reportAnalytics"
} ],
ModelSelectJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8a9b5z29JxKPrGuKuL5gWp8", "ModelSelectJS");
cc.Class({
extends: cc.Component,
properties: {
FaceCamerNode: cc.Node,
QingtongButton: cc.Node,
ZuanshiButton: cc.Node,
WangzhezheButton: cc.Node,
LockButton0: cc.Node,
LockButton1: cc.Node,
IntroductionNode: cc.Node,
selectbg: cc.Node,
ColorButton: cc.Node,
FaceButton: cc.Node,
CamerSelectNode: cc.Node,
Finger: cc.Node,
selectSceneNode: cc.Node,
ScenButton: cc.Node
},
onLoad: function() {
window.ModelSelect = this;
this.node.zIndex = 10;
this.background = this.node.getChildByName("backgroud");
if (3 != window.platform && 5 != window.platform) {
this.CamerSelectNode.active = !1;
this.selectbg.height = 780;
} else {
this.isshowFinger = Number(window.Parent.getlocalStorage("isshowFinger"));
this.isshowFinger = 0;
0 === this.isshowFinger && (this.Finger.active = !0);
window.FaceModle = !1;
this.ColorButton.opacity = 255;
this.FaceButton.opacity = 100;
}
},
onEnable: function() {
if (window.FaceModle) this.selectGameModel(null, 0); else {
if (0 == this.isshowFinger && 3 == window.platform) {
this.FaceButton.parent.getChildByName("tip").active = !0;
this.scheduleOnce(function() {
this.FaceButton.parent.getChildByName("tip").active = !1;
}, 2);
}
this.selectGameModel(null, 1);
}
window.ConstellationNum < 12 ? this.ScenButton.active = !1 : this.ScenButton.active = !0;
2 != window.platform && this.ScenButton.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.2, 1.1), cc.rotateTo(.1, 30), cc.rotateTo(.1, -25), cc.rotateTo(.1, 20), cc.rotateTo(.1, 0), cc.scaleTo(.2, 1), cc.delayTime(1))));
this.background.on(cc.Node.EventType.TOUCH_START, this.close, this);
var e, t;
e = Number(window.Parent.getlocalStorage("HardLevel1" + window.playID));
t = Number(window.Parent.getlocalStorage("HardLevel2" + window.playID));
this.LockButton0.active = !0;
this.ZuanshiButton.getComponent(cc.Button).interactable = !1;
this.LockButton1.active = !0;
this.WangzhezheButton.getComponent(cc.Button).interactable = !1;
cc.log("12121211221", e, t);
this.ZuanshiButton.getChildByName("SP_Choose").active = !1;
this.WangzhezheButton.getChildByName("SP_Choose").active = !1;
if (e > 0) {
this.LockButton0.active = !1;
this.ZuanshiButton.getComponent(cc.Button).interactable = !0;
this.ZuanshiButton.getChildByName("SP_Choose").active = !0;
}
if (t > 0) {
this.LockButton1.active = !1;
this.WangzhezheButton.getComponent(cc.Button).interactable = !0;
this.WangzhezheButton.getChildByName("SP_Choose").active = !0;
}
},
close: function() {
console.log("close");
this.node.active = !1;
window.Home.FaceCamerNode.active = !1;
5 === window.platform && window.Parent.getComponent("IosSDK").stopCaver();
if (window.Win) {
var e = window.Win.endType;
if (e) {
1 == e ? window.Parent.reportAnalytics("win_GameStart_close") : 2 == e && window.Parent.reportAnalytics("win_continue_close");
window.Win.endType = 0;
}
}
window.modelSelect = 0;
},
close2: function() {
console.log("close2");
if (this.callBack) {
this.callBack();
this.callBack = void 0;
}
this.node.active = !1;
window.modelSelect = 0;
},
showIntroduction: function() {
this.IntroductionNode.active = !0;
},
closIntroductionNode: function() {
this.IntroductionNode.active = !1;
},
selectQingTongModle: function() {
var e = this;
this.forbidTouch();
window.HardLevel = 0;
if (3 == window.platform) {
window.Power.reduceTili(this.QingtongButton, function() {
e.close2();
window.Home.startGame();
e.SetPointData();
});
} else {
e.close2();
window.Home.startGame();
}
window.Parent.reportAnalytics("game_normal_access");
window.Parent.reportCustomEvent("游戏事件", {
"青铜模式游戏": ""
});
},
selectZuanshiModle: function() {
var e = this;
this.forbidTouch();
window.HardLevel = 1;
if (3 == window.platform) {
window.Power.reduceTili(this.ZuanshiButton, function() {
e.close2();
window.Home.startGame();
e.SetPointData();
});
} else {
e.close2();
window.Home.startGame();
}
window.Parent.reportAnalytics("game_hard_access");
window.Parent.reportCustomEvent("游戏事件", {
"钻石模式游戏": ""
});
},
selectWangzheModle: function() {
var e = this;
this.forbidTouch();
window.HardLevel = 2;
if (3 == window.platform) {
window.Power.reduceTili(this.WangzhezheButton, function() {
e.close2();
window.Home.startGame();
e.SetPointData();
});
} else {
e.close2();
window.Home.startGame();
}
window.Parent.reportAnalytics("game_superhard_access");
window.Parent.reportCustomEvent("游戏事件", {
"王者模式游戏": ""
});
},
forbidTouch: function() {
this.background.off(cc.Node.EventType.TOUCH_START, this.close, this);
this.scheduleOnce(function() {
this.background.on(cc.Node.EventType.TOUCH_START, this.close, this);
}, 2);
},
selectGameModel: function(e, t) {
t = Number(t);
this.ColorButton.getComponent(cc.Button).interactable = !1;
this.FaceButton.getComponent(cc.Button).interactable = !1;
this.scheduleOnce(function() {
this.ColorButton.getComponent(cc.Button).interactable = !0;
this.FaceButton.getComponent(cc.Button).interactable = !0;
}, .5);
if (0 === t) {
var i = 1;
5 === window.platform && (i = window.Parent.getComponent("IosSDK").getCavInfo());
if (i) {
window.FaceModle = !0;
this.ColorButton.opacity = 100;
this.FaceButton.opacity = 255;
if (!window.TestModle) {
this.FaceCamerNode.active = !0;
if (5 === window.platform) {
window.isStartCamera = !0;
window.Parent.showTips("摄像头启动中");
this.scheduleOnce(function() {
window.Parent.getComponent("IosSDK").startAVCapture(.95, .07);
}, .5);
}
}
} else window.Parent.showTips("请开启摄像头权限");
if (0 === this.isshowFinger) {
this.isshowFinger = 1;
window.Parent.setlocalStorage("isshowFinger", 1);
this.FaceButton.parent.getChildByName("tip").active = !1;
this.Finger.active = !1;
}
} else {
window.FaceModle = !1;
this.ColorButton.opacity = 255;
this.FaceButton.opacity = 100;
this.scheduleOnce(function() {
this.FaceCamerNode.active = !1;
5 === window.platform && window.Parent.getComponent("IosSDK").stopCaver();
}, .3);
}
},
unlockButtonClick: function(e, t) {
var i = this;
t = Number(t);
window.Parent.showVideo(function(e) {
if (e) {
if (1 === t) {
window.Parent.reportAnalytics("game_hard_vedio_click");
window.Parent.reportCustomEvent("钻石事件", {
"钻石模式视频解锁": ""
});
}
if (2 === t) {
window.Parent.reportAnalytics("game_superhard_vedio_click");
window.Parent.reportCustomEvent("游戏事件", {
"王者模式视频解锁": ""
});
}
i.unlock(t);
}
});
},
unlock: function(e) {
if (1 === e) {
window.Parent.setlocalStorage("HardLevel1" + window.playID, 1);
this.LockButton0.active = !1;
this.ZuanshiButton.getComponent(cc.Button).interactable = !0;
this.ZuanshiButton.getChildByName("SP_Choose").active = !0;
}
if (2 === e) {
window.Parent.setlocalStorage("HardLevel2" + window.playID, 1);
this.LockButton1.active = !1;
this.WangzhezheButton.getComponent(cc.Button).interactable = !0;
this.WangzhezheButton.getChildByName("SP_Choose").active = !0;
}
},
showSelectSecen: function() {
window.Parent.reportAnalytics("SelectScene_page_access");
this.selectSceneNode.active = !0;
},
SetPointData: function() {
console.log("window.playID : " + window.playID);
"L45" == window.playID ? window.Parent.reportAnalytics("L45_ShiZhiTuZi_play_click") : "L47" == window.playID ? window.Parent.reportAnalytics("L47_WoDeShiJie_play_click") : "L48" == window.playID && window.Parent.reportAnalytics("L48_DaLaBengBa_play_click");
}
});
cc._RF.pop();
}, {} ],
MusicJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "757e9JoDKNI9ZeMROzCBmnQ", "MusicJS");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.defination();
this.UpdateMusicInfo(!0);
this.schedule(this.setCDPicture, .1);
this.isTouchListen = !1;
this.isCanTouch = !0;
},
defination: function() {
this.musicPlay = this.node.getChildByName("musicPlay");
this.listBg = this.node.getChildByName("listBg");
this.CD = this.listBg.getChildByName("Mask").getChildByName("CD");
this.playButton = this.listBg.getChildByName("playButton");
this.pauseButton = this.listBg.getChildByName("pauseButton");
this.loading = this.listBg.getChildByName("loading");
this.StartButton = this.listBg.getChildByName("StartButton");
this.videoUnlockButton = this.listBg.getChildByName("videoUnlockButton");
this.diamondUnlockButton = this.listBg.getChildByName("DemondUnlockButton");
this.diamondText = this.diamondUnlockButton.getChildByName("num");
this.star = [];
this.star[0] = this.listBg.getChildByName("Star").getChildByName("star0");
this.star[1] = this.listBg.getChildByName("Star").getChildByName("star1");
this.star[2] = this.listBg.getChildByName("Star").getChildByName("star2");
this.songNameMask = this.listBg.getChildByName("SongNameMask");
this.songNameNode = this.songNameMask.getChildByName("SongName");
this.bestScoreLB = this.listBg.getChildByName("ScoreBg").getChildByName("Score");
this.ColectionButton = this.listBg.getChildByName("ColectionButton");
this.like = this.ColectionButton.getChildByName("like");
},
definePar: function() {
this.StarNum = Number(window.Parent.getlocalStorage("StarNum" + this.musicID));
this.relashStar();
this.BestScore = Number(window.Parent.getlocalStorage("BestScore" + this.musicID));
this.bestScoreLB.getComponent(cc.Label).string = this.BestScore;
this.isUnlock = window.Parent.getlocalStorage("isUnlock" + this.musicID);
"true" == this.isUnlock ? this.isUnlock = !0 : this.isUnlock = !1;
if (1 == this.isUnlock) {
this.StartButton.active = !0;
this.videoUnlockButton.active = !1;
this.diamondUnlockButton.active = !1;
} else {
this.StartButton.active = !1;
if ("coin" == this.unlockType) {
this.videoUnlockButton.active = !1;
this.diamondUnlockButton.active = !0;
this.diamondText.getComponent(cc.Label).string = this.unlockNumber;
if (0 == this.unlockNumber) {
this.diamondUnlockButton.active = !1;
this.StartButton.active = !0;
this.isUnlock = !0;
window.Parent.setlocalStorage("isUnlock" + this.musicID, this.isUnlock);
}
} else {
this.videoUnlockButton.active = !0;
this.diamondUnlockButton.active = !1;
}
}
this.isColected = window.Parent.getlocalStorage("isColected" + this.musicID);
"true" === this.isColected ? this.isColected = !0 : this.isColected = !1;
1 == this.isColected ? this.like.active = !0 : this.like.active = !1;
this.isPlaying = !1;
},
UpdateMusicInfo: function() {
var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
this.definePar();
if (0 != e || -1 != window.NeedUpdateList.indexOf(this.musicID)) {
this.songNameNode.getComponent(cc.Label).string = this.musicName;
this.musicPlay.active = !1;
this.playButton.active = !0;
this.pauseButton.active = !1;
this.loading.active = !1;
this.StopSomgNameMove();
this.CD.angle = 0;
this.CD.stopAllActions();
if (1 == window.musicisplaying && window.playName == this.musicName) {
this.playButton.active = !1;
this.pauseButton.active = !0;
this.musicPlay.active = !0;
window.playNum = this.musicNumber;
this.SomgNameMove();
cc.tween(this.CD).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
window.Home.SongNameNode.getComponent(cc.Label).string = this.musicName;
window.Home.SongNameLB.getComponent(cc.Label).string = this.musicName;
this.isPlaying = !0;
window.ListenTime = this.listenNum;
}
}
},
relashStar: function() {
this.star[0].active = !1;
this.star[1].active = !1;
this.star[2].active = !1;
for (var e = 0; e <= this.StarNum - 1; e++) this.star[e].active = !0;
},
setCDPicture: function() {
if (window.Home.CDloadOk) {
this.CD.getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[this.orderNumber % 20];
this.unschedule(this.setCDPicture);
}
},
SomgNameMove: function() {
var e = this;
this.songNameNode.width > this.songNameMask.width && this.songNameNode.runAction(cc.repeatForever(cc.sequence(cc.moveBy(4, -this.songNameNode.width, 0), cc.callFunc(function() {
e.songNameNode.x = 265;
}), cc.moveBy(4, -this.songNameNode.width, 0))));
},
StopSomgNameMove: function() {
this.songNameNode.stopAllActions();
this.songNameNode.x = -this.songNameNode.parent.width / 2;
},
unlocksong: function() {
this.isUnlock = !0;
window.Parent.setlocalStorage("isUnlock" + this.musicID, this.isUnlock);
this.videoUnlockButton.active = !1;
this.diamondUnlockButton.active = !1;
this.StartButton.active = !0;
window.AchieveNumber[1]++;
window.Parent.setlocalStorage("AchieveNumber1", window.AchieveNumber[1]);
this.startGame();
},
playMusic: function() {
-1 == window.NeedUpdateList.indexOf(this.musicID) && window.NeedUpdateList.push(this.musicID);
var e = this;
window.musicisplaying = !1;
window.Home.stopMusicPlaying();
this.playButton.active = !1;
this.loading.active = !0;
this.musicPlay.active = !0;
this.loading.stopAllActions();
cc.tween(this.loading).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
window.Parent.LoadMusic(this.musicURL, this.musicID, function(t) {
e.playMusicCallFunc(t);
});
if (1 == this.isTouchListen) {
window.Home.DealMusicScore(window.playID, !1, 1);
this.isTouchListen = !1;
}
},
playMusicCallFunc: function(e) {
if (!window.isGaming && 1 != window.isShowSelecting) if (window.videoIsPlay) window.Home.stopMusicPlaying(); else {
window.playNum = this.musicNumber;
window.playName = this.musicName;
window.playURL = this.musicURL;
window.playID = this.musicID;
window.playPoint = this.pointURL;
window.Home.UpdateQuickStartStatus();
window.musicisplaying = !0;
window.Home.UpdateMusicPlay();
window.Home.SongNameNode.getComponent(cc.Label).string = this.musicName;
window.Home.SongNameLB.getComponent(cc.Label).string = this.musicName;
window.Parent.audioEngine.playMusic(e, !0);
window.Parent.audioEngine.setMusicTime(Number(this.listenNum));
window.isShowingVideoInsert && window.Parent.audioEngine.setVolume(0);
window.ListenTime = this.listenNum;
}
},
pauseMusic: function() {
window.playName = "";
window.musicisplaying = !1;
this.musicPlay.active = !1;
this.playButton.active = !0;
this.loading.active = !1;
this.pauseButton.active = !1;
this.StopSomgNameMove();
this.CD.angle = 0;
this.CD.stopAllActions();
window.Parent.audioEngine.stopAll();
window.Home.UpdateMusicPlay();
},
startGame: function() {
window.playNum = this.musicNumber;
window.playName = this.musicName;
window.playURL = this.musicURL;
window.playID = this.musicID;
window.playPoint = this.pointURL;
window.Home.showModleSelect(null, this.StartButton);
this.playMusic();
},
OnClickVideo: function() {
if (0 != this.isCanTouch) {
var e = this;
window.Parent.ButtonSounds();
window.Parent.showVideo(function(t) {
if (t) {
window.TouchPlayMusic = !0;
e.unlocksong();
e.playMusic();
window.Home.DealUnlockMusic(e.musicID);
window.watchVideoTimes++;
}
});
}
},
OnClickDiamond: function() {
if (0 != this.isCanTouch) {
window.Parent.ButtonSounds();
if (window.DiamonNum >= this.unlockNumber) {
window.TouchPlayMusic = !0;
window.Diamon.reduceDiamond(this.unlockNumber);
this.unlocksong();
this.playMusic();
} else window.Diamon.showAddDimondNode();
}
},
OnClickPlay: function() {
if (0 != this.isCanTouch) {
window.TouchPlayMusic = !0;
window.Parent.ButtonSounds();
this.startGame();
}
},
OnClickListen: function() {
if (0 != this.isCanTouch) {
window.TouchPlayMusic = !0;
window.playID && window.Home.DealMusicScore(window.playID, !0, 2);
this.isTouchListen = !0;
window.Parent.ButtonSounds();
this.playMusic();
}
},
OnClickPause: function() {
if (0 != this.isCanTouch) {
window.TouchPlayMusic = !1;
window.Home.DealMusicScore(window.playID, !0, 2);
window.Parent.ButtonSounds();
this.pauseMusic();
}
},
OnClickColectMusic: function() {
if (0 != this.isCanTouch) {
window.Parent.ButtonSounds();
if (this.isColected) {
this.isColected = !1;
this.like.active = !1;
for (var e = window.ColectTable.split(","), t = "", i = 0; i < e.length; i++) e[i] != this.musicID && (t = "" == t ? e[i] : t + "," + e[i]);
window.ColectTable = t;
window.Home.DealMusicScore(this.musicID, !0, 5);
} else {
this.isColected = !0;
this.like.active = !0;
var o = this.musicID;
"" != window.ColectTable && (o = o + "," + window.ColectTable);
window.ColectTable = o;
window.MissionNumber[6]++;
window.Parent.setlocalStorage("MissionNumber6", window.MissionNumber[6]);
window.Home.DealMusicScore(this.musicID, !1, 5);
}
window.Parent.setlocalStorage("isColected" + this.musicID, this.isColected);
window.Parent.setlocalStorage("ColectTable", window.ColectTable);
window.Home.ResetColectList();
}
},
OnClickCurMusic: function() {
0 != this.isCanTouch && (1 == this.isPlaying ? this.OnClickPause() : this.OnClickListen());
}
});
cc._RF.pop();
}, {} ],
MusicListNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b598cJnS6VJLYFd+HwnVWmw", "MusicListNodeJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
RecommondMusicPrefab: cc.Prefab,
OtherMusicPrefab: cc.Prefab,
CrownMusicListPrefab: cc.Prefab,
musicSelectFab: cc.Prefab,
TypeBTNFab: cc.Prefab
},
onLoad: function() {
window.MusicList = this;
window.MusicListNode = this.node;
this.node.setContentSize(window.screenWidth, window.screenHight);
this.defination();
this.definePar();
this.UpdateMusicList();
this.ShowAllTypeList();
this.ShowTypeList(0);
window.HomeNode.opacity = 0;
this.scrollUp = !1;
},
onEnable: function() {
if (window.ConstellationNum < 12) {
o.default.getInstance().reportAnalytics("View_Show_V2", "ConstellationUI_Show", 1);
this.ConstellationdetailNode.active = !0;
this.SetConstellationdetail();
this.AllSP.active = !1;
} else {
o.default.getInstance().reportAnalytics("View_Show_V2", "AllMusicUI_Show", 1);
this.ConstellationdetailNode.active = !1;
this.AllSP.active = !0;
}
window.isShowMusicList = 1;
this.ResetPos();
5 == window.platform && window.Parent.hidePushicon();
},
onDisable: function() {
console.log("普通歌曲列表销毁");
window.Home.curSelectList = -1;
this.scheduleOnce(function() {
this.node.destroy();
}, 2);
window.HomeNode.opacity = 255;
},
update: function(e) {
this.ScrollViewBack();
this.FollowMove();
},
defination: function() {
this.AllSP = this.node.getChildByName("SP_All");
this.MusicScroll = this.node.getChildByName("GRP_MusicScroll");
this.MusicContent = this.MusicScroll.getChildByName("view").getChildByName("content");
this.ConstellationdetailNode = this.MusicContent.getChildByName("GRP_Constellationdetail");
this.ConstellationTop = this.ConstellationdetailNode.getChildByName("Title");
this.ConstellationLogo = this.ConstellationdetailNode.getChildByName("Logo");
this.ConstellationDescription = this.ConstellationdetailNode.getChildByName("description");
this.ConstellationTips = this.ConstellationdetailNode.getChildByName("tips1");
this.ConstellationTitle = this.ConstellationLogo.getChildByName("titlebg").getChildByName("title");
this.ConstellationTime = this.ConstellationLogo.getChildByName("titlebg").getChildByName("time");
this.SearchNode = this.MusicContent.getChildByName("SearchNode");
this.SearchCon = this.SearchNode.getChildByName("SearchCon");
this.NormalCon = this.MusicContent.getChildByName("GRP_Normal");
this.NormalScroll = this.NormalCon.getChildByName("scrollview");
this.NormalContent = this.NormalScroll.getChildByName("view").getChildByName("content");
this.SelectNode = this.MusicContent.getChildByName("GRP_Select");
this.BTNList = [];
this.BTNList[0] = this.SelectNode.getChildByName("NormalTableButton");
this.BTNList[1] = this.SelectNode.getChildByName("SummerTableButton");
this.BTNList[2] = this.SelectNode.getChildByName("StudyTableButton");
this.BTNList[3] = this.SelectNode.getChildByName("ParkTableButton");
this.BTNList[4] = this.SelectNode.getChildByName("RestTableButton");
this.MusicContent.height = 2150;
this.newSelectCon = this.MusicContent.getChildByName("GRP_NewSelect");
this.newSelectNode = this.newSelectCon.getChildByName("view").getChildByName("SelectContent");
this.moveSP = this.node.getChildByName("SP_Move");
this.moveSP.active = !1;
},
definePar: function() {
this.MusicTypeList = [ "全部", "流行", "情歌", "DJ", "摇滚", "中国风", "轻音乐", "R&B", "说唱", "民谣", "交响乐" ];
this.curMusicTabel = [];
this.canMove = !1;
this.followMoveNum = 0;
this.isTurnOK = !1;
},
ResetPos: function() {
this.SelectNode.active = !1;
this.SearchNode.active = !0;
this.NormalCon.active = !0;
if (window.ConstellationNum < 12) {
this.SelectNode.position = cc.v2(0, -605);
this.SearchNode.position = cc.v2(0, -605);
this.newSelectCon.position = cc.v2(0, -530);
this.SearchNode.getComponent(cc.Widget).top = 650;
this.SearchNode.getComponent(cc.Widget).bottom = 0;
this.SearchNode.getComponent(cc.Widget).updateAlignment();
this.NormalCon.getComponent(cc.Widget).top = 840;
this.NormalCon.getComponent(cc.Widget).bottom = 0;
this.NormalCon.getComponent(cc.Widget).updateAlignment();
} else {
this.SelectNode.position = cc.v2(0, -100);
this.SearchNode.position = cc.v2(0, -180);
this.newSelectCon.position = cc.v2(0, -30);
this.SearchNode.getComponent(cc.Widget).top = 170;
this.SearchNode.getComponent(cc.Widget).bottom = 0;
this.SearchNode.getComponent(cc.Widget).updateAlignment();
this.NormalCon.getComponent(cc.Widget).top = 350;
this.NormalCon.getComponent(cc.Widget).bottom = 0;
this.NormalCon.getComponent(cc.Widget).updateAlignment();
}
},
SetConstellationdetail: function() {
this.ConstellationLogo.getComponent(cc.Sprite).spriteFrame = window.ConstellationLogo_Spr[window.ConstellationNum];
this.ConstellationDescription.getComponent(cc.Label).string = "       " + window.Home.descriptionString[window.ConstellationNum];
this.ConstellationTop.getComponent(cc.Sprite).spriteFrame = window.ConstellationTitle_Spr[window.ConstellationNum];
this.ConstellationTips.getComponent(cc.Label).string = window.Home.tips1String[window.ConstellationNum];
this.ConstellationTitle.getComponent(cc.Label).string = window.Home.tips1String[window.ConstellationNum] + "性格特点";
this.ConstellationTime.getComponent(cc.Label).string = window.Home.DataString[window.ConstellationNum];
},
UpdateMusicList: function() {
this.scrollDirect = 0;
this.NormalScroll.on("scroll-began", this.OnScrollBeganEvent, this);
this.NormalScroll.on("scrolling", this.OnScrollingEvent, this);
this.NormalScroll.on("scroll-end", this.OnScrollingEvent, this);
},
OnScrollBeganEvent: function(e) {
this.lastOffsetY = this.NormalScroll.getComponent(cc.ScrollView).getScrollOffset().y;
},
OnScrollingEvent: function(e) {
var t = this.NormalScroll.getComponent(cc.ScrollView).getScrollOffset().y, i = this.lastOffsetY > t;
this.scrollDirect = i ? 2 : 1;
this.lastOffsetY = t;
if (!(this.lastOffsetY < 0 && 0 == this.firstNum || this.lastOffsetY > this.NormalContent.height && this.lastNum == this.curMusicTabel - 1 || this.lastNum > this.curMusicTabel.length - 1 || this.firstNum < 0)) if (this.lastOffsetY >= 222 * (this.firstNum + 1) && this.lastNum < this.curMusicTabel.length - 1) {
if (null == this.curMusicTabel[this.lastNum + 1] || void 0 == this.curMusicTabel[this.lastNum + 1]) return;
var o = this.NormalContent.children[0];
o.setSiblingIndex(9);
o.setPosition(cc.v2(o.position.x, o.position.y - 2220));
this.firstNum++;
this.lastNum++;
o.getComponent("musicSelectJS").musicName = this.curMusicTabel[this.lastNum].musicName;
o.getComponent("musicSelectJS").orderNumber = this.curMusicTabel[this.lastNum].orderNumber;
o.getComponent("musicSelectJS").unlockType = this.curMusicTabel[this.lastNum].unlockType;
o.getComponent("musicSelectJS").unlockNumber = Number(this.curMusicTabel[this.lastNum].unlockCost);
o.getComponent("musicSelectJS").musicID = this.curMusicTabel[this.lastNum].musicId;
o.getComponent("musicSelectJS").NewFlag = this.curMusicTabel[this.lastNum].ex_new;
o.getComponent("musicSelectJS").musicURL = this.curMusicTabel[this.lastNum].musicFile;
o.getComponent("musicSelectJS").pointURL = this.curMusicTabel[this.lastNum].json_normal;
o.getComponent("musicSelectJS").musicNumber = window.Home.GetMusicNumber(this.curMusicTabel[this.lastNum].musicId);
o.getComponent("musicSelectJS").musicStyle = this.curMusicTabel[this.lastNum].style;
o.getComponent("musicSelectJS").listenNum = this.curMusicTabel[this.lastNum].ex_listen;
o.getComponent("musicSelectJS").UpdateMusicInfo(!0);
for (var n = 0; n < this.musicArr; n++) this.musicArr[n] = this.musicArr[n + 1];
this.musicArr[9] = o;
} else if (this.lastOffsetY <= 222 * this.firstNum) {
if (null == this.curMusicTabel[this.firstNum - 1] || void 0 == this.curMusicTabel[this.firstNum - 1]) return;
var s = this.NormalContent.children[9];
s.setSiblingIndex(0);
s.setPosition(cc.v2(s.position.x, s.position.y + 2220));
this.firstNum--;
this.lastNum--;
s.getComponent("musicSelectJS").musicName = this.curMusicTabel[this.firstNum].musicName;
s.getComponent("musicSelectJS").orderNumber = this.curMusicTabel[this.firstNum].orderNumber;
s.getComponent("musicSelectJS").unlockType = this.curMusicTabel[this.firstNum].unlockType;
s.getComponent("musicSelectJS").unlockNumber = Number(this.curMusicTabel[this.firstNum].unlockCost);
s.getComponent("musicSelectJS").musicID = this.curMusicTabel[this.firstNum].musicId;
s.getComponent("musicSelectJS").NewFlag = this.curMusicTabel[this.firstNum].ex_new;
s.getComponent("musicSelectJS").musicURL = this.curMusicTabel[this.firstNum].musicFile;
s.getComponent("musicSelectJS").pointURL = this.curMusicTabel[this.firstNum].json_normal;
s.getComponent("musicSelectJS").musicNumber = window.Home.GetMusicNumber(this.curMusicTabel[this.firstNum].musicId);
s.getComponent("musicSelectJS").musicStyle = this.curMusicTabel[this.firstNum].style;
s.getComponent("musicSelectJS").listenNum = this.curMusicTabel[this.firstNum].ex_listen;
s.getComponent("musicSelectJS").UpdateMusicInfo(!0);
for (var a = this.musicArr.length - 1; a > 0; a--) this.musicArr[a] = this.musicArr[a - 1];
this.musicArr[0] = s;
}
},
ScrollViewBack: function() {
var e = Number(window.Parent.getlocalStorage("scrollNum"));
if (e < 6) if (this.NormalContent.y <= 350 && 0 == this.scrollUp) {
this.scrollUp = !0;
window.Parent.setlocalStorage("scrollNum", e + 1);
} else this.NormalContent.y > 350 && (this.scrollUp = !1); else {
if (1 != Number(window.Parent.getlocalStorage("EggShellClock2"))) {
window.Parent.setlocalStorage("EggShellClock2", 1);
window.Parent.showTips("解锁彩蛋");
this.ShowTypeList(0, !0, !0, "L46");
window.Parent.reportAnalytics("eggs_MusicUnlock_number");
}
}
},
ShowAllTypeList: function() {
for (var e = this, t = function(t) {
var i = cc.instantiate(e.TypeBTNFab);
i.getChildByName("LB_Type").getComponent(cc.Label).string = e.MusicTypeList[t];
i.on(cc.Node.EventType.TOUCH_END, function() {
e.OnClickTypeBTN(null, t);
}, e);
i.parent = e.newSelectNode;
}, i = 0; i < this.MusicTypeList.length; i++) t(i);
},
ShowTypeList: function(e) {
var t = this, i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], o = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "";
if (e != window.Home.curSelectList || 0 != i) {
this.curMusicType = [];
this.curMusicTabel = [];
var s = this;
1 == o && "" != n && ("L46" == n ? window.Home.AddTableMusicList(1, n) : window.Home.AddTableMusicList(2, n));
if (0 == e) for (var a = 0; a < window.Home.AllTable.length; a++) this.curMusicTabel.push(window.Home.AllTable[a]); else {
this.curMusicType.push(this.MusicTypeList[e]);
if (5 == e) {
this.curMusicType.push("古风");
}
for (var c = [], r = 0; r < window.Home.AllTable.length; r++) {
var l = window.Home.AllTable[r];
c[0] = l.ex_tag1_theme.split(",");
c[1] = l.ex_tag2_scene.split(",");
c[2] = l.ex_tag3_mood.split(",");
c[3] = l.ex_tag4_age.split(",");
c[4] = l.ex_tag5_genre.split(",");
c[5] = l.ex_tag6_language.split(",");
for (var d = 0; d < this.curMusicType.length; d++) {
var h = this.curMusicType[d];
if ((-1 != c[0].indexOf(h) || -1 != c[1].indexOf(h) || -1 != c[2].indexOf(h) || -1 != c[3].indexOf(h) || -1 != c[4].indexOf(h) || -1 != c[5].indexOf(h)) && -1 == this.curMusicTabel.indexOf(l)) {
this.curMusicTabel.push(l);
break;
}
}
}
}
this.SearchCon.setScale(0);
this.NormalScroll.setScale(1);
var u = window.Home.curSelectList;
window.Home.curSelectList = e;
this.musicArr = [];
if (0 != this.NormalContent.childrenCount) {
this.NormalScroll.getComponent(cc.ScrollView).stopAutoScroll();
var w = this.curMusicTabel.length;
if (0 == i) (function() {
for (var i = e - u, o = function(e) {
var o = t.NormalContent.children[e].getComponent("musicSelectJS");
t.scheduleOnce(function() {
i > 0 ? o.TurnOutAnim() : o.TurnOutAnim(!1);
}, .1);
}, n = 0; n < t.NormalContent.childrenCount; n++) o(n);
t.scheduleOnce(function() {
a();
}, .2);
var a = function() {
s.NormalScroll.getComponent(cc.ScrollView).scrollToTop();
s.canMove = !1;
s.moveSP.parent = s.node;
var t = s.newSelectNode.children[e].getChildByName("MovePos"), o = t.parent.convertToWorldSpaceAR(t.position), n = s.moveSP.parent.convertToNodeSpaceAR(o);
s.moveSP.runAction(cc.sequence(cc.moveTo(.1, n).easing(cc.easeCubicActionOut()), cc.callFunc(function() {
s.ChangeTypeBTN(e);
s.followMoveNum = e;
s.canMove = !0;
})));
for (var a = function(e) {
s.scheduleOnce(function() {
var t = s.NormalContent.children[e], o = t.getComponent("musicSelectJS");
t.getChildByName("AnimNode").active = w >= e + 1;
if (w >= e + 1) {
t.setPosition(0, -120 - 222 * e);
o.contentPosition = cc.v2(0, -120 - 222 * e);
o.musicType = "HomeMusic";
o.musicName = s.curMusicTabel[e].musicName;
o.singerName = s.curMusicTabel[e].singerName;
o.orderNumber = s.curMusicTabel[e].orderNumber;
o.unlockType = s.curMusicTabel[e].unlockType;
o.unlockNumber = Number(s.curMusicTabel[e].unlockCost);
o.musicID = s.curMusicTabel[e].musicId;
o.NewFlag = s.curMusicTabel[e].ex_new;
o.musicURL = s.curMusicTabel[e].musicFile;
o.pointURL = s.curMusicTabel[e].json_normal;
o.musicNumber = window.Home.GetMusicNumber(s.curMusicTabel[e].musicId);
o.Home = s;
o.musicStyle = s.curMusicTabel[e].style;
o.listenNum = s.curMusicTabel[e].ex_listen;
o.UpdateMusicInfo(!0);
s.musicArr[e] = t;
i > 0 ? o.TurnInAnim() : o.TurnInAnim(!1);
}
e == s.NormalContent.childrenCount - 1 && (s.NormalContent.height = 222 * (s.curMusicTabel.length - 1) + 700);
}, .1);
}, c = 0; c < s.NormalContent.childrenCount; c++) a(c);
};
})(); else for (var m = 0; m < s.NormalContent.childrenCount; m++) {
var g = s.NormalContent.children[m], p = g.getComponent("musicSelectJS");
g.getChildByName("AnimNode").active = w >= m + 1;
if (w >= m + 1) {
g.setPosition(0, -120 - 222 * m);
p.contentPosition = cc.v2(0, -120 - 222 * m);
p.musicType = "HomeMusic";
p.musicName = s.curMusicTabel[m].musicName;
p.singerName = s.curMusicTabel[m].singerName;
p.orderNumber = s.curMusicTabel[m].orderNumber;
p.unlockType = s.curMusicTabel[m].unlockType;
p.unlockNumber = Number(s.curMusicTabel[m].unlockCost);
p.musicID = s.curMusicTabel[m].musicId;
p.NewFlag = s.curMusicTabel[m].ex_new;
p.musicURL = s.curMusicTabel[m].musicFile;
p.pointURL = s.curMusicTabel[m].json_normal;
p.musicNumber = window.Home.GetMusicNumber(s.curMusicTabel[m].musicId);
p.Home = s;
p.musicStyle = s.curMusicTabel[m].style;
p.listenNum = s.curMusicTabel[m].ex_listen;
p.UpdateMusicInfo(!0);
s.musicArr[m] = g;
}
m == s.NormalContent.childrenCount - 1 && (s.NormalContent.height = 222 * (s.curMusicTabel.length - 1) + 700);
}
} else {
this.NormalContent.height = 222 * (this.curMusicTabel.length - 1) + 700;
for (var f = function(e) {
var i = cc.instantiate(t.musicSelectFab), o = i.getComponent("musicSelectJS");
i.setPosition(0, -120 - 222 * e);
o.contentPosition = cc.v2(0, -120 - 222 * e);
o.musicType = "HomeMusic";
o.musicName = t.curMusicTabel[e].musicName;
o.singerName = t.curMusicTabel[e].singerName;
o.orderNumber = t.curMusicTabel[e].orderNumber;
o.unlockType = t.curMusicTabel[e].unlockType;
o.unlockNumber = Number(t.curMusicTabel[e].unlockCost);
o.musicID = t.curMusicTabel[e].musicId;
o.NewFlag = t.curMusicTabel[e].ex_new;
o.musicURL = t.curMusicTabel[e].musicFile;
o.pointURL = t.curMusicTabel[e].json_normal;
o.musicNumber = window.Home.GetMusicNumber(t.curMusicTabel[e].musicId);
o.Home = t;
o.musicStyle = t.curMusicTabel[e].style;
o.listenNum = t.curMusicTabel[e].ex_listen;
i.getChildByName("AnimNode").active = !1;
var n = .05 * e + .1;
t.scheduleOnce(function() {
o.TurnInAnim(!0);
}, n);
t.NormalContent.addChild(i);
t.musicArr[e] = i;
}, S = 0; S < 10; S++) f(S);
this.scheduleOnce(function() {
var i = t.newSelectNode.children[e].getChildByName("MovePos"), o = i.parent.convertToWorldSpaceAR(i.position), n = t.moveSP.parent.convertToNodeSpaceAR(o);
t.moveSP.active = !0;
t.moveSP.setPosition(n);
t.canMove = !0;
t.followMoveNum = 0;
}, 0);
}
this.firstNum = 0;
this.lastNum = 9;
}
},
ChangeTypeBTN: function(e) {
var t = e;
0 != t && 1 != t || (t = 2);
t != this.MusicTypeList.length - 1 && t != this.MusicTypeList.length - 2 || (t = this.MusicTypeList.length - 3);
var i = -window.screenWidth / 2 - 200 * (t - 2) - 22 * (t - 2);
this.newSelectNode.runAction(cc.moveTo(.2, cc.v2(i, this.newSelectNode.y)));
},
FollowMove: function() {
if (0 != this.canMove) {
var e = this.newSelectNode.children[this.followMoveNum].getChildByName("MovePos"), t = e.parent.convertToWorldSpaceAR(e.position), i = this.moveSP.parent.convertToNodeSpaceAR(t);
this.moveSP.setPosition(i);
}
},
OnTouchMove: function(e) {
var t = this, i = e.getTouches(), o = i[0].getStartLocation(), n = i[0].getLocation(), s = n.x - o.x, a = n.y - o.y;
if (Math.abs(a) <= 100 && 0 == this.isTurnOK && Math.abs(s) >= 200) {
console.log("开始切换界面");
this.isTurnOK = !0;
var c = s < 0, r = window.Home.curSelectList;
if (0 == r && 0 == c || r == this.MusicTypeList.length - 1 && 1 == c) this.isTurnOK = !1; else {
1 == c ? r++ : r--;
this.scheduleOnce(function() {
t.ShowTypeList(r);
}, 0);
}
}
},
OnTouchEnd: function(e) {
this.isTurnOK = !1;
},
OnClickBack: function() {
console.log("点击返回主界面");
window.Parent.ButtonSounds();
this.node.active = !1;
if (12 != window.ConstellationNum) {
window.ConstellationNum = 12;
window.Home.showXingzuoNode();
} else 5 == window.platform && window.Parent.showPushicon(256, 256, 200, 1500);
window.isShowMusicList = 0;
},
OnClickTypeBTN: function(e, t) {
console.log("第", t, "个点击");
window.Parent.ButtonSounds();
t = Number(t);
this.ShowTypeList(t);
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
MusicLoadingNode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "23cc85WXRVFxqrHaIGuBgnJ", "MusicLoadingNode");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
GameNode: cc.Node,
HomeNode: cc.Node,
PercelNode: cc.Node
},
onLoad: function() {
window.MusicLoadingNode = this.node;
this.node.setContentSize(window.screenWidth, window.screenHight);
this.adding = this.node.getChildByName("adding");
this.errLable = this.node.getChildByName("errLable");
this.node.zIndex = 10;
window.MusicName = window.playName;
this.loadFabRes();
this.schedule(function() {
this.changeTitile();
}, .5);
this.schedule(function() {
this.TimeCunt++;
console.log("倒计时", this.TimeCunt);
12 === this.TimeCunt && (this.errLable.active = !0);
if (this.TimeCunt >= 15) {
this.TimeCunt = 0;
this.node.active = !1;
this.errLable.active = !1;
this.HomeNode.active = !0;
window.Parent.showTips("网络波动较大,请重启一下游戏", 3);
window.Parent.UIMaskNode.active = !1;
}
}, 1);
this.schedule(function() {
0 != this.allResNum && (this.PercelNode.getComponent(cc.Label).string = Math.floor(this.resnum / this.allResNum * 100).toString() + "%");
}, .1);
},
onEnable: function() {
window.Parent.hidePushicon();
this.errLable.active = !1;
this.closemoreGameButton();
window.isCustomRecord || 3 != window.platform || (window.Record.RecordButton.active = !1);
window.DiamondNode.active = !1;
window.CrownNode.active = !1;
3 === window.platform && (window.PowerNode.active = !1);
window.isGaming = !0;
this.musicLoadOk = !1;
this.PointLoadOk = !1;
this.addcunt = 0;
this.TimeCunt = 0;
this.Ok = !1;
this.PercelNode.active = !0;
this.schedule(this.LoadRes, 3, 9999, .1);
this.scheduleOnce(function() {
this.Ok = !0;
}, 1);
o.default.getInstance().reportAnalytics("View_Show_V2", "GameLoding_First_Show", 1);
},
LoadRes: function() {
var e = this;
console.log("window.playID : ", window.playID);
window.Parent.LoadMusic(window.playURL, window.playID, function(t) {
e.musicLoadOk = !0;
e.PointLoadOk && e.unschedule(e.LoadRes);
window.Bgmusic = t;
});
window.Parent.LoadPoint(window.playPoint, window.playID, function(t) {
e.PointLoadOk = !0;
e.musicLoadOk && e.unschedule(e.LoadRes);
var i = t;
window.Point_Table = [];
for (var o = 0, n = 0; n < i.length; n++) {
var s = i[n];
if ("light" == s.pressKey) {
window.Point_Table[o] = s;
o++;
}
}
});
},
start: function() {},
update: function(e) {
if (this.musicLoadOk && this.PointLoadOk && this.Ok && this.resLoadOk) {
this.musicLoadOk = !1;
this.PointLoadOk = !1;
this.Ok = !1;
this.showGameNode();
window.Parent.UIMaskNode.active = !1;
}
},
showGameNode: function() {
this.GameNode.active = !0;
},
changeTitile: function() {
this.addcunt++;
this.addcunt > 5 && (this.addcunt = 0);
switch (this.addcunt) {
case 0:
this.adding.getComponent(cc.Label).string = "加载中";
break;

case 1:
this.adding.getComponent(cc.Label).string = "加载中.";
break;

case 2:
this.adding.getComponent(cc.Label).string = "加载中..";
break;

case 3:
this.adding.getComponent(cc.Label).string = "加载中...";
break;

case 4:
this.adding.getComponent(cc.Label).string = "加载中....";
break;

case 5:
this.adding.getComponent(cc.Label).string = "加载中.....";
}
},
loadFabRes: function() {
var e = this, t = this;
this.resnum = 0;
this.allResNum = 0;
this.resLoadOk = !1;
this.allResNum++;
cc.loader.loadResDir("短节奏点影子", cc.SpriteFrame, function(e, i) {
if (e) console.log("短节奏点影子加载出错"); else {
t.resnum++;
console.log("短节奏点影子加载完成", t.resnum + "/" + t.allResNum);
window.shortShadow_Sprit = [];
for (var o = 0; o < i.length; o++) window.shortShadow_Sprit[o] = i.find(function(e) {
return e.name === "a".concat(o);
});
t.resnum >= t.allResNum && (t.resLoadOk = !0);
}
});
this.allResNum++;
cc.loader.loadRes("PreFab/FaillNode", cc.Prefab, function(e, i) {
if (e) console.log("FiallNode加载出错"); else {
t.resnum++;
console.log("FiallNode加载完成", t.resnum + "/" + t.allResNum);
window.FiallNodeFab = i;
t.resnum >= t.allResNum && (t.resLoadOk = !0);
}
});
this.allResNum++;
cc.loader.loadRes("PreFab/ReliveNode", cc.Prefab, function(e, i) {
if (e) console.log("ReliveNode加载出错"); else {
t.resnum++;
console.log("ReliveNode加载完成", t.resnum + "/" + t.allResNum);
window.ReliveNodeFab = i;
t.resnum >= t.allResNum && (t.resLoadOk = !0);
}
});
this.allResNum++;
cc.loader.loadRes("PreFab/WinNode", cc.Prefab, function(e, i) {
if (e) console.log("WinNode加载出错"); else {
t.resnum++;
console.log("WinNode加载完成", t.resnum + "/" + t.allResNum);
window.WinNodeFab = i;
t.resnum >= t.allResNum && (t.resLoadOk = !0);
}
});
window.ScenBackground_Sprit = [];
this.allResNum++;
for (var i = 0, o = function(t) {
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/BGPicture/background".concat(t, ".jpg"),
type: "jpg"
}, function(o, n) {
if (o) ; else {
window.ScenBackground_Sprit[t] = new cc.SpriteFrame(n);
if (++i >= 7) {
e.resnum++;
console.log("场景背景 加载完成", e.resnum + "/" + e.allResNum);
e.resnum >= e.allResNum && (e.resLoadOk = !0);
}
}
});
}, n = 0; n < 7; n++) o(n);
window.Road_Sprit = [];
this.allResNum++;
for (var s = 0, a = function(t) {
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/RoadPicture/Road".concat(t, ".png"),
type: "png"
}, function(i, o) {
if (i) ; else {
window.Road_Sprit[t] = new cc.SpriteFrame(o);
if (++s >= 7) {
e.resnum++;
console.log("场景路面 加载完成", e.resnum + "/" + e.allResNum);
e.resnum >= e.allResNum && (e.resLoadOk = !0);
}
}
});
}, c = 0; c < 7; c++) a(c);
this.allResNum++;
cc.loader.loadResDir("场景资源/场景预制体", cc.Prefab, function(e, i) {
if (e) console.log("场景预制体 加载出错"); else {
t.resnum++;
console.log("场景预制体 加载完成", t.resnum + "/" + t.allResNum);
window.SceneFab = [];
for (var o = 0; o < i.length; o++) window.SceneFab[o] = i.find(function(e) {
return e.name === "SceneFab".concat(o);
});
t.resnum >= t.allResNum && (t.resLoadOk = !0);
}
});
this.allResNum++;
cc.loader.loadRes("PreFab/ChangeHighNode", cc.Prefab, function(e, i) {
if (e) console.log("ChangeHighNode 加载出错"); else {
t.resnum++;
console.log("ChangeHighNode 加载完成");
window.ChangeHighNodeFab = i;
t.resnum >= t.allResNum && (t.resLoadOk = !0);
}
});
},
closemoreGameButton: function() {
if (window.btn) {
window.btn.destroy();
window.btn = void 0;
}
if (window.btn2) {
window.btn2.destroy();
window.btn2 = void 0;
}
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
MusicNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b240bvjmZ5P5oZ6ruOmHGmB", "MusicNodeJS");
var o = e("MusicJS");
cc.Class({
extends: o,
properties: {
ListNode: cc.Node
},
defination: function() {
this.CD = this.node.getChildByName("Mask").getChildByName("CD");
this.playButton = this.node.getChildByName("playButton");
this.pauseButton = this.node.getChildByName("pauseButton");
this.loading = this.node.getChildByName("loading");
this.songNameMask = this.node.getChildByName("SP_Text").getChildByName("TextMask");
this.songNameNode = this.songNameMask.getChildByName("LB_Text");
},
UpdateMusicInfo: function() {
var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
this.songNameNode.getComponent(cc.Label).string = this.musicName;
this.CD.getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[this.orderNumber % 20];
if (0 != e || -1 != window.NeedUpdateList.indexOf(this.musicID)) {
this.playButton.active = !0;
this.pauseButton.active = !1;
this.loading.active = !1;
this.StopSomgNameMove();
this.CD.angle = 0;
this.CD.stopAllActions();
if (1 == window.musicisplaying && window.playName == this.musicName) {
this.playButton.active = !1;
this.pauseButton.active = !0;
window.playNum = this.musicNumber;
this.SomgNameMove();
cc.tween(this.CD).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
window.Home.SongNameNode.getComponent(cc.Label).string = this.musicName;
window.Home.SongNameLB.getComponent(cc.Label).string = this.musicName;
window.ListenTime = this.listenNum;
}
}
},
playMusic: function() {
-1 == window.NeedUpdateList.indexOf(this.musicID) && window.NeedUpdateList.push(this.musicID);
window.PlayOtherMusic = !0;
var e = this;
window.musicisplaying = !1;
window.Home.stopMusicPlaying();
this.playButton.active = !1;
this.loading.active = !0;
this.loading.stopAllActions();
cc.tween(this.loading).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
window.Parent.LoadMusic(this.musicURL, this.musicID, function(t) {
e.playMusicCallFunc(t);
});
},
playMusicCallFunc: function(e) {
if (!window.isGaming && 1 != window.isShowSelecting) if (window.videoIsPlay) window.Home.stopMusicPlaying(); else {
window.playNum = this.musicNumber;
window.playName = this.musicName;
window.playURL = this.musicURL;
window.playID = this.musicID;
window.playPoint = this.pointURL;
window.musicisplaying = !0;
window.Home.UpdateMusicPlay();
window.Home.SongNameNode.getComponent(cc.Label).string = this.musicName;
window.Home.SongNameLB.getComponent(cc.Label).string = this.musicName;
window.Parent.audioEngine.playMusic(e, !0);
window.Parent.audioEngine.setMusicTime(Number(this.listenNum));
window.isShowingVideoInsert && window.Parent.audioEngine.setVolume(0);
window.Home.DealMusicScore(window.playID, !1, 1);
window.ListenTime = this.listenNum;
}
},
SomgNameMove: function() {
var e = this;
console.log(this.songNameNode.width);
this.songNameNode.width > this.songNameMask.width + 20 && this.songNameNode.runAction(cc.repeatForever(cc.sequence(cc.moveBy(4, -this.songNameNode.width, 0), cc.callFunc(function() {
e.songNameNode.x = 265;
}), cc.moveBy(4, -this.songNameNode.width, 0))));
},
StopSomgNameMove: function() {
if (this.songNameNode) {
this.songNameNode.stopAllActions();
this.songNameNode.x = 0;
}
}
});
cc._RF.pop();
}, {
MusicJS: "MusicJS"
} ],
MyMusicJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "85358znjdBNd7+Xa9HBvIdr", "MyMusicJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
curPrefab: cc.Prefab,
SearchPrefab: cc.Prefab
},
onLoad: function() {
this.node.setContentSize(window.screenWidth, window.screenHight);
window.MyMusic = this;
window.MyMusicNode = this.node;
this.defination();
this.ShowSelectList(1);
this.SetMusicListEvt();
window.HomeNode.opacity = 0;
},
onEnable: function() {
window.isShowMusicList = 3;
o.default.getInstance().reportAnalytics("View_Show_V2", "MyMusicUI_Show", 1);
5 == window.platform && window.Parent.hidePushicon();
this.GuideMyMusic();
},
onDisable: function() {
this.scheduleOnce(function() {
this.node.destroy();
}, 2);
window.HomeNode.opacity = 255;
},
defination: function() {
this.musicScrollNode = this.node.getChildByName("GRP_MusicScroll");
this.musicScrollContent = this.musicScrollNode.getChildByName("view").getChildByName("content");
this.musicCon = this.musicScrollContent.getChildByName("GRP_Music");
this.musicScroll = this.musicCon.getChildByName("scrollview");
this.musicContent = this.musicScroll.getChildByName("view").getChildByName("content");
this.selectCon = this.musicScrollContent.getChildByName("GRP_Select");
this.unclearBTN = this.selectCon.getChildByName("BTN_UnClear");
this.unclearSP = this.unclearBTN.getChildByName("SP_Select");
this.clearBTN = this.selectCon.getChildByName("BTN_Clear");
this.clearSP = this.clearBTN.getChildByName("SP_Select");
this.favourBTN = this.selectCon.getChildByName("BTN_Favour");
this.favourSP = this.favourBTN.getChildByName("SP_Select");
this.recommendCon = this.musicScrollContent.getChildByName("RecommendCon");
this.favourList = this.recommendCon.getChildByName("FavourList");
this.favourTop = this.favourList.getChildByName("FavourTop");
this.favourContent = this.favourList.getChildByName("view").getChildByName("content");
this.recommendList = this.recommendCon.getChildByName("RecommendList");
this.recommendTop = this.recommendList.getChildByName("RecommendTop");
this.recommendContent = this.recommendList.getChildByName("view").getChildByName("content");
this.favourList.active = !1;
this.recommendList.active = !1;
this.definePar();
},
definePar: function() {},
ShowSelectList: function(e) {
if (this.curSelectNum != e) {
this.unclearSP.active = 1 == e;
this.clearSP.active = 2 == e;
this.favourSP.active = 3 == e;
this.curSelectNum = e;
this.curUseList = void 0;
this.favourList.active = !1;
this.recommendList.active = !1;
if (1 == this.curSelectNum) this.curUseList = window.Home.UnClearTable; else if (2 == this.curSelectNum) {
for (var t = [], i = 0, o = window.Home.ClearTable.length - 1; o >= 0; o--) {
t[i] = window.Home.ClearTable[o];
i++;
}
this.curUseList = t;
} else 3 == this.curSelectNum && (this.curUseList = window.Home.ColectTable);
this.musicArr = [];
this.musicContent.height = 222 * (this.curUseList.length - 1) + 700;
var n = "MyMusic" + e;
if (0 != this.musicContent.childrenCount) {
this.musicScroll.getComponent(cc.ScrollView).scrollToTop();
if (this.curUseList.length > 0) for (var s = 0; s < this.musicContent.childrenCount; s++) {
var a = this.musicContent.children[s];
a.active = this.curUseList.length >= s + 1;
if (this.curUseList.length >= s + 1) {
a.getComponent("musicSelectJS").musicType = n;
a.getComponent("musicSelectJS").musicName = this.curUseList[s].musicName;
a.getComponent("musicSelectJS").singerName = this.curUseList[s].singerName;
a.getComponent("musicSelectJS").orderNumber = this.curUseList[s].orderNumber;
a.getComponent("musicSelectJS").unlockType = this.curUseList[s].unlockType;
a.getComponent("musicSelectJS").unlockNumber = Number(this.curUseList[s].unlockCost);
a.getComponent("musicSelectJS").musicID = this.curUseList[s].musicId;
a.getComponent("musicSelectJS").NewFlag = this.curUseList[s].ex_new;
a.getComponent("musicSelectJS").musicURL = this.curUseList[s].musicFile;
a.getComponent("musicSelectJS").pointURL = this.curUseList[s].json_normal;
a.getComponent("musicSelectJS").musicNumber = window.Home.GetMusicNumber(this.curUseList[s].musicId);
a.getComponent("musicSelectJS").Home = this;
a.getComponent("musicSelectJS").musicStyle = this.curUseList[s].style;
a.getComponent("musicSelectJS").listenNum = this.curUseList[s].ex_listen;
a.getComponent("musicSelectJS").UpdateMusicInfo(!0);
a.setPosition(0, -120 - 222 * s);
this.musicArr[s] = d;
}
} else {
for (var c = 0; c < this.musicContent.childrenCount; c++) {
this.musicContent.children[c].active = !1;
}
if (3 == this.curSelectNum) {
this.favourList.active = !0;
this.recommendList.active = !1;
} else {
this.favourList.active = !1;
this.recommendList.active = !0;
}
this.SetSearchList(e);
}
} else if (this.curUseList.length > 0) for (var r = 0; r < 10; r++) {
(d = cc.instantiate(this.curPrefab)).setPosition(0, -120 - 222 * r);
if (this.curUseList[r]) {
d.getComponent("musicSelectJS").musicType = n;
d.getComponent("musicSelectJS").musicName = this.curUseList[r].musicName;
d.getComponent("musicSelectJS").singerName = this.curUseList[r].singerName;
d.getComponent("musicSelectJS").orderNumber = this.curUseList[r].orderNumber;
d.getComponent("musicSelectJS").unlockType = this.curUseList[r].unlockType;
d.getComponent("musicSelectJS").unlockNumber = Number(this.curUseList[r].unlockCost);
d.getComponent("musicSelectJS").musicID = this.curUseList[r].musicId;
d.getComponent("musicSelectJS").NewFlag = this.curUseList[r].ex_new;
d.getComponent("musicSelectJS").musicURL = this.curUseList[r].musicFile;
d.getComponent("musicSelectJS").pointURL = this.curUseList[r].json_normal;
d.getComponent("musicSelectJS").musicNumber = window.Home.GetMusicNumber(this.curUseList[r].musicId);
d.getComponent("musicSelectJS").Home = this;
d.getComponent("musicSelectJS").musicStyle = this.curUseList[r].style;
d.getComponent("musicSelectJS").listenNum = this.curUseList[r].ex_listen;
} else d.active = !1;
this.musicContent.addChild(d);
this.musicArr[r] = d;
} else {
for (var l = 0; l < 10; l++) {
var d;
(d = cc.instantiate(this.curPrefab)).setPosition(0, -120 - 222 * l);
d.active = !1;
}
if (3 == this.curSelectNum) {
this.favourList.active = !0;
this.recommendList.active = !1;
} else {
this.favourList.active = !1;
this.recommendList.active = !0;
}
this.SetSearchList(e);
}
this.firstNum = 0;
this.lastNum = 9;
}
},
SetSearchList: function(e) {
var t = null, i = [], o = [], n = new Date().getTime();
if (3 == e) {
t = this.favourContent;
for (var s = 0; s < window.Home.musicTable.length; s++) o.push(window.Home.musicTable[s]);
for (var a = 0; a < window.Home.CrownMusicTable.length; a++) o.push(window.Home.CrownMusicTable[a]);
o = window.Tools.disruptionArr(o);
for (var c = 0; c < o.length; c++) i.push(o[c]);
} else if (2 == e || 1 == e) {
t = this.recommendContent;
for (var r = !1, l = [], d = 0; d < window.Home.musicTable.length; d++) {
var h = window.Home.musicTable[d].musicId, u = window.Parent.getlocalStorage("isUnlock" + h);
if (1 == (u = "true" == u)) {
var w = window.Parent.getlocalStorage("HasClear" + h);
w = "true" == w;
1 == e && 1 == w ? o.push(window.Home.musicTable[d]) : 2 == e && 0 == w && o.push(window.Home.musicTable[d]);
} else l.push(window.Home.musicTable[d]);
}
0 == o.length && (r = !0);
for (var m = 0; m < l.length; m++) o.push(l[m]);
for (var g = 0; g < window.Home.CrownMusicTable.length; g++) o.push(window.Home.CrownMusicTable[g]);
if (0 == r && 2 == e) {
var p = o[0];
o.splice(0, 1);
(o = window.Tools.disruptionArr(o)).splice(0, 0, p);
} else o = window.Tools.disruptionArr(o);
for (var f = 0; f < o.length; f++) i.push(o[f]);
}
console.log("歌单处理时间 ", new Date().getTime() - n, "毫秒");
for (var S = 0; S < 3; S++) {
var N = i[S], v = null, C = (v = t.children[S] ? t.children[S] : cc.instantiate(this.SearchPrefab)).getComponent("SearchListJS");
v.setPosition(0, -120 - 222 * S);
C.musicName = N.musicName;
C.singerName = N.singerName;
C.orderNumber = N.orderNumber;
C.unlockType = N.unlockType;
C.unlockNumber = Number(N.unlockCost);
C.musicID = N.musicId;
C.NewFlag = N.ex_new;
C.musicURL = N.musicFile;
C.pointURL = N.json_normal;
C.musicStyle = N.style;
C.musicNumber = window.Home.GetMusicNumber(N.musicId);
C.listenNum = N.ex_listen;
C.exBag = N.ex_bag;
v.active = !0;
t.children[S] ? C.UpdateMusicInfo(!0) : t.addChild(v);
}
},
SetMusicListEvt: function() {
this.scrollDirect = 0;
this.musicScroll.on("scrolling", this.OnScrollingEvent, this);
this.musicScroll.on("scroll-began", this.OnScrollBeganEvent, this);
},
OnScrollBeganEvent: function(e) {
this.lastOffsetY = this.musicScroll.getComponent(cc.ScrollView).getScrollOffset().y;
},
OnScrollingEvent: function(e) {
var t = this.musicScroll.getComponent(cc.ScrollView).getScrollOffset().y, i = this.lastOffsetY > t;
this.scrollDirect = i ? 2 : 1;
this.lastOffsetY = t;
if (!(this.lastOffsetY < 0 && 0 == this.firstNum || this.lastOffsetY > this.musicContent.height && this.lastNum == this.curUseList.length - 1 || this.lastNum > this.curUseList.length - 1 || this.firstNum < 0)) if (this.lastOffsetY >= 222 * (this.firstNum + 1) && this.lastNum < this.curUseList.length - 1) {
if (null == this.curUseList[this.lastNum + 1] || void 0 == this.curUseList[this.lastNum + 1]) return;
var o = this.musicContent.children[0];
o.setSiblingIndex(9);
o.setPosition(cc.v2(o.position.x, o.position.y - 2220));
this.firstNum++;
this.lastNum++;
o.getComponent("musicSelectJS").musicName = this.curUseList[this.lastNum].musicName;
o.getComponent("musicSelectJS").orderNumber = this.curUseList[this.lastNum].orderNumber;
o.getComponent("musicSelectJS").unlockType = this.curUseList[this.lastNum].unlockType;
o.getComponent("musicSelectJS").unlockNumber = Number(this.curUseList[this.lastNum].unlockCost);
o.getComponent("musicSelectJS").musicID = this.curUseList[this.lastNum].musicId;
o.getComponent("musicSelectJS").NewFlag = this.curUseList[this.lastNum].ex_new;
o.getComponent("musicSelectJS").musicURL = this.curUseList[this.lastNum].musicFile;
o.getComponent("musicSelectJS").pointURL = this.curUseList[this.lastNum].json_normal;
o.getComponent("musicSelectJS").musicNumber = window.Home.GetMusicNumber(this.curUseList[this.lastNum].musicId);
o.getComponent("musicSelectJS").musicStyle = this.curUseList[this.lastNum].style;
o.getComponent("musicSelectJS").listenNum = this.curUseList[this.lastNum].ex_listen;
o.getComponent("musicSelectJS").UpdateMusicInfo(!0);
for (var n = 0; n < this.musicArr; n++) this.musicArr[n] = this.musicArr[n + 1];
this.musicArr[9] = o;
} else if (this.lastOffsetY <= 222 * this.firstNum) {
if (null == this.curUseList[this.firstNum - 1] || void 0 == this.curUseList[this.firstNum - 1]) return;
var s = this.musicContent.children[9];
s.setSiblingIndex(0);
s.setPosition(cc.v2(s.position.x, s.position.y + 2220));
this.firstNum--;
this.lastNum--;
s.getComponent("musicSelectJS").musicName = this.curUseList[this.firstNum].musicName;
s.getComponent("musicSelectJS").orderNumber = this.curUseList[this.firstNum].orderNumber;
s.getComponent("musicSelectJS").unlockType = this.curUseList[this.firstNum].unlockType;
s.getComponent("musicSelectJS").unlockNumber = Number(this.curUseList[this.firstNum].unlockCost);
s.getComponent("musicSelectJS").musicID = this.curUseList[this.firstNum].musicId;
s.getComponent("musicSelectJS").NewFlag = this.curUseList[this.firstNum].ex_new;
s.getComponent("musicSelectJS").musicURL = this.curUseList[this.firstNum].musicFile;
s.getComponent("musicSelectJS").pointURL = this.curUseList[this.firstNum].json_normal;
s.getComponent("musicSelectJS").musicNumber = window.Home.GetMusicNumber(this.curUseList[this.firstNum].musicId);
s.getComponent("musicSelectJS").musicStyle = this.curUseList[this.firstNum].style;
s.getComponent("musicSelectJS").listenNum = this.curUseList[this.firstNum].ex_listen;
s.getComponent("musicSelectJS").UpdateMusicInfo(!0);
for (var a = this.musicArr.length - 1; a > 0; a--) this.musicArr[a] = this.musicArr[a - 1];
this.musicArr[0] = s;
}
},
GuideMyMusic: function() {
6 == Number(window.Parent.getlocalStorage("GuideNum")) && window.Home.AutoGuide();
},
OnClickSelectBTN: function(e, t) {
t = Number(t);
window.Parent.ButtonSounds();
this.ShowSelectList(t);
},
OnClickBack: function() {
window.Parent.ButtonSounds();
this.node.active = !1;
window.isShowMusicList = 0;
5 == window.platform && window.Parent.showPushicon(256, 256, 200, 1500);
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
NativeController: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e07e8j/9npIj4VnhbTjRUs+", "NativeController");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../tools/SdkTools"), n = e("./NativeOppo"), s = e("../../ui/CocosUI"), a = e("./NativeTest"), c = e("./NativeVivo"), r = e("./NativeWX"), l = e("./NativeHW"), d = function() {
function e() {
this.ID_NativeID = "";
this.SW_NativeMainSwitch = !1;
this.NUM_NativeIntersReportFrequency = 1;
this.nativeUpdateTime = 30;
this.onNativeIconShow = !1;
this.onNativeImageShow = !1;
this.oldNativeIconSize = null;
this.nativeIconUpdate = null;
this.nativeImageUpdate = null;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createNativeAd = function() {
if (this.SW_NativeMainSwitch) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
s.default.getInstance().loadNativeInstersRes();
s.default.getInstance().loadNativeBannerRes();
s.default.getInstance().loadNativeIconRes();
n.default.getInstance().createNativeAd(this.ID_NativeID);
break;

case o.Game_Platform.GP_Vivo:
s.default.getInstance().loadNativeInstersRes();
s.default.getInstance().loadNativeBannerRes();
s.default.getInstance().loadNativeIconRes();
c.default.getInstance().createNativeAd(this.ID_NativeID);
break;

case o.Game_Platform.GP_WX:
r.default.getInstance().createNativeAd(this.ID_NativeID);
return;

case o.Game_Platform.GP_HW:
s.default.getInstance().loadNativeInstersRes();
s.default.getInstance().loadNativeBannerRes();
l.default.getInstance().createNativeAd(this.ID_NativeID);
}
this.updateNativeAd();
} else console.log("ASCSDK", "原生广告总开关没有开启");
};
e.prototype.getIconNativeFlag = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
return n.default.getInstance().getIconNativeFlag();

case o.Game_Platform.GP_Vivo:
return c.default.getInstance().getIconNativeFlag();

case o.Game_Platform.GP_Test:
return !0;

case o.Game_Platform.GP_Android:
return jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "SendMessageGetAdFlag", "(Ljava/lang/String;)Z", "getIconNativeFlag");

case o.Game_Platform.GP_WX:
return r.default.getInstance().getIconNativeFlag();

default:
return !1;
}
};
e.prototype.getImageNativeFlag = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
return n.default.getInstance().getImageNativeFlag();

case o.Game_Platform.GP_Vivo:
return c.default.getInstance().getImageNativeFlag();

case o.Game_Platform.GP_HW:
return l.default.getInstance().getImageNativeFlag();

case o.Game_Platform.GP_Test:
return !0;

default:
return !1;
}
};
e.prototype.showNativeIcon = function(e, t, i, s) {
var l = this;
if (o.default.getPlatform() != o.Game_Platform.GP_Test) if (o.default.getPlatform() != o.Game_Platform.GP_Android) if (this.SW_NativeMainSwitch) if (this.getIconNativeFlag()) if (this.onNativeIconShow) console.log("ASCSDK", "原生ICON正在展示中,请勿多次showNativeIcon return"); else {
this.onNativeIconShow = !0;
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
n.default.getInstance().showNativeIcon(e, t, i, s);
break;

case o.Game_Platform.GP_Vivo:
c.default.getInstance().showNativeIcon(e, t, i, s);
break;

case o.Game_Platform.GP_WX:
r.default.getInstance().showNativeIcon(i, s);
return;
}
this.oldNativeIconSize = {
width: e,
height: t,
x: i,
y: s
};
this.nativeIconUpdate = setTimeout(function() {
console.log("ASCSDK", "原生ICON刷新======================");
l.hideNativeIcon();
l.showNativeIconAsOld();
}, 1e3 * this.nativeUpdateTime);
} else console.log("ASCSDK", "原生广告不存在ICON return"); else console.log("ASCSDK", "原生广告总开关没有开启"); else {
var d = cc.winSize, h = e / d.width, u = (i - e / 2) / d.width, w = (d.height - (s + e / 2)) / d.height;
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"showNativeIcon","calling_method_params":{"icon_size":' + h + ',"viewX":' + u + ',"viewY":' + w + "}}");
} else a.default.getInstance().showNativeIcon(e, t, i, s);
};
e.prototype.hideNativeIcon = function() {
if (o.default.getPlatform() != o.Game_Platform.GP_Test) {
this.nativeIconUpdate && clearTimeout(this.nativeIconUpdate);
this.onNativeIconShow = !1;
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
case o.Game_Platform.GP_Vivo:
s.default.getInstance().hideNativeIconUI();
break;

case o.Game_Platform.GP_Android:
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"hideNativeIcon",\'calling_method_params\':0}');
return;

case o.Game_Platform.GP_WX:
r.default.getInstance().hideNativeIcon();
return;
}
} else a.default.getInstance().hideNativeIcon();
};
e.prototype.showNativeIconAsOld = function() {
this.showNativeIcon(this.oldNativeIconSize.width, this.oldNativeIconSize.height, this.oldNativeIconSize.x, this.oldNativeIconSize.y);
};
e.prototype.showNativeImage = function(e, t, i, s) {
var r = this;
if (o.default.getPlatform() != o.Game_Platform.GP_Test) if (this.SW_NativeMainSwitch) if (this.getImageNativeFlag()) if (this.onNativeImageShow) console.log("ASCSDK", "原生大图正在展示中,请勿多次showNativeImage return"); else {
this.onNativeImageShow = !0;
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
n.default.getInstance().showNativeImage(e, t, i, s);
break;

case o.Game_Platform.GP_Vivo:
c.default.getInstance().showNativeImage(e, t, i, s);
}
this.nativeImageUpdate = setTimeout(function() {
console.log("ASCSDK", "原生大图刷新======================");
r.hideNativeImage();
r.showNativeImage(e, t, i, s);
}, 1e3 * this.nativeUpdateTime);
} else console.log("ASCSDK", "原生广告不存在大图 return"); else console.log("ASCSDK", "原生广告总开关没有开启"); else a.default.getInstance().showNativeImage(e, t, i, s);
};
e.prototype.hideNativeImage = function() {
if (o.default.getPlatform() != o.Game_Platform.GP_Test) {
this.nativeImageUpdate && clearTimeout(this.nativeImageUpdate);
this.onNativeImageShow = !1;
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
case o.Game_Platform.GP_Vivo:
s.default.getInstance().hideNativeImageUI();
}
} else a.default.getInstance().hideNativeImage();
};
e.prototype.showNativeInters = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
console.log("ASCSDK", "OPPO 暂不支持插屏");
break;

case o.Game_Platform.GP_Vivo:
c.default.getInstance().showNativeInters(this.NUM_NativeIntersReportFrequency);
break;

case o.Game_Platform.GP_HW:
l.default.getInstance().showNativeInters(this.NUM_NativeIntersReportFrequency);
}
};
e.prototype.updateNativeAd = function() {
setInterval(function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
n.default.getInstance().nativeUpdate();
break;

case o.Game_Platform.GP_Vivo:
c.default.getInstance().nativeUpdate();
break;

case o.Game_Platform.GP_HW:
l.default.getInstance().nativeUpdate();
}
}, 1e3 * this.nativeUpdateTime);
};
e.prototype.showNativeBanner = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
n.default.getInstance().showNativeBanner();
break;

case o.Game_Platform.GP_Vivo:
c.default.getInstance().showNativeBanner();
break;

case o.Game_Platform.GP_HW:
l.default.getInstance().showNativeBanner();
}
};
e.prototype.hideNativeBanner = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
n.default.getInstance().hideNativeBaner();
break;

case o.Game_Platform.GP_Vivo:
c.default.getInstance().hideNativeBaner();
break;

case o.Game_Platform.GP_HW:
l.default.getInstance().hideNativeBaner();
}
};
e.prototype.getNativeInfo = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
return n.default.getInstance().getNativeInfo();

case o.Game_Platform.GP_Vivo:
return c.default.getInstance().getNativeInfo();

default:
return {
adId: "88888888",
title: "测试标题",
desc: "测试详情",
Native_icon: "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/TestRes/fakeNativeIcon.png",
Native_BigImage: "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/TestRes/fakeNativeImage.png",
NativeAdTip: "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeIconRes/ICONAd.png",
NativeClose: "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeBannerRes/nativeBannerClose.png"
};
}
};
e.prototype.reportNativeShow = function(e) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
n.default.getInstance().reportNativeShow(e);
break;

case o.Game_Platform.GP_Vivo:
c.default.getInstance().reportNativeShow(e);
break;

case o.Game_Platform.GP_HW:
l.default.getInstance().reportNativeShow(e);
}
};
e.prototype.reportNativeClick = function(e) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
n.default.getInstance().reportNativeClick(e);
break;

case o.Game_Platform.GP_Vivo:
c.default.getInstance().reportNativeClick(e);
break;

case o.Game_Platform.GP_HW:
l.default.getInstance().reportNativeClick(e);
}
};
e.prototype.showNativeAd = function(e, t, i, n) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Android:
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"showNativeAd","calling_method_params":{"width":' + e + ',"height":' + t + ',"viewX":' + i + ',"viewY":' + n + "}}");
}
};
return e;
}();
i.default = d;
cc._RF.pop();
}, {
"../../tools/SdkTools": "SdkTools",
"../../ui/CocosUI": "CocosUI",
"./NativeHW": "NativeHW",
"./NativeOppo": "NativeOppo",
"./NativeTest": "NativeTest",
"./NativeVivo": "NativeVivo",
"./NativeWX": "NativeWX"
} ],
NativeHW: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3a620+/SQhP1a7voiKkvZd1", "NativeHW");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../ui/CocosUI"), n = function() {
function e() {
this.nativeAd = null;
this.nativeInfo = null;
this.isLoadIconNative = !1;
this.isLoadImageNative = !1;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.showNativeBanner = function() {
o.default.getInstance().showNativeBannerUI(this.nativeInfo);
};
e.prototype.updateNativeBanner = function() {
o.default.getInstance().hideNativeBannerUI();
o.default.getInstance().showNativeBannerUI(this.nativeInfo);
};
e.prototype.hideNativeBaner = function() {
o.default.getInstance().hideNativeBannerUI();
};
e.prototype.createNativeAd = function(e) {
console.log("ASCSDK", "HW 加载原生广告", e);
this.nativeAd = hbs.createNativeAd({
adUnitId: e
});
this.nativeInfo = {
adId: null,
title: "特别惊喜",
desc: "",
Native_icon: null,
Native_BigImage: null
};
var t = this;
this.nativeAd.onLoad(function(e) {
console.log("ASCSDK", "HW 原生广告加载成功", JSON.stringify(e.adList[0]));
var i = e.adList[0];
t.nativeInfo.adId = String(i.adId);
void 0 != i.title && "" != i.title && (t.nativeInfo.title = String(i.title));
void 0 != i.desc && "" != i.desc && (t.nativeInfo.desc = String(i.desc));
if (i && void 0 != i.imgUrlList && i.imgUrlList.length > 0) cc.loader.load(String(i.imgUrlList[0]), function(e, i) {
console.log("ASCSDK", "HW 原生大图加载成功");
t.nativeInfo.Native_BigImage = i;
t.isLoadImageNative = !0;
}); else {
t.nativeInfo.Native_BigImage = null;
t.isLoadImageNative = !1;
}
});
this.nativeAd.onError(function(e) {
console.log("ASCSDK", "HW 原生广告加载失败：" + JSON.stringify(e));
});
this.nativeAd.load();
};
e.prototype.nativeUpdate = function() {
this.nativeAd && this.nativeAd.load();
};
e.prototype.getIconNativeFlag = function() {
return this.isLoadIconNative;
};
e.prototype.getImageNativeFlag = function() {
return this.isLoadImageNative;
};
e.prototype.showNativeInters = function(e) {
var t = this;
if (e <= 1) t.reportNativeShow(t.nativeInfo.adId); else for (var i = 0; i < e; i++) setTimeout(function() {
t.reportNativeShow(t.nativeInfo.adId);
}, 5e3 * i);
o.default.getInstance().showNativeIntersUI(this.nativeInfo);
};
e.prototype.showNativeIcon = function(e, t, i, n) {
this.reportNativeShow(this.nativeInfo.adId);
o.default.getInstance().showNativeIconUI(e, t, i, n, this.nativeInfo);
};
e.prototype.showNativeImage = function(e, t, i, n) {
this.reportNativeShow(this.nativeInfo.adId);
o.default.getInstance().showNativeImageUI(e, t, i, n, this.nativeInfo);
};
e.prototype.reportNativeShow = function(e) {
console.log("ASCSDK", "HW 原生广告上报展示", "广告ID为:" + e);
this.nativeAd.reportAdShow({
adId: e
});
};
e.prototype.reportNativeClick = function(e) {
console.log("ASCSDK", "HW 原生广告上报点击", "广告ID为:" + e);
this.nativeAd.reportAdClick({
adId: e
});
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"../../ui/CocosUI": "CocosUI"
} ],
NativeOppo: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "56d9cjfh4NFdp+jpsmmuo56", "NativeOppo");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../ui/CocosUI"), n = function() {
function e() {
this.nativeAd = null;
this.nativeInfo = null;
this.nativeContent = null;
this.isLoadIconNative = !1;
this.isLoadImageNative = !1;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.showNativeBanner = function() {
o.default.getInstance().showNativeBannerUI(this.nativeInfo);
};
e.prototype.updateNativeBanner = function() {
o.default.getInstance().hideNativeBannerUI();
o.default.getInstance().showNativeBannerUI(this.nativeInfo);
};
e.prototype.hideNativeBaner = function() {
o.default.getInstance().hideNativeBannerUI();
};
e.prototype.createNativeAd = function(e) {
console.log("ASCSDK", "OPPO 加载原生广告", e);
this.nativeAd = qg.createNativeAd({
posId: e
});
this.nativeInfo = {
adId: null,
title: "特别惊喜",
desc: "点我一下可不可以啊",
clickBtnTxt: null,
Native_icon: null,
Native_BigImage: null
};
this.nativeContent = {
adId: null,
title: null,
desc: null,
Native_icon: null,
Native_BigImage: null,
NativeAdTip: "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeIconRes/ICONAd.png",
NativeClose: "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeBannerRes/nativeBannerClose.png"
};
var t = this;
this.nativeAd.onLoad(function(e) {
console.log("ASCSDK", "OPPO 原生广告加载成功", JSON.stringify(e.adList));
for (var i = 0, o = 0; o < e.adList.length; o++) {
if ("" != e.adList[o].icon && e.adList[o].imgUrlList.length > 0) {
console.log("ASCSDK", "OPPO 同时存在原生ICON和大图");
i = o;
break;
}
if (o == e.adList.length - 1 && ("" != e.adList[o].icon || e.adList[o].imgUrlList.length > 0)) {
console.log("ASCSDK", "OPPO 只存在原生ICON或大图");
i = o;
break;
}
}
t.nativeInfo.adId = String(e.adList[i].adId);
t.nativeInfo.title = String(e.adList[i].title);
t.nativeInfo.desc = String(e.adList[i].desc);
t.nativeInfo.clickBtnTxt = String(e.adList[i].clickBtnTxt);
t.nativeContent.adId = String(e.adList[i].adId);
t.nativeContent.title = String(e.adList[i].title);
t.nativeContent.desc = String(e.adList[i].desc);
if (e.adList && "" != e.adList[i].icon) {
cc.loader.load({
url: String(e.adList[i].icon),
type: "png"
}, function(e, i) {
console.log("ASCSDK", "OPPO 原生ICON加载成功");
t.nativeInfo.Native_icon = i;
t.isLoadIconNative = !0;
});
t.nativeContent.Native_icon = String(e.adList[i].icon);
} else {
t.nativeInfo.Native_icon = null;
t.isLoadIconNative = !1;
}
if (e.adList && e.adList[i].imgUrlList.length > 0) {
cc.loader.load({
url: String(e.adList[i].imgUrlList[0]),
type: "png"
}, function(e, i) {
console.log("ASCSDK", "OPPO 原生大图加载成功");
t.nativeInfo.Native_BigImage = i;
t.isLoadImageNative = !0;
});
t.nativeContent.Native_BigImage = String(e.adList[i].imgUrlList[0]);
} else {
t.nativeInfo.Native_BigImage = null;
t.isLoadImageNative = !1;
}
});
this.nativeAd.onError(function(e) {
console.log("ASCSDK", "OPPO 原生广告加载失败：" + JSON.stringify(e));
});
this.nativeAd.load();
};
e.prototype.nativeUpdate = function() {
this.nativeAd && this.nativeAd.load();
};
e.prototype.getIconNativeFlag = function() {
return this.isLoadIconNative;
};
e.prototype.getImageNativeFlag = function() {
return this.isLoadImageNative;
};
e.prototype.showNativeInters = function(e) {
var t = this;
if (e <= 1) t.reportNativeShow(t.nativeInfo.adId); else for (var i = 0; i < e; i++) setTimeout(function() {
t.reportNativeShow(t.nativeInfo.adId);
}, 5e3 * i);
o.default.getInstance().showNativeIntersUI(this.nativeInfo);
};
e.prototype.showNativeIcon = function(e, t, i, n) {
this.reportNativeShow(this.nativeInfo.adId);
o.default.getInstance().showNativeIconUI(e, t, i, n, this.nativeInfo);
};
e.prototype.showNativeImage = function(e, t, i, n) {
this.reportNativeShow(this.nativeInfo.adId);
o.default.getInstance().showNativeImageUI(e, t, i, n, this.nativeInfo);
};
e.prototype.getNativeInfo = function() {
return this.nativeContent;
};
e.prototype.reportNativeShow = function(e) {
console.log("ASCSDK", "OPPO 原生广告上报展示", "广告ID为:" + e);
this.nativeAd.reportAdShow({
adId: e
});
};
e.prototype.reportNativeClick = function(e) {
console.log("ASCSDK", "OPPO 原生广告上报点击", "广告ID为:" + e);
this.nativeAd.reportAdClick({
adId: e
});
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"../../ui/CocosUI": "CocosUI"
} ],
NativeTest: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d73f8/axyBFMoBe7b2iETFZ", "NativeTest");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../ui/CocosUI"), n = function() {
function e() {
this.nativeIcon = null;
this.nativeImage = null;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createNativeIcon = function() {};
e.prototype.showNativeIcon = function(e, t, i, n) {
var s = this;
if (this.nativeIcon) console.log("ASCSDK", "Test 已存在原生ICON return"); else {
console.log("ASCSDK", "Test showNativeIcon==================");
cc.loader.load("https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateIconRes/iconBg.png", function(a, c) {
var r = cc.director.getScene();
s.nativeIcon = new cc.Node("nativeIcon");
s.nativeIcon.addComponent(cc.Sprite);
s.nativeIcon.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(c);
setTimeout(function() {
s.nativeIcon.width = e;
s.nativeIcon.height = t;
s.nativeIcon.x = i;
s.nativeIcon.y = n;
}, 1);
s.nativeIcon.zIndex = 29999;
r.addChild(s.nativeIcon);
"" != o.default.getInstance().cocosGroup && (s.nativeIcon.group = o.default.getInstance().cocosGroup);
});
}
};
e.prototype.hideNativeIcon = function() {
if (this.nativeIcon) {
console.log("ASCSDK", "Test hideNativeICON==============");
this.nativeIcon.removeFromParent();
this.nativeIcon = null;
} else console.log("ASCSDK", "Test 不存在原生ICON");
};
e.prototype.showNativeImage = function(e, t, i, n) {
var s = this;
if (this.nativeImage) console.log("ASCSDK", "Test 已存在原生大图 return"); else {
console.log("ASCSDK", "Test showNativeImage==================");
cc.loader.load("https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/TestRes/fakeNativeImage.png", function(a, c) {
var r = cc.director.getScene();
s.nativeImage = new cc.Node("nativeImage");
s.nativeImage.addComponent(cc.Sprite);
s.nativeImage.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(c);
setTimeout(function() {
s.nativeImage.width = e;
s.nativeImage.height = t;
s.nativeImage.x = i;
s.nativeImage.y = n;
}, 1);
s.nativeImage.zIndex = 29999;
r.addChild(s.nativeImage);
"" != o.default.getInstance().cocosGroup && (s.nativeImage.group = o.default.getInstance().cocosGroup);
});
}
};
e.prototype.hideNativeImage = function() {
if (this.nativeImage) {
console.log("ASCSDK", "Test hideNativeImage==============");
this.nativeImage.removeFromParent();
this.nativeImage = null;
} else console.log("ASCSDK", "Test 不存在原生大图 return");
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"../../ui/CocosUI": "CocosUI"
} ],
NativeVivo: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d7c00ghivxErpzf+cVELxk3", "NativeVivo");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../ui/CocosUI"), n = function() {
function e() {
this.nativeAd = null;
this.nativeInfo = null;
this.nativeContent = null;
this.isLoadIconNative = !1;
this.isLoadImageNative = !1;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createNativeAd = function(e) {
console.log("ASCSDK", "VIVO 加载原生广告", e);
this.nativeAd = qg.createNativeAd({
posId: e
});
this.nativeInfo = {
adId: null,
title: "特别惊喜",
desc: "点我一下可不可以啊",
clickBtnTxt: null,
Native_icon: null,
Native_BigImage: null
};
this.nativeContent = {
adId: null,
title: null,
desc: null,
Native_icon: null,
Native_BigImage: null,
NativeAdTip: "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeIconRes/ICONAd.png",
NativeClose: "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeBannerRes/nativeBannerClose.png"
};
var t = this;
this.nativeAd.onLoad(function(e) {
console.log("ASCSDK", "VIVO 原生广告加载成功", JSON.stringify(e.adList));
var i = 0;
if (void 0 != typeof e.adList && 0 != e.adList.length) {
i = e.adList.length - 1;
console.log("ASCSDK", "第" + i + "个原生广告:" + JSON.stringify(e.adList[i]));
"" != e.adList[i].icon && 0 != e.adList[i].imgUrlList.length ? console.log("ASCSDK", "VIVO 同时存在原生ICON和大图") : console.log("ASCSDK", "VIVO 只存在原生ICON或大图");
t.nativeInfo.adId = String(e.adList[i].adId);
t.nativeInfo.title = String(e.adList[i].title);
t.nativeInfo.desc = String(e.adList[i].desc);
t.nativeInfo.clickBtnTxt = String(e.adList[i].clickBtnTxt);
t.nativeContent.adId = String(e.adList[i].adId);
t.nativeContent.title = String(e.adList[i].title);
t.nativeContent.desc = String(e.adList[i].desc);
if ("" != e.adList[i].icon) {
cc.loader.load(String(e.adList[i].icon), function(e, i) {
console.log("ASCSDK", "VIVO 原生ICON加载成功");
t.nativeInfo.Native_icon = i;
t.isLoadIconNative = !0;
});
t.nativeContent.Native_icon = String(e.adList[i].icon);
} else {
t.nativeInfo.Native_icon = null;
t.isLoadIconNative = !1;
}
if (0 != e.adList[i].imgUrlList.length) {
cc.loader.load(String(e.adList[i].imgUrlList[0]), function(e, i) {
console.log("ASCSDK", "VIVO 原生大图加载成功");
t.nativeInfo.Native_BigImage = i;
t.isLoadImageNative = !0;
});
t.nativeContent.Native_BigImage = String(e.adList[i].imgUrlList[0]);
} else {
t.nativeInfo.Native_BigImage = null;
t.isLoadImageNative = !1;
}
} else console.log("ASCSDK", "VIVO 原生广告列表为空 return");
});
this.nativeAd.onError(function(e) {
console.log("ASCSDK", "VIVO 原生广告加载失败：" + JSON.stringify(e));
});
this.nativeAd.load();
};
e.prototype.showNativeBanner = function() {
o.default.getInstance().showNativeBannerUI(this.nativeInfo);
};
e.prototype.updateNativeBanner = function() {
o.default.getInstance().hideNativeBannerUI();
o.default.getInstance().showNativeBannerUI(this.nativeInfo);
};
e.prototype.hideNativeBaner = function() {
o.default.getInstance().hideNativeBannerUI();
};
e.prototype.nativeUpdate = function() {
this.nativeAd && this.nativeAd.load();
};
e.prototype.getIconNativeFlag = function() {
return this.isLoadIconNative;
};
e.prototype.getImageNativeFlag = function() {
return this.isLoadImageNative;
};
e.prototype.showNativeInters = function(e) {
var t = this;
if (e <= 1) t.reportNativeShow(t.nativeInfo.adId); else for (var i = 0; i < e; i++) setTimeout(function() {
t.reportNativeShow(t.nativeInfo.adId);
}, 5e3 * i);
o.default.getInstance().showNativeIntersUI(this.nativeInfo);
};
e.prototype.showNativeIcon = function(e, t, i, n) {
this.reportNativeShow(this.nativeInfo.adId);
o.default.getInstance().showNativeIconUI(e, t, i, n, this.nativeInfo);
};
e.prototype.showNativeImage = function(e, t, i, n) {
this.reportNativeShow(this.nativeInfo.adId);
o.default.getInstance().showNativeImageUI(e, t, i, n, this.nativeInfo);
};
e.prototype.getNativeInfo = function() {
return this.nativeContent;
};
e.prototype.reportNativeShow = function(e) {
console.log("ASCSDK", "VIVO 原生广告上报展示", "广告ID为:" + e);
this.nativeAd.reportAdShow({
adId: e
});
};
e.prototype.reportNativeClick = function(e) {
console.log("ASCSDK", "VIVO 原生广告上报点击", "广告ID为:" + e);
this.nativeAd.reportAdClick({
adId: e
});
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"../../ui/CocosUI": "CocosUI"
} ],
NativeWX: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d06d2aKB0ZIAbWeIWgQ4zVl", "NativeWX");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../tools/SdkTools"), n = function() {
function e() {
this.NativeID = "";
this.nativeAd = null;
this.isLoadIconNative = !1;
this.iconCloseUpdate = null;
this.iconX = 0;
this.iconY = 0;
this.updateICON = null;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createNativeAd = function(e) {
var t = this;
if (o.default.getInstance().isversionNewThanEngineVersion("2.11.1")) {
this.NativeID = e;
console.log("ASCSDK", "WX 原生广告初始化", e);
this.nativeAd = wx.createCustomAd({
adUnitId: e,
adIntervals: 30,
style: {
left: this.iconX,
top: this.iconY,
fixed: !0
}
});
this.nativeAd.onLoad(function() {
console.log("ASCSDK", "WX 原生ICON加载成功");
t.isLoadIconNative = !0;
});
this.nativeAd.onError(function(e) {
console.log("ASCSDK", "WX 原生ICON加载失败:" + JSON.stringify(e));
t.isLoadIconNative = !1;
});
this.nativeAd.onClose(function() {
console.log("ASCSDK", "WX 手动关闭原生ICON 30s后再次刷新");
t.iconCloseUpdate = setTimeout(function() {
t.nativeAd.createNativeAd(e);
setTimeout(function() {
t.nativeAd.show();
}, 500);
}, 3e4);
});
} else console.log("ASCSDK", "WX 平台版本过低,不能创建原生广告");
};
e.prototype.getIconNativeFlag = function() {
return this.isLoadIconNative;
};
e.prototype.showNativeIcon = function(e, t) {
var i = this, o = this, n = Number(wx.getSystemInfoSync().windowWidth), s = Number(wx.getSystemInfoSync().windowHeight), a = t;
t = cc.winSize.height - t;
this.iconX = e * (n / cc.winSize.width);
this.iconY = t * (s / cc.winSize.height);
this.createNativeAd(this.NativeID);
setTimeout(function() {
console.log("ASCSDK", "WX showNativeIcon===============================");
i.nativeAd.show();
}, 500);
this.updateICON = setInterval(function() {
console.log("ASCSDK", "WX 刷新原生ICON广告================");
o.nativeAd.destroy();
o.showNativeIcon(e, a);
}, 3e4);
};
e.prototype.hideNativeIcon = function() {
if (this.iconCloseUpdate) {
clearTimeout(this.iconCloseUpdate);
this.iconCloseUpdate = null;
}
if (this.updateICON) {
clearInterval(this.updateICON);
this.updateICON = null;
}
if (this.nativeAd) {
console.log("ASCSDK", "WX hideNativeIcon===============================');");
this.nativeAd.destroy();
} else console.log("ASCSDK", "WX 不存在原生广告实例");
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"../../tools/SdkTools": "SdkTools"
} ],
NavigateController: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "acf376b52VOho2Gm2A0BDtG", "NavigateController");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../tools/SdkTools"), n = e("../ui/CocosUI"), s = e("./NavigateTest"), a = e("../ads/bannerAd/BannerController"), c = e("./NavigateWX"), r = function() {
function e() {
this.SW_BoxSwitch = !1;
this.gameBannerAd = null;
this.isLoadNavigateBoxBanner = !1;
this.gamePortalAd = null;
this.isLoadNavigateBoxPortal = !1;
this.hasShowBanner = !1;
this.SW_NavigateIconSwitch = !1;
this.SW_NavigateGroupSwitch = !1;
this.SW_NavigateSettleSwitch = !1;
this.navigateList = [];
this.isNavigateIconShow = !1;
this.isNavigateGroupShow = !1;
this.isNavigateSettleShow = !1;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createNavigateIcon = function() {
this.SW_NavigateIconSwitch ? n.default.getInstance().loadNavigateIconRes() : console.log("ASCSDK", "互推ICON开关未开启");
};
e.prototype.getNavigateIconFlag = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Test:
case o.Game_Platform.GP_Android:
case o.Game_Platform.GP_IOS:
return !0;

case o.Game_Platform.GP_Oppo:
return n.default.getInstance().isLoadNavigateIcon && !this.isNavigateIconShow && n.default.getInstance().isLoadNavigateList;

case o.Game_Platform.GP_WX:
return n.default.getInstance().isLoadNavigateIcon && n.default.getInstance().isLoadNavigateList;

default:
return !1;
}
};
e.prototype.showNavigateIcon = function(e, t, i, a) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Test:
s.default.getInstance().showNavigateIcon(e, t, i, a);
break;

case o.Game_Platform.GP_Oppo:
if (!this.SW_NavigateIconSwitch) {
console.log("ASCSDK", "互推ICON开关未开启");
return;
}
this.isNavigateIconShow = !0;
n.default.getInstance().showNavigateIcon(e, t, i, a);
break;

case o.Game_Platform.GP_Android:
var r = e / (h = cc.winSize).width, l = (i - e / 2) / h.width, d = (h.height - (a + e / 2)) / h.height;
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"showNavigateIcon","calling_method_params":{"icon_size":' + r + ',"icon_x":' + l + ',"icon_y":' + d + "}}");
break;

case o.Game_Platform.GP_IOS:
var h;
r = e / (h = cc.winSize).width, l = (i - e / 2) / h.width, d = (h.height - (a + e / 2)) / h.height;
jsb.reflection.callStaticMethod("DJADManagerVC", "showNavigateIcon:withX:withY:", r.toString(), l.toString(), d.toString());
break;

case o.Game_Platform.GP_WX:
c.default.getInstance().showNavigateIcon(e, t, i, a);
}
};
e.prototype.hideNavigateIcon = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Test:
s.default.getInstance().hideNavigateIcon();
return;

case o.Game_Platform.GP_Oppo:
this.isNavigateIconShow = !1;
n.default.getInstance().hideNavigateIcon();
return;

case o.Game_Platform.GP_Android:
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"hideNavigateIcon",\'calling_method_params\':0}');
return;

case o.Game_Platform.GP_IOS:
jsb.reflection.callStaticMethod("DJADManagerVC", "hideNavigateIcon");
return;

case o.Game_Platform.GP_WX:
c.default.getInstance().hideNavigateIcon();
return;
}
};
e.prototype.createNavigateGroup = function() {
this.SW_NavigateGroupSwitch ? n.default.getInstance().loadNavigateGroup() : console.log("ASCSDK", "互推列表开关未开启");
};
e.prototype.getNavigateGroupFlag = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Test:
case o.Game_Platform.GP_Android:
case o.Game_Platform.GP_IOS:
return !0;

case o.Game_Platform.GP_Oppo:
return n.default.getInstance().isLoadNavigateGroup && !this.isNavigateGroupShow && n.default.getInstance().isLoadNavigateList;

default:
return !1;
}
};
e.prototype.showNavigateGroup = function(e, t) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Test:
s.default.getInstance().showNavigateGroup(e, t);
return;

case o.Game_Platform.GP_Android:
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"showNavigateGroup","calling_method_params":{"type":' + e + ',"slide":' + t + "}}");
return;

case o.Game_Platform.GP_IOS:
jsb.reflection.callStaticMethod("DJADManagerVC", "showNavigateGroup:withSide:", e, t);
return;

case o.Game_Platform.GP_Oppo:
if (!this.SW_NavigateGroupSwitch) {
console.log("ASCSDK", "互推列表开关未开启");
return;
}
this.isNavigateGroupShow = !0;
n.default.getInstance().showNavigateGroup(e, t);
return;

default:
return;
}
};
e.prototype.hideNavigateGroup = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Test:
s.default.getInstance().hideNavigateGroup();
return;

case o.Game_Platform.GP_Android:
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"hideNavigateGroup",\'calling_method_params\':0}');
return;

case o.Game_Platform.GP_IOS:
jsb.reflection.callStaticMethod("DJADManagerVC", "hideNavigateGroup");
return;

case o.Game_Platform.GP_Oppo:
this.isNavigateGroupShow = !1;
n.default.getInstance().hideNavigateGroup();
return;

default:
return;
}
};
e.prototype.createNavigateSettle = function() {
this.SW_NavigateSettleSwitch ? n.default.getInstance().loadNavigateSettleRes() : console.log("ASCSDK", "结算互推开关未开启");
};
e.prototype.getNavigateSettleFlag = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Test:
case o.Game_Platform.GP_Android:
case o.Game_Platform.GP_IOS:
return !0;

case o.Game_Platform.GP_Oppo:
return n.default.getInstance().isLoadNavigateSettle && !this.isNavigateSettleShow && n.default.getInstance().isLoadNavigateList;

default:
return !1;
}
};
e.prototype.showNavigateSettle = function(e, t, i) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Test:
this.isNavigateSettleShow = !0;
s.default.getInstance().showNavigateSettle(e, t, i);
return;

case o.Game_Platform.GP_Oppo:
if (!this.SW_NavigateSettleSwitch) {
console.log("ASCSDK", "结算互推开关未开启");
return;
}
this.isNavigateSettleShow = !0;
n.default.getInstance().showNavigateSettle(e, t, i);
return;

case o.Game_Platform.GP_Android:
var a = cc.winSize, c = t / a.width, r = (a.height - i) / a.height;
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"showNavigateSettle","calling_method_params":{"type":' + e + ',"viewX":' + c + ',"viewY":' + r + "}}");
return;

case o.Game_Platform.GP_IOS:
var l = cc.winSize, d = t / l.width, h = (l.height - i) / l.height;
jsb.reflection.callStaticMethod("DJADManagerVC", "showNavigateSettle:withX:withY:", e.toString(), d.toString(), h.toString());
return;

default:
return;
}
};
e.prototype.hideNavigateSettle = function() {
this.isNavigateSettleShow = !1;
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Test:
s.default.getInstance().hideNavigateSettle();
return;

case o.Game_Platform.GP_Android:
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"hideNavigateSettle",\'calling_method_params\':0}');
return;

case o.Game_Platform.GP_IOS:
jsb.reflection.callStaticMethod("DJADManagerVC", "hideNavigateSettle");
return;

case o.Game_Platform.GP_Oppo:
n.default.getInstance().hideNavigateSettle();
return;

default:
return;
}
};
e.prototype.loadNavigateList = function() {
this.navigateList ? n.default.getInstance().loadNavigateList() : console.log("ASCSDK", "互推list加载出错");
};
e.prototype.createNavigateBoxBanner = function(e) {
if (this.SW_BoxSwitch) if (qg.getSystemInfoSync().platformVersionCode < 1076) console.log("ASCSDK", "OPPO 版本较低,不支持互推盒子广告"); else {
console.log("ASCSDK", "OPPO 互推盒子横幅广告初始化", e);
this.gameBannerAd = qg.createGameBannerAd({
adUnitId: e
});
this.isLoadNavigateBoxBanner = !0;
var t = this;
this.gameBannerAd.onError(function(e) {
t.isLoadNavigateBoxBanner = !1;
console.log("ASCSDK", "OPPO 互推盒子横幅广告出错:", JSON.stringify(e));
});
} else console.log("ASCSDK", "OPPO 互推盒子广告开关未开启");
};
e.prototype.getNavigateBoxBannerFlag = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Test:
return !0;

case o.Game_Platform.GP_Oppo:
return this.isLoadNavigateBoxBanner;

case o.Game_Platform.GP_WX:
return c.default.getInstance().isLoadNavigateBanner;

default:
return !1;
}
};
e.prototype.showNavigateBoxBanner = function() {
if (o.default.getPlatform() != o.Game_Platform.GP_Test) if (o.default.getPlatform() != o.Game_Platform.GP_WX) if (this.SW_BoxSwitch) if (o.default.getPlatform() == o.Game_Platform.GP_Oppo) if (this.isLoadNavigateBoxBanner) {
console.log("ASCSDK", "showNavigateBoxBanner=====================");
this.isNavigateSettleShow = !0;
if (this.gameBannerAd) {
a.default.getInstance().hideBanner();
this.gameBannerAd.show();
} else console.log("ASCSDK", "OPPO 不存在互推盒子横幅广告实例");
} else console.log("ASCSDK", "OPPO 互推盒子横幅广告未加载完成"); else console.log("ASCSDK", "非OPPO平台,不能展示互推盒子横幅广告"); else console.log("ASCSDK", "OPPO 互推盒子广告开关未开启"); else {
this.isNavigateSettleShow = !0;
c.default.getInstance().showNavigateBanner();
} else {
this.isNavigateSettleShow = !0;
s.default.getInstance().showNavigateBoxBanner();
}
};
e.prototype.hideNavigateBoxBanner = function() {
this.isNavigateSettleShow = !1;
if (o.default.getPlatform() != o.Game_Platform.GP_Test) if (o.default.getPlatform() != o.Game_Platform.GP_WX) if (this.gameBannerAd) {
console.log("ASCSDK", "hideNavigateBoxBanner=====================");
this.gameBannerAd.hide();
} else console.log("ASCSDK", "OPPO 不存在互推盒子横幅广告实例"); else c.default.getInstance().hideNavigateBanner(); else s.default.getInstance().hideNavigateBoxBanner();
};
e.prototype.createNavigateBoxPortal = function(e) {
if (this.SW_BoxSwitch) if (qg.getSystemInfoSync().platformVersionCode < 1076) console.log("ASCSDK", "OPPO 版本较低,不支持互推盒子广告"); else {
console.log("ASCSDK", "OPPO 互推盒子九宫格广告初始化", e);
this.gamePortalAd = qg.createGamePortalAd({
adUnitId: e
});
var t = this;
this.gamePortalAd.onLoad(function() {
console.log("ASCSDK", "OPPO 互推盒子九宫格广告加载完成");
t.isLoadNavigateBoxPortal = !0;
});
this.gamePortalAd.onError(function(e) {
console.log("ASCSDK", "OPPO 互推盒子九宫格广告出错:", JSON.stringify(e));
t.isLoadNavigateBoxPortal = !1;
setTimeout(function() {
t.gamePortalAd.load();
}, 2e4);
});
this.gamePortalAd.onClose(function() {
console.log("ASCSDK", "OPPO 互推盒子九宫格广告关闭");
t.gamePortalAd.load();
t.hasShowBanner && a.default.getInstance().showBanner();
});
this.gamePortalAd.load();
} else console.log("ASCSDK", "OPPO 互推盒子广告开关未开启");
};
e.prototype.getNavigateBoxPortalFlag = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Test:
return !0;

case o.Game_Platform.GP_Oppo:
return this.isLoadNavigateBoxPortal;

case o.Game_Platform.GP_WX:
return c.default.getInstance().isLoadNavigatePortal;

default:
return !1;
}
};
e.prototype.showNavigateBoxPortal = function() {
if (o.default.getPlatform() != o.Game_Platform.GP_Test) if (o.default.getPlatform() != o.Game_Platform.GP_WX) if (this.SW_BoxSwitch) if (o.default.getPlatform() == o.Game_Platform.GP_Oppo) if (this.isLoadNavigateBoxPortal) {
console.log("ASCSDK", "showNavigateBoxPortal=====================");
if (this.gamePortalAd) {
this.hasShowBanner = a.default.getInstance().hasShowBanner;
a.default.getInstance().hideBanner();
this.gamePortalAd.show();
} else console.log("ASCSDK", "OPPO 不存在互推盒子九宫格广告实例");
} else console.log("ASCSDK", "OPPO 互推盒子九宫格广告未加载完成"); else console.log("ASCSDK", "非OPPO平台,不能展示互推盒子九宫格广告"); else console.log("ASCSDK", "OPPO 互推盒子广告开关未开启"); else c.default.getInstance().showNavigatePortal(); else s.default.getInstance().showNavigateBoxPortal();
};
return e;
}();
i.default = r;
cc._RF.pop();
}, {
"../ads/bannerAd/BannerController": "BannerController",
"../tools/SdkTools": "SdkTools",
"../ui/CocosUI": "CocosUI",
"./NavigateTest": "NavigateTest",
"./NavigateWX": "NavigateWX"
} ],
NavigateTest: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "aa5d5Oj2mdCgKCE/lz3YBdS", "NavigateTest");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../tools/SdkTools"), n = e("../ui/CocosUI"), s = e("../ads/bannerAd/BannerController"), a = function() {
function e() {
this.nativeIcon = null;
this.navigateGroupBg = null;
this.navigateSettle = null;
this.navigateBanner = null;
this.navigatePortal = null;
this.NavigateBoxPortalUIInfo = null;
this.navigatePortalErrorTimes = 0;
this.testBannerOnShow = !1;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.showNavigateIcon = function(e, t, i, o) {
if (this.nativeIcon) console.log("ASCSDK", "Test 已存在互推ICON return"); else {
console.log("ASCSDK", "Test showNavigateIcon====================");
var s = this, a = cc.director.getScene();
cc.loader.load("https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateIconRes/iconBg.png", function(c, r) {
s.nativeIcon = new cc.Node("nativeIcon");
s.nativeIcon.addComponent(cc.Sprite);
s.nativeIcon.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(r);
setTimeout(function() {
s.nativeIcon.width = e;
s.nativeIcon.height = t;
s.nativeIcon.x = i;
s.nativeIcon.y = o;
}, 1);
s.nativeIcon.zIndex = 29999;
"" != n.default.getInstance().cocosGroup && (s.nativeIcon.group = n.default.getInstance().cocosGroup);
a.addChild(s.nativeIcon);
});
}
};
e.prototype.hideNavigateIcon = function() {
if (this.nativeIcon) {
console.log("ASCSDK", "Test hideNavigateIcon====================");
this.nativeIcon.removeFromParent();
this.nativeIcon = null;
} else console.log("ASCSDK", "Test 不存在测试互推ICON return");
};
e.prototype.showNavigateGroup = function(e, t) {
var i = this;
if (this.navigateGroupBg) console.log("ASCSDK", "Test 已存在测试互推列表 return"); else {
console.log("ASC", "Test showNavigateGroup========================");
this.navigateGroupBg = new cc.Node("navigateGroupBg");
this.navigateGroupBg.addComponent(cc.Sprite);
var o = cc.director.getScene();
if ("vertical" == e) {
cc.loader.load("https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateGroupRes/groupV.png", function(e, t) {
i.navigateGroupBg.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(t);
});
setTimeout(function() {
if ("left" == t) {
i.navigateGroupBg.x = -70;
i.navigateGroupBg.scaleX = -1;
} else {
i.navigateGroupBg.scaleX = 1;
i.navigateGroupBg.x = cc.winSize.width + 70;
}
i.navigateGroupBg.y = cc.winSize.height / 2;
}, 1);
o.addChild(this.navigateGroupBg);
"" != n.default.getInstance().cocosGroup && (this.navigateGroupBg.group = n.default.getInstance().cocosGroup);
this.navigateGroupBg.zIndex = 3e4;
this.navigateGroupBg.runAction(cc.sequence(cc.moveBy(.2, -184 * this.navigateGroupBg.scaleX, 0), cc.callFunc(function() {
console.log("ASCSDK", "Test 打开互推列表");
})));
} else {
cc.loader.load("https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateGroupRes/groupH.png", function(e, t) {
i.navigateGroupBg.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(t);
});
setTimeout(function() {
if ("left" == t) {
i.navigateGroupBg.x = -310;
i.navigateGroupBg.scaleX = -1;
} else {
i.navigateGroupBg.scaleX = 1;
i.navigateGroupBg.x = cc.winSize.width + 310;
}
i.navigateGroupBg.y = cc.winSize.height / 2;
}, 1);
o.addChild(this.navigateGroupBg);
"" != n.default.getInstance().cocosGroup && (this.navigateGroupBg.group = n.default.getInstance().cocosGroup);
this.navigateGroupBg.zIndex = 3e4;
this.navigateGroupBg.runAction(cc.sequence(cc.moveBy(.2, -665 * this.navigateGroupBg.scaleX, 0), cc.callFunc(function() {
console.log("ASCSDK", "Test 打开互推列表");
})));
}
}
};
e.prototype.hideNavigateGroup = function() {
if (this.navigateGroupBg) {
console.log("ASCSDK", "Test hideNavigateGroup====================");
this.navigateGroupBg.removeFromParent();
this.navigateGroupBg = null;
} else console.log("ASCSDK", "Test 不存在测试互推列表 return");
};
e.prototype.showNavigateSettle = function(e, t, i) {
if (this.navigateSettle) console.log("ASCSDK", "Test 已存在测试结算互推 return"); else {
s.default.getInstance().hideBanner();
console.log("ASCSDK", "Test showNavigateSettle====================");
switch (e) {
case 1:
var o = cc.director.getScene(), a = this;
cc.loader.load("https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/TestRes/TestNavigateSettle.png", function(e, s) {
a.navigateSettle = new cc.Node("navigateSettle");
a.navigateSettle.addComponent(cc.Sprite);
a.navigateSettle.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(s);
setTimeout(function() {
if (cc.winSize.width < cc.winSize.height) {
a.navigateSettle.width = .65 * cc.winSize.width;
a.navigateSettle.height = a.navigateSettle.width / 1.15;
} else {
a.navigateSettle.height = cc.winSize.height / 5 * 2;
a.navigateSettle.width = 1.15 * a.navigateSettle.height;
}
a.navigateSettle.x = t;
a.navigateSettle.y = i;
}, 1);
a.navigateSettle.zIndex = 3e4;
"" != n.default.getInstance().cocosGroup && (a.navigateSettle.group = n.default.getInstance().cocosGroup);
o.addChild(a.navigateSettle);
});
break;

case 2:
o = cc.director.getScene();
(a = this).navigateSettle = new cc.Node("navigateSettle");
a.navigateSettle.x = 0;
a.navigateSettle.y = 0;
a.navigateSettle.zIndex = 3e4;
"" != n.default.getInstance().cocosGroup && (a.navigateSettle.group = n.default.getInstance().cocosGroup);
o.addChild(a.navigateSettle);
cc.loader.load("https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/TestRes/TestNavigateSettleLeft.png", function(e, t) {
var i = new cc.Node("navigateSettleLeft");
i.addComponent(cc.Sprite);
i.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(t);
setTimeout(function() {
if (cc.winSize.width < cc.winSize.height) {
i.width = .2 * cc.winSize.width;
i.height = i.width / .39;
} else {
i.height = cc.winSize.height - 200;
i.width = .39 * cc.winSize.height;
}
i.x = i.width / 2;
i.y = cc.winSize.height / 2;
}, 1);
a.navigateSettle.addChild(i);
});
cc.loader.load("https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/TestRes/TestNavigateSettleRight.png", function(e, t) {
var i = new cc.Node("navigateSettleRight");
i.addComponent(cc.Sprite);
i.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(t);
setTimeout(function() {
if (cc.winSize.width < cc.winSize.height) {
i.width = .2 * cc.winSize.width;
i.height = i.width / .39;
} else {
i.height = cc.winSize.height - 200;
i.width = .39 * cc.winSize.height;
}
i.x = cc.winSize.width - i.width / 2;
i.y = cc.winSize.height / 2;
}, 1);
a.navigateSettle.addChild(i);
});
break;

case 3:
o = cc.director.getScene(), a = this;
cc.loader.load("https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/TestRes/TestNavigateSettleType3.png", function(e, s) {
a.navigateSettle = new cc.Node("navigateSettle");
a.navigateSettle.addComponent(cc.Sprite);
a.navigateSettle.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(s);
setTimeout(function() {
if (cc.winSize.width < cc.winSize.height) {
a.navigateSettle.width = .904 * cc.winSize.width;
a.navigateSettle.height = .317 * a.navigateSettle.width;
} else {
a.navigateSettle.height = cc.winSize.height / 5;
a.navigateSettle.width = a.navigateSettle.height / .317;
}
a.navigateSettle.x = t;
a.navigateSettle.y = i;
}, 1);
a.navigateSettle.zIndex = 3e4;
"" != n.default.getInstance().cocosGroup && (a.navigateSettle.group = n.default.getInstance().cocosGroup);
o.addChild(a.navigateSettle);
});
break;

case 4:
var c = this, r = cc.director.getScene();
cc.loader.load("https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/TestRes/TestNavigateBoxBanner.png", function(e, t) {
c.navigateSettle = new cc.Node("navigateSettle");
c.navigateSettle.addComponent(cc.Sprite);
c.navigateSettle.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(t);
c.navigateSettle.active = !1;
setTimeout(function() {
if (cc.winSize.width < cc.winSize.height) {
c.navigateSettle.active = !0;
c.navigateSettle.width = cc.winSize.width;
c.navigateSettle.height = 13 * c.navigateSettle.width / 35;
} else {
c.navigateSettle.active = !0;
c.navigateSettle.height = .4 * cc.winSize.height;
c.navigateSettle.width = 35 * c.navigateSettle.height / 13;
}
c.navigateSettle.x = cc.winSize.width / 2;
c.navigateSettle.y = c.navigateSettle.height / 2 + i;
}, 1);
c.navigateSettle.zIndex = 29999;
"" != n.default.getInstance().cocosGroup && (c.navigateSettle.group = n.default.getInstance().cocosGroup);
r.addChild(c.navigateSettle);
});
break;

default:
console.log("ASCSDK", "无该种类型的结算互推:" + e);
}
}
};
e.prototype.hideNavigateSettle = function() {
if (this.navigateSettle) {
console.log("ASCSDK", "Test hideNavigateSettle====================");
this.navigateSettle.removeFromParent();
this.navigateSettle = null;
} else console.log("ASCSDK", "Test 不存在测试结算互推 return");
};
e.prototype.showNavigateBoxBanner = function() {
if (this.navigateBanner) console.log("ASCSDK", "Test 已存在测试互推盒子横幅 return"); else {
s.default.getInstance().hideBanner();
console.log("ASCSDK", "Test showNavigateBoxBanner====================");
var e = this, t = cc.director.getScene();
cc.loader.load("https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/TestRes/TestNavigateBoxBanner.png", function(i, o) {
e.navigateBanner = new cc.Node("navigateBanner");
e.navigateBanner.addComponent(cc.Sprite);
e.navigateBanner.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(o);
setTimeout(function() {
if (cc.winSize.width < cc.winSize.height) {
e.navigateBanner.width = cc.winSize.width;
e.navigateBanner.height = .22 * cc.winSize.height;
e.navigateBanner.x = e.navigateBanner.width / 2;
e.navigateBanner.y = e.navigateBanner.height / 2;
} else {
e.navigateBanner.width = cc.winSize.width / 2;
e.navigateBanner.height = .4 * cc.winSize.height;
e.navigateBanner.x = e.navigateBanner.width;
e.navigateBanner.y = e.navigateBanner.height / 2;
}
}, 1);
e.navigateBanner.zIndex = 29999;
"" != n.default.getInstance().cocosGroup && (e.navigateBanner.group = n.default.getInstance().cocosGroup);
t.addChild(e.navigateBanner);
});
}
};
e.prototype.hideNavigateBoxBanner = function() {
if (this.navigateBanner) {
console.log("ASCSDK", "Test hideNavigateBoxBanner====================");
this.navigateBanner.removeFromParent();
this.navigateBanner = null;
} else console.log("ASCSDK", "Test 不存在测试互推盒子横幅 return");
};
e.prototype.showNavigateBoxPortal = function() {
this.NavigateBoxPortalUIInfo = {
layerBg: null,
navigatePortal: null,
exit: null
};
this.testBannerOnShow = s.default.getInstance().testBannerShow;
s.default.getInstance().hideBanner();
console.log("ASCSDK", "Test showNavigateBoxPortal====================");
var e = this, t = cc.director.getScene();
o.default.loadImage([ "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeIntersRes/layerBg.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/TestRes/TestNavigateBoxPortal.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/TestRes/nativeClose.png" ], function(i, o) {
if (i) {
console.log("ASCSDK", "测试互推盒子九宫格资源加载错误:" + JSON.stringify(i));
if (e.navigatePortalErrorTimes < 5) {
e.navigatePortalErrorTimes++;
e.showNavigateBoxPortal();
}
} else {
e.NavigateBoxPortalUIInfo.layerBg = o[0];
e.NavigateBoxPortalUIInfo.navigatePortal = o[1];
e.NavigateBoxPortalUIInfo.exit = o[2];
var a = new cc.Node("layerBg");
a.addComponent(cc.Sprite);
a.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(e.NavigateBoxPortalUIInfo.layerBg);
setTimeout(function() {
a.width = cc.winSize.width;
a.height = cc.winSize.height;
a.x = cc.winSize.width / 2;
a.y = cc.winSize.height / 2;
}, .5);
a.zIndex = 30003;
a.opacity = 200;
t.addChild(a);
"" != n.default.getInstance().cocosGroup && (a.group = n.default.getInstance().cocosGroup);
a.on(cc.Node.EventType.TOUCH_START, function(e) {});
var c = new cc.Node("navigatePortal");
c.addComponent(cc.Sprite);
c.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(e.NavigateBoxPortalUIInfo.navigatePortal);
setTimeout(function() {
c.width = 520;
c.height = 628;
}, .5);
a.addChild(c);
var r = new cc.Node("navigateClose");
r.addComponent(cc.Sprite);
r.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(e.NavigateBoxPortalUIInfo.exit);
setTimeout(function() {
r.width = 50;
r.height = 50;
r.x = c.width / 2 - r.width / 2;
r.y = 13 * c.height / 32 - r.height / 2;
}, .5);
c.addChild(r);
r.on(cc.Node.EventType.TOUCH_START, function(t) {
a.removeFromParent();
e.testBannerOnShow && s.default.getInstance().showBanner();
});
}
});
};
return e;
}();
i.default = a;
cc._RF.pop();
}, {
"../ads/bannerAd/BannerController": "BannerController",
"../tools/SdkTools": "SdkTools",
"../ui/CocosUI": "CocosUI"
} ],
NavigateWX: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3a307o/yMZCppz/3ohUrnEJ", "NavigateWX");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../ads/bannerAd/BannerController"), n = e("../network/Network"), s = e("../tools/SdkTools"), a = e("../ui/CocosUI"), c = e("./NavigateController"), r = function() {
function e() {
this.navigateBg = null;
this.navigateInfom = null;
this.NavigateBanner = null;
this.NavigateBannerUITextures = null;
this.isLoadNavigateBanner = !1;
this.NavigatePortalUITextures = null;
this.layerBg = null;
this.isLoadNavigatePortal = !1;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.showNavigateIcon = function(e, t, i, o) {
var n = this;
if (this.navigateBg) console.log("ASCSDK", "已存在互推ICON return"); else {
console.log("ASCSDK", "showNavigateIcon===========================");
var s = this, c = a.default.getInstance(), r = cc.director.getScene();
this.navigateBg = new cc.Node("navigateBg");
this.navigateBg.addComponent(cc.Sprite);
this.navigateBg.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(c.navigateUITextures.bgTexture);
setTimeout(function() {
n.navigateBg.width = e;
n.navigateBg.height = t;
n.navigateBg.x = i;
n.navigateBg.y = o;
}, 1);
this.navigateBg.runAction(cc.repeatForever(cc.sequence(cc.scaleBy(.2, 1.1), cc.rotateTo(.1, 30), cc.rotateTo(.1, -25), cc.rotateTo(.1, 20), cc.rotateTo(.1, 0), cc.scaleBy(.2, 1 / 1.1), cc.delayTime(5))));
this.navigateBg.on(cc.Node.EventType.TOUCH_START, function(e) {
s.jumpToMiniGame(s.navigateInfom);
});
r.addChild(this.navigateBg);
"" != c.cocosGroup && (this.navigateBg.group = c.cocosGroup);
this.navigateBg.zIndex = 29999;
var l = new cc.Node("mask");
l.addComponent(cc.Mask);
l.getComponent(cc.Mask).type = cc.Mask.Type.IMAGE_STENCIL;
l.getComponent(cc.Mask).spriteFrame = new cc.SpriteFrame(c.navigateUITextures.maskTexture);
l.getComponent(cc.Mask).alphaThreshold = .5;
setTimeout(function() {
l.width = .84 * e;
l.height = .84 * t;
l.x = 0;
l.y = .05 * t;
}, 1);
this.navigateBg.addChild(l);
var d = new cc.Node("image");
d.addComponent(cc.Sprite);
l.addChild(d);
var h = new cc.Node("title");
h.addComponent(cc.Sprite);
h.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(c.navigateUITextures.moreGameTexture);
setTimeout(function() {
d.width = l.width;
d.height = l.height;
h.width = .84 * e;
h.height = .19 * t;
h.x = 0;
h.y = .27 * -t;
}, 1);
this.navigateBg.addChild(h);
var u = function() {
if (d) {
var e = d.width, t = d.width, i = s.updateNavigateIcon();
console.log("ASCSDK", "texture:" + i);
d.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(i);
d.width = e;
d.height = t;
} else console.log("ASCSDK", "no image");
};
u();
c.navigateIconTimeInterval = setInterval(u, 3e4);
}
};
e.prototype.updateNavigateIcon = function() {
console.log("ASCSDK", "updateNavigateIcon===========================");
for (var e = c.default.getInstance().navigateList, t = 0, i = 0; i < e.length; i++) e[i].sort > 0 && (t += e[i].sort);
for (var o = Math.floor(Math.random() * t), n = 0, s = null, r = 0, l = 0; l < e.length; l++) if (0 != e[l].sort) {
if (o >= n && o < n + e[l].sort) {
s = e[l];
r = l;
console.log("ASCSDK", "weight", o, e[l].pushGamePackage);
}
n += e[l].sort;
}
if (s) {
this.navigateInfom = s;
return a.default.getInstance().NavigateIconTextureList[r];
}
};
e.prototype.hideNavigateIcon = function() {
console.log("ASCSDK", "hideNavigateIcon===========================");
if (this.navigateBg) {
this.navigateBg.removeFromParent();
this.navigateBg = null;
}
a.default.getInstance().navigateIconTimeInterval && clearInterval(a.default.getInstance().navigateIconTimeInterval);
};
e.prototype.createNavigateBanner = function() {
console.log("ASCSDK", "WX 开始加载互推横幅资源");
var e = this;
this.NavigateBannerUITextures = {
navigateSettleGroup: null,
navigateSettletitleBg: null,
mask: null,
iconWihte: null,
navigateBanner: null,
newMask: null,
newIconWihte: null
};
s.default.loadImage([ "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateSettleRes/navigateSettleGroup.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateSettleRes/navigateSettletitleBg.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateSettleRes/settleIcon.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateSettleRes/iconWihte.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateSettleRes/navigateBanner.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateSettleRes/newMask3.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateSettleRes/newIconWihte3.png" ], function(t, i) {
if (t) console.log("ASCSDK", "WX 互推横幅资源加载错误" + JSON.stringify(t)); else {
e.NavigateBannerUITextures.navigateSettleGroup = i[0];
e.NavigateBannerUITextures.navigateSettletitleBg = i[1];
e.NavigateBannerUITextures.mask = i[2];
e.NavigateBannerUITextures.iconWihte = i[3];
e.NavigateBannerUITextures.navigateBanner = i[4];
e.NavigateBannerUITextures.newMask = i[5];
e.NavigateBannerUITextures.newIconWihte = i[6];
e.isLoadNavigateBanner = !0;
console.log("ASCSDK", "WX 互推横幅资源加载成功");
}
});
};
e.prototype.showNavigateBanner = function() {
var e = this;
if (this.isLoadNavigateBanner) if (this.NavigateBanner) console.log("ASCSDK", "WX 已存在互推横幅"); else {
var t = c.default.getInstance().navigateList;
if (t.length < 5) console.log("ASCSDK", "WX 互推样式的游戏数量小于5个 return"); else {
o.default.getInstance().hideBanner();
console.log("ASCSDK", "showNavigateBanner================");
for (var i = [], n = 0; n < t.length; n++) {
i[n] = t[n];
i[n].index = n;
}
var s = function() {
for (var e = 0, t = 0; t < i.length; t++) e += i[t].sort;
for (var o = Math.floor(Math.random() * e), n = 0, s = 0; s < i.length; s++) {
if (o >= n && o < n + i[s].sort) {
var a = i[s];
i.splice(s, 1);
return a;
}
n += i[s].sort;
}
}, r = cc.director.getScene(), l = this;
this.NavigateBanner = new cc.Node("NavigateBanner");
this.NavigateBanner.active = !1;
this.NavigateBanner.addComponent(cc.Sprite);
this.NavigateBanner.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.NavigateBannerUITextures.navigateBanner);
setTimeout(function() {
if (cc.winSize.width < cc.winSize.height) {
e.NavigateBanner.active = !0;
e.NavigateBanner.width = cc.winSize.width;
e.NavigateBanner.height = 13 * e.NavigateBanner.width / 35;
} else {
e.NavigateBanner.active = !0;
e.NavigateBanner.height = .4 * cc.winSize.height;
e.NavigateBanner.width = 35 * e.NavigateBanner.height / 13;
}
e.NavigateBanner.x = cc.winSize.width / 2;
e.NavigateBanner.y = e.NavigateBanner.height / 2;
}, 1);
r.addChild(this.NavigateBanner);
"" != a.default.getInstance().cocosGroup && (this.NavigateBanner.group = a.default.getInstance().cocosGroup);
for (var d = function(t) {
var i = s(), o = new cc.Node("button");
o.active = !1;
h.NavigateBanner.addChild(o);
var n = new cc.Node("button");
n.addComponent(cc.Sprite);
n.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(h.NavigateBannerUITextures.newIconWihte);
o.addChild(n);
var c = new cc.Node("mask");
c.addComponent(cc.Mask);
c.getComponent(cc.Mask).type = cc.Mask.Type.IMAGE_STENCIL;
c.getComponent(cc.Mask).spriteFrame = new cc.SpriteFrame(h.NavigateBannerUITextures.newMask);
c.getComponent(cc.Mask).alphaThreshold = .5;
n.addChild(c);
var r = new cc.Node("icon");
r.addComponent(cc.Sprite);
r.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(a.default.getInstance().NavigateIconTextureList[i.index]);
c.addChild(r);
var d = new cc.Node("titleLabel");
d.color = cc.Color.BLACK;
d.addComponent(cc.Label);
var u = i.pushGameName;
i.pushGameName.length > 4 && (u = u.substring(0, 4) + "...");
d.getComponent(cc.Label).string = u;
d.getComponent(cc.Label).fontSize = 30;
d.getComponent(cc.Label).overflow = cc.Label.Overflow.SHRINK;
d.getComponent(cc.Label).enableWrapText = !1;
d.getComponent(cc.Label).horizontalAlign = cc.Label.HorizontalAlign.CENTER;
o.addChild(d);
setTimeout(function() {
o.active = !0;
o.width = e.NavigateBanner.width / 6.5;
o.height = o.width;
o.x = -e.NavigateBanner.width / 2 + e.NavigateBanner.width / 8.5 + e.NavigateBanner.width / 5.25 * t;
o.y = -e.NavigateBanner.height / 16;
n.width = o.width + 8;
n.height = o.height + 8;
c.width = o.width;
c.height = o.height;
r.width = o.width;
r.height = o.height;
d.width = r.width;
d.height = .4 * r.height;
d.x = 0;
d.y = -r.height / 2 - d.height / 2 - 10;
}, 1);
r.on(cc.Node.EventType.TOUCH_START, function(e) {
l.jumpToMiniGame(i);
});
}, h = this, u = 0; u < 5; u++) d(u);
}
} else console.log("ASCSDK", "WX 互推横幅资源未加载完成");
};
e.prototype.hideNavigateBanner = function() {
console.log("ASCSDK", "hideNavigateBanner================");
if (this.NavigateBanner) {
this.NavigateBanner.removeFromParent();
this.NavigateBanner = null;
}
};
e.prototype.createNavigatePortal = function() {
console.log("ASCSDK", "WX 开始加载互推九宫格资源");
var e = this;
this.NavigatePortalUITextures = {
layerBg: null,
navigatePortal: null,
navigatePortalClose: null
};
s.default.loadImage([ "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateBox/layerBg.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateBox/NavigatePortal.png", "https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NavigateBox/NavigatePortalClose.png" ], function(t, i) {
if (t) console.log("ASCSDK", "WX 互推九宫格资源加载错误", JSON.stringify(t)); else {
e.NavigatePortalUITextures.layerBg = i[0];
e.NavigatePortalUITextures.navigatePortal = i[1];
e.NavigatePortalUITextures.navigatePortalClose = i[2];
e.isLoadNavigatePortal = !0;
console.log("ASCSDK", "WX 互推九宫格资源加载成功");
}
});
};
e.prototype.showNavigatePortal = function() {
var e = this;
if (this.isLoadNavigatePortal) if (this.layerBg) console.log("ASCSDK", "WX 已存在互推横幅"); else {
var t = c.default.getInstance().navigateList;
if (t.length < 9) console.log("ASCSDK", "WX 互推样式的游戏数量小于9个 return"); else {
console.log("ASCSDK", "showNavigatePortal================");
for (var i = [], o = 0; o < t.length; o++) {
i[o] = t[o];
i[o].index = o;
}
var n = function() {
for (var e = 0, t = 0; t < i.length; t++) e += i[t].sort;
for (var o = Math.floor(Math.random() * e), n = 0, s = 0; s < i.length; s++) {
if (o >= n && o < n + i[s].sort) {
var a = i[s];
i.splice(s, 1);
return a;
}
n += i[s].sort;
}
}, s = cc.director.getScene(), r = this;
this.layerBg = new cc.Node("layerBg");
var l = new cc.Node("navigatePortal"), d = new cc.Node("navigateClose");
this.layerBg.addComponent(cc.Sprite);
this.layerBg.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.NavigatePortalUITextures.layerBg);
this.layerBg.active = !1;
setTimeout(function() {
e.layerBg.active = !0;
e.layerBg.width = cc.winSize.width;
e.layerBg.height = cc.winSize.height;
e.layerBg.x = cc.winSize.width / 2;
e.layerBg.y = cc.winSize.height / 2;
}, .5);
this.layerBg.zIndex = 30003;
this.layerBg.opacity = 200;
s.addChild(this.layerBg);
"" != a.default.getInstance().cocosGroup && (this.layerBg.group = a.default.getInstance().cocosGroup);
this.layerBg.on(cc.Node.EventType.TOUCH_START, function(e) {});
l.addComponent(cc.Sprite);
l.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.NavigatePortalUITextures.navigatePortal);
setTimeout(function() {
l.width = 780;
l.height = 942;
}, .5);
this.layerBg.addChild(l);
d.addComponent(cc.Sprite);
d.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(this.NavigatePortalUITextures.navigatePortalClose);
setTimeout(function() {
d.width = 50;
d.height = 50;
d.x = l.width / 2 - d.width;
d.y = 12 * l.height / 32 - d.height / 2;
}, .5);
l.addChild(d);
d.on(cc.Node.EventType.TOUCH_START, function(e) {
console.log("ASCSDK", "用户手动关闭互推九宫格");
r.layerBg.removeFromParent();
r.layerBg = null;
});
for (var h = function(e) {
var t = n(), i = new cc.Node("icon");
i.addComponent(cc.Sprite);
i.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(a.default.getInstance().NavigateIconTextureList[t.index]);
l.addChild(i);
var o = new cc.Node("titleLabel");
o.color = cc.Color.BLACK;
o.addComponent(cc.Label);
o.getComponent(cc.Label).string = t.pushGameName;
o.getComponent(cc.Label).fontSize = 40;
o.getComponent(cc.Label).overflow = cc.Label.Overflow.SHRINK;
o.getComponent(cc.Label).enableWrapText = !1;
o.getComponent(cc.Label).horizontalAlign = cc.Label.HorizontalAlign.CENTER;
i.addChild(o);
i.active = !1;
setTimeout(function() {
i.active = !0;
i.width = l.width / 5;
i.height = i.width;
i.x = e % 3 * 240 - 240;
i.y = 180 - 240 * Math.floor(e / 3);
o.width = i.width;
o.height = .234 * i.height;
o.x = 0;
o.y = -i.height / 2 - o.height / 2;
}, 1);
i.on(cc.Node.EventType.TOUCH_START, function(e) {
r.jumpToMiniGame(t);
});
}, u = 0; u < 9; u++) h(u);
}
} else console.log("ASCSDK", "WX 互推九宫格资源未加载完成");
};
e.prototype.jumpToMiniGame = function(e) {
console.log("ASCSDK", "WX jumpToMiniGame===========================");
wx.navigateToMiniProgram({
appId: e.pushGamePackage,
path: "?foo=bar",
success: function(t) {
n.default.getInstance().statistics(e);
console.log("ASCSDK", "WX 跳转成功");
},
fail: function(e) {
console.log("ASCSDK", "WX 跳转失败：" + JSON.stringify(e));
}
});
};
return e;
}();
i.default = r;
cc._RF.pop();
}, {
"../ads/bannerAd/BannerController": "BannerController",
"../network/Network": "Network",
"../tools/SdkTools": "SdkTools",
"../ui/CocosUI": "CocosUI",
"./NavigateController": "NavigateController"
} ],
NestableScrollView_Inner: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "9b632kH/AlFKaicQC6ghfQ8", "NestableScrollView_Inner");
cc.Class({
extends: cc.ScrollView,
properties: {
m_OuterScrollView: {
default: null,
visible: !1
}
},
setOuterScrollView: function(e) {
this.m_OuterScrollView = e;
},
_onTouchMoved: function(e, t) {
if (this.enabledInHierarchy && !this._hasNestedViewGroup(e, t)) {
var i = e.touch, o = i.getLocation().sub(i.getStartLocation());
this.content && (this.m_OuterScrollView.isDifferentBetweenSettingAndPlan(this) || this._handleMoveLogic(i));
if (this.cancelInnerEvents) {
if (o.mag() > 7 && !this._touchMoved && e.target !== this.node) {
var n = new cc.Event.EventTouch(e.getTouches(), e.bubbles);
n.type = cc.Node.EventType.TOUCH_CANCEL;
n.touch = e.touch;
n.simulate = !0;
e.target.dispatchEvent(n);
this._touchMoved = !0;
}
this._stopPropagationIfTargetIsMe(e);
}
}
}
});
cc._RF.pop();
}, {} ],
NestableScrollView_Outer: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "aa83bbp8UxCZKhC7XKoh6mP", "NestableScrollView_Outer");
cc.Class({
extends: cc.ScrollView,
properties: {
m_InnerScrollViews: [ e("NestableScrollView_Inner") ],
m_InnerPageViews: [ e("NewPageView_Inner") ],
m_PlanDir: {
default: null,
visible: !1
},
m_ScrollingInnerSv: {
default: null,
visible: !1
}
},
onLoad: function() {
var e = this;
this.m_PlanDir = null;
this.m_InnerScrollViews.forEach(function(t) {
t.setOuterScrollView(e);
});
this.m_InnerPageViews.forEach(function(t) {
t.setOuterScrollView(e);
});
},
_isHisChild: function(e, t) {
return e == t || null != e.parent && (e.parent == t || this._isHisChild(e.parent, t));
},
_findScrollingInnerSv: function(e) {
for (var t = 0; t < this.m_InnerScrollViews.length; t++) {
if (this._isHisChild(e, this.m_InnerScrollViews[t].node)) return this.m_InnerScrollViews[t];
}
for (var i = 0; i < this.m_InnerPageViews.length; i++) {
if (this._isHisChild(e, this.m_InnerPageViews[i].node)) return this.m_InnerPageViews[i];
}
return null;
},
isDifferentBetweenSettingAndPlan: function(e) {
return 0 != this.m_PlanDir && ((1 != this.m_PlanDir || !e.horizontal) && (-1 != this.m_PlanDir || !e.vertical));
},
_hasNestedViewGroup: function(e, t) {
if (e.eventPhase === cc.Event.CAPTURING_PHASE) return !1;
},
_onTouchBegan: function(e, t) {
if (this.enabledInHierarchy && !this._hasNestedViewGroup(e, t)) {
this.m_PlanDir = null;
this.m_ScrollingInnerSv = null;
var i = e.touch;
this.content && this._handlePressLogic(i);
this._touchMoved = !1;
this._stopPropagationIfTargetIsMe(e);
}
},
_onTouchMoved: function(e, t) {
if (this.enabledInHierarchy && !this._hasNestedViewGroup(e, t)) {
var i = e.touch, o = i.getLocation().sub(i.getStartLocation());
if (null == this.m_PlanDir && o.mag() > 7) {
this.m_ScrollingInnerSv = this._findScrollingInnerSv(e.target);
if (null != this.m_ScrollingInnerSv) {
var n = this.m_ScrollingInnerSv.content.getContentSize(), s = this.m_ScrollingInnerSv.node.getContentSize();
this.m_ScrollingInnerSv.vertical && n.height > s.height || this.m_ScrollingInnerSv.horizontal && n.width > s.width ? this.m_PlanDir = Math.abs(o.x) > Math.abs(o.y) ? 1 : -1 : this.m_PlanDir = 0;
} else this.m_PlanDir = 0;
}
this.content && (this.isDifferentBetweenSettingAndPlan(this) || this._handleMoveLogic(i));
if (this.cancelInnerEvents && null == this.m_ScrollingInnerSv) {
if (o.mag() > 7 && !this._touchMoved && e.target !== this.node) {
var a = new cc.Event.EventTouch(e.getTouches(), e.bubbles);
a.type = cc.Node.EventType.TOUCH_CANCEL;
a.touch = e.touch;
a.simulate = !0;
e.target.dispatchEvent(a);
this._touchMoved = !0;
}
this._stopPropagationIfTargetIsMe(e);
}
}
}
});
cc._RF.pop();
}, {
NestableScrollView_Inner: "NestableScrollView_Inner",
NewPageView_Inner: "NewPageView_Inner"
} ],
Network: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "234b60sPddLU54GpAI2yqKP", "Network");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../tools/SdkTools"), n = e("../ads/bannerAd/BannerController"), s = e("../ads/IntersAd/IntersController"), a = e("../ads/videoAd/VideoController"), c = e("../ads/nativeAd/NativeController"), r = e("../tools/OtherFunctions"), l = e("../navigate/NavigateController"), d = e("../sdkConfig"), h = e("../ads/boxAd/BoxController"), u = e("../ads/blockAd/BlockController"), w = e("../navigate/NavigateWX"), m = e("../sdkConfig"), g = d.default.getInstance(), p = "https://cloud.xminigame.com/api", f = function() {
function e() {
this.mobileToken = "";
this.isInitCompelete = 0;
this.hasBeenInit = !1;
this.pushAd = !1;
this.statisSwitch = !0;
this.gameUserId = "";
this.uid = 0;
this.userData = null;
this.userId = "";
this.userToken = "";
this.userType = 0;
this.userInfo = null;
this.nickName = "";
this.avatar = "";
this.gender = "";
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.login = function(e) {
var t = this;
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
qg.login({
success: function(i) {
console.log("ASCSDK", "OPPO 登录成功：" + JSON.stringify(i.data));
t.getH5SDKUserInfo(i.data.token, o.default.getData("ServerUserId", ""), e);
},
fail: function(i) {
console.log("ASCSDK", "OPPO 登录失败,", JSON.stringify(i));
console.log("ASCSDK", "OPPO 启用游客登录");
t.userRegister(o.default.getData("ServerUserId", ""), e);
}
});
break;

case o.Game_Platform.GP_Vivo:
console.log("ASCSDK", "VIVO 启用游客登录");
this.userRegister(o.default.getData("ServerUserId", ""), e);
break;

case o.Game_Platform.GP_Tiktok:
tt.login({
force: !1,
success: function(i) {
if (i.isLogin) {
console.log("ASCSDK", "Tiktok 已登录：" + JSON.stringify(i));
t.getH5SDKUserInfo(i.code, o.default.getData("ServerUserId", ""), e);
} else {
console.log("ASCSDK", "Tiktok 未登录,", JSON.stringify(i));
console.log("ASCSDK", "Tiktok 启用游客登录");
t.userRegister(o.default.getData("ServerUserId", ""), e);
}
},
fail: function(i) {
console.log("ASCSDK", "Tiktok 登录失败,", JSON.stringify(i));
console.log("ASCSDK", "Tiktok 启用游客登录");
t.userRegister(o.default.getData("ServerUserId", ""), e);
}
});
break;

case o.Game_Platform.GP_QQ:
qq.login({
success: function(i) {
console.log("ASCSDK", "QQ 登录成功：" + JSON.stringify(i));
t.getH5SDKUserInfo(i.code, o.default.getData("ServerUserId", ""), e);
},
fail: function(i) {
console.log("ASCSDK", "QQ 登录失败,", JSON.stringify(i));
console.log("ASCSDK", "QQ 启用游客登录");
t.userRegister(o.default.getData("ServerUserId", ""), e);
}
});
break;

case o.Game_Platform.GP_WX:
wx.login({
success: function(i) {
if (i.code) {
console.log("ASCSDK", "WX 登录成功：" + JSON.stringify(i));
t.getH5SDKUserInfo(i.code, o.default.getData("ServerUserId", ""), e);
} else {
console.log("ASCSDK", "WX 登录失败," + JSON.stringify(i));
console.log("ASCSDK", "WX 启用游客登录");
t.userRegister(o.default.getData("ServerUserId", ""), e);
}
},
fail: function(i) {
console.log("ASCSDK", "WX 登录失败,", JSON.stringify(i));
console.log("ASCSDK", "WX 启用游客登录");
t.userRegister(o.default.getData("ServerUserId", ""), e);
}
});
break;

case o.Game_Platform.GP_KS:
kwaigame.login({
success: function(i) {
console.log("ASCSDK", "KS 登录成功:" + JSON.stringify(i));
console.log("result.gameUserId:", JSON.stringify(i.gameUserId));
t.gameUserId = i.gameUserId;
console.log("self.gameUserId:", JSON.stringify(t.gameUserId));
t.getH5SDKUserInfo(i.gameToken, o.default.getData("ServerUserId", ""), e);
},
fail: function(i) {
console.log("ASCSDK", "KS 登录失败:" + JSON.stringify(i));
console.log("ASCSDK", "KS 启用游客登录");
t.userRegister(o.default.getData("ServerUserId", ""), e);
}
});
break;

case o.Game_Platform.GP_HW:
hbs.gameLogin({
forceLogin: 1,
appid: m.default.APPID,
success: function(i) {
console.log("ASCSDK", "HW 登录成功", JSON.stringify(i));
console.log(i.playerId);
t.getH5SDKUserInfo(i.playerId, o.default.getData("ServerUserId", ""), e);
},
fail: function(i, n) {
console.log("ASCSDK", "HW 登录失败", JSON.stringify(i) + "," + JSON.stringify(n));
console.log("ASCSDK", "HW 启用游客登录");
t.userRegister(o.default.getData("ServerUserId", ""), e);
}
});
break;

case o.Game_Platform.GP_XM:
qg.login({
success: function(i) {
console.log("ASCSDK XM 登录成功" + JSON.stringify(i));
t.uid = i.data.appAccountId;
t.getH5SDKUserInfo(i.data.session, o.default.getData("ServerUserId", ""), e);
},
fail: function(i) {
console.log("ASCSDK", "XM 登录失败", JSON.stringify(i));
t.userRegister(o.default.getData("ServerUserId", ""), e);
}
});
}
};
e.prototype.userRegister = function(e, t) {
console.log("ASCSDK", "获取游客token");
var i = {
channelId: g.channelId,
signParam: {},
userId: e
}, n = this, s = new XMLHttpRequest();
s.onreadystatechange = function() {
if (4 == s.readyState && 200 == s.status) {
var e = s.responseText;
e && console.log("ASCSDK", "getVisitorToken 服务器返回的data:", e);
var i = JSON.parse(e);
if ("undefined" == typeof i || !i || !i.data) {
console.log("ASCSDK", "error : is not a json");
t(!1);
return;
}
var a = i.data.token, c = i.data.userId;
if (a && "undefined" != typeof a && c && "undefined" != typeof c) {
console.log("ASCSDK", "注册成功", a, c);
n.mobileToken = a;
o.default.saveData("ServerUserId", c);
t(!0);
} else {
console.log("ASCSDK", "注册失败", a, c);
t(!1);
}
n.userToken = a;
n.userId = c;
n.userType = 0;
}
};
s.addEventListener("error", function(e) {
console.log("ASCSDK", "error", JSON.stringify(e));
});
console.log("ASCSDK", "发送给服务器的Data：", JSON.stringify(i));
s.open("POST", "https://cloud.xminigame.com/api/xmini-game-user/mobile/login/getVisitorToken", !0);
s.setRequestHeader("Content-type", "application/json");
s.send(JSON.stringify(i));
};
e.prototype.getH5SDKUserInfo = function(e, t, i) {
console.log("ASCSDK", "渠道返回的token：", e);
var n;
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
n = {
channelId: g.channelId,
signParam: {
token: e,
sdkVersion: "1.0.0"
},
userId: t
};
break;

case o.Game_Platform.GP_Vivo:
n = {
channelId: g.channelId,
signParam: {
token: e
},
userId: t
};
break;

case o.Game_Platform.GP_Tiktok:
case o.Game_Platform.GP_QQ:
case o.Game_Platform.GP_WX:
n = {
channelId: g.channelId,
signParam: {
code: e,
nickName: o.default.getData("nickName", ""),
avatar: o.default.getData("avatarUrl", ""),
gender: o.default.getData("gender", "0")
},
userId: t
};
break;

case o.Game_Platform.GP_KS:
n = {
channelId: g.channelId,
signParam: {
gameUserId: this.gameUserId,
gameToken: e,
nickName: o.default.getData("nickName", ""),
avatar: o.default.getData("avatarUrl", ""),
gender: o.default.getData("gender", "0")
},
userId: t
};
break;

case o.Game_Platform.GP_HW:
n = {
channelId: g.channelId,
signParam: {
openId: e,
appId: m.default.APPID,
nickName: o.default.getData("nickName", ""),
avatar: o.default.getData("avatarUrl", ""),
gender: o.default.getData("gender", "0")
},
userId: t
};
break;

case o.Game_Platform.GP_XM:
n = {
channelId: g.channelId,
signParam: {
session: e,
uid: this.uid,
nickName: o.default.getData("nickName", ""),
avatarUrl: o.default.getData("avatarUrl", ""),
gender: o.default.getData("gender", "0")
},
userId: t
};
break;

default:
i(!1);
}
console.log("ASCSDK", "封装的Data：", JSON.stringify(n));
var s = this, a = new XMLHttpRequest();
a.onreadystatechange = function() {
if (4 == a.readyState && 200 == a.status) {
var e = a.responseText;
e && console.log("ASCSDK", "getMobileToken 服务器返回的data：", e);
var t = JSON.parse(e);
if ("undefined" == typeof t || !t || !t.data) {
console.log("ASCSDK", "error : is not a json");
i(!1);
return;
}
var n = t.data.token, c = t.data.userId;
s.nickName = t.data.nickName;
"" == t.data.gender ? s.gender = "0" : s.gender = t.data.gender;
s.avatar = t.data.avatar;
if (n && "undefined" != typeof n && c && "undefined" != typeof c) {
s.mobileToken = n;
o.default.saveData("ServerUserId", c);
i(!0);
} else {
console.log("ASCSDK", "注册失败");
i(!1);
}
s.userToken = n;
s.userId = c;
s.userType = 1;
}
};
a.addEventListener("error", function(e) {
console.log("ASCSDK", "error", JSON.stringify(e));
});
a.open("POST", "https://cloud.xminigame.com/api/xmini-game-user/mobile/login/getMobileToken", !0);
a.setRequestHeader("Content-type", "application/json");
a.send(JSON.stringify(n));
};
e.prototype.getSDKOnlineConfig = function(e) {
if (this.hasBeenInit) console.log("ASCSDK", "重复初始化 return"); else {
this.hasBeenInit = !0;
var t = p + "/xmini-game-advert/mobile/advert/downAdConfigure?channelId=" + g.channelId, i = this, d = new XMLHttpRequest();
d.onreadystatechange = function() {
if (4 == d.readyState && 200 == d.status) {
var t = d.responseText;
if (!t) {
console.log("ASCSDK", "初始化失败");
return;
}
if (i.pushAd) return;
i.pushAd = !0;
console.log("ASCSDK", "downAdConfigure 下发广告data：", t);
var w = JSON.parse(t);
if ("undefined" == typeof w || !w || !w.data) {
console.log("ASCSDK", "error : is not a json");
return;
}
if ("undefined" != typeof w.data.mainSwitch) {
if (!w.data.mainSwitch) {
console.log("ASCSDK", "广告开关没有开启");
return;
}
}
var m = w.data.advertSwitch;
"undefined" != typeof m.bannerSwitch && (n.default.getInstance().SW_SystemBannerSwitch = m.bannerSwitch);
"undefined" != typeof m.intersSwitch && (s.default.getInstance().SW_SystemIntersSwitch = m.intersSwitch);
"undefined" != typeof m.videoSwitch && (a.default.getInstance().SW_VideoSwitch = m.videoSwitch);
"undefined" != typeof m.nativeBigIntersSwitch && (c.default.getInstance().SW_NativeMainSwitch = m.nativeBigIntersSwitch);
"undefined" != typeof m.nativeBannerSwitch && (n.default.getInstance().SW_NativeBannerSwitch = m.nativeBannerSwitch);
"undefined" != typeof m.nativeIntersSwitch && (s.default.getInstance().SW_NativeIntersSwitch = m.nativeIntersSwitch);
if ("undefined" != typeof m.boxSwitch) {
h.default.getInstance().SW_BoxSwitch = m.boxSwitch;
l.default.getInstance().SW_BoxSwitch = m.boxSwitch;
}
var g = w.data.advertIdentity;
if (g.enableSwitch && "undefined" != typeof g) {
g.adBannerId && (n.default.getInstance().ID_BannerId = g.adBannerId);
g.adIntersId && (s.default.getInstance().ID_SystemIntersId = g.adIntersId);
g.adNativeId && (c.default.getInstance().ID_NativeID = g.adNativeId);
g.adVideoId && (a.default.getInstance().ID_VideoID = g.adVideoId);
g.adBoxId && (h.default.getInstance().ID_BoxID = g.adBoxId);
g.adBrickId && (u.default.getInstance().ID_BlockID = g.adBrickId);
} else console.log("ASCSDK", "广告ID未启用==================");
if (null != w.data.combineInters) {
var p = w.data.combineInters;
"undefined" != typeof p && null != p.enableSwitch && p.enableSwitch && (s.default.getInstance().NUM_NativeIntersPercent = p.nativeIntersRatio);
}
if (null != w.data.dynamicNativeInters) {
var f = w.data.dynamicNativeInters;
"undefined" != typeof f.intersSwitch && null != f.intersSwitch && f.intersSwitch && (c.default.getInstance().NUM_NativeIntersReportFrequency = f.reportFrequency);
}
if (null != w.data.baseControl) {
var S = w.data.baseControl;
if ("undefined" != typeof S.bannerSwitch && null != S.bannerSwitch && S) {
"undefined" != typeof S.refreshTime && null != S.refreshTime && 0 != S.refreshTime && (n.default.getInstance().NUM_BannerUpdateTime = S.refreshTime);
"undefined" != typeof S.priority && null != S.priority && S.priority && "nativeBanner" == S.priority && (n.default.getInstance().SW_SystemBannerFirst = !1);
"undefined" != typeof S.maxClose && null != S.maxClose && 0 != S.maxClose && (n.default.getInstance().NUM_BannerMostShowTimes = S.maxClose);
}
}
if (null != w.data.baseControl) {
var N = w.data.baseControl;
if ("undefined" != typeof N && null != N && N) {
s.default.getInstance().SW_IntersBaseControlSwitch = N.intersSwitch;
"undefined" != typeof N.startNum && null != N.startNum && 0 != N.startNum && (s.default.getInstance().NUM_IntersStartNum = N.startNum);
"undefined" != typeof N.intervalNum && null != N.intervalNum && 0 != N.intervalNum && (s.default.getInstance().NUM_IntersIntervalNum = N.intervalNum);
"undefined" != typeof N.intervalTime && null != N.intervalTime && 0 != N.intervalTime && (s.default.getInstance().NUM_IntersIntervalTime = N.intervalTime);
"undefined" != typeof N.delayEject && null != N.delayEject && 0 != N.delayEject && (s.default.getInstance().NUM_IntersDelayTime = N.delayEject);
"undefined" != typeof N.delayProbability && null != N.delayProbability && 0 != N.delayProbability && (s.default.getInstance().NUM_IntersDelayPercent = N.delayProbability);
}
}
if (null != w.data.desktopSwitch) {
var v = w.data.desktopSwitch;
"undefined" != typeof v.desktopIconSwitch && null != v.desktopIconSwitch && v && (r.default.getInstance().SW_DesktopSwitch = v.desktopIconSwitch);
"undefined" != typeof v.activateDesktopIconSwitch && null != v.activateDesktopIconSwitch && v && (r.default.getInstance().SW_IntersToDesktop = v.activateDesktopIconSwitch);
"undefined" != typeof v.autoAddDesktopNumber && null != v.autoAddDesktopNumber && v.desktopIconSwitch && v.activateDesktopIconSwitch && 0 != v.autoAddDesktopNumber && (r.default.getInstance().NUM_DeskAutoMostTimes = v.autoAddDesktopNumber);
"undefined" != typeof v.intersAddDesktopNumber && null != v.intersAddDesktopNumber && v.activateDesktopIconSwitch && 0 != v.intersAddDesktopNumber && (r.default.getInstance().NUM_IntersAddDesktopNumber = v.intersAddDesktopNumber);
}
g.adBannerId && n.default.getInstance().createSystemBanner();
g.adIntersId && s.default.getInstance().createSystemInters();
g.adNativeId && c.default.getInstance().createNativeAd();
g.adVideoId && a.default.getInstance().createVideoAd();
g.adBoxId && h.default.getInstance().createAppBox();
g.adBrickId && u.default.getInstance().createBlock();
s.default.getInstance().runIntersInterval();
o.default.getInstance().initSystemInfo(e);
}
};
d.onerror = function(e) {
console.log("ASCSDK", "err:" + JSON.stringify(e));
};
d.open("GET", t, !0);
d.setRequestHeader("content-type", "application/x-www-form-urlencoded");
d.setRequestHeader("Authorization", this.mobileToken);
d.send();
if (o.default.getPlatform() == o.Game_Platform.GP_Oppo || o.default.getPlatform() == o.Game_Platform.GP_WX) {
var m = p + "/xmini-game-advert/mobile/pushgame/downPushGames?channelId=" + g.channelId, f = new XMLHttpRequest();
f.onreadystatechange = function() {
if (4 == f.readyState && 200 == f.status) {
var t = f.responseText;
if (!t) {
console.log("ASCSDK", "初始化失败");
return;
}
console.log("ASCSDK", "下发互推data：", t);
var n = JSON.parse(t);
if ("undefined" == typeof n || !n || !n.data) {
console.log("ASCSDK", "error : is not a json");
return;
}
var s = !1;
n.data.masterSwitch && "undefined" != typeof n.data.masterSwitch && (s = n.data.masterSwitch);
if (!s) {
i.isInitCompelete++;
e && 2 == i.isInitCompelete && e(!0);
console.log("ASCSDK", "互推开关没有开启");
return;
}
var a = n.data.pushSwitch;
if ("undefined" != typeof n.data.pushGameList) {
l.default.getInstance().navigateList = n.data.pushGameList;
l.default.getInstance().loadNavigateList();
}
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
if (a && "undefined" != typeof a.iconSwitch) {
l.default.getInstance().SW_NavigateIconSwitch = a.iconSwitch;
a.iconSwitch && l.default.getInstance().createNavigateIcon();
}
if (a && "undefined" != typeof a.listSwitch) {
l.default.getInstance().SW_NavigateGroupSwitch = a.listSwitch;
a.listSwitch && l.default.getInstance().createNavigateGroup();
}
if (a && "undefined" != typeof a.settleSwitch) {
l.default.getInstance().SW_NavigateSettleSwitch = a.settleSwitch;
a.settleSwitch && l.default.getInstance().createNavigateSettle();
}
break;

case o.Game_Platform.GP_WX:
if (a && "undefined" != typeof a.iconSwitch) {
l.default.getInstance().SW_NavigateIconSwitch = a.iconSwitch;
a.iconSwitch && l.default.getInstance().createNavigateIcon();
}
w.default.getInstance().createNavigateBanner();
w.default.getInstance().createNavigatePortal();
}
var c = n.data.statisSwitch;
c && "undefined" != typeof c && (i.statisSwitch = c);
i.isInitCompelete++;
e && 2 == i.isInitCompelete && e(!0);
}
};
f.open("GET", m, !0);
f.setRequestHeader("Authorization", this.mobileToken);
f.send();
}
}
};
e.prototype.statistics = function(e) {
if (this.statisSwitch) {
var t = p + "/xmini-game-user/mobile/pushdata/collectAdPush?channelId=" + g.channelId + "&pushGamePackage=" + e.pushGamePackage, i = new XMLHttpRequest();
i.onreadystatechange = function() {
if (4 == i.readyState && 200 == i.status) {
var e = i.responseText;
e && console.log("ASCSDK", "互推统计数据:" + e);
}
};
i.open("POST", t, !0);
i.setRequestHeader("Content-type", "application/json");
i.setRequestHeader("Authorization", this.mobileToken);
i.send();
}
};
e.prototype.getUserData = function(e) {
console.log("ASCSDK", "getUserData=====================");
this.userData = {
userId: this.userId,
token: this.userToken,
userType: this.userType
};
e(this.userData);
};
e.prototype.getUserInfo = function(e) {
console.log("ASCSDK", "getUserInfo=====================");
this.userInfo = {
head: "",
name: "",
sex: "",
city: "",
province: "",
country: "",
power: !1
};
var t = this;
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Tiktok:
1 == t.userType ? tt.getUserInfo({
success: function(i) {
console.log("ASCSDK", "用户授权成功");
t.userInfo.head = i.userInfo.avatarUrl;
t.userInfo.name = i.userInfo.nickName;
1 == i.userInfo.gender ? t.userInfo.sex = "M" : 2 == i.userInfo.gender ? t.userInfo.sex = "F" : t.userInfo.sex = "0";
t.userInfo.city = i.userInfo.city;
t.userInfo.province = i.userInfo.province;
t.userInfo.country = i.userInfo.country;
t.userInfo.power = !0;
o.default.saveData("avatarUrl", t.userInfo.head);
o.default.saveData("nickName", t.userInfo.name);
o.default.saveData("gender", t.userInfo.sex);
e(t.userInfo);
},
fail: function(i) {
console.log("ASCSDK", "用户拒绝授权");
t.userInfo.power = !1;
e(t.userInfo);
}
}) : e(t.userInfo);
break;

case o.Game_Platform.GP_Oppo:
t.userInfo.head = t.avatar;
t.userInfo.name = t.nickName;
t.userInfo.sex = t.gender;
t.userInfo.power = !0;
e(t.userInfo);
break;

case o.Game_Platform.GP_KS:
kwaigame.authorize({
scope: "Scope.userInfo",
success: function() {
console.log("ASCSDK", "授权获取用户信息成功");
},
fail: function(e) {
console.log("ASCSDK", "授权获取用户信息失败: " + JSON.stringify(e));
},
complete: function() {
console.log("ASCSDK", "授权获取用户信息完成");
}
});
kwaigame.getUserInfo({
success: function(i) {
console.log("ASCSDK", "获取用户信息成功：" + JSON.stringify(i));
t.userInfo.head = i.userHead;
t.userInfo.name = i.userName;
t.userInfo.sex = i.gender;
t.userInfo.power = !0;
o.default.saveData("avatarUrl", t.userInfo.head);
o.default.saveData("nickName", t.userInfo.name);
o.default.saveData("gender", t.userInfo.sex);
e(t.userInfo);
},
fail: function(i) {
console.log("ASCSDK", "获取用户信息失败: " + JSON.stringify(i));
t.userInfo.power = !1;
e(t.userInfo);
},
complete: function() {
console.log("ASCSDK", "获取用户信息完成");
}
});
break;

case o.Game_Platform.GP_HW:
hbs.authorize({
scope: "userInfo",
params: {
appid: m.default.APPID,
type: "token",
scope: "scope.baseProfile",
state: "200"
},
success: function(i) {
console.log("ASCSDK", "HW authorize success", i);
t.userInfo.name = i.nickname;
void 0 != i.avatar.default && (t.userInfo.head = i.avatar.default);
t.userInfo.power = !0;
o.default.saveData("avatarUrl", t.userInfo.head);
o.default.saveData("nickName", t.userInfo.name);
e(t.userInfo);
},
fail: function() {
console.log("ASCSDK", "HW authorize fail");
t.userInfo.power = !1;
e(t.userInfo);
}
});
break;

case o.Game_Platform.GP_Test:
default:
e(t.userInfo);
}
};
e.prototype.mustLogin = function(e) {
var t = this;
this.mustLoginCallback = e;
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Tiktok:
var i = {
channelId: g.channelId,
signParam: {
code: "",
nickName: o.default.getData("nickName", ""),
avatar: o.default.getData("avatarUrl", ""),
gender: o.default.getData("gender", "0")
},
userId: this.userId
};
tt.login({
success: function(e) {
console.log("ASCSDK", "Tiktok 登录成功：" + JSON.stringify(e));
i.signParam.code = e.code;
t.sendRequestToServe(p + "/xmini-game-user/mobile/login/getMobileToken", "POST", i);
},
fail: function(t) {
console.log("ASCSDK", "Tiktok 登录失败");
e(!1);
}
});
}
};
e.prototype.sendRequestToServe = function(e, t, i) {
var n = this, s = new XMLHttpRequest();
s.onreadystatechange = function() {
if (4 == s.readyState && 200 == s.status) {
var e = s.responseText;
e && console.log("ASCSDK", "getMobileToken 服务器返回的参数：", e);
var t = JSON.parse(e);
if ("undefined" == typeof t || !t || !t.data) {
console.log("ASCSDK", "error : is not a json");
n.mustLoginCallback(!1);
return;
}
n.userToken = t.data.token;
n.userId = t.data.userId;
n.userType = 1;
o.default.saveData("ServerUserId", n.userId);
n.mustLoginCallback(!0);
}
};
s.addEventListener("error", function(e) {
console.log("ASCSDK", "error", JSON.stringify(e));
});
s.open(t, e, !0);
s.setRequestHeader("Content-type", "application/json");
s.send(JSON.stringify(i));
};
return e;
}();
i.default = f;
cc._RF.pop();
}, {
"../ads/IntersAd/IntersController": "IntersController",
"../ads/bannerAd/BannerController": "BannerController",
"../ads/blockAd/BlockController": "BlockController",
"../ads/boxAd/BoxController": "BoxController",
"../ads/nativeAd/NativeController": "NativeController",
"../ads/videoAd/VideoController": "VideoController",
"../navigate/NavigateController": "NavigateController",
"../navigate/NavigateWX": "NavigateWX",
"../sdkConfig": "sdkConfig",
"../tools/OtherFunctions": "OtherFunctions",
"../tools/SdkTools": "SdkTools"
} ],
NewCDJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3ecd9SKk3tDnJEPgLqI91Mp", "NewCDJS");
(function(e) {
e && e.__esModule;
})(e("../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
Light: [ cc.Node ],
CDbox: cc.Node,
CDboxPicture: cc.Node,
bglight: cc.Node,
buyButton: cc.Node,
goButton: cc.Node,
GetButton: cc.Node,
FollowTips: cc.Node,
star: cc.Node,
FollowButton: cc.Node,
particle: cc.Node,
unlockParticle: cc.Node,
pacageTitle: cc.Label,
tips: cc.Node,
BuyCrownNum: cc.Label
},
onLoad: function() {
0 === this.CDNnmber ? this.BuyCrownNum.string = 2 : this.BuyCrownNum.string = 12;
this.pacageTitle.string = this.CDname;
this.bglight.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(1, .8), cc.scaleTo(1, .2))));
this.showLight = !1;
this.tips.active = !0;
this.tips.runAction(cc.repeatForever(cc.sequence(cc.moveTo(.5, 0, 180), cc.moveTo(.5, 0, 140))));
this.tips.active = !1;
this.schedule(function() {
if (this.showLight) {
this.CrownStore.hastop ? this.tips.active = !1 : window.hasshowStoreTips || (this.tips.active = !0);
if (this.Light[0].active) {
this.Light[0].active = !1;
this.Light[1].active = !0;
} else {
this.Light[1].active = !1;
this.Light[0].active = !0;
}
} else {
this.Light[0].active = !1;
this.Light[1].active = !1;
this.tips.active = !1;
}
}, .2);
"Specail" === this.UnlockType && (window.SpecailCD = this);
},
onEnable: function() {
var e = window.unlockCrownMusicName.split(",");
e = window.Tools.unique(e);
for (var t = !1, i = 0; i < e.length; i++) this.CDname === e[i] && (t = !0);
if (t) {
this.goButton.active = !0;
this.buyButton.active = !1;
this.GetButton.active = !1;
this.goFollow.active = !1;
} else {
this.goButton.active = !1;
this.GetButton.active = !1;
this.FollowButton.active = !1;
this.FollowTips.active = !1;
if ("Specail" === this.UnlockType) {
this.buyButton.active = !1;
if (0 == window.Home.hasGetOfficialMusic && 1 == window.Home.hasFllowOfficial) {
this.GetButton.active = !0;
this.star.active = !0;
this.GetButton.stopAllActions();
this.GetButton.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.4, 1.1), cc.scaleTo(.4, 1))));
} else {
this.FollowButton.active = !0;
this.star.active = !0;
this.FollowButton.stopAllActions();
this.FollowButton.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.4, 1.1), cc.scaleTo(.4, 1))));
this.FollowTips.active = !0;
}
} else this.buyButton.active = !0;
}
},
start: function() {},
update: function(e) {},
showList: function() {
this.CrownStore.hastop = !0;
this.tips.active = !1;
window.hasshowStoreTips = 1;
this.CDbox.getComponent(sp.Skeleton).setAnimation(0, "get", !1);
window.Parent.bagClickSounds();
this.scheduleOnce(function() {
this.CrownStore.showCDList(this.CDNnmber);
}, .5);
window.Parent.setlocalStorage("hasshowStoreTips", window.hasshowStoreTips);
},
goaction: function() {
this.CrownStore.goaction();
},
buyMusic: function() {
var e = this, t = Number(this.BuyCrownNum.string);
this.CrownStore.buyMusic(this.CDNnmber, t, function() {
e.buyButton.active = !1;
e.goButton.active = !0;
"" == window.unlockCrownMusicName ? window.unlockCrownMusicName = e.CDname : window.unlockCrownMusicName = window.unlockCrownMusicName + "," + e.CDname;
window.Parent.setlocalStorage("unlockCrownMusicName", window.unlockCrownMusicName);
e.unlockParticle.getComponent(cc.ParticleSystem).resetSystem();
e.CDbox.getComponent(sp.Skeleton).setAnimation(0, "get", !1);
});
},
shakeCD: function() {
this.CDbox.getComponent(sp.Skeleton).setAnimation(0, "slide", !1);
},
goFollow: function() {
window.Parent.ButtonSounds();
window.Home.FollowDouyin();
},
getFollowMusic: function() {
var e = this;
this.CrownStore.buyMusic(this.CDNnmber, 0, function() {
e.star.active = !1;
window.Home.crownStoreButton.getChildByName("point").active = !1;
e.buyButton.active = !1;
e.GetButton.active = !1;
e.goFollow.active = !1;
e.goButton.active = !0;
"" == window.unlockCrownMusicName ? window.unlockCrownMusicName = e.CDname : window.unlockCrownMusicName = window.unlockCrownMusicName + "," + e.CDname;
window.Parent.setlocalStorage("unlockCrownMusicName", window.unlockCrownMusicName);
window.Home.hasGetOfficialMusic = 1;
window.Parent.setlocalStorage("hasGetOfficialMusic", window.Home.hasGetOfficialMusic);
e.unlockParticle.getComponent(cc.ParticleSystem).resetSystem();
e.CDbox.getComponent(sp.Skeleton).setAnimation(0, "get", !1);
});
}
});
cc._RF.pop();
}, {
"../Help/reportAnalytics": "reportAnalytics"
} ],
NewChangeHighNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f65d6OfWXtLibSl5LrwwS6L", "NewChangeHighNodeJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
ChallengeSPList: [ cc.SpriteFrame ],
FaceBTN: cc.Node
},
onLoad: function() {
this.node.setContentSize(window.screenWidth, window.screenHight);
this.defination();
this.definePar();
},
onEnable: function() {
this.CalculateScore();
this.GetNextMusicList();
this.giveUpBTN.active = !1;
this.startBTN.getComponent(cc.Sprite).spriteFrame = this.ChallengeSPList[0];
this.UpdateText(!1);
this.SetCrown();
this.isWatchVideo = !1;
this.isNeedPower = !0;
},
onDisable: function() {
this.node.destroy();
this.musicplay && this.pauseMusic();
1 == this.isLock && this.nextMusicData && window.Home.RemoveSongTabel(this.nextMusicData.musicId);
5 == window.platform && window.Parent.showInsertAD("ChangeHigh_ADClick");
},
defination: function() {
this.baseMaskNode = this.node.getChildByName("Mask");
this.animNode = this.node.getChildByName("AnimNode");
this.morePlayNode = this.animNode.getChildByName("MorePlay");
this.topNode = this.morePlayNode.getChildByName("SP_Title");
this.douyinBase = this.morePlayNode.getChildByName("Base_Douyin");
this.normalBase = this.morePlayNode.getChildByName("Base_Normal");
this.crownSP = this.morePlayNode.getChildByName("SP_Crown");
this.crownNum = this.crownSP.getChildByName("LB_Num");
this.scoreSP = this.morePlayNode.getChildByName("SP_Score");
this.scoreNum = this.scoreSP.getChildByName("LB_Num");
this.recommondNode = this.animNode.getChildByName("Recommond");
this.maskNode = this.recommondNode.getChildByName("Mask");
this.cdNode = this.maskNode.getChildByName("CD");
this.pauseNode = this.maskNode.getChildByName("pause");
this.playNode = this.maskNode.getChildByName("play");
this.loadNode = this.maskNode.getChildByName("loading");
this.SongLB = this.recommondNode.getChildByName("SongName");
this.baseNode = this.recommondNode.getChildByName("SP_Base");
this.reviveBTN = this.animNode.getChildByName("BTN_Revive");
this.startBTN = this.animNode.getChildByName("BTN_Start");
this.giveUpBTN = this.animNode.getChildByName("BTN_GiveUp");
this.guideGRP1 = this.animNode.getChildByName("GRP_Guide1");
this.guideGRP2 = this.animNode.getChildByName("GRP_Guide2");
this.lockAnim = this.animNode.getChildByName("LockAnim");
this.breakAnim1 = this.animNode.getChildByName("BreakAnim1");
this.breakAnim2 = this.animNode.getChildByName("BreakAnim2");
this.breakAnim3 = this.animNode.getChildByName("BreakAnim3");
this.lightAnim = this.animNode.getChildByName("LightAnim");
this.thunderAnim = this.animNode.getChildByName("ThunderAnim");
this.handNode = this.animNode.getChildByName("SP_Hand");
this.handNode.active = !1;
this.handNode.setScale(2, 2);
this.touchMaskNode = this.node.getChildByName("TouchMask");
this.touchMaskNode.active = !1;
this.douyinBase.active = !1;
this.normalBase.active = !1;
this.reviveBTN.active = !1;
this.startBTN.active = !1;
this.guideGRP1.active = !1;
this.guideGRP2.active = !1;
this.crownSP.active = !1;
this.scoreSP.active = !1;
},
definePar: function() {
this.useModel = [];
this.BTNList = null;
3 == window.platform ? this.BTNList = this.douyinBase.getChildByName("List") : this.BTNList = this.normalBase.getChildByName("List");
for (var e = 0; e < this.BTNList.childrenCount; e++) {
var t = this.BTNList.children[e];
t.active = !1;
t.getChildByName("Select").active = !1;
}
this.isLock = !1;
this.canSelect = !1;
this.isWatchVideo = !1;
this.isNeedPower = !0;
this.isCanTouchGuide = !0;
},
UpdateOther: function(e) {
var t = this;
null != e && (this.UNCallBack = e);
3 === window.platform && (window.PowerNode.active = !0);
window.DiamondNode.active = !0;
window.CrownNode.active = !0;
window.GameStart = !1;
this.morePlayNode.active = !1;
this.recommondNode.active = !1;
var i = Number(window.Parent.getlocalStorage("unlockModel" + window.playID)), n = window.highModelList.length;
if (0 == i) {
o.default.getInstance().reportAnalytics("View_Show_V2", "BeforWinUI_Difficulty_Show", 1);
this.startBTN.getComponent(cc.Sprite).spriteFrame = this.ChallengeSPList[1];
this.isLock = !1;
this.morePlayNode.scale = 0;
this.morePlayNode.active = !0;
this.baseMaskNode.opacity = 0;
this.LockAnim();
window.Parent.setlocalStorage("unlockModel" + window.playID, 1);
} else if (1 == i) {
this.startBTN.getComponent(cc.Sprite).spriteFrame = this.ChallengeSPList[0];
this.canSelect = !0;
this.isLock = !0;
if (0 == n) {
this.node.active = !1;
if (this.UNCallBack) {
this.UNCallBack();
this.UNCallBack = void 0;
}
} else if (n > 0) if (null != this.nextMusicData) {
this.animNode.setScale(0);
this.recommondNode.active = !0;
this.reviveBTN.active = !0;
cc.tween(this.animNode).to(.2, {
scale: 1.3
}).to(.8, {
scale: 1
}, {
easing: cc.easing.elasticOut
}).call(function() {
t.playMusic();
}).start();
5 == window.platform && jsb.reflection.callStaticMethod("DJADManagerVC", "videoUIShow:", "ChangeHigh_ADClick");
} else {
this.node.active = !1;
if (this.UNCallBack) {
this.UNCallBack();
this.UNCallBack = void 0;
}
}
if (2 != window.platform || 5 != window.platform) {
t.giveUpBTN.active = !1;
t.scheduleOnce(function() {
t.giveUpBTN.active = !0;
}, 3);
} else t.giveUpBTN.active = !0;
}
},
UpdateText: function() {
var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], t = this.useModel.length;
this.crownNum.getComponent(cc.Label).string = " X" + t.toString();
this.scoreNum.getComponent(cc.Label).string = " X" + Math.pow(2, t).toString();
if (1 == e) {
this.crownSP.runAction(cc.sequence(cc.scaleTo(.05, 1.3), cc.scaleTo(.05, 1)));
this.scoreSP.runAction(cc.sequence(cc.scaleTo(.05, 1.3), cc.scaleTo(.05, 1)));
}
},
SetCrown: function() {
if (0 == Number(window.Parent.getlocalStorage("isFirstTips"))) {
window.CrownNode.active = !0;
window.Parent.setlocalStorage("isFirstTips", 1);
window.Crown.addCrown();
this.scheduleOnce(function() {
window.Crown.addCrown();
}, .2);
}
},
CalculateScore: function() {
var e = Number(window.Parent.getlocalStorage("BestScore" + window.playID));
if (isNaN(e)) {
e = 0;
window.Parent.setlocalStorage("BestScore" + window.playID, 0);
}
window.Game.score * Math.pow(2, window.highModelList.length) > e && window.Parent.setlocalStorage("BestScore" + window.playID, window.Game.score * window.Home.beishu * Math.pow(2, window.highModelList.length));
window.Parent.setlocalStorage("HasPlayed" + window.playID, !0);
window.Home.DealClearList(window.playID);
window.Home.RemoveSongTabel(window.playID);
if (0 == window.isReliveTimes) {
var t = window.Game.curModel, i = window.gameHardModel, o = (window.Game.curReliveTimes, 
t - window.gameHardModel);
o /= 2;
(o = Math.floor(o)) < 1 && (o = 1);
(i += o) >= 8 && (i = 8);
window.Parent.setlocalStorage("gameModel", i);
window.gameHardModel = i;
}
if (1 == window.isFirstPlayer) {
window.isFirstPlayer = !1;
if (window.watchVideoTimes >= 6) {
window.watchVideoTimes -= 6;
console.log("恢复正常玩家的游玩水准");
}
}
},
GetNextMusicList: function() {
this.nextMusicData = null;
for (var e = [], t = 0; t < window.Home.newSongTable.length; t++) e.push(window.Home.newSongTable[t]);
(e = window.Tools.disruptionArr(e)).length > 0 && (this.nextMusicData = e[0]);
this.SetMusicData();
},
GetModelCrown: function() {
var e = window.highModelList.length;
console.log("游戏胜利,根据模式勾选,将获得 " + window.highModelList.length + " 个皇冠");
if (0 != e) for (var t = 0; t < e; t++) {
var i = 0 + .05 * t;
this.scheduleOnce(function() {
window.Crown.addCrown();
}, i);
}
},
LockAnim: function() {
this.canSelect = !1;
var e = this;
window.Parent.lockShowSounds();
this.lockAnim.active = !0;
this.lockAnim.getComponent(sp.Skeleton).setCompleteListener(function(t, i) {
window.Parent.lockBreakSounds();
e.lockAnim.active = !1;
});
this.scheduleOnce(function() {
t();
}, 1.8);
var t = function() {
e.lightAnim.active = !0;
cc.tween(e.lightAnim).repeatForever(cc.tween().by(.5, {
angle: -360
})).start();
e.scheduleOnce(function() {
e.lightAnim.active = !1;
var t = cc.fadeTo(.5, 200);
e.baseMaskNode.runAction(t);
i();
}, .3);
}, i = function() {
e.breakAnim1.active = !0;
e.breakAnim2.active = !0;
e.breakAnim3.active = !0;
e.breakAnim1.getComponent(cc.ParticleSystem).resetSystem();
e.breakAnim2.getComponent(cc.ParticleSystem).resetSystem();
e.breakAnim3.getComponent(cc.ParticleSystem).resetSystem();
var t = e.breakAnim1.getComponent(cc.ParticleSystem).life - .5;
e.scheduleOnce(function() {
o();
}, t);
}, o = function() {
if (3 == window.platform) {
e.douyinBase.active = !0;
e.normalBase.active = !1;
} else {
e.douyinBase.active = !1;
e.normalBase.active = !0;
}
e.topNode.active = !1;
var t = cc.scaleTo(.5, 1).easing(cc.easeCubicActionOut());
e.morePlayNode.runAction(cc.sequence(t, cc.callFunc(function() {
e.topNode.setPosition(cc.v2(-1080, e.topNode.position.y));
e.topNode.active = !0;
e.crownSP.setScale(0);
e.scoreSP.setScale(0);
cc.tween(e.topNode).to(.3, {
scaleX: .3,
scaleY: 1.3,
position: cc.v2(400, e.topNode.position.y)
}, {
easing: "cubicOut"
}).call(function() {
e.scheduleOnce(function() {
e.crownSP.active = !0;
e.scoreSP.active = !0;
e.scoreSP.runAction(cc.scaleTo(.35, 1).easing(cc.easeBounceOut()));
e.scheduleOnce(function() {
e.crownSP.runAction(cc.scaleTo(.35, 1).easing(cc.easeBounceOut()));
}, .15);
}, .3);
}).to(.5, {
scaleX: 1,
scaleY: 1,
position: cc.v2(0, e.topNode.position.y)
}, {
easing: "elasticOut"
}).start();
}), cc.callFunc(function() {
window.Parent.lockVideoSounds();
for (var t = function(t) {
var i = e.BTNList.children[t];
i.setScale(0);
var o = .1 * t + .75;
e.scheduleOnce(function() {
i.active = !0;
i.runAction(cc.sequence(cc.scaleTo(.19, 1.1), cc.callFunc(function() {
2 == t && n();
}), cc.scaleTo(.13, .9), cc.scaleTo(.13, 1.05), cc.scaleTo(.16, .95), cc.scaleTo(.16, 1), cc.callFunc(function() {
var e = i.getChildByName("Select");
e.active = !0;
e.opacity = 0;
e.runAction(cc.sequence(cc.fadeTo(.15, 255), cc.fadeTo(.15, 0), cc.callFunc(function() {
e.active = !1;
e.opacity = 255;
})));
})));
}, o);
}, i = 0; i < e.BTNList.childrenCount; i++) t(i);
})));
}, n = function() {
e.startBTN.setScale(0, 0);
e.scheduleOnce(function() {
e.startBTN.active = !0;
e.startBTN.runAction(cc.scaleTo(.5, 1).easing(cc.easeElasticOut()));
s();
}, .2);
}, s = function() {
var t = Number(window.Parent.getlocalStorage("guideNum"));
if (0 == t) {
e.touchMaskNode.active = !0;
window.Parent.PlayGuideAU(11);
var i = cc.instantiate(window.Parent.TipLeftPrefab);
i.parent = e.node;
i.getComponent("GuideTipsJS").SetTipsLabel("你太厉害了!我们来试试挑战更高难度吧!");
i.position = cc.v2(-330, .3 * window.screenHight);
window.Home.tipsNodeList[0] = i;
e.scheduleOnce(function() {
e.handNode.active = !0;
3 == window.platform ? e.handNode.setPosition(360, -220) : e.handNode.setPosition(220, -215);
var t = cc.moveTo(.5, cc.v2(0, 0));
e.handNode.runAction(cc.sequence(t, cc.callFunc(function() {
e.guideGRP1.active = !0;
window.Parent.setlocalStorage("guideNum", 1);
e.isNeedPower = !1;
e.handNode.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.35, 2.6), cc.scaleTo(.35, 2))));
e.touchMaskNode.active = !1;
})));
}, 3);
} else if (1 == t) {
e.canSelect = !0;
if (2 != window.platform || 5 != window.platform) {
e.giveUpBTN.active = !1;
e.scheduleOnce(function() {
e.giveUpBTN.active = !0;
}, 3);
} else e.giveUpBTN.active = !0;
}
};
},
SetMusicData: function() {
this.SongLB.getComponent(cc.Label).string = this.nextMusicData.musicName;
this.cdNode.getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[this.nextMusicData.orderNumber % 20];
},
playMusic: function() {
var e = this;
window.Home.stopMusicPlaying();
window.musicisplaying = !1;
this.playNode.active = !1;
this.loadNode.active = !0;
this.loadNode.stopAllActions();
cc.tween(this.loadNode).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
var t = this.nextMusicData.musicFile, i = this.nextMusicData.musicId;
this.playName = this.nextMusicData.musicName;
this.playURL = this.nextMusicData.musicFile;
this.playID = this.nextMusicData.musicId;
this.playPoint = this.nextMusicData.json_normal;
window.Parent.LoadMusic(t, i, function(t) {
if (!window.musicisplaying) if (window.videoIsPlay) window.Home.stopMusicPlaying(); else {
e.loadNode.active = !1;
e.pauseNode.active = !0;
window.musicisplaying = !0;
e.musicplay = !0;
cc.tween(e.cdNode).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
cc.tween(e.baseNode).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
window.Parent.audioEngine.playMusic(t, !0);
}
});
},
pauseMusic: function() {
this.musicplay = !1;
window.musicisplaying = !1;
this.playNode.active = !0;
this.loadNode.active = !1;
this.pauseNode.active = !1;
this.cdNode.angle = 0;
this.cdNode.stopAllActions();
this.baseNode.angle = 0;
this.baseNode.stopAllActions();
window.Parent.audioEngine.stopAll();
},
OnClickModelSelect: function(e, t) {
window.Parent.ButtonSounds();
t = Number(t);
if (0 != this.canSelect) {
var i = this.useModel.indexOf(t);
if (-1 != i) {
this.useModel.splice(i, 1);
this.BTNList.children[t].getChildByName("Select").active = !1;
if (4 == t) {
window.FaceModle = !1;
console.log("关闭人脸模式");
window.Home.FaceCamerNode.active = !1;
5 === window.platform && window.Parent.getComponent("IosSDK").stopCaver();
}
} else {
this.useModel.push(t);
this.BTNList.children[t].getChildByName("Select").active = !0;
if (4 == t) {
console.log("开启人脸模式");
var o = 1;
5 === window.platform && (o = window.Parent.getComponent("IosSDK").getCavInfo());
if (o) {
window.FaceModle = !0;
if (!window.TestModle) {
window.Home.FaceCamerNode.active = !0;
if (5 === window.platform) {
window.isStartCamera = !0;
window.Parent.showTips("摄像头启动中");
this.scheduleOnce(function() {
window.Parent.getComponent("IosSDK").startAVCapture(.95, .07);
}, .5);
}
}
} else window.Parent.showTips("请开启摄像头权限");
if (0 === this.isshowFinger) {
this.isshowFinger = 1;
window.Parent.setlocalStorage("isshowFinger", 1);
this.FaceButton.parent.getChildByName("tip").active = !1;
this.Finger.active = !1;
}
}
}
this.UpdateText();
}
},
OnClickGiveUp: function() {
window.Parent.ButtonSounds();
if (0 != this.canSelect) {
this.node.active = !1;
if (this.UNCallBack) {
this.UNCallBack();
this.UNCallBack = void 0;
}
}
},
OnClickRevive: function() {
window.Parent.ButtonSounds();
if (0 != this.canSelect) {
var e = this, t = function() {
e.canSelect = !1;
e.GetModelCrown();
e.scheduleOnce(function() {
window.Home.DealMusicScore(window.playID, !1, 3);
window.highModelList = [];
window.MusicLoadingNode.active = !0;
window.Game.ClearAll();
window.GameNode.active = !1;
e.node.active = !1;
e.UNCallBack = void 0;
}, .3);
};
window.Parent.showVideo(function(i) {
if (i) {
5 == window.platform && jsb.reflection.callStaticMethod("DJADManagerVC", "showiOSADWithType:Platform:", "ChangeHigh_ADClick", "1");
e.isWatchVideo = !0;
window.playNum = e.nextMusicData.orderNumber;
window.playName = e.nextMusicData.musicName;
window.playURL = e.nextMusicData.musicFile;
window.playID = e.nextMusicData.musicId;
window.playPoint = e.nextMusicData.json_normal;
var o = e.nextMusicData.musicId;
window.Parent.setlocalStorage("isUnlock" + o, "true");
window.AchieveNumber[1]++;
window.Parent.setlocalStorage("AchieveNumber1", window.AchieveNumber[1]);
window.Home.DealUnlockMusic(e.nextMusicData.musicId);
window.Home.RemoveSongTabel(o);
if (window.powerNum < 6) {
e.startBTN.active = !0;
e.reviveBTN.active = !1;
}
3 == window.platform ? 1 == e.reviveBTN.active ? window.Power.reduceTili(e.reviveBTN, t) : window.Power.reduceTili(e.startBTN, t) : t();
} else e.canSelect = !0;
});
}
},
OnClickStart: function() {
window.Parent.startGameSounds();
if (0 != this.canSelect) {
var e = this, t = function() {
1 == e.isWatchVideo ? window.Home.DealMusicScore(window.playID, !1, 3) : window.Home.DealMusicScore(window.playID, !1, 5);
window.MusicLoadingNode.active = !0;
window.Game.ClearAll();
window.GameNode.active = !1;
e.node.active = !1;
e.UNCallBack = void 0;
}, i = function() {
e.canSelect = !1;
e.GetModelCrown();
e.scheduleOnce(function() {
window.highModelList = e.useModel;
if (0 == window.highModelList.length) {
var i = Number(window.Parent.getlocalStorage("gameHard"));
console.log("curGameHard : ", i);
var o = 0;
1 == i || 2 == i ? o = 1 : 3 == i ? o = 2 : 4 == i ? o = 3 : 5 == i && (o = 4);
for (var n = [ 0, 1, 2, 3 ], s = 0; s < o; s++) {
var a = Math.floor(n.length * Math.random());
e.useModel.push(n[a]);
n.splice(a, 1);
}
e.useModel.sort(function(e, t) {
return e - t;
});
window.highModelList = e.useModel;
for (var c = function(i) {
var o = e.useModel[i], n = e.BTNList.children[o], s = n.getChildByName("Select"), a = n.getChildByName("Gray"), c = .1 + .1 * i;
e.scheduleOnce(function() {
a.active = !1;
s.active = !0;
s.runAction(cc.sequence(cc.scaleTo(.09, 1.1), cc.scaleTo(.13, .9), cc.scaleTo(.13, 1.05), cc.scaleTo(.16, .95), cc.scaleTo(.16, 1), cc.callFunc(function() {
i == e.useModel.length - 1 && e.scheduleOnce(function() {
t();
}, .1);
})));
}, c);
}, r = 0; r < e.useModel.length; r++) c(r);
} else t();
}, .3);
};
3 == window.platform && 1 == this.isNeedPower ? 1 == this.reviveBTN.active ? window.Power.reduceTili(this.reviveBTN, i) : window.Power.reduceTili(this.startBTN, i) : i();
}
},
OnClickGuide: function(e, t) {
var i = this;
if (0 != this.isCanTouchGuide) {
t = Number(t);
var o = this, n = this.canSelect;
this.canSelect = !0;
switch (t) {
case 1:
this.isCanTouchGuide = !1;
window.Parent.PlayGuideAU(12);
window.Home.tipsNodeList[0].getComponent("GuideTipsJS").SetTipsLabel("这次挑战模式只选了“移动”,要当心会动的色板哦。");
o.scheduleOnce(function() {
window.Home.tipsNodeList[0] && window.Home.tipsNodeList[0].getComponent("GuideTipsJS") && window.Home.tipsNodeList[0].getComponent("GuideTipsJS").HideTipsAnim();
o.guideGRP1.active = !1;
o.handNode.stopAllActions();
o.touchMaskNode.active = !0;
var e = cc.moveTo(.5, cc.v2(170, -475));
o.handNode.runAction(cc.sequence(e, cc.callFunc(function() {
o.guideGRP2.active = !0;
o.handNode.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.35, 2.6), cc.scaleTo(.35, 2))));
o.touchMaskNode.active = !1;
o.isCanTouchGuide = !0;
})));
i.OnClickModelSelect(null, 0);
o.canSelect = n;
}, 3.5);
break;

case 2:
o.guideGRP1.active = !1;
o.guideGRP2.active = !1;
o.handNode.active = !1;
o.handNode.stopAllActions();
o.OnClickStart();
o.canSelect = n;
}
}
}
});
cc._RF.pop();
}, {
"../Help/reportAnalytics": "reportAnalytics"
} ],
NewCrownStoreJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8863bsURLRAi4ph4ahy7Kzt", "NewCrownStoreJS");
e("constants");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
perviewCD: cc.Prefab,
CDFab: cc.Prefab,
SceneBgFab: cc.Prefab,
RoleFab: cc.Prefab,
pageView: cc.Node,
content: cc.Node,
Scenecontent: cc.Node,
perViewNode: cc.Node,
perviewBackground: cc.Node,
PerviewBg: cc.Node,
perviewscrollview: cc.Node,
perviewcontent: cc.Node,
TipNode: cc.Node,
Particle: cc.Node,
CDButton: cc.Node,
SceneButton: cc.Node,
CDpageview: cc.Node,
Scenepageview: cc.Node,
tips: cc.Node,
topText: cc.Node,
RoleViewNode: cc.Node,
RoleButton: cc.Node,
RoleContent: cc.Node,
RoleSP: cc.Node,
SongsSP: cc.Node,
SceneSP: cc.Node
},
onLoad: function() {
window.crownStore = this;
this.ScenePageNumber = 0;
this.packagename = [];
this.CrownmusicTable = [];
this.perviewCDArr = [];
this.hastop = !1;
for (var e = null, t = 0; t < window.Home.CrownMusicTable.length; t++) {
if ((i = window.Home.CrownMusicTable[t].ex_bag) != e) if (3 === window.platform && "Douyin" === window.AppName) {
if (-1 == this.packagename.indexOf(i)) {
this.packagename.push(i);
e = i;
}
} else if (-1 == this.packagename.indexOf(i)) {
this.packagename.push(i);
e = i;
}
}
for (t = 0; t < this.packagename.length; t++) this.CrownmusicTable[t] = new Array();
for (t = 0; t < window.Home.CrownMusicTable.length; t++) for (var i = window.Home.CrownMusicTable[t].ex_bag, o = 0; o < this.CrownmusicTable.length; o++) i === this.packagename[o] && this.CrownmusicTable[o].push(window.Home.CrownMusicTable[t]);
this.CDNnmber = this.CrownmusicTable.length;
this.perviewBackground.on(cc.Node.EventType.TOUCH_START, this.closePerviewNode, this);
this.TipNode.getChildByName("background").on(cc.Node.EventType.TOUCH_START, this.closeTipsNode, this);
},
onEnable: function() {
o.default.getInstance().reportAnalytics("View_Show_V2", "ShopUI_Show", 1);
this.Scenepageview.active && this.selectStore(null, 0);
window.HomeNode.opacity = 0;
5 == window.platform && window.Parent.hidePushicon();
},
onDisable: function() {
window.HomeNode.opacity = 255;
},
start: function() {},
close: function(e) {
0 != e && window.Parent.ButtonSounds();
this.TipNode.active = !1;
window.Home.isshowBlockAd = !1;
this.node.destroy();
cc.loader.releaseRes("PreFab/NewCrownStoreFab", cc.Prefab);
5 == window.platform && window.Parent.showPushicon(256, 256, 200, 1500);
},
creatCD: function() {
this.CdNumArr = [];
this.content.height = 700 * Math.floor(this.CDNnmber / 2) + 300;
for (var e = 0; e < this.CDNnmber; e++) {
var t = cc.instantiate(this.CDFab);
t.getComponent("NewCDJS").CDname = this.packagename[e];
t.getComponent("NewCDJS").CDNnmber = e;
t.getComponent("NewCDJS").UnlockType = "Crown";
t.getComponent("NewCDJS").CrownStore = this;
t.parent = this.content;
e % 2 == 0 ? t.setPosition(cc.v2(-230, -260 - 700 * Math.floor(e / 2))) : t.setPosition(cc.v2(230, -260 - 700 * Math.floor(e / 2)));
this.CdNumArr[e] = t;
}
},
CreatScenebg: function() {
this.SceneArr = [];
this.Scenecontent.height = 500 * Math.floor(window.scenName.length / 2) + 800;
for (var e = 0; e < window.scenName.length; e++) {
var t = cc.instantiate(this.SceneBgFab);
t.getComponent("NewScenebgJS").Number = e;
t.getComponent("NewScenebgJS").ScenName = window.scenName[e];
t.getComponent("NewScenebgJS").backgroundSpr = window.sceneStorebg_Sprit[e];
t.getComponent("NewScenebgJS").crownStore = this.node;
t.getComponent("NewScenebgJS").UpdateBTNActive(window.SceneNumber);
t.parent = this.Scenecontent;
e % 2 == 0 ? t.setPosition(cc.v2(-230, -260 - 500 * Math.floor(e / 2))) : t.setPosition(cc.v2(230, -260 - 500 * Math.floor(e / 2)));
this.SceneArr[e] = t;
}
},
showCDList: function(e) {
for (var t = 0; t < this.perviewCDArr.length; t++) if (void 0 != this.perviewCDArr[t]) {
this.perviewCDArr[t].destroy();
this.perviewCDArr[t] = void 0;
}
this.perViewNode.active = !0;
var i = this.CrownmusicTable[e] / 2;
Math.floor(this.CrownmusicTable[e] / 2) < i && i++;
this.perviewcontent.height = 175 * i + 100;
var o = this.CrownmusicTable[e][0].ex_bag;
this.topText.getComponent(cc.Label).string = o;
for (t = 0; t < this.CrownmusicTable[e].length; t++) {
var n = cc.instantiate(this.perviewCD);
t % 2 == 0 ? n.setPosition(-170, -260 - 310 * Math.floor(t / 2)) : n.setPosition(170, -260 - 310 * Math.floor(t / 2));
n.getComponent("perviewCDJS").musicNumber = t * (e + 1);
n.getComponent("perviewCDJS").musicName = this.CrownmusicTable[e][t].musicName;
n.getComponent("perviewCDJS").MusicURL = this.CrownmusicTable[e][t].musicFile;
n.getComponent("perviewCDJS").musicID = this.CrownmusicTable[e][t].musicId;
n.getComponent("perviewCDJS").CrownStore = this;
this.perviewcontent.addChild(n);
this.perviewCDArr[t] = n;
}
},
buyMusic: function(e, t, i) {
t = Number(t);
if (window.CrownNum >= t) {
window.Crown.reduceCrown(t);
window.Parent.reportCustomEvent("皇冠事件", {
"购买曲包": this.packagename[e]
});
for (var o = 0; o < this.CrownmusicTable[e].length; o++) {
var n = this.CrownmusicTable[e][o].musicId;
"" == window.MusicBagTable ? window.MusicBagTable = n : window.MusicBagTable = window.MusicBagTable + "," + n;
}
var s = "";
for (o = 0; o < this.CrownmusicTable[e].length; o++) {
n = this.CrownmusicTable[e][o].musicId;
s = "" == s ? n : s + "," + n;
}
"" != window.MusicBagTable && (s = s + "," + window.MusicBagTable);
window.MusicBagTable = s;
window.Parent.setlocalStorage("MusicBagTable", window.MusicBagTable);
i();
window.Parent.WowSounds();
window.Parent.UnlockSounds();
} else 0 == window.getCrownNum ? window.Crown.showAddCrownNode() : this.TipNode.active = !0;
},
goaction: function() {
window.Home.showCrownMusic();
this.close(!1);
},
goChallenge: function() {
window.Parent.ButtonSounds();
this.close(!1);
window.Home.showNormalMusic();
},
closePerviewNode: function() {
this.perViewNode.active = !1;
this.stopMusic();
window.Home.playMusic();
},
closeTipsNode: function() {
window.Parent.ButtonSounds();
this.TipNode.active = !1;
},
stopMusic: function() {
for (var e = 0; e < this.perviewCDArr.length; e++) void 0 != this.perviewCDArr[e] && this.perviewCDArr[e].getChildByName("pause").active && this.perviewCDArr[e].getComponent("perviewCDJS").pauseMusic();
},
sliceback: function() {
cc.log(111);
window.Parent.qiehuanSounds();
for (var e = this.CDpageview.getComponent(cc.PageView).getCurrentPageIndex(), t = 0; t < this.CdNumArr.length; t++) if (t === e) {
this.CdNumArr[t].getChildByName("CDbox").active = !0;
this.CdNumArr[t].getChildByName("CDboxpicture").active = !1;
this.CdNumArr[t].getComponent("CDJS").shakeCD();
} else {
this.CdNumArr[t].getChildByName("CDbox").active = !1;
this.CdNumArr[t].getChildByName("CDboxpicture").active = !0;
this.CdNumArr[t].getComponent("CDJS").shakeCD();
}
},
SceneSlickBack: function(e, t) {},
selectStore: function(e, t) {
t = Number(t);
window.Parent.ButtonSounds();
switch (t) {
case 1:
o.default.getInstance().reportAnalytics("View_Show_V2", "ShopUI_MusicBag__Show", 1);
this.CdNumArr || this.creatCD();
this.CDpageview.active = !0;
this.Scenepageview.active = !1;
this.RoleViewNode.active = !1;
this.CDButton.getChildByName("light").active = !0;
this.SceneButton.getChildByName("light").active = !1;
this.RoleButton.getChildByName("light").active = !1;
this.RoleSP.color = new cc.color("#af81e3");
this.SceneSP.color = new cc.color("#af81e3");
this.SongsSP.color = new cc.color("#682e08");
break;

case 2:
o.default.getInstance().reportAnalytics("View_Show_V2", "ShopUI_Scene__Show", 1);
window.Parent.reportAnalytics("ShopScene_page_access");
this.SceneArr || this.CreatScenebg();
this.CDpageview.active = !1;
this.Scenepageview.active = !0;
this.RoleViewNode.active = !1;
this.CDButton.getChildByName("light").active = !1;
this.SceneButton.getChildByName("light").active = !0;
this.RoleButton.getChildByName("light").active = !1;
this.SceneSlickBack(null, !1);
this.RoleSP.color = new cc.color("#af81e3");
this.SceneSP.color = new cc.color("#682e08");
this.SongsSP.color = new cc.color("#af81e3");
break;

case 0:
o.default.getInstance().reportAnalytics("View_Show_V2", "ShopUI_Role__Show", 1);
this.RoleArr || this.CreatRole();
this.CDpageview.active = !1;
this.Scenepageview.active = !1;
this.RoleViewNode.active = !0;
this.CDButton.getChildByName("light").active = !1;
this.SceneButton.getChildByName("light").active = !1;
this.RoleButton.getChildByName("light").active = !0;
this.RoleSP.color = new cc.color("#682e08");
this.SceneSP.color = new cc.color("#af81e3");
this.SongsSP.color = new cc.color("#af81e3");
}
},
UseSceneButtonclick: function(e) {
window.Parent.ButtonSounds();
window.Parent.reportAnalytics("ShopScene_use_click");
window.SceneNumber = e;
window.Parent.setlocalStorage("SceneNumber", window.SceneNumber);
for (var t = 0; t < this.Scenecontent.childrenCount; t++) {
this.Scenecontent.children[t].getComponent("NewScenebgJS").UpdateBTNActive();
}
},
SceneVideoButtnClick: function(e) {
var t = this;
window.Parent.ButtonSounds();
if ("video" === window.SceneUnlockType[e]) {
window.Parent.reportAnalytics("ShopScene_vedio_click");
window.Parent.showVideo(function(e) {
if (e) {
t.SceneSlickBack(null, !1);
for (var i = 0; i < t.Scenecontent.childrenCount; i++) t.Scenecontent.children[i].getComponent("NewScenebgJS").UpdateBTNActive();
}
});
} else {
window.Parent.reportAnalytics("ShopScene_diadema_click");
if (window.CrownNum >= window.SceneUnlockNumber[e]) {
window.Crown.reduceCrown(window.SceneUnlockNumber[e]);
window.sceneIsUnlock[e] = !0;
window.Parent.setlocalStorage("sceneIsUnlock" + e, !0);
t.SceneSlickBack(null, !1);
cc.log(window.sceneIsUnlock);
for (var i = 0; i < t.Scenecontent.childrenCount; i++) {
t.Scenecontent.children[i].getComponent("NewScenebgJS").UpdateBTNActive();
}
} else 0 == window.getCrownNum ? window.Crown.showAddCrownNode() : this.TipNode.active = !0;
}
},
GetUnclockSkinNum: function() {
for (var e = -1, t = 0; t < window.SceneUnlockType.length; t++) if ("video" == window.SceneUnlockType[t]) {
if (window.videoTimes < window.SceneUnlockNumber[t]) {
e = t;
break;
}
} else if ("crown" == window.SceneUnlockType[t] && !window.sceneIsUnlock[t]) {
e = t;
break;
}
console.log("curNum : " + e);
return -1 == e ? window.SceneNumber : e;
},
CreatRole: function() {
this.RoleArr = [];
this.RoleContent.height = 700 * Math.floor((window.roleName.length + 1) / 2) + 230;
for (var e = 0; e < window.roleName.length; e++) {
var t = cc.instantiate(this.RoleFab);
t.getComponent("NewRolebgJS").Number = e;
t.getComponent("NewRolebgJS").RoleName = window.roleName[e];
t.getComponent("NewRolebgJS").RoleSpr = window.Role_Sprit[e];
t.getComponent("NewRolebgJS").crownStore = this.node;
t.getComponent("NewRolebgJS").UpdateBTNActive(window.RoleNum);
t.parent = this.RoleContent;
e % 2 == 0 ? t.setPosition(cc.v2(-220, -260 - 700 * Math.floor(e / 2))) : t.setPosition(cc.v2(220, -260 - 700 * Math.floor(e / 2)));
this.RoleArr[e] = t;
}
},
UseRoleButtonclick: function(e) {
if (0 != e) {
window.Parent.setlocalStorage("RoleModel", !0);
window.RoleModel = !0;
window.Parent.ButtonSounds();
window.RoleNum = e;
window.Parent.setlocalStorage("RoleNum", window.RoleNum);
for (var t = 0; t < this.RoleContent.childrenCount; t++) {
this.RoleContent.children[t].getComponent("NewRolebgJS").UpdateBTNActive();
}
window.Home.UpdateHomeRoleList();
} else {
window.Parent.setlocalStorage("RoleModel", !1);
window.RoleModel = !1;
window.Parent.ButtonSounds();
for (var i = 0; i < this.RoleContent.childrenCount; i++) {
this.RoleContent.children[i].getComponent("NewRolebgJS").UpdateBTNActive();
}
}
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics",
constants: 6
} ],
NewHomeNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c86dcR6avxGW4Og1LOtWF+n", "NewHomeNodeJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
RecommondMusicPrefab: cc.Prefab,
OtherMusicPrefab: cc.Prefab,
RoleDataPrefab: cc.Prefab,
SignNodeFab: cc.Prefab,
FaceCamerNode: cc.Node,
LoadingNode: cc.Node,
MusicLoadingNode: cc.Node,
PowerNode: cc.Node,
topNode: cc.Node,
RecommondTopSP: [ cc.SpriteFrame ],
QuickStartSP: [ cc.SpriteFrame ]
},
onLoad: function() {
window.isFirstSign = !1;
window.Home = this;
window.HomeNode = this.node;
this.LoadingNode.active = !0;
this.UnLockList = [];
this.node.setContentSize(window.screenWidth, window.screenHight);
this.getlocalStorage();
this.reflashData();
this.defination();
this.loadLightRes();
this.SetHomeRoleList();
switch (window.platform) {
case 0:
case 2:
case 5:
break;

case 1:
this.checkQQBox();
break;

case 3:
if ("ios" != window.PhoneType) {
this.moreReplayButton.active = !1;
this.morerepl;
} else {
this.moreReplayButton.active = !0;
this.moreMoreGamePos.active = !1;
}
if (!window.TestModle) {
tt.requestSubscribeMessage;
tt.addShortcut && "ios" != window.PhoneType && (this.moreAddDeskBTN.active = !1);
}
break;

case 4:
window.TestModle ? this.moreMoreGamePos.active = !0 : this.schedule(function() {
this.checkQQBox();
}, 5);
}
if (3 == window.platform && 0 == window.TestModle) {
console.log("浮窗引导组件");
var e = new Date(), t = window.Parent.getlocalStorage("lastshowfavday"), i = Number(window.Parent.getlocalStorage("showFavTimes"));
if (t) {
var o = new Date(t.replace(/-/g, "/"));
if (e - o >= 6048e5 && i < 2) {
console.log("Start 浮窗");
tt.showFavoriteGuide({
type: "bar",
content: "一键添加到我的小程序",
position: "bottom",
success: function(t) {
console.log("引导组件展示成功");
window.Parent.setlocalStorage("lastshowfavday", e.toString());
i++;
window.Parent.setlocalStorage("showFavTimes", i);
},
fail: function(e) {
console.log("引导组件展示失败");
}
});
}
} else {
console.log("Start 浮窗");
tt.showFavoriteGuide({
type: "bar",
content: "一键添加到我的小程序",
position: "bottom",
success: function(t) {
console.log("引导组件展示成功");
window.Parent.setlocalStorage("lastshowfavday", e.toString());
i++;
window.Parent.setlocalStorage("showFavTimes", i);
},
fail: function(e) {
console.log("引导组件展示失败");
}
});
}
}
this.getPassword();
},
onEnable: function() {
o.default.getInstance().reportAnalytics("View_Show_V2", "MainUI_Show", 1);
window.highModelList = [];
window.Parent.hidePushicon();
window.Parent.showBanner();
window.Parent.hideNavigateSettle();
window.Parent.hideNavigateBoxBanner();
this.checkQQBox();
if (3 == window.platform) {
this.FaceCamerNode.active = !1;
window.GameStart = !1;
window.PowerNode.active = !0;
this.scheduleOnce(function() {
window.Record.matchHomeNode();
window.Record.RecordButton.active = !0;
}, .01);
}
window.DiamondNode.active = !0;
window.CrownNode.active = !0;
1 == window.isShowMusicList ? window.ConstellationNum < 12 ? this.showConstellationdetail(window.ConstellationNum) : 12 == window.ConstellationNum && this.showNormalMusic() : 2 == window.isShowMusicList ? this.showCrownMusic() : 3 == window.isShowMusicList ? this.ShowMyMusic() : 4 == window.isShowMusicList ? window.CardNodeJS && window.CardNodeJS.ShowBackRecommond() : 5 == window.platform && window.Parent.showPushicon(256, 256, 200, 1500);
this.checkDailyReward();
this.MusicCon.getComponent(cc.ScrollView).scrollToTop();
window.Home.UpdateQuickStartStatus();
this.topNode.active = !0;
window.RecordNode.parent = this.recordPositon;
window.isGaming = !1;
window.Record && window.Record.ShareNode && window.Record.closeShareNode();
window.TouchPlayMusic = !1;
var e = Number(window.Parent.getlocalStorage("GuideNum"));
if (e >= 4 && e < 6) {
1 == Number(window.Parent.getlocalStorage("PlayGame")) && window.Home.AutoGuide();
}
},
onDisable: function() {
this.closemoreGame();
if (4 === window.platform && this.isshowBlockAd) {
window.Parent.hideBlockAd();
this.isshowBlockAd = !1;
}
5 == window.platform && window.Parent.hidePushicon();
this.topNode.active = !1;
window.RecordNode.parent = window.ParentNode;
window.RecordNode.y = 0;
},
update: function() {
window.Record.RecordButton && window.Record.matchHomeNode();
this.UpdateGroupActive();
this.GetMusicLocalData();
0 == this.isLoadHomePrefab && this.SetHomePrefab();
},
getlocalStorage: function() {
window.scenName = [ "炫彩节奏", "绿野仙踪", "梦幻海洋", "海上世界", "暮色山川", "樱花之都", "沙漠古道" ];
window.roleName = [ "炫彩球球", "华丽蓝蓝", "歌手里昂", "未来歌姬", "白羊座", "处女座" ];
var e = this;
window.hasshowNewSong = 0;
window.signTimes = Number(window.Parent.getlocalStorage("signTimes"));
window.isfirstgetCrown = Number(window.Parent.getlocalStorage("isfirstgetCrown"));
window.hasshowStoreTips = Number(window.Parent.getlocalStorage("hasshowStoreTips"));
window.MissionCrownNumber = Number(window.Parent.getlocalStorage("MissionCrownNumber"));
window.SceneNumber = Number(window.Parent.getlocalStorage("SceneNumber"));
window.ColectTable = window.Parent.getlocalStorage("ColectTable");
window.MusicBagTable = window.Parent.getlocalStorage("MusicBagTable");
window.unlockCrownMusicName = window.Parent.getlocalStorage("unlockCrownMusicName");
window.ClearTable = window.Parent.getlocalStorage("ClearTable");
window.videoTimes = Number(window.Parent.getlocalStorage("videoTimes"));
null == window.unlockCrownMusicName && (window.unlockCrownMusicName = "");
null == window.MusicBagTable && (window.MusicBagTable = "");
null == window.ColectTable && (window.ColectTable = "");
null == window.ClearTable && (window.ClearTable = "");
window.AchieveNumber = [];
window.AchieveLevel = [];
window.MissionNumber = [];
window.MissionHasget = [];
this.missionTargetNum = [];
this.beishu = 1;
window.sceneIsUnlock = [];
for (var t = 0; t < window.scenName.length; t++) {
window.sceneIsUnlock[t] = window.Parent.getlocalStorage("sceneIsUnlock" + t);
"true" === window.sceneIsUnlock[t] || 0 == t ? window.sceneIsUnlock[t] = !0 : window.sceneIsUnlock[t] = !1;
}
window.roleIsUnlock = [];
for (t = 0; t < window.roleName.length; t++) {
window.roleIsUnlock[t] = window.Parent.getlocalStorage("roleIsUnlock" + t);
"true" === window.roleIsUnlock[t] || 0 == t ? window.roleIsUnlock[t] = !0 : window.roleIsUnlock[t] = !1;
}
window.SceneUnlockNumber = [ 0, 2, 2, 2, 18, 18, 18 ];
window.SceneUnlockType = [ "video", "video", "video", "video", "crown", "crown", "crown" ];
window.RoleUnlockNumber = [ 0, 1, 1, 1, 1, 1 ];
window.RoleUnlockType = [ "video", "video", "video", "video", "video", "video" ];
for (t = 0; t < window.AchieveTable.length; t++) {
window.AchieveNumber[t] = Number(window.Parent.getlocalStorage("AchieveNumber" + t));
window.AchieveLevel[t] = Number(window.Parent.getlocalStorage("AchieveLevel" + t));
}
window.yinfuNumber = Number(window.Parent.getlocalStorage("yinfuNumber"));
window.firstFaceModel = window.Parent.getlocalStorage("firstFaceModel");
window.hasshowFaceTips = Number(window.Parent.getlocalStorage("hasshowFaceTips"));
"false" === window.firstFaceModel ? window.firstFaceModel = !1 : window.firstFaceModel = !0;
if (3 === window.platform) {
window.hasShare = window.Parent.getlocalStorage("hasShare");
"true" === window.hasShare ? window.hasShare = !0 : window.hasShare = !1;
window.hasGet = window.Parent.getlocalStorage("hasGet");
"true" === window.hasGet ? window.hasGet = !0 : window.hasGet = !1;
window.hasfollow = window.Parent.getlocalStorage("hasfollow");
"true" === window.hasfollow ? window.hasfollow = !0 : window.hasfollow = !1;
window.hasfollow = !0;
this.hasFllowOfficial = Number(window.Parent.getlocalStorage("hasFllowOfficial"));
if (isNaN(this.hasFllowOfficial)) {
console.log("hasFllowOfficial数据有误");
this.hasFllowOfficial = 0;
window.Parent.setlocalStorage("hasFllowOfficial", e.hasFllowOfficial);
}
this.hasGetOfficialMusic = Number(window.Parent.getlocalStorage("hasGetOfficialMusic"));
window.powerNum = Number(window.Parent.getlocalStorage("powerNum"));
isNaN(window.powerNum) && (window.powerNum = 20);
this.LastTime = Number(window.Parent.getlocalStorage("LastTime"));
var i = Math.abs((new Date().getTime() - this.LastTime) / 1e3);
window.powerNum += Math.floor(i / 30);
window.powerNum >= 20 && (window.powerNum = 20);
window.powerNum <= 0 && (window.powerNum = 0);
this.PowerNode.getChildByName("PowerBg").getChildByName("num").getComponent(cc.Label).string = window.powerNum + "/20";
window.Parent.setlocalStorage("powerNum", window.powerNum);
if (!window.TestModle && "devtools" != window.PhoneType && "Douyin" === window.AppName && tt.checkFollowAwemeState) tt.checkFollowAwemeState({
success: function(t) {
console.log("是否关注抖音号", t.hasFollowed);
if (t.hasFollowed) {
e.hasFllowOfficial = 1;
window.Parent.setlocalStorage("hasFllowOfficial", e.hasFllowOfficial);
1 != Number(window.Parent.getlocalStorage("EggShellClock0")) && window.Parent.setlocalStorage("EggShellClock0", 1);
} else if (1 === e.hasGetOfficialMusic) {
e.hasFllowOfficial = 0;
window.Parent.showTips("取消关注");
e.cancelFollowMusic();
}
},
fail: function(e) {
console.log("---- check fail,", e);
},
complete: function(e) {
console.log("---- check complete, res: ", e);
}
}); else if ("Douyin" != window.AppName) {
this.hasFllowOfficial = 1;
window.Parent.setlocalStorage("hasFllowOfficial", this.hasFllowOfficial);
}
if (3 == window.platform && window.TestModle || 3 == window.platform && "Douyin" != window.AppName) {
1 != Number(window.Parent.getlocalStorage("EggShellClock0")) && window.Parent.setlocalStorage("EggShellClock0", 1);
}
} else if (3 != window.platform) {
1 != Number(window.Parent.getlocalStorage("EggShellClock0")) && window.Parent.setlocalStorage("EggShellClock0", 1);
}
this.perviewmusicNum = Number(window.Parent.getlocalStorage("perviewmusicNum"));
if (cc.sys.os === cc.sys.OS_IOS && 5 == window.platform) {
1 != Number(window.Parent.getlocalStorage("EggShellClock0")) && window.Parent.setlocalStorage("EggShellClock0", 1);
}
window.RoleModel = window.Parent.getlocalStorage("RoleModel");
"true" === window.RoleModel ? window.RoleModel = !0 : window.RoleModel = !1;
window.RoleNum = Number(window.Parent.getlocalStorage("RoleNum"));
window.modelSelect = 0;
window.highLvSelect = !0;
window.highModelList = [];
window.isShowIOS = !1;
window.playNum = 0;
window.playName = "";
window.hasshowXingzuoTips = !1;
this.descriptionString = [ "白羊座有一种让人看见就觉得开心的感觉，因为总是看起来都是那么地热情、阳光、乐观、坚强，对朋友也慷慨大方，性格直来直往，就是有点小脾气。白羊男有大男人主义的性格，而白羊女就是女汉子的形象。", "金牛座很保守，喜欢稳定，一旦有什么变动就会觉得心里不踏实，性格也比较慢热，但你是理财高手，对于投资理财都有着独特的见解。金牛男的性格有点儿自我，而金牛女就喜欢投资自己，想要过得更好。", "双子座喜欢追求新鲜感，有点儿小聪明，就是耐心不够，往往做事都是三分钟热度，难以坚持，但是你的可爱性格会让很多人都喜欢跟你做朋友。双子男表面很花心，其实深情，而双子女就喜欢求新和求变。", "巨蟹座的情绪容易敏感，也缺乏安全感，容易对一件事情上心，做事情有坚持到底的毅力，为人重情重义，对朋友、家人都特别忠实，巨蟹男是一等一的好男人，顾家爱家人，巨蟹女充满母性光环，非常有爱心。", "狮子座有着宏伟的理想，总想靠自己的努力成为人上人，你向往高高在上的优越感，也期待被仰慕被崇拜的感觉，有点儿自信有点儿自大。狮子男的大男人气息很重，爱面子，狮子女热情阳光，对朋友讲义气。", "处女座虽然常常被黑，但你还是依然坚持追求自己的完美主义，因为在你看来，生活不能将就，追求的完美更不能将就，有目标才有进步，当然也需要鼓励。处女男的毅力很强，能坚持，处女女的求知欲很强。", "天秤座常常追求平等、和谐，擅于察言观色，交际能力很强，因此真心朋友不少，因为你也足够真诚，但是最大的缺点就是面对选择总是犹豫不决。天秤男容易在乎自己而忽略别人，天秤女就喜欢被陪伴的感觉。", "天蝎座精力旺盛、占有欲极强，对于生活很有目标，不达到目的誓不罢休，复仇心理重，记仇会让自己不顾一切报复曾经伤害过你的人。天蝎男自我主义色彩很强烈，天蝎女的自我保护意识很强，不容易接近。", "射手座崇尚自由，勇敢、果断、独立，身上有一股勇往直前的劲儿，不管有多困难，只要想，就能做，你的毅力和自信是难以击倒的。射手男酷爱自由，讨厌被束缚，射手女性格简单直接，不耍心计，可是任性。", "摩羯座是十二星座中最有耐心，为事最小心、也是最善良的星座。他们做事脚踏实地，也比较固执，不达目的是不会放手的。他们的忍耐力也是出奇的强大，同时也非常勤奋。然而含蓄不善于表达，缺乏安全感。", "水瓶座的人很聪明，他们最大的特点是创新，追求独一无二的生活，个人主义色彩很浓重的星座。他们对人友善又注重隐私。水瓶座绝对算得上是”友谊之星“，他喜欢结交每一类朋友，但是确很难与他们交心。", "双鱼座是十二宫最后一个星座，他集合了所有星座的优缺点于一身，同时受水象星座的情绪化影响，使他们原来复杂的性格又添加了更复杂的一笔。双鱼座的人最大的优点是有一颗善良的心，他们很愿意帮助别人。" ];
this.tips1String = [ "白羊座", "金牛座", "双子座", "巨蟹座", "狮子座", "处女座", "天秤座", "天蝎座", "射手座", "摩羯座", "水瓶座", "双鱼座" ];
this.DataString = [ "3月21日-4月19日", "4月20日-5月20日", "5月21日-6月21日", "6月22日-7月22日", "7月23日-8月22日", "8月23日-9月22日", "9月23日-10月23日", "10月24日-11月22日", "11月23日-12月21日", "12月22日-1月19日", "1月20日-2月18日", "2月19日-3月20日" ];
window.ConstellationNum = 12;
window.isLimit = !1;
window.curHomeRoleNum = 0;
this.maxRoleNum = window.roleName.length;
this.curSelectList = -1;
this.moreAnim = !1;
this.touchRecommond = !1;
this.pageCurPageNum = 0;
this.roleCurPageNum = 0;
window.recommondTime = void 0;
this.loadAllOk = !1;
window.curTime = void 0;
this.MainScrolling = !1;
this.playMusicType = 0;
this.playMusicListNum1 = -1;
this.playMusicListNum2 = -1;
this.playMusicListNum3 = -1;
this.playMusicListNum4 = -1;
this.playMusicListNum5 = -1;
this.playMusicListNum6 = -1;
0 == Number(window.Parent.getlocalStorage("favourPageShow")) && (window.FirstSelectFavour = []);
this.isDealOK = !1;
window.NeedUpdateList = [];
window.HomeID = void 0;
this.HistoryLikeList = [];
this.HistoryHotList = [];
this.HistoryOtherList = [];
this.CanRefreshLike = !0;
this.CanRefreshOther = !0;
this.CanRefreshHot = !0;
this.dealUnClearOK = !1;
this.dealClearOK = !1;
window.TouchPlayMusic = !1;
this.playDayMusic = !1;
this.LoadMusicCount = 0;
this.LoadMusicOk = !1;
this.startLoadMusic = !1;
this.curSelectTable = [];
this.newSongTable = [];
this.unlockTable = [];
this.needPlayTable = [];
this.LoadPrefabNum = 0;
this.isLoadHomePrefab = !1;
this.homePrefabList = [ "GRP_Card", "GRP_Gift", "GRP_Hot", "GRP_Like", "GRP_Other", "GRP_End" ];
this.isShowHot = !1;
this.isShowOther = !1;
this.topQuick = !1;
this.isShowDate = !1;
this.isLoadHomePrefabOK = !1;
this.tipsNodeList = [];
},
defination: function() {
this.MainCon = this.node.getChildByName("GRP_MainCon");
this.qqBTN = this.MainCon.getChildByName("qq_box");
this.recordPos = this.MainCon.getChildByName("recordPos");
this.IconPos = this.MainCon.getChildByName("IconPos");
this.blockPos = this.MainCon.getChildByName("blockAdPositon");
this.MusicCon = this.node.getChildByName("GRP_MusicScroll");
this.MusicContent = this.MusicCon.getChildByName("view").getChildByName("content");
this.wallCon = this.MusicContent.getChildByName("GRP_Wall");
this.recordPositon = this.wallCon.getChildByName("recordPositon");
this.CurRoleCon = this.wallCon.getChildByName("GRP_CurRole");
this.RolePageView = this.CurRoleCon.getChildByName("RoleSPPageView");
this.RoleContent = this.RolePageView.getChildByName("view").getChildByName("content");
this.myMusicBTN = this.wallCon.getChildByName("icon_MyMusic");
this.moreButton = this.wallCon.getChildByName("moreButton");
this.moreButtonbg = this.wallCon.getChildByName("moreButtonbg");
this.moreButtonPos = this.wallCon.getChildByName("moreButtonPos");
this.moreButtonbgPos = this.wallCon.getChildByName("moreButtonbgPos");
this.scheduleOnce(function() {
this.moreButton.setPosition(cc.v2(this.moreButtonPos.x, this.moreButtonPos.y));
this.moreButtonbg.setPosition(cc.v2(this.moreButtonbgPos.x, this.moreButtonbgPos.y));
}, 0);
this.moreTopCon = this.moreButtonbg.getChildByName("GRP_Top");
this.curDouyinBTN = this.moreTopCon.getChildByName("icon_douyin");
this.curDouyinFollow = this.curDouyinBTN.getChildByName("sp_follow");
this.moreGiftBTN = this.moreTopCon.getChildByName("icon_gift");
this.moreDownCon = this.moreButtonbg.getChildByName("GRP_Down");
this.moreAchieveButton = this.moreDownCon.getChildByName("icon_achieve");
this.moreAchievePoint = this.moreAchieveButton.getChildByName("sp_point");
this.morecheckButton = this.moreDownCon.getChildByName("icon_sign");
this.moreAddDeskBTN = this.moreDownCon.getChildByName("icon_add");
this.moreMoreGamePos = this.moreDownCon.getChildByName("icon_moregame");
this.moreReplayButton = this.moreDownCon.getChildByName("icon_replay");
this.moreAchievePoint.active = !1;
this.SongNameCon = this.wallCon.getChildByName("GRP_SongName");
this.SongNameNode = this.SongNameCon.getChildByName("LB_SongName");
this.wallQuickBTN = this.SongNameCon.getChildByName("BTN_Quick");
this.wallVideoSP = this.wallQuickBTN.getChildByName("sp_video");
this.wallDiamondQuickBTN = this.SongNameCon.getChildByName("BTN_DiamondQuick");
this.wallDiamondQuickLB = this.wallDiamondQuickBTN.getChildByName("LB_Diamond");
if (3 == window.platform) {
"Douyin" === window.AppName || 1 == window.TestModle ? this.curDouyinBTN.active = !0 : this.curDouyinBTN.active = !1;
this.moreAddDeskBTN.active = !1;
this.moreMoreGamePos.active = !0;
} else {
this.curDouyinBTN.active = !1;
this.moreAddDeskBTN.active = !1;
this.moreMoreGamePos.active = !1;
this.moreReplayButton.active = !1;
if (1 == window.platform) {
this.moreAddDeskBTN.active = !0;
"undefined" != typeof qg && (this.moreMoreGamePos.active = !0);
}
}
this.morecheckButton.active = !1;
this.AllCon = this.MusicContent.getChildByName("GRP_All");
this.quickCon = this.MusicCon.getChildByName("view").getChildByName("GRP_Quick");
this.SongNameLB = this.quickCon.getChildByName("LB_SongName");
this.quickBTN = this.quickCon.getChildByName("BTN_Quick");
this.videoSP = this.quickBTN.getChildByName("sp_video");
this.DiamondQuickBTN = this.quickCon.getChildByName("BTN_DiamondQuick");
this.DiamondQuickLB = this.DiamondQuickBTN.getChildByName("LB_Diamond");
this.quickCon.active = !0;
this.quickCon.zIndex = 14;
this.quickCon.opacity = 0;
this.topCon = this.MusicCon.getChildByName("view").getChildByName("GRP_Top");
this.topCon.zIndex = 13;
this.UpdatePlayMusicData();
},
loadLightRes: function() {
var e = this;
this.allButtonNum = 0;
var t = this;
this.CD_Sprit = [];
this.cdcunt = 0;
t.allNum = 0;
t.loadnum = 0;
for (var i = function(i) {
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/MusicGames/CDPicture/".concat(i, ".png"),
type: "png"
}, function(o, n) {
if (o) ; else {
t.CD_Sprit[i] = new cc.SpriteFrame(n);
e.cdcunt++;
if (e.cdcunt >= 21) {
console.log("CD下载完成");
t.CDloadOk = !0;
}
}
});
}, o = 0; o < 21; o++) i(o);
t.allNum++;
var n = 0;
window.HomeRole_Sprit = [];
for (var s = function(e) {
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/RolePicture3/role".concat(e, ".png"),
type: "png"
}, function(i, o) {
if (i) ; else {
n++;
window.HomeRole_Sprit[e] = new cc.SpriteFrame(o);
if (n >= 6) {
console.log("主界面人物界面资源 加载完成");
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
t.UpdateHomeRoleList();
}
}
});
}, a = 0; a < 6; a++) s(a);
t.allNum++;
var c = 0;
window.sceneStorebg_Sprit = [];
for (var r = function(e) {
0 == e ? cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/ScenePicture/scene".concat(e, ".png"),
type: "png"
}, function(i, o) {
if (i) ; else {
window.sceneStorebg_Sprit[e] = new cc.SpriteFrame(o);
if (++c >= 7) {
console.log("商店背景资源加载完成");
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
}
}) : 0 != e && cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/ScenePicture/scene".concat(e, ".jpg"),
type: "jpg"
}, function(i, o) {
if (i) ; else {
window.sceneStorebg_Sprit[e] = new cc.SpriteFrame(o);
if (++c >= 7) {
console.log("商店背景资源加载完成");
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
}
});
}, l = 0; l < 7; l++) r(l);
t.allNum++;
var d = 0;
window.Role_Sprit = [];
for (var h = function(e) {
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/RolePicture4/role".concat(e, ".png"),
type: "png"
}, function(i, o) {
if (i) ; else {
d++;
window.Role_Sprit[e] = new cc.SpriteFrame(o);
if (d >= 6) {
console.log("人物界面资源 加载完成");
t.RoleloadOk = !0;
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
}
});
}, u = 0; u < 6; u++) h(u);
t.allNum++;
var w = 0;
window.endSceneStorebg_Sprit = [];
for (var m = function(e) {
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/EndScenePicture/scene".concat(e, ".png"),
type: "png"
}, function(i, o) {
if (i) ; else {
w++;
window.endSceneStorebg_Sprit[e] = new cc.SpriteFrame(o);
if (w >= 3) {
console.log("结算背景 加载完成");
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
}
});
}, g = 0; g < 3; g++) m(g);
t.allNum++;
var p = 0;
window.ConstellationTitle_Spr = [];
for (var f = function(e) {
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/ConstellationTitleSprites/T".concat(e, ".png"),
type: "png"
}, function(i, o) {
if (i) ; else {
p++;
window.ConstellationTitle_Spr[e] = new cc.SpriteFrame(o);
if (p >= 12) {
console.log("星座名称 加载完成");
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
}
});
}, S = 0; S < 12; S++) f(S);
t.allNum++;
var N = 0;
window.ConstellationLogo_Spr = [];
for (var v = function(e) {
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/ConstellationLogoSprites/TT".concat(e, ".png"),
type: "png"
}, function(i, o) {
if (i) ; else {
N++;
window.ConstellationLogo_Spr[e] = new cc.SpriteFrame(o);
if (N >= 12) {
console.log("星座图标 加载完成");
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
}
});
}, C = 0; C < 12; C++) v(C);
t.allNum++;
var y = 0;
window.CardPicture_Spr = [];
for (var B = function(e) {
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/CardPicture2/".concat(e, ".png"),
type: "png"
}, function(i, o) {
if (i) ; else {
y++;
window.CardPicture_Spr[e] = new cc.SpriteFrame(o);
if (y >= 17) {
console.log("卡片图像资源 加载完成");
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
}
});
}, b = 1; b <= 17; b++) B(b);
t.allNum++;
cc.loader.loadRes("PreFab/Newrecommend", cc.Prefab, function(e, i) {
if (e) console.log("Newrecommend 加载出错"); else {
console.log("Newrecommend 加载完成");
t.NewrecommendFab = i;
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
t.allNum++;
cc.loader.loadRes("PreFab/NewModelSelect", cc.Prefab, function(e, i) {
if (e) console.log("NewModelSelect 加载出错"); else {
console.log("NewModelSelect 加载完成");
t.NewModelSelectFab = i;
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
t.allNum++;
cc.loader.loadRes("PreFab/FirstTipsNode", cc.Prefab, function(e, i) {
if (e) console.log("FirstTipsNode 加载出错"); else {
console.log("FirstTipsNode 加载完成");
t.FirstTipsNodeFab = i;
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
t.allNum++;
cc.loader.loadRes("PreFab/ShareNode", cc.Prefab, function(e, i) {
if (e) console.log("ShareNode 加载出错"); else {
console.log("ShareNode 加载完成");
window.ShareNodeFab = i;
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
t.allNum++;
cc.loader.loadRes("PreFab/AddPower", cc.Prefab, function(e, i) {
if (e) console.log("AddPower 加载出错"); else {
console.log("AddPower 加载完成");
window.AddPowerFab = i;
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
t.allNum++;
cc.loader.loadRes("PreFab/AddCrownNode", cc.Prefab, function(e, i) {
if (e) console.log("AddCrownNode 加载出错"); else {
console.log("AddCrownNode 加载完成");
window.AddCrownNodeFab = i;
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
t.allNum++;
cc.loader.loadRes("PreFab/AddDimondNode", cc.Prefab, function(e, i) {
if (e) console.log("AddDimondNode 加载出错"); else {
console.log("AddDimondNode 加载完成");
window.AddDimondNodeFab = i;
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
t.allNum++;
cc.loader.loadRes("PreFab/DateGiftNode", cc.Prefab, function(e, i) {
if (e) console.log("DateGiftNode 加载出错"); else {
console.log("DateGiftNode 加载完成");
window.DateGiftNodeFab = i;
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
if (0 == Number(window.Parent.getlocalStorage("favourPageShow"))) {
t.allNum++;
cc.loader.loadRes("PreFab/FavourPage", cc.Prefab, function(e, i) {
if (e) console.log("FavourPage 加载出错"); else {
console.log("FavourPage 加载完成");
window.FavourPageFab = i;
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
}
1 != window.platform ? t.moreGiftBTN.active = !0 : t.moreGiftBTN.active = !1;
t.allNum++;
cc.loader.loadRes("PreFab/HomePrefab/GRP_Card", cc.Prefab, function(e, i) {
if (e) console.log("GRP_Card 加载出错"); else {
console.log("GRP_Card 加载完成");
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
t.allNum++;
cc.loader.loadRes("PreFab/HomePrefab/GRP_Gift", cc.Prefab, function(e, i) {
if (e) console.log("GRP_Gift 加载出错"); else {
console.log("GRP_Gift 加载完成");
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
t.allNum++;
cc.loader.loadRes("PreFab/HomePrefab/GRP_Like", cc.Prefab, function(e, i) {
if (e) console.log("GRP_Like 加载出错"); else {
console.log("GRP_Like 加载完成");
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
t.allNum++;
cc.loader.loadRes("PreFab/HomePrefab/GRP_Hot", cc.Prefab, function(e, i) {
if (e) console.log("GRP_Hot 加载出错"); else {
console.log("GRP_Hot 加载完成");
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
t.allNum++;
cc.loader.loadRes("PreFab/HomePrefab/GRP_Other", cc.Prefab, function(e, i) {
if (e) console.log("GRP_Other 加载出错"); else {
console.log("GRP_Other 加载完成");
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
t.allNum++;
cc.loader.loadRes("PreFab/HomePrefab/GRP_End", cc.Prefab, function(e, i) {
if (e) console.log("GRP_End 加载出错"); else {
console.log("GRP_End 加载完成");
t.loadnum++;
t.loadnum >= t.allNum && t.showmoreButton();
}
});
},
dealAllMusic: function() {
this.gameTable = [];
for (var e = 0; e < window.NetMusicTable.length; e++) {
var t = window.NetMusicTable[e], i = t.musicId, o = t.musicName, n = !0, s = o.indexOf("#"), a = o.indexOf("*"), c = i.indexOf("zdjz");
-1 == s && -1 == c && -1 == a || (n = !1);
"新手关卡" == o && (n = !1);
n && this.gameTable.push(t);
}
this.AllTable = [];
this.musicTable = [];
this.CrownMusicTable = [];
this.SurpriseMusicTable = [];
this.GiftcodeMusicTable = [];
this.GiftcodeList = [];
this.HotMusicTable = [];
this.OtherMusicTable = [];
this.weekRecommondTable = [];
this.limitRecommondTable = [];
this.hotTable = [];
this.likeTable = [];
this.homeMusicTable = [];
this.UnClearTable = [];
this.ClearTable = [];
this.SaveAllTableList = [];
this.SavaCrownTableList = [];
this.newRecommondTable = [];
for (var r = 0; r < this.gameTable.length; r++) {
var l = this.gameTable[r];
if (l.ex_bag) if ("当前热门" == l.ex_bag) {
this.HotMusicTable.push(l);
this.musicTable.push(l);
this.AllTable.push(l);
} else this.CrownMusicTable.push(l); else if (l.ex_surprise) {
this.SurpriseMusicTable.push(l);
this.dealEggshellData(l);
} else if (l.ex_cdkey) {
this.GiftcodeMusicTable.push(l);
this.dealGiftData(l);
} else {
this.musicTable.push(l);
this.AllTable.push(l);
}
}
this.HotMusicTable.reverse();
this.DealVivoDate();
for (var d = 0, h = [], u = 0; u < this.GiftcodeMusicTable.length; u++) {
var w = this.GiftcodeMusicTable[u].ex_cdkey.toUpperCase();
if (!h.includes(w)) {
h[d] = w;
this.GiftcodeList[d] = w;
d++;
}
}
},
dealLater: function() {
this.dealHotMusic();
this.dealClassName();
this.DayGiftList || this.DealDayGiftList();
this.LoadingNode.active = !0;
this.LoadingNode.getComponent("LoadingNodeJS").SetProgress(0);
this.startLoadMusic = !0;
this.isDealOK = !0;
},
dealEggshellData: function(e) {
1 == Number(window.Parent.getlocalStorage("EggShellClock2")) && "L46" == e.musicId && this.AllTable.push(e);
},
dealGiftData: function(e) {
var t = e.ex_cdkey.toUpperCase();
1 == Number(window.Parent.getlocalStorage("GiftCode_" + t)) && this.AllTable.push(e);
},
GetHistoryMusic: function() {
this.dayPlayList = [];
var e = window.Parent.getlocalStorage("curDayPlayID");
if (e && "null" != e) for (var t = e.split(","), i = 0; i < t.length; i++) for (var o = t[i], n = 0; n < window.Home.musicTable.length; n++) {
var s = window.Home.musicTable[n];
if (s.musicId == o) {
this.dayPlayList.push(s);
break;
}
} else {
console.log("GetHistoryMusic Down");
for (var a = !1, c = 0; c < window.Home.musicTable.length; c++) {
var r = window.Home.musicTable[c], l = window.Parent.getlocalStorage("history" + r.musicId), d = window.Parent.getlocalStorage("isUnlock" + r.musicId);
if (r.ex_recommend) ; else if ("true" != d) {
a = !0;
if ("true" != l) {
this.dayPlayList.push(r);
if (this.dayPlayList.length >= 10) break;
}
}
}
if (0 == this.dayPlayList.length && 1 == a) {
for (var h = 0; h < window.Home.musicTable.length; h++) {
var u = window.Home.musicTable[h];
"true" != window.Parent.getlocalStorage("isUnlock" + u.musicId) && window.Parent.setlocalStorage("history" + u.musicId, "false");
}
this.GetHistoryMusic();
} else if (0 == this.dayPlayList.length && 0 == a) {
for (var w = !1, m = 0; m < window.Home.musicTable.length; m++) {
var g = window.Home.musicTable[m], p = Number(window.Parent.getlocalStorage("StarNum" + g.musicId)), f = window.Parent.getlocalStorage("history" + g.musicId);
if (3 != p) {
w = !0;
if ("true" != f) {
this.dayPlayList.push(g);
if (this.dayPlayList.length >= 10) break;
}
}
}
if (0 == this.dayPlayList.length && 0 == w) {
for (var S = 0; S < window.Home.musicTable.length; S++) {
var N = window.Home.musicTable[S];
this.dayPlayList.push(N);
if (this.dayPlayList.length >= 10) break;
}
this.dayPlayList = window.Tools.disruptionArr(this.dayPlayList);
} else if (0 == this.dayPlayList.length && 1 == w) {
for (var v = 0; v < window.Home.musicTable.length; v++) {
var C = window.Home.musicTable[v];
3 != Number(window.Parent.getlocalStorage("StarNum" + C.musicId)) && window.Parent.setlocalStorage("history" + C.musicId, "false");
}
this.GetHistoryMusic();
}
}
for (var y = "", B = 0; B < this.dayPlayList.length; B++) {
var b = this.dayPlayList[B].musicId;
y = "" == y ? b : y + "," + b;
}
console.log("curDayPlayIDList : ", y);
window.Parent.setlocalStorage("curDayPlayID", y);
}
},
AddTableMusicList: function(e, t) {
if (1 == e) for (var i = 0; i < window.Home.SurpriseMusicTable.length; i++) {
var o = window.Home.SurpriseMusicTable[i];
if (o.musicId == t) {
window.Home.musicTable.unshift(o);
window.Home.AllTable.unshift(o);
}
} else if (2 == e) for (var n = 0; n < window.Home.GiftcodeMusicTable.length; n++) {
var s = window.Home.GiftcodeMusicTable[n];
if (s.musicId == t) {
window.Home.musicTable.unshift(s);
window.Home.AllTable.unshift(s);
}
}
},
RemoveSongTabel: function(e) {
for (var t = this.newSongTable.length - 1; t >= 0; t--) {
if (e == this.newSongTable[t].musicId) {
this.newSongTable.splice(t, 1);
break;
}
}
for (var i = 0; i < this.newRecommondTable.length; i++) {
if (e == this.newRecommondTable[i].musicId) {
this.newRecommondTable.splice(i, 1);
break;
}
}
for (var o = this.needPlayTable.length - 1; o >= 0; o--) {
if (e == this.needPlayTable[o].musicId) {
this.needPlayTable.splice(o, 1);
break;
}
}
for (var n = this.curSelectTable.length - 1; n >= 0; n--) {
if (e == this.curSelectTable[n].musicId) {
this.curSelectTable.splice(n, 1);
break;
}
}
for (var s = 0; s < this.homeMusicTable.length; s++) {
if (e == this.homeMusicTable[s].musicId) {
this.homeMusicTable.splice(s, 1);
break;
}
}
},
reflashData: function() {
var e = window.Parent.getlocalStorage("lastday2"), t = String(new Date().getDay());
if (t != e) {
e = t;
window.Parent.setlocalStorage("lastday2", e);
window.hasShare = !1;
window.Parent.setlocalStorage("hasShare", window.hasShare);
window.hasGet = !1;
window.Parent.setlocalStorage("hasGet", window.hasGet);
window.MissionCrownNumber = 0;
window.Parent.setlocalStorage("MissionCrownNumber", 0);
for (var i = 0; i < window.MissionNumber.length; i++) {
window.MissionNumber[i] = 0;
window.Parent.setlocalStorage("MissionNumber" + i, window.MissionNumber[i]);
window.MissionHasget[i] = !1;
window.Parent.setlocalStorage("MissionHasget" + i, window.MissionHasget[i]);
}
window.yinfuNumber = 0;
window.Parent.setlocalStorage("yinfuNumber", window.yinfuNumber);
window.Parent.setlocalStorage("isFirstTips", 0);
window.Parent.setlocalStorage("showRecord", 0);
window.hasshowFaceTips = 0;
window.Parent.setlocalStorage("hasshowFaceTips", window.hasshowFaceTips);
var o = window.Parent.getlocalStorage("curDayPlayID");
if (o && "null" != o) {
for (var n = o.split(","), s = 0; s < n.length; s++) window.Parent.setlocalStorage("history", n[s]);
window.Parent.setlocalStorage("curDayPlayID", "");
}
var a = window.Parent.getlocalStorage("curGiftID");
if (a && "null" != a) {
for (var c = a.split(","), r = 0; r < c.length; r++) window.Parent.setlocalStorage("daygift", c[r]);
window.Parent.setlocalStorage("curGiftID", "");
}
}
},
dealHotMusic: function() {
this.unlockHotList = [];
this.unplayHotList = [];
this.unAllStarHotList = [];
this.lockHotList = [];
for (var e = 0; e < this.HotMusicTable.length; e++) {
var t = this.HotMusicTable[e], i = t.musicId, o = window.Parent.getlocalStorage("isUnlock" + i), n = Number(window.Parent.getlocalStorage("StarNum" + i));
if ("true" == o) o = !0; else if ("coin" == t.unlockType && "0" == t.unlockCost) {
o = !0;
window.Parent.setlocalStorage("isUnlock" + i, !0);
} else o = !1;
if (1 == o) {
"true" != Number(window.Parent.getlocalStorage("HasPlayed" + i)) ? this.unplayHotList.push(t) : 3 != n ? this.unlockHotList.push(t) : this.unAllStarHotList.push(t);
} else this.lockHotList.push(t);
}
},
dealClassName: function() {
var e = [];
this.classNameArr = [];
for (var t = 0; t < this.musicTable.length; t++) {
e[0] = this.musicTable[t].ex_tag1_theme.split(",");
e[1] = this.musicTable[t].ex_tag2_scene.split(",");
e[2] = this.musicTable[t].ex_tag3_mood.split(",");
e[3] = this.musicTable[t].ex_tag4_age.split(",");
e[4] = this.musicTable[t].ex_tag5_genre.split(",");
e[5] = this.musicTable[t].ex_tag6_language.split(",");
for (var i = 0; i < e.length; i++) for (var o = 0; o < e[i].length; o++) this.classNameArr.push(e[i][o]);
}
this.classNameArr = Array.from(new Set(this.classNameArr));
if (0 == Number(window.Parent.getlocalStorage("SetClassOK"))) {
for (var n = {}, s = 0; s < this.classNameArr.length; s++) {
var a = this.classNameArr[s];
isNaN(window.FirstSelectFavour[a]) ? n[a] = 0 : n[a] = window.FirstSelectFavour[a];
}
var c = JSON.stringify(n);
window.Parent.setlocalStorage("scoreList", c);
window.Parent.setlocalStorage("SetClassOK", 1);
console.log("curData : ", n);
}
this.redealTable();
},
redealTable: function() {
this.classNumArr = [];
var e = new Date().getTime(), t = window.Parent.getlocalStorage("scoreList");
t = JSON.parse(t);
for (var i = 0; i < this.classNameArr.length; i++) {
var o = this.classNameArr[i];
this.classNumArr[i] = t[o];
}
for (var n = [], s = [], a = 0; a < this.musicTable.length; a++) {
var c = 0;
s[0] = this.musicTable[a].ex_tag1_theme.split(",");
s[1] = this.musicTable[a].ex_tag2_scene.split(",");
s[2] = this.musicTable[a].ex_tag3_mood.split(",");
s[3] = this.musicTable[a].ex_tag4_age.split(",");
s[4] = this.musicTable[a].ex_tag5_genre.split(",");
s[5] = this.musicTable[a].ex_tag6_language.split(",");
for (var r = 0; r < s.length; r++) if (3 != r) for (var l = 0; l < s[r].length; l++) for (var d = 0; d < this.classNameArr.length; d++) s[r][l] === this.classNameArr[d] && (c += this.classNumArr[d]);
n[a] = c;
}
for (var h = this.musicTable.length; h > 0; ) {
for (i = this.musicTable.length - 1; i > 0; i--) {
if (n[i] > n[i - 1]) {
var u = this.musicTable[i - 1];
this.musicTable[i - 1] = this.musicTable[i];
this.musicTable[i] = u;
var w = n[i - 1];
n[i - 1] = n[i];
n[i] = w;
}
}
h--;
}
console.log("歌单处理时间1 ", new Date().getTime() - e, "毫秒");
e = new Date().getTime();
this.GetHistoryMusic();
console.log("歌单处理时间2 ", new Date().getTime() - e, "毫秒");
e = new Date().getTime();
for (var m = 0, g = 0; g < this.musicTable.length - 1; g++) {
var p = n[g], f = n.lastIndexOf(p);
if (0 != g) if (g != f) {
var S = parseInt(Math.random() * (f - m)) + m, N = this.musicTable[g];
this.musicTable[g] = this.musicTable[S];
this.musicTable[S] = N;
} else m = g; else m = 1;
}
console.log("歌单处理时间3 ", new Date().getTime() - e, "毫秒");
},
ResetUnClearList: function() {
if (1 != this.dealUnClearOK) {
for (var e = new Date().getTime(), t = 0; t < window.Home.musicTable.length; t++) {
var i = window.Home.musicTable[t], o = i.musicId, n = window.Parent.getlocalStorage("isUnlock" + o);
if (1 == (n = "true" == n || "coin" == i.unlockType && "0" == i.unlockCost) && this.UnClearTable && -1 == this.UnClearTable.indexOf(i)) {
var s = window.Parent.getlocalStorage("HasClear" + o);
0 == (s = "true" == s) && this.UnClearTable.push(i);
}
}
console.log("重新设置尚未通关列表处理时间1 ", new Date().getTime() - e, "毫秒");
e = new Date().getTime();
for (var a = 0; a < window.Home.CrownMusicTable.length; a++) {
var c = window.Home.CrownMusicTable[a], r = c.musicId, l = c.ex_bag;
if (-1 != window.unlockCrownMusicName.indexOf(l)) {
var d = window.Parent.getlocalStorage("isUnlock" + r);
if (1 == (d = "true" == d || "coin" == c.unlockType && "0" == c.unlockCost) && this.UnClearTable && -1 == this.UnClearTable.indexOf(c)) {
var h = window.Parent.getlocalStorage("HasClear" + r);
0 == (h = "true" == h) && this.UnClearTable.push(c);
}
}
}
console.log("重新设置尚未通关列表处理时间2 ", new Date().getTime() - e, "毫秒");
e = new Date().getTime();
for (var u = 0; u < window.Home.lockDayGiftList.length; u++) {
var w = window.Home.lockDayGiftList[u], m = w.musicId, g = window.Parent.getlocalStorage("isUnlock" + m);
if (1 == (g = "true" == g || "coin" == w.unlockType && "0" == w.unlockCost) && this.UnClearTable && -1 == this.UnClearTable.indexOf(w)) {
var p = window.Parent.getlocalStorage("HasClear" + m);
0 == (p = "true" == p) && this.UnClearTable.push(w);
}
}
console.log("重新设置尚未通关列表处理时间3 ", new Date().getTime() - e, "毫秒");
this.dealUnClearOK = !0;
}
},
ReSetClearList: function() {
if (1 != this.dealClearOK) {
for (var e = new Date().getTime(), t = window.ClearTable.split(","), i = 0; i < t.length; i++) {
for (var o = 0; o < window.Home.musicTable.length; o++) {
var n = window.Home.musicTable[o];
n.musicId == t[i] && -1 == this.ClearTable.indexOf(n) && this.ClearTable.push(n);
}
for (var s = 0; s < window.Home.CrownMusicTable.length; s++) {
var a = window.Home.CrownMusicTable[s], c = a.musicId, r = a.ex_bag;
-1 != window.unlockCrownMusicName.indexOf(r) && c == t[i] && -1 == this.ClearTable.indexOf(a) && this.ClearTable.push(a);
}
for (var l = 0; l < window.Home.lockDayGiftList.length; l++) {
var d = window.Home.lockDayGiftList[l];
d.musicId == t[i] && -1 == this.ClearTable.indexOf(d) && this.ClearTable.push(d);
}
}
console.log("重新设置通关列表处理时间 ", new Date().getTime() - e, "毫秒");
this.dealClearOK = !0;
}
},
ResetColectList: function() {
this.ColectTable = [];
for (var e = new Date().getTime(), t = window.ColectTable.split(","), i = 0; i < t.length; i++) {
for (var o = 0; o < window.Home.musicTable.length; o++) {
var n = window.Home.musicTable[o];
if (n.musicId == t[i]) {
this.ColectTable.push(n);
break;
}
}
for (var s = 0; s < window.Home.CrownMusicTable.length; s++) {
var a = window.Home.CrownMusicTable[s], c = a.musicId, r = a.ex_bag;
if (-1 != window.unlockCrownMusicName.indexOf(r) && c == t[i]) {
this.ColectTable.push(a);
break;
}
}
for (var l = 0; l < window.Home.lockDayGiftList.length; l++) {
var d = window.Home.lockDayGiftList[l];
if (d.musicId == t[i]) {
this.ColectTable.push(d);
break;
}
}
}
console.log("重新设置收藏列表处理时间 ", new Date().getTime() - e, "毫秒");
},
DealUnlockMusic: function(e) {
for (var t = !1, i = 0; i < window.Home.musicTable.length; i++) {
var o = window.Home.musicTable[i];
if (e == o.musicId) {
this.UnClearTable && -1 == this.UnClearTable.indexOf(o) && this.UnClearTable.push(o);
t = !0;
break;
}
}
if (0 == t) for (var n = 0; n < window.Home.CrownMusicTable.length; n++) {
var s = window.Home.CrownMusicTable[n];
if (e == s.musicId) {
this.ClearTable && -1 == this.ClearTable.indexOf(s) && this.ClearTable.push(s);
if (this.UnClearTable && -1 != this.UnClearTable.indexOf(s)) {
var a = this.UnClearTable.indexOf(s);
-1 != a && this.UnClearTable.splice(a, 1);
}
t = !0;
break;
}
}
},
DealClearList: function(e) {
console.log("解锁歌曲 : ", e);
window.Parent.setlocalStorage("HasClear" + e, !0);
var t = window.ClearTable.split(","), i = t.indexOf(e);
if (-1 == i) {
t.push(e);
for (var o = "", n = 0; n < t.length; n++) o = "" == o ? t[n] : o + "," + t[n];
window.ClearTable = o;
window.Parent.setlocalStorage("ClearTable", window.ClearTable);
for (var s = -1, a = 0; a < window.Home.UnClearTable.length; a++) {
var c = window.Home.UnClearTable[a];
if (c.musicId == e) {
this.ClearTable.push(c);
s = a;
break;
}
}
-1 != s && window.Home.UnClearTable.splice(s, 1);
} else {
t.splice(i, 1);
t.push(e);
for (var r = "", l = 0; l < t.length; l++) r = "" == r ? t[l] : r + "," + t[l];
window.ClearTable = r;
window.Parent.setlocalStorage("ClearTable", window.ClearTable);
for (var d = -1, h = null, u = 0; u < window.Home.ClearTable.length; u++) {
var w = window.Home.ClearTable[u];
if (w.musicId == e) {
d = u;
h = w;
break;
}
}
if (-1 != d && null != h) {
window.Home.ClearTable.splice(d, 1);
window.Home.ClearTable.push(h);
}
}
},
ReDealClearData: function() {
if (1 != Number(window.Parent.getlocalStorage("dealOldPlayer"))) {
window.Parent.setlocalStorage("dealOldPlayer", 1);
for (var e = 0; e < window.Home.musicTable.length; e++) {
var t = window.Home.musicTable[e], i = t.musicId, o = window.Parent.getlocalStorage("isUnlock" + i);
if (1 == (o = "true" == o || "coin" == t.unlockType && 0 == Number(t.unlockCost))) {
3 == Number(window.Parent.getlocalStorage("StarNum" + i)) && this.DealClearList(i);
}
}
}
},
DealMusicScore: function(e, t, i) {
for (var o = null, n = 0; n < window.Home.gameTable.length; n++) if (e == window.Home.gameTable[n].musicId) {
o = window.Home.gameTable[n];
break;
}
if (null != o) {
var s = [], a = [];
a[0] = o.ex_tag1_theme.split(",");
a[1] = o.ex_tag2_scene.split(",");
a[2] = o.ex_tag3_mood.split(",");
a[3] = o.ex_tag4_age.split(",");
a[4] = o.ex_tag5_genre.split(",");
a[5] = o.ex_tag6_language.split(",");
for (var c = 0; c < a.length; c++) for (var r = 0; r < a[c].length; r++) s.push(a[c][r]);
1 == t ? console.log("+++++++++++++++++++++++++++++++++++++++++++ 减少分数 : ", i) : console.log("+++++++++++++++++++++++++++++++++++++++++++ 增加分数 : ", i);
var l = window.Parent.getlocalStorage("scoreList");
l = JSON.parse(l);
console.log("DealMusicScore dealData : ", l);
for (var d = 0; d < s.length; d++) {
var h = s[d];
1 == t ? l[h] -= i : l[h] += i;
}
var u = JSON.stringify(l);
window.Parent.setlocalStorage("scoreList", u);
console.log("DealMusicScore dealData : ", l);
}
},
GetMusicNumber: function(e) {
for (var t = 0, i = 0; i < window.Home.musicTable.length; i++) {
if (window.Home.musicTable[i].musicId == e) {
t = i;
break;
}
}
for (var o = 0; o < window.Home.CrownMusicTable.length; o++) {
if (window.Home.CrownMusicTable[o].musicId == e) {
t = o + window.Home.musicTable.length;
break;
}
}
return t;
},
DownListScore: function() {
var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
if (0 != i) {
for (var o = [], n = 0; n < e.length; n++) {
var s = e[n], a = [];
a[0] = s.ex_tag1_theme.split(",");
a[1] = s.ex_tag2_scene.split(",");
a[2] = s.ex_tag3_mood.split(",");
a[3] = s.ex_tag4_age.split(",");
a[4] = s.ex_tag5_genre.split(",");
a[5] = s.ex_tag6_language.split(",");
for (var c = 0; c < a.length; c++) for (var r = 0; r < a[c].length; r++) o.push(a[c][r]);
}
console.log("arrList : ", o);
for (var l = Array.from(new Set(o)), d = !1; 0 == d; ) for (var h = 0, u = 0; u < l.length; u++) {
for (var w = l[u], m = 0; m < o.length; m++) {
if (o[m] == w && ++h >= 3) {
o.splice(m, 1);
break;
}
}
if (h >= 3) break;
h = 0;
u == l.length - 1 && (d = !0);
}
console.log("arrList : ", o);
var g = window.Parent.getlocalStorage("scoreList");
g = JSON.parse(g);
console.log("当前的分数 : ", g);
for (var p = 0; p < o.length; p++) {
var f = o[p];
1 == t ? g[f] -= i : g[f] += i;
}
var S = JSON.stringify(g);
window.Parent.setlocalStorage("scoreList", S);
console.log("当前的分数 : ", g);
} else console.log("无需进行降分操作");
},
GetMusicLocalData: function() {
if (0 != this.startLoadMusic && 1 != this.LoadMusicOk) {
var e = 5 * this.LoadMusicCount, t = 5 * (this.LoadMusicCount + 1);
if (e < this.musicTable.length) {
for (var i = e; i < this.musicTable.length; i++) {
if (i == t - 1) {
this.LoadMusicCount++;
break;
}
var o = {}, n = this.musicTable[i], s = n.musicId, a = Number(window.Parent.getlocalStorage("StarNum" + s)), c = window.Parent.getlocalStorage("isUnlock" + s);
if (0 == (c = "true" == c) && "coin" == n.unlockType && 0 == n.unlockNumber) {
c = !0;
window.Parent.setlocalStorage("isUnlock" + s, c);
}
var r = window.Parent.getlocalStorage("HasClear" + s);
r = "true" == r;
var l = window.Parent.getlocalStorage("HasPlayed" + s);
l = !0;
o.musicId = s;
o.starNum = a;
o.unLock = c;
o.hasClear = r;
o.hasPlay = l;
this.SaveAllTableList[i] = o;
if (1 == c) {
0 == l && this.needPlayTable.push(n);
3 != a && this.unlockTable.push(n);
} else this.newSongTable.push(n);
var d = i / (this.musicTable.length + this.CrownMusicTable.length) * 100;
this.LoadingNode.getComponent("LoadingNodeJS").SetProgress(d, !1);
this.curSelectTable.push(n);
}
if (this.musicTable.length < t) for (var h = 0; h < this.CrownMusicTable.length; h++) {
if (h == t - this.musicTable.length - 1) {
this.LoadMusicCount++;
break;
}
var u = {}, w = this.CrownMusicTable[h], m = w.musicId, g = Number(window.Parent.getlocalStorage("StarNum" + m)), p = window.Parent.getlocalStorage("isUnlock" + m);
if (0 == (p = "true" == p) && "coin" == w.unlockType && 0 == w.unlockNumber) {
p = !0;
window.Parent.setlocalStorage("isUnlock" + m, p);
}
var f = window.Parent.getlocalStorage("HasClear" + m);
f = "true" == f;
var S = window.Parent.getlocalStorage("HasPlayed" + m);
S = !0;
u.musicId = m;
u.starNum = g;
u.unLock = p;
u.hasClear = f;
u.hasPlay = S;
this.SavaCrownTableList[h] = u;
var N = h / (this.musicTable.length + this.CrownMusicTable.length) * 100;
this.LoadingNode.getComponent("LoadingNodeJS").SetProgress(N, !1);
this.curSelectTable.push(w);
if (h == this.CrownMusicTable.length - 1) {
this.LoadMusicOk = !0;
this.LoadingNode.active = !1;
this.ReDealClearData();
}
}
} else for (var v = 0; v < this.CrownMusicTable.length; v++) {
if (v == t - this.musicTable.length - 1) {
this.LoadMusicCount++;
break;
}
var C = {}, y = this.CrownMusicTable[v], B = y.musicId, b = Number(window.Parent.getlocalStorage("StarNum" + B)), T = window.Parent.getlocalStorage("isUnlock" + B);
if (0 == (T = "true" == T) && "coin" == y.unlockType && 0 == y.unlockNumber) {
T = !0;
window.Parent.setlocalStorage("isUnlock" + B, T);
}
var P = window.Parent.getlocalStorage("HasClear" + B);
P = "true" == P;
var I = window.Parent.getlocalStorage("HasPlayed" + B);
I = !0;
C.musicId = B;
C.starNum = b;
C.unLock = T;
C.hasClear = P;
C.hasPlay = I;
this.SavaCrownTableList[v] = C;
var A = v / (this.musicTable.length + this.CrownMusicTable.length) * 100;
this.LoadingNode.getComponent("LoadingNodeJS").SetProgress(A, !1);
this.curSelectTable.push(y);
if (v == this.CrownMusicTable.length - 1) {
this.LoadMusicOk = !0;
this.LoadingNode.active = !1;
this.ReDealClearData();
}
}
}
},
ReadLastMusicList: function() {
for (var e = null, t = null, i = window.Parent.getlocalStorage("curDayID"), o = window.Parent.getlocalStorage("lastDayID"), n = !1, s = 0; s < window.Home.gameTable.length; s++) {
var a = window.Home.gameTable[s], c = a.musicId;
if (i == c) {
e = a;
var r = window.Parent.getlocalStorage("isUnlock" + c);
r = "true" == r;
var l = window.Parent.getlocalStorage("history" + c);
l = "true" == l;
n = 1 == r || 1 == l;
}
o == c && (t = a);
if (null != e && null != t) break;
}
1 == n ? t && (this.dayPlayList[0] = t) : e && (this.dayPlayList[0] = e);
this.curLikeListData = [];
var d = window.Parent.getlocalStorage("curLikeIDList");
if (d) for (var h = d.split(","), u = 0; u < h.length; u++) for (var w = h[u], m = 0; m < window.Home.gameTable.length; m++) {
var g = window.Home.gameTable[m];
if (w == g.musicId) {
this.curLikeListData.push(g);
break;
}
}
this.curHotListData = [];
var p = window.Parent.getlocalStorage("curHotIDList");
if (p) for (var f = p.split(","), S = 0; S < f.length; S++) for (var N = f[S], v = 0; v < window.Home.gameTable.length; v++) {
var C = window.Home.gameTable[v];
N == C.musicId && this.curHotListData.push(C);
}
this.curOtherListData = [];
var y = window.Parent.getlocalStorage("curOtherIDList");
if (y) for (var B = y.split(","), b = 0; b < B.length; b++) for (var T = B[b], P = 0; P < window.Home.gameTable.length; P++) {
var I = window.Home.gameTable[P];
T == I.musicId && this.curOtherListData.push(I);
}
},
DealDayGiftList: function() {
var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
this.DayGiftList = [];
this.lockDayGiftList = [];
var t = window.Parent.getlocalStorage("curGiftID");
if (t && "null" != t) for (var i = t.split(","), o = 0; o < i.length; o++) {
for (var n = i[o], s = 0; s < window.Home.musicTable.length; s++) {
var a = window.Home.musicTable[s], c = a.musicId;
if (c == n) {
this.DayGiftList.push(a);
"true" == window.Parent.getlocalStorage("isUnlock" + c) && this.lockDayGiftList.push(a);
window.Home.musicTable.splice(s, 1);
break;
}
}
for (var r = 0; r < window.Home.AllTable.length; r++) {
if (window.Home.AllTable[r].musicId == n) {
window.Home.AllTable.splice(r, 1);
break;
}
}
for (var l = 0; l < window.Home.HotMusicTable.length; l++) {
if (window.Home.HotMusicTable[l].musicId == n) {
window.Home.HotMusicTable.splice(l, 1);
break;
}
}
} else {
if (e) for (var d = 0; d < e.length; d++) this.DayGiftList.push(e[d]);
for (var h = 0; h < window.Home.musicTable.length; h++) {
var u = window.Home.musicTable[h], w = u.musicId;
if ("true" != window.Parent.getlocalStorage("isUnlock" + w)) {
if ("true" != window.Parent.getlocalStorage("daygift" + w) && -1 == this.DayGiftList.indexOf(u) && -1 == this.dayPlayList.indexOf(u)) {
this.DayGiftList.push(u);
window.Home.musicTable.splice(h, 1);
window.Parent.setlocalStorage("daygift" + w, "true");
if (this.DayGiftList.length >= 3) break;
}
}
}
for (var m = 0; m < this.DayGiftList.length; m++) {
for (var g = this.DayGiftList[m].musicId, p = 0; p < window.Home.AllTable.length; p++) {
window.Home.AllTable[p].musicId == g && window.Home.AllTable.splice(p, 1);
}
for (var f = 0; f < window.Home.HotMusicTable.length; f++) {
window.Home.HotMusicTable[f].musicId == g && window.Home.HotMusicTable.splice(f, 1);
}
}
if (this.DayGiftList.length < 3) {
for (var S = 0; S < window.Home.musicTable.length; S++) {
var N = window.Home.musicTable[S].musicId;
"true" != window.Parent.getlocalStorage("isUnlock" + N) && window.Parent.setlocalStorage("daygift" + N, "false");
}
this.DealDayGiftList(this.DayGiftList);
} else if (this.DayGiftList.length >= 3) {
for (var v = "", C = 0; C < this.DayGiftList.length; C++) {
var y = this.DayGiftList[C].musicId;
v = "" == v ? y : v + "," + y;
}
console.log("curDayGiftList : ", v);
window.Parent.setlocalStorage("curGiftID", v);
}
}
},
DealVivoDate: function() {
if (1 == window.platform && cc.sys.platform === cc.sys.VIVO_GAME) for (var e = 0; e < this.HotMusicTable.length; e++) {
var t = this.HotMusicTable[e].musicId;
"true" != window.Parent.getlocalStorage("isUnlock" + t) && window.Parent.setlocalStorage("isUnlock" + t, !0);
}
},
checkDailyReward: function() {
this.lastday = window.Parent.getlocalStorage("singlastday");
this.curnday = String(new Date().getDay());
if (this.curnday != this.lastday) ; else {
window.isFirstSign = !0;
1 == this.loadAllOk && window.Home.showNewSong();
}
},
showmoreButton: function() {
console.log("showmoreButton");
this.loadAllOk = !0;
this.LoadingNode.active = !1;
this.lastday = window.Parent.getlocalStorage("singlastday");
this.curnday = String(new Date().getDay());
this.dealAllMusic();
var e = Number(window.Parent.getlocalStorage("favourPageShow"));
1 == e && this.dealLater();
this.curnday != this.lastday ? this.DayGiftList && this.DayGiftList.length >= 3 ? this.ShowDateGift() : 0 == e ? this.ShowFavourPage() : this.DayGiftList && 1 == e && this.showCheckNode(!1) : window.Home.lockDayGiftList && window.Home.lockDayGiftList.length < 3 ? this.ShowDateGift() : this.showNewSong();
},
closemoreGame: function() {},
showCheckNode: function(e) {
if (!window.isGaming) {
this.closemoreGame();
0 != e && window.Parent.ButtonSounds();
var t = cc.instantiate(this.SignNodeFab);
t.setPosition(0, 0);
window.ParentNode.addChild(t);
t.zIndex = 1001;
this.lastday = window.Parent.getlocalStorage("singlastday");
this.curnday = String(new Date().getDay());
this.lastday != this.curnday ? t.getComponent("SignNodeJS").HideCloseBTN(!1) : t.getComponent("SignNodeJS").HideCloseBTN(!0);
window.Parent.hideBlockAd();
}
},
showNewSong: function() {
var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
if (1 == Number(window.Parent.getlocalStorage("PlayGame")) || 0 != e) {
var t = Number(window.Parent.getlocalStorage("GuideNum"));
if (4 != t && 5 != t) if (2 != window.platform && 5 != window.platform) {
window.Parent.showRecommendNum++;
this.scheduleOnce(function() {
var e = cc.instantiate(this.NewrecommendFab);
e.setPosition(0, 0);
window.ParentNode.addChild(e);
e.zIndex = 14;
this.LoadingNode.active = !1;
}, .2);
} else this.scheduleOnce(function() {
window.Home.playMusic();
}, .5);
} else this.ShowFavourPage();
},
showXingzuoNode: function() {
0 == window.hasshowXingzuoTips && (window.hasshowXingzuoTips = !0);
this.closemoreGame();
var e = this;
cc.loader.loadRes("PreFab/ConstellationNode", cc.Prefab, function(t, i, o) {
var n = Math.floor(t / i * 100);
e.LoadingNode.getComponent("LoadingNodeJS").SetProgress(n);
}, function(e, t) {
if (e) console.log("ConstellationNode 加载出错"); else {
console.log("ConstellationNode加载完成");
var i = cc.instantiate(t);
i.setPosition(0, 0);
window.ParentNode.addChild(i);
i.zIndex = 20;
window.Parent.hideBlockAd();
}
});
},
showCrownStore: function(e) {
var t = this;
this.LoadingNode.active = !0;
cc.loader.loadRes("PreFab/NewCrownStoreFab", cc.Prefab, function(e, i, o) {
var n = Math.floor(e / i * 100);
t.LoadingNode.getComponent("LoadingNodeJS").SetProgress(n);
}, function(e, i) {
if (e) console.log("NewCrownStoreFab 加载出错"); else {
console.log("NewCrownStoreFab加载完成");
console.log("展示皇冠商店");
t.closemoreGame();
var o = cc.instantiate(i);
o.setPosition(0, 0);
window.ParentNode.addChild(o);
o.zIndex = 20;
window.Parent.hideBlockAd();
t.LoadingNode.active = !1;
}
});
},
showModleSelect: function(e, t) {
var i = Number(window.Parent.getlocalStorage("unlockModel" + window.playID)), o = Number(window.Parent.getlocalStorage("guideNum"));
if (1 == i && 1 == o) if (this.modelSelectNode) {
e && (this.modelSelectNode.getComponent("NewModelSelectJS").callBack = e);
this.modelSelectNode.active = !0;
this.modelSelectNode.zIndex = 29;
} else {
var n = cc.instantiate(this.NewModelSelectFab);
n.parent = this.node.parent;
this.modelSelectNode = n;
e && (n.getComponent("NewModelSelectJS").callBack = e);
n.active = !0;
n.zIndex = 29;
} else if (0 == i || 0 == o) {
if (3 == window.platform) {
window.Power.reduceTili(t, function() {
e && e();
window.Home.startGame();
});
} else {
e && e();
window.Home.startGame();
}
}
},
showFirstTipsNode: function(e, t, i) {
var o = cc.instantiate(this.FirstTipsNodeFab);
o.setPosition(0, 0);
window.ParentNode.addChild(o);
o.zIndex = 20;
o.getComponent("FirstTipsNodeJS").UpdateCurType(e, t, i);
},
showAchieveNode: function() {
this.closemoreGame();
this.LoadingNode.active = !0;
var e = this, t = function() {
var t = cc.instantiate(e.AchieveNodeFab);
t.setPosition(0, 0);
window.ParentNode.addChild(t);
t.zIndex = 20;
window.Parent.hideBlockAd();
e.LoadingNode.active = !1;
}, i = function() {
cc.loader.loadRes("PreFab/AchieveNode", cc.Prefab, function(t, i, o) {
var n = Math.floor(t / i * 100);
e.LoadingNode.getComponent("LoadingNodeJS").SetProgress(n);
}, function(i, o) {
if (i) console.log("AchieveNode加载出错"); else {
console.log("AchieveNode加载完成");
e.AchieveNodeFab = o;
t();
}
});
};
e.AchieveNodeFab ? t() : function() {
e.allResNum = 0;
e.resnum = 0;
e.resLoadOk = !1;
e.allResNum++;
var t = 0;
window.title = [];
for (var o = function(o) {
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/AchievePicture/a".concat(o, ".png"),
type: "png"
}, function(n, s) {
if (n) ; else {
t++;
window.title[o] = new cc.SpriteFrame(s);
if (t >= 6) {
console.log("成就名称 加载完成");
e.resnum++;
e.resnum >= e.allResNum && (e.resLoadOk = !0);
1 == e.resLoadOk && i();
}
}
});
}, n = 0; n < 6; n++) o(n);
e.allResNum++;
var s = 0;
window.AchieveLamp = [];
for (var a = function(t) {
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/WanJiaWei/MusicColorRes2/LampPicture/lamp".concat(t, ".png"),
type: "png"
}, function(o, n) {
if (o) ; else {
s++;
window.AchieveLamp[t] = new cc.SpriteFrame(n);
if (s >= 4) {
console.log("成就彩灯 加载完成");
e.resnum++;
e.resnum >= e.allResNum && (e.resLoadOk = !0);
1 == e.resLoadOk && i();
}
}
});
}, c = 0; c < 4; c++) a(c);
}();
},
ShowReplay: function() {
if (3 == window.platform) {
window.isShowIOS = !0;
var e = cc.instantiate(this.NewrecommendFab);
e.setPosition(0, 0);
window.ParentNode.addChild(e);
e.zIndex = 14;
this.LoadingNode.active = !1;
this.closemoreGame();
}
},
showConstellationdetail: function(e) {
window.ConstellationNum = e;
this.LoadingNode.active = !0;
var t = this;
cc.loader.loadRes("PreFab/MusicListNode", cc.Prefab, function(e, i, o) {
var n = Math.floor(e / i * 100);
t.LoadingNode.getComponent("LoadingNodeJS").SetProgress(n);
}, function(e, i) {
if (e) console.log("MusicListNode 加载出错"); else {
console.log("MusicListNode 加载完成");
var o = cc.instantiate(i);
o.setPosition(0, 0);
o.zIndex = 13;
window.ParentNode.addChild(o);
t.closemoreGame();
window.Parent.hideBlockAd();
t.LoadingNode.active = !1;
}
});
},
showNormalMusic: function() {
this.LoadingNode.active = !0;
var e = this;
cc.loader.loadRes("PreFab/MusicListNode", cc.Prefab, function(t, i, o) {
var n = Math.floor(t / i * 100);
e.LoadingNode.getComponent("LoadingNodeJS").SetProgress(n);
}, function(t, i) {
if (t) console.log("MusicListNode 加载出错"); else {
console.log("MusicListNode 加载完成");
var o = cc.instantiate(i);
o.setPosition(0, 0);
o.zIndex = 13;
window.ParentNode.addChild(o);
e.closemoreGame();
window.Parent.hideBlockAd();
e.LoadingNode.active = !1;
}
});
},
ShowGetRoleAnim: function() {
window.Parent.stopRecord();
this.LoadingNode.active = !0;
var e = this;
cc.loader.loadRes("PreFab/GetRoleAnim", cc.Prefab, function(t, i, o) {
var n = Math.floor(t / i * 100);
e.LoadingNode.getComponent("LoadingNodeJS").SetProgress(n);
}, function(t, i) {
if (t) console.log("GetRoleAnim 加载出错"); else {
console.log("GetRoleAnim 加载完成");
var o = cc.instantiate(i);
o.setPosition(0, 0);
o.zIndex = 13;
window.ParentNode.addChild(o);
e.LoadingNode.active = !1;
}
});
},
ShowFavourPage: function() {
if (1 != window.ShowFavourPage && window.FavourPageFab) {
var e = cc.instantiate(window.FavourPageFab);
e.setPosition(0, 0);
window.ParentNode.addChild(e);
window.Parent.hideBlockAd();
}
},
ShowMyMusic: function() {
this.LoadingNode.active = !0;
var e = this;
cc.loader.loadRes("PreFab/MyMusicNode", cc.Prefab, function(t, i, o) {
var n = Math.floor(t / i * 100);
e.LoadingNode.getComponent("LoadingNodeJS").SetProgress(n);
}, function(t, i) {
if (t) console.log("MyMusicNode 加载出错"); else {
console.log("MyMusicNode 加载完成");
var o = cc.instantiate(i);
o.setPosition(0, 0);
o.zIndex = 13;
window.ParentNode.addChild(o);
e.closemoreGame();
window.Parent.hideBlockAd();
e.LoadingNode.active = !1;
}
});
},
SetHomePrefab: function() {
if (0 != this.LoadMusicOk && 1 != this.isLoadHomePrefab && 1 != this.isLoadHomePrefabOK) {
this.isLoadHomePrefab = !0;
this.LoadingNode.active = !0;
var e = this, t = "PreFab/HomePrefab/" + this.homePrefabList[this.LoadPrefabNum];
if (this.LoadPrefabNum < this.homePrefabList.length) cc.loader.loadRes(t, cc.Prefab, function(t, i, o) {
var n = Math.floor(t / i * 100);
e.LoadingNode.getComponent("LoadingNodeJS").SetProgress(n);
}, function(i, o) {
if (i) console.log(t, " 加载出错"); else {
console.log(t, " 加载完成");
var n = cc.instantiate(o);
n.parent = e.MusicContent;
"GRP_Gift" == e.homePrefabList[e.LoadPrefabNum] && 0 == window.ShowData && 3 != window.Home.lockDayGiftList.length && (n.active = !1);
e.LoadPrefabNum++;
e.isLoadHomePrefab = !1;
e.LoadingNode.active = !1;
}
}); else {
console.log("主界面预制加载完毕");
this.isLoadHomePrefabOK = !0;
this.LoadingNode.active = !1;
if (this.curnday != this.lastday) this.ShowDateGift(); else {
this.playMusic();
var i = Number(window.Parent.getlocalStorage("GuideNum"));
i >= 4 && i < 6 && window.Home.AutoGuide();
}
}
}
},
ShowDateGift: function() {
if (1 != this.isShowDate) {
this.isShowDate = !0;
var e = cc.instantiate(window.DateGiftNodeFab);
e.setPosition(0, 0);
window.ParentNode.addChild(e);
e.zIndex = 14;
}
},
ShowOtherCheck: function() {
console.log("ShowOtherCheck ");
var e = window.Parent.getlocalStorage("curGiftID");
if (e && "null" != e) {
this.DealDayGiftList();
this.ShowDateGift();
} else {
for (var t = !0, i = 0, o = "", n = [], s = 0; s < window.Home.musicTable.length; s++) n.push(window.Home.musicTable[s]);
n = window.Tools.disruptionArr(n);
for (var a = 0; a < n.length; a++) {
var c = n[a].musicId;
if ("true" != window.Parent.getlocalStorage("isUnlock" + c)) {
o = "" == o ? c : o + "," + c;
if (++i >= 3) {
t = !1;
window.Parent.setlocalStorage("curGiftID", o);
break;
}
}
}
if (1 == t) this.showCheckNode(!1); else {
this.DealDayGiftList();
this.ShowDateGift();
}
}
},
AutoGuide: function() {
var e = this;
this.guideList = [];
this.guideJSList = [];
this.hideList = [];
this.arrowNode = null;
this.tipsNode = null;
this.tipsNodeList = [];
var t = Number(window.Parent.getlocalStorage("GuideNum"));
console.log("执行第", t, "步新手指引");
if (3 == t) {
window.Parent.UIMaskNode.active = !0;
window.Parent.GuideMask.active = !0;
for (var i = 0; i < window.GiftNodeJS.GiftContent.childrenCount; i++) {
var o = window.GiftNodeJS.GiftContent.children[i], n = cc.instantiate(o), s = o.parent.convertToWorldSpaceAR(o.position), a = window.ParentNode.convertToNodeSpaceAR(s);
n.parent = window.Parent.GuideMask;
n.position = a;
o.opacity = 0;
0 == i && a;
var c = n.getComponent("OtherSelectJS"), r = window.Home.lockDayGiftList[i];
o.active = !0;
c.musicName = r.musicName;
c.musicID = r.musicId;
c.musicURL = r.musicFile;
c.orderNumber = r.orderNumber;
c.singerName = r.singerName;
c.unlockType = r.unlockType;
c.unlockNumber = Number(r.unlockCost);
c.pointURL = r.json_normal;
c.listenNum = Number(r.ex_listen);
c.curType = 4;
c.UpdateMusicInfo(!0);
this.guideList[i] = n;
this.guideJSList[i] = c;
}
e.guideTipsFunc = function() {
for (var e = 0; e < window.GiftNodeJS.GiftContent.childrenCount; e++) {
var t = window.GiftNodeJS.GiftContent.children[e].getComponent("OtherSelectJS").StartButton, i = t.parent.convertToWorldSpaceAR(t.position), o = window.ParentNode.convertToNodeSpaceAR(i), n = cc.instantiate(window.Parent.CircleTipsPrefab);
n.width = t.width;
n.height = t.height;
n.parent = window.Parent.GuideMask;
n.position = o;
n.scale = 1.6;
cc.tween(n).to(1, {
scale: 1.2,
opacity: 0
}).start();
}
};
e.schedule(e.guideTipsFunc, 1, 9999, 0);
window.Parent.PlayGuideAU(17);
this.scheduleOnce(function() {
var t = cc.instantiate(window.Parent.TipLeftPrefab);
t.parent = window.Parent.GuideMask;
t.getComponent("GuideTipsJS").SetTipsLabel("礼物领取到喽!快从礼物中选择一首音乐挑战吧!");
t.position = cc.v2(-330, .35 * window.screenHight);
e.tipsNodeList[0] = t;
e.scheduleOnce(function() {
window.Parent.UIMaskNode.active = !1;
}, 3);
}, .2);
} else if (4 == t) {
window.Parent.UIMaskNode.active = !0;
window.Parent.GuideMask.active = !0;
var l = window.GiftNodeJS.GiftContent.children[0], d = cc.instantiate(l), h = l.parent.convertToWorldSpaceAR(l.position), u = window.ParentNode.convertToNodeSpaceAR(h);
d.parent = window.Parent.GuideMask;
d.position = u;
l.opacity = 0;
var w = d.getComponent("OtherSelectJS"), m = window.Home.lockDayGiftList[0];
w.musicName = m.musicName;
w.musicID = m.musicId;
w.musicURL = m.musicFile;
w.orderNumber = m.orderNumber;
w.singerName = m.singerName;
w.unlockType = m.unlockType;
w.unlockNumber = Number(m.unlockCost);
w.pointURL = m.json_normal;
w.listenNum = Number(m.ex_listen);
w.curType = 4;
w.UpdateMusicInfo(!0);
this.guideList[0] = d;
this.guideJSList[0] = w;
window.Parent.PlayGuideAU(18);
this.scheduleOnce(function() {
var t = cc.instantiate(window.Parent.TipLeftPrefab);
t.parent = window.Parent.GuideMask;
t.getComponent("GuideTipsJS").SetTipsLabel("告诉你一个小秘密,点击这里的小心心可以把歌曲添加到我的收藏哦~");
t.position = cc.v2(-330, .35 * window.screenHight);
e.tipsNodeList[0] = t;
var i = cc.instantiate(window.Parent.ArrowPrefab), o = l.getChildByName("AnimNode").getChildByName("listBg").getChildByName("ColectionButton"), n = o.parent.convertToWorldSpaceAR(o.position), s = window.ParentNode.convertToNodeSpaceAR(n);
i.parent = window.Parent.GuideMask;
i.position = cc.v2(s.x, s.y + 150);
e.arrowNode = i;
e.guideTipsFunc = function() {
var e = cc.instantiate(window.Parent.CircleTipsPrefab);
e.width = o.width;
e.height = o.height;
e.parent = window.Parent.GuideMask;
e.position = s;
e.scale = 1.2;
cc.tween(e).to(1, {
scale: .6,
opacity: 0
}).start();
};
e.schedule(e.guideTipsFunc, 1);
w.isCanTouch = !1;
e.scheduleOnce(function() {
window.Parent.UIMaskNode.active = !1;
}, 3);
}, .2);
} else if (5 == t) {
window.Parent.UIMaskNode.active = !0;
window.Parent.GuideMask.active = !0;
var g = this.myMusicBTN, p = cc.instantiate(g), f = g.parent.convertToWorldSpaceAR(g.position), S = window.ParentNode.convertToNodeSpaceAR(f);
p.parent = window.Parent.GuideMask;
p.position = S;
this.guideList[0] = p;
g.opacity = 0;
this.hideList[0] = g;
p.removeComponent(cc.Button);
p.on(cc.Node.EventType.TOUCH_END, function() {
window.Parent.setlocalStorage("GuideNum", 6);
for (var t = 0; t < window.Home.guideList.length; t++) window.Home.guideList[t].destroy();
for (var i = 0; i < window.Home.hideList.length; i++) window.Home.hideList[i].opacity = 255;
window.Home.arrowNode && window.Home.arrowNode.destroy();
if (window.Home.tipsNodeList) for (var o = 0; o < window.Home.tipsNodeList.length; o++) window.Home.tipsNodeList[o].destroy();
e.unschedule(e.guideTipsFunc);
e.OnClickMyMusic();
}, e);
window.Parent.PlayGuideAU(19);
e.scheduleOnce(function() {
var t = cc.instantiate(window.Parent.TipLeftPrefab);
t.parent = window.Parent.GuideMask;
t.getComponent("GuideTipsJS").SetTipsLabel("再进入我的音乐。");
t.position = cc.v2(-330, .35 * window.screenHight);
e.tipsNodeList[0] = t;
var i = cc.instantiate(window.Parent.Arrow2Prefab);
i.parent = window.Parent.GuideMask;
i.position = cc.v2(S.x + 150, S.y - 150);
e.arrowNode = i;
e.guideTipsFunc = function() {
var e = cc.instantiate(window.Parent.TipsPrefab);
e.width = g.width;
e.height = g.height;
e.parent = window.Parent.GuideMask;
e.position = S;
e.scale = 1.8;
cc.tween(e).to(1, {
scale: 1.3,
opacity: 0
}).start();
};
e.schedule(e.guideTipsFunc, 1);
e.scheduleOnce(function() {
window.Parent.UIMaskNode.active = !1;
}, 1.5);
}, .2);
} else if (6 == t) {
window.Parent.UIMaskNode.active = !0;
window.Parent.GuideMask.active = !1;
e.scheduleOnce(function() {
window.MyMusic.ShowSelectList(3);
var t = window.MyMusic.favourBTN, i = cc.instantiate(t), o = t.parent.convertToWorldSpaceAR(t.position), n = window.ParentNode.convertToNodeSpaceAR(o);
i.parent = window.MyMusicNode;
i.position = n;
i.getChildByName("SP_Select").active = !0;
i.removeComponent(cc.Button);
e.guideList[0] = i;
window.Parent.PlayGuideAU(20);
e.scheduleOnce(function() {
var t = cc.instantiate(window.Parent.TipLeftPrefab);
t.parent = window.MyMusicNode;
t.getComponent("GuideTipsJS").SetTipsLabel("看,刚刚收藏的音乐就存放在这里啦。");
t.position = cc.v2(-330, 0);
e.tipsNodeList[0] = t;
e.scheduleOnce(function() {
window.Parent.UIMaskNode.active = !1;
window.Parent.GuideMask.active = !0;
t.parent = window.Parent.GuideMask;
e.guideList[0].destroy();
var i = function() {
e.scheduleOnce(function() {
e.unschedule(e.guideTipsFunc);
window.MyMusic.OnClickSelectBTN(null, 2);
window.Parent.UIMaskNode.active = !0;
window.Parent.GuideMask.active = !1;
e.guideList[0].destroy();
t.parent = window.MyMusicNode;
window.Parent.PlayGuideAU(24);
t.getComponent("GuideTipsJS").SetTipsLabel("这里存放的是所有你通关的歌曲。");
e.scheduleOnce(function() {
window.Parent.PlayGuideAU(25);
t.getComponent("GuideTipsJS").SetTipsLabel("好啦，其它更多内容以后慢慢挖掘吧~");
e.scheduleOnce(function() {
t.getComponent("GuideTipsJS").HideTipsAnim();
e.scheduleOnce(function() {
window.Parent.UIMaskNode.active = !1;
window.Parent.setlocalStorage("GuideNum", 7);
}, .3);
}, 2);
}, 4);
}, 0);
}, o = window.MyMusic.unclearBTN, n = cc.instantiate(o), s = o.parent.convertToWorldSpaceAR(o.position), a = window.ParentNode.convertToNodeSpaceAR(s);
n.parent = window.Parent.GuideMask;
n.position = a;
n.getChildByName("SP_Select").active = !0;
n.removeComponent(cc.Button);
e.guideList[0] = n;
n.on(cc.Node.EventType.TOUCH_END, function() {
e.scheduleOnce(function() {
e.unschedule(e.guideTipsFunc);
window.MyMusic.OnClickSelectBTN(null, 1);
window.Parent.UIMaskNode.active = !0;
window.Parent.GuideMask.active = !1;
e.guideList[0].destroy();
t.parent = window.MyMusicNode;
window.Parent.PlayGuideAU(22);
t.getComponent("GuideTipsJS").SetTipsLabel("所有已经解锁但还没过关的音乐都在这。");
e.scheduleOnce(function() {
window.Parent.PlayGuideAU(23);
window.Parent.UIMaskNode.active = !1;
window.Parent.GuideMask.active = !0;
t.parent = window.Parent.GuideMask;
t.getComponent("GuideTipsJS").SetTipsLabel("最后一个。");
var o = window.MyMusic.clearBTN, n = cc.instantiate(o), s = o.parent.convertToWorldSpaceAR(o.position), a = window.ParentNode.convertToNodeSpaceAR(s);
n.parent = window.Parent.GuideMask;
n.position = a;
n.getChildByName("SP_Select").active = !0;
n.removeComponent(cc.Button);
e.guideList[0] = n;
e.scheduleOnce(function() {
n.on(cc.Node.EventType.TOUCH_END, i, e);
}, 1.5);
e.guideTipsFunc = function() {
var e = cc.instantiate(window.Parent.TipsPrefab);
e.width = o.width;
e.height = o.height;
e.parent = window.Parent.GuideMask;
e.position = a;
e.scale = 1.8;
cc.tween(e).to(1, {
scale: 1.3,
opacity: 0
}).start();
};
e.schedule(e.guideTipsFunc, 1);
}, 4);
}, 0);
}, e);
window.Parent.PlayGuideAU(21);
t.getComponent("GuideTipsJS").SetTipsLabel("再看看这里。");
e.guideTipsFunc = function() {
var e = cc.instantiate(window.Parent.TipsPrefab);
e.width = o.width;
e.height = o.height;
e.parent = window.Parent.GuideMask;
e.position = cc.v2(a.x + 20, a.y);
e.scale = 1.5;
cc.tween(e).to(1, {
scale: 1.3,
opacity: 0
}).start();
};
e.schedule(e.guideTipsFunc, 1, 9999, 0);
}, 4);
}, .2);
}, 0);
}
5 == window.platform && window.Parent.hidePushicon();
},
SetDayMusic: function() {
var e = this.dayPlayList[0];
this.dayHead.getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[Number(e.orderNumber) % 20];
for (var t = Number(window.Parent.getlocalStorage("StarNum" + e.musicId)), i = 0; i < this.dayStarList.length; i++) this.dayStarList[i].active = !1;
for (var o = 0; o < t; o++) this.dayStarList[0].active = !0;
var n = Number(window.Parent.getlocalStorage("BestScore" + e.musicId));
this.dayScore.getComponent(cc.Label).string = n.toString();
this.dayNameLB.getComponent(cc.Label).string = e.musicName;
var s = window.Parent.getlocalStorage("isUnlock" + e.musicID);
this.dayStartBTN.active = s;
this.dayVideoBTN.active = !s;
var a = window.Parent.getlocalStorage("isUnlock" + e.musicId);
a = "true" == a;
this.dayStartBTN.active = a;
this.dayVideoBTN.active = !a;
},
SetRecommondMusic: function() {
this.recommondList = [];
this.limitRecommondTable.length > 0 ? window.isLimit = !0 : window.isLimit = !1;
if (1 == window.isLimit) {
this.limitRecommondTable = this.DealCurList(1);
this.limitRecommondTable;
} else {
this.weekRecommondTable = this.DealCurList(1);
this.weekRecommondTable;
}
},
DealCurList: function(e) {
var t = [], i = 0, o = 5;
1 == e && (o = 3);
var n = [];
1 == e ? n = this.limitRecommondTable.length > 0 ? this.limitRecommondTable : this.weekRecommondTable : 2 == e ? n = this.hotTable : 3 == e && (n = this.OtherMusicTable);
for (var s = 0; s < n.length; s++) {
var a = n[s], c = a.musicId;
if ("true" != window.Parent.getlocalStorage("HasPlayed" + c)) {
t.push(a);
i++;
}
}
if (i < o && 4 != e) {
for (var r = [], l = 0; l < this.newSongTable.length; l++) r.push(this.newSongTable[l]);
r = window.Tools.disruptionArr(r);
for (var d = 0; d < r.length; d++) {
var h = r[d];
if (-1 == this.hotTable.indexOf(h) && -1 == this.OtherMusicTable.indexOf(h) && -1 == this.limitRecommondTable.indexOf(h) && -1 == this.weekRecommondTable.indexOf(h) && -1 == this.likeTable.indexOf(h) && -1 == this.HistoryLikeList.indexOf(h) && h != this.dayPlayList[0] && -1 == t.indexOf(h)) {
t.push(h);
if (++i >= o) break;
}
}
}
if (i < o && 4 != e) for (var u = 0; u < this.needPlayTable.length; u++) {
var w = this.needPlayTable[u];
if (-1 == this.hotTable.indexOf(w) && -1 == this.OtherMusicTable.indexOf(w) && -1 == this.limitRecommondTable.indexOf(w) && -1 == this.weekRecommondTable.indexOf(w) && -1 == this.likeTable.indexOf(w) && -1 == this.HistoryLikeList.indexOf(w) && w != this.dayPlayList[0] && -1 == t.indexOf(w)) {
t.push(w);
if (++i >= o) break;
}
}
if (i < o && 4 != e) for (var m = 0; m < this.unlockTable.length; m++) {
var g = this.unlockTable[m];
if (-1 == this.hotTable.indexOf(g) && -1 == this.OtherMusicTable.indexOf(g) && -1 == this.limitRecommondTable.indexOf(g) && -1 == this.weekRecommondTable.indexOf(g) && -1 == this.likeTable.indexOf(g) && -1 == this.HistoryLikeList.indexOf(g) && g != this.dayPlayList[0] && -1 == t.indexOf(g)) {
t.push(g);
if (++i >= o) break;
}
}
if (i < o && 4 != e) for (var p = 0; p < n.length; p++) {
var f = n[p];
if (-1 == t.indexOf(f)) {
i++;
t.push(f);
if (i >= o) break;
}
}
if (i < o) {
for (var S = [], N = 0; N < window.Home.curSelectTable.length; N++) S.push(window.Home.curSelectTable[N]);
S = window.Tools.disruptionArr(S);
for (var v = 0; v < S.length; v++) {
var C = S[v];
if (-1 == this.hotTable.indexOf(C) && -1 == this.OtherMusicTable.indexOf(C) && -1 == this.limitRecommondTable.indexOf(C) && -1 == this.weekRecommondTable.indexOf(C) && -1 == this.likeTable.indexOf(C) && -1 == this.HistoryLikeList.indexOf(C) && C != this.dayPlayList[0] && -1 == t.indexOf(C)) {
i++;
t.push(C);
if (i >= o) break;
}
}
if (4 == e && i < o) {
this.HistoryLikeList.splice(0, this.HistoryLikeList.length);
for (var y = 0; y < S.length; y++) {
var B = S[y];
if (-1 == this.hotTable.indexOf(B) && -1 == this.OtherMusicTable.indexOf(B) && -1 == this.limitRecommondTable.indexOf(B) && -1 == this.weekRecommondTable.indexOf(B) && -1 == this.likeTable.indexOf(B) && -1 == this.HistoryLikeList.indexOf(B) && B != this.dayPlayList[0] && -1 == t.indexOf(B)) {
i++;
t.push(B);
if (i >= o) break;
}
}
}
}
return t;
},
SetHomeRoleList: function() {
for (var e = 0; e < this.maxRoleNum; e++) {
var t = cc.instantiate(this.RoleDataPrefab), i = t.getComponent("RoleDataJS");
i.curNum = e;
i.parentJS = this;
this.RoleContent.addChild(t);
}
},
UpdateHomeRoleList: function() {
for (var e = 0; e < this.RoleContent.childrenCount; e++) {
this.RoleContent.children[e].getComponent("RoleDataJS").UpdateCurInfo();
}
window.RoleSelectNodeJS && window.RoleSelectNodeJS.ReflashRoleType();
},
playMusic: function() {
var e = this, t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
console.log("播放音乐 playNum : ", t);
if (!(window.isGaming || window.musicisplaying && t != this.playMusicType && 1 == i || 1 == window.Home.isShowDate)) {
var o = [], n = null, s = [];
if (0 == window.isShowMusicList || 1 == window.isShowMusicList) {
if (0 == t) s = window.Home.homeMusicTable; else if (1 == t) s.push(window.Home.dayPlayList[0]); else if (2 == t) if (window.Home.limitRecommondTable.length > 0) {
s = window.Home.limitRecommondTable;
this.playMusicListNum2 >= window.Home.limitRecommondTable.length && (this.playMusicListNum2 = 0);
} else {
s = window.Home.weekRecommondTable;
this.playMusicListNum2 >= window.Home.weekRecommondTable.length && (this.playMusicListNum2 = 0);
} else if (3 == t) {
s = window.Home.hotTable;
this.playMusicListNum3 >= window.Home.hotTable.length && (this.playMusicListNum3 = 0);
} else if (4 == t) {
s = window.Home.OtherMusicTable;
this.playMusicListNum4 >= window.Home.OtherMusicTable.length && (this.playMusicListNum4 = 0);
} else if (5 == t) {
s = window.Home.likeTable;
this.playMusicListNum5 >= window.Home.likeTable.length && (this.playMusicListNum5 = 0);
} else if (6 == t) {
s = window.Home.lockDayGiftList;
this.playMusicListNum6 >= window.Home.lockDayGiftList.length && (this.playMusicListNum6 = 0);
}
var a = function() {
if (0 == t) for (var i = 0; i < s.length; i++) {
var a = s[i], c = a.musicId, r = window.Parent.getlocalStorage("isUnlock" + c);
0 == (r = "true" == r) && o.push(a);
} else {
for (var l = [], d = [], h = [], u = 0; u < s.length; u++) {
var w = s[u], m = w.musicId, g = window.Parent.getlocalStorage("isUnlock" + m), p = window.Parent.getlocalStorage("HasPlayed" + m);
if ("true" == g) {
g = !0;
p = "true" == p;
} else g = !1;
0 == g ? d.push(w) : 1 == g && 0 == p && l.push(w);
h.push(w);
}
o = h;
}
if (o.length > 0) {
if (0 == t) {
var f = Math.floor(Math.random() * o.length);
n = o[f];
e.nextMusicId = o[f].musicId;
} else if (1 == t) {
n = o[0];
e.nextMusicId = o[0].musicId;
} else if (2 == t) {
n = o[e.playMusicListNum2];
e.nextMusicId = o[e.playMusicListNum2].musicId;
} else if (3 == t) {
n = o[e.playMusicListNum3];
e.nextMusicId = o[e.playMusicListNum3].musicId;
} else if (4 == t) {
n = o[e.playMusicListNum4];
e.nextMusicId = o[e.playMusicListNum4].musicId;
} else if (5 == t) {
n = o[e.playMusicListNum5];
e.nextMusicId = o[e.playMusicListNum5].musicId;
} else if (6 == t) {
n = o[e.playMusicListNum6];
e.nextMusicId = o[e.playMusicListNum6].musicId;
}
} else {
for (var S = window.Home.needPlayTable, N = window.Home.newSongTable, v = window.Home.unlockTable, C = [], y = 0; y < window.Home.curSelectTable.length; y++) C.push(window.Home.curSelectTable[y]);
C = window.Tools.disruptionArr(C);
S.length > 0 ? e.nextMusicId = S[0].musicId : N.length > 0 ? e.nextMusicId = N[0].musicId : v.length > 0 ? e.nextMusicId = v[0].musicId : C.length > 0 && (e.nextMusicId = C[0].musicId);
for (var B = 0; B < window.Home.musicTable.length; B++) {
var b = window.Home.musicTable[B];
if (b.musicId == e.nextMusicId) {
n = b;
break;
}
}
}
};
if (window.HomeID) {
for (var c = 0; c < window.Home.musicTable.length; c++) {
var r = window.Home.musicTable[c], l = r.musicId;
if (window.HomeID == l) {
n = r;
window.HomeID = void 0;
break;
}
}
for (var d = 0; d < window.Home.lockDayGiftList.length; d++) {
var h = window.Home.lockDayGiftList[d], u = h.musicId;
if (window.HomeID == u) {
n = h;
window.HomeID = void 0;
break;
}
}
null == n && a();
} else a();
n && -1 == window.NeedUpdateList.indexOf(n.musicId) && window.NeedUpdateList.push(n.musicId);
} else if (2 == window.isShowMusicList) {
var w = Math.floor(Math.random() * window.Home.CrownMusicTable.length);
n = window.Home.CrownMusicTable[w];
} else if (3 == window.isShowMusicList) {
var m = Math.floor(Math.random() * window.MyMusic.curUseList.length);
n = window.MyMusic.curUseList[m];
} else if (4 == window.isShowMusicList) {
var g = Math.floor(10 * Math.random());
n = window.CardRecommendNodeJS.curMusicTabel[g];
}
var p = this;
window.Parent.LoadMusic(n.musicFile, n.musicId, function(e) {
if (!window.isGaming) {
window.playName = n.musicName;
window.playID = n.musicId;
window.playNum = n.orderNumber;
window.playURL = n.musicFile;
window.playPoint = n.json_normal;
window.isLoadingFirstHomeMusic = !1;
window.musicisplaying = !0;
window.Home.perviewmusicName = window.Home.curmusicName;
window.Home.curmusicName = n.musicName;
window.Home.SongNameNode.getComponent(cc.Label).string = n.musicName;
window.Home.SongNameLB.getComponent(cc.Label).string = n.musicName;
console.log("播放音乐");
if (0 == t) {
window.Parent.audioEngine.playMusic(e, !0);
window.Parent.audioEngine.setMusicTime(Number(n.ex_listen));
} else {
window.Parent.audioEngine.playMusic(e, !1, function() {
console.log("视频播放回调");
2 == t ? p.playMusicListNum2++ : 3 == t ? p.playMusicListNum3++ : 4 == t ? p.playMusicListNum4++ : 5 == t ? p.playMusicListNum5++ : 6 == t && p.playMusicListNum6++;
p.playMusic(t, !0);
});
window.Parent.audioEngine.setMusicTime(Number(n.ex_listen));
}
window.Home.UpdateMusicPlay();
window.Home.UpdateQuickStartStatus();
window.Home.RemoveSongTabel(n.musicId);
}
});
}
},
EggshellAllClear: function() {
for (var e = 0; e < 3; e++) {
var t = "EggShellClock" + e;
if (1 != Number(window.Parent.getlocalStorage(t))) return !1;
}
return !0;
},
ConstellationAllClear: function() {
for (var e = 0, t = 0; t < 12; t++) {
var i = "LogoisUnlock" + t.toString();
if ("true" == window.Parent.getlocalStorage(i) && ++e >= 3) return !0;
}
return !1;
},
UseSkin: function(e) {
if (0 != e) {
window.Parent.setlocalStorage("RoleModel", !0);
window.RoleModel = !0;
window.Parent.ButtonSounds();
window.RoleNum = e;
window.Parent.setlocalStorage("RoleNum", window.RoleNum);
for (var t = 0; t < this.RoleContent.childrenCount; t++) {
this.RoleContent.children[t].getComponent("RoleDataJS").UpdateBTN();
}
} else {
window.Parent.setlocalStorage("RoleModel", !1);
window.RoleModel = !1;
window.Parent.ButtonSounds();
for (var i = 0; i < this.RoleContent.childrenCount; i++) {
this.RoleContent.children[i].getComponent("RoleDataJS").UpdateBTN();
}
}
this.UpdateHomeRoleList();
},
startGame: function() {
window.Parent.UIMaskNode.active = !0;
window.Parent.setlocalStorage("HasPlayed" + window.playID, !0);
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "MainUI_GamePlay_NoADPlay", 1);
console.log("window.playName : ", window.playName);
o.default.getInstance().reportAnalytics("Song_Message", "Song_Click", window.playName);
window.musicisplaying = !1;
this.stopMusicPlaying();
this.node.active = !1;
this.MusicLoadingNode.active = !0;
window.Game && (window.Game.isGameSurprise = !1);
window.MusicListNode && 1 == window.MusicListNode.active && (window.MusicListNode.active = !1);
window.CrownListNode && 1 == window.CrownListNode.active && (window.CrownListNode.active = !1);
window.MyMusicNode && 1 == window.MyMusicNode.active && (window.MyMusicNode.active = !1);
window.EggshellNode && 1 == window.EggshellNode.active && (window.EggshellNode.active = !1);
window.CardRecommendNode && 1 == window.CardRecommendNode.active && (window.CardRecommendNode.active = !1);
window.FaillNode && 1 == window.FaillNode.active && (window.FaillNode.active = !1);
window.WinNode && 1 == window.WinNode.active && (window.WinNode.active = !1);
var e = Number(window.Parent.getlocalStorage("GuideNum"));
if (e >= 3 && e < 7) {
if (3 == e) {
window.Parent.GuideMask.active = !1;
for (var t = 0; t < this.guideList.length; t++) {
this.guideList[t].destroy();
}
if (window.Home.tipsNodeList) for (var i = 0; i < window.Home.tipsNodeList.length; i++) {
window.Home.tipsNodeList[i].destroy();
}
this.guideJSList = [];
this.unschedule(this.guideTipsFunc);
window.Parent.setlocalStorage("GuideNum", 4);
}
for (var n = 0; n < window.GiftNodeJS.GiftContent.childrenCount; n++) {
window.GiftNodeJS.GiftContent.children[n].opacity = 255;
}
}
},
stopMusicPlaying: function() {
window.Parent.audioEngine.stopAll();
this.UpdateMusicPlay();
},
UpdateMusicPlay: function() {
if (window.MusicList && window.MusicList.musicRecommondList) for (var e = 0; e < window.MusicList.musicRecommondList.length; e++) {
var t = window.MusicList.musicRecommondList[e];
t && t.UpdateMusicInfo(!0);
}
if (window.MusicList && window.MusicList.musicArr) for (var i = 0; i < window.MusicList.musicArr.length; i++) {
var o = window.MusicList.musicArr[i];
o && 1 == o.active && o.getComponent("musicSelectJS").UpdateMusicInfo(!0);
}
if (window.CrownList && window.CrownList.CrownMusicNodeList) for (var n = 0; n < window.CrownList.CrownMusicNodeList.length; n++) {
var s = window.CrownList.CrownMusicNodeList[n];
s && 1 == s.active && s.getComponent("MusicNodeJS").UpdateMusicInfo(!0);
}
if (window.CrownList && window.CrownList.CrownTable) for (var a = 0; a < window.CrownList.CrownTable.length; a++) {
var c = window.CrownList.CrownTable[a];
c && 1 == c.active && c.getComponent("musicSelectJS").UpdateMusicInfo(!0);
}
if (window.SearchList && window.SearchList.unfindListContent) for (var r = 0; r < window.SearchList.unfindListContent.childrenCount; r++) {
var l = window.SearchList.unfindListContent.children[r];
l && 1 == l.active && l.getComponent("SearchListJS").UpdateMusicInfo(!0);
}
if (window.SearchList && window.SearchList.ListContent) for (var d = 0; d < window.SearchList.ListContent.childrenCount; d++) {
var h = window.SearchList.ListContent.children[d];
h && 1 == h.active && h.getComponent("SearchListJS").UpdateMusicInfo(!0);
}
if (window.MyMusic && window.MyMusic.favourContent) for (var u = 0; u < window.MyMusic.favourContent.childrenCount; u++) {
var w = window.MyMusic.favourContent.children[u];
w && 1 == w.active && w.getComponent("SearchListJS").UpdateMusicInfo(!0);
}
if (window.MyMusic && window.MyMusic.recommendContent) for (var m = 0; m < window.MyMusic.recommendContent.childrenCount; m++) {
var g = window.MyMusic.recommendContent.children[m];
g && 1 == g.active && g.getComponent("SearchListJS").UpdateMusicInfo(!0);
}
if (window.MyMusic && window.MyMusic.musicContent) for (var p = 0; p < window.MyMusic.musicContent.childrenCount; p++) {
var f = window.MyMusic.musicContent.children[p];
f && 1 == f.active && f.getComponent("musicSelectJS").UpdateMusicInfo(!0);
}
if (window.HotNodeJS && window.HotNodeJS.hotList) for (var S = 0; S < window.HotNodeJS.hotList.length; S++) {
var N = window.HotNodeJS.hotList[S];
N && N.UpdateMusicInfo(!0);
}
if (window.OtherNodeJS && window.OtherNodeJS.otherList) for (var v = 0; v < window.OtherNodeJS.otherList.length; v++) {
var C = window.OtherNodeJS.otherList[v];
C && C.UpdateMusicInfo(!0);
}
if (window.LikeNodeJS && window.LikeNodeJS.likeList) for (var y = 0; y < window.LikeNodeJS.likeList.length; y++) {
var B = window.LikeNodeJS.likeList[y];
B && B.UpdateMusicInfo(!0);
}
if (window.CardRecommendNodeJS && window.CardRecommendNodeJS.musicContent) for (var b = 0; b < window.CardRecommendNodeJS.musicContent.childrenCount; b++) {
var T = window.CardRecommendNodeJS.musicContent.children[b];
T && 1 == T.active && T.getComponent("CardSelectJS").UpdateMusicInfo(!0);
}
if (window.GiftNodeJS && 1 == window.GiftNode.active && window.GiftNodeJS.giftList) for (var P = 0; P < window.GiftNodeJS.giftList.length; P++) {
var I = window.GiftNodeJS.giftList[P];
I && I.UpdateMusicInfo(!0);
}
if (window.Home.guideJSList && window.Home.guideJSList.length > 0) for (var A = 0; A < window.Home.guideJSList.length; A++) {
var _ = window.Home.guideJSList[A];
_ && _.UpdateMusicInfo(!0);
}
},
checkQQBox: function() {
if (4 == window.platform || 1 == window.platform) {
4 == window.platform && (window.Parent.getQQBoxFlag() ? this.moreMoreGamePos.active = !0 : this.moreMoreGamePos.active = !1);
1 == window.platform && "undefined" != typeof qg && (window.Parent.getNavigateBoxPortalFlag() && qg.getSystemInfoSync().platformVersionCode >= 1076 ? this.moreMoreGamePos.active = !0 : this.moreMoreGamePos.active = !1);
}
},
ShowMoreGameAnim: function() {
this.moreButton.active = !1;
this.moreButtonbg.active = !0;
this.moreAnim = !0;
var e = this;
this.moreButtonbg.runAction(cc.sequence(cc.moveBy(.3, cc.v2(515, 0)), cc.callFunc(function() {
e.moreAnim = !1;
})));
if (window.btn2) {
window.btn2.destroy();
window.btn2 = void 0;
}
},
CloseMoreGame: function() {
var e = this;
if (1 == (arguments.length > 0 && void 0 !== arguments[0] && arguments[0])) {
this.moreButton.active = !0;
this.moreButtonbg.active = !1;
this.moreButtonbg.setPosition(cc.v2(this.moreButtonbgPos.x, 143));
} else {
this.moreAnim = !0;
this.moreButtonbg.runAction(cc.sequence(cc.moveBy(.3, cc.v2(-515, 0)), cc.callFunc(function() {
e.moreButton.setPosition(cc.v2(e.moreButtonPos.x - 140, 100));
e.moreButton.active = !0;
e.moreButtonbg.active = !1;
e.moreButton.runAction(cc.sequence(cc.moveBy(.3, cc.v2(140, 0)), cc.callFunc(function() {
e.moreAnim = !1;
})));
})));
}
},
showmoreBTN: function() {},
checkAchievement: function() {
for (var e = 0; e < window.AchieveTable.length; e++) {
var t = [];
t[0] = Number(window.AchieveTable[e].Number0);
t[1] = Number(window.AchieveTable[e].Number1);
t[2] = Number(window.AchieveTable[e].Number2);
t[3] = Number(window.AchieveTable[e].Number3);
t[4] = Number(window.AchieveTable[e].Number4);
t[5] = Number(window.AchieveTable[e].Number5);
window.AchieveNumber[e] >= t[window.AchieveLevel[e]] && 0;
}
},
showCrownMusic: function() {
this.LoadingNode.active = !0;
var e = this;
cc.loader.loadRes("PreFab/CrownListNode", cc.Prefab, function(t, i, o) {
var n = Math.floor(t / i * 100);
e.LoadingNode.getComponent("LoadingNodeJS").SetProgress(n);
}, function(t, i) {
if (t) console.log("CrownListNode 加载出错"); else {
console.log("CrownListNode 加载完成");
var o = cc.instantiate(i);
o.setPosition(0, 0);
o.zIndex = 13;
window.ParentNode.addChild(o);
e.closemoreGame();
window.Parent.hideBlockAd();
e.LoadingNode.active = !1;
}
});
},
UpdateQuickStartStatus: function() {
this.playType = 0;
console.log("window.playName : ", window.playName);
if (window.playName) {
for (var e = !0, t = 0; t < this.gameTable.length; t++) {
var i = this.gameTable[t];
if (i.musicName == window.playName) {
var o = i.musicId;
if ("true" == window.Parent.getlocalStorage("isUnlock" + o)) {
e = !0;
this.playType = 0;
} else {
e = !1;
"video" == i.unlockType ? this.playType = 1 : "coin" == i.unlockType && (this.playType = 2);
}
window.playID = o;
break;
}
}
if (1 == e) {
this.videoSP.active = !1;
this.wallVideoSP.active = !1;
this.quickBTN.active = !0;
this.DiamondQuickBTN.active = !1;
this.wallQuickBTN.active = !0;
this.wallDiamondQuickBTN.active = !1;
} else if (3 == window.platform) if (1 == this.playType) {
this.videoSP.active = !0;
this.wallVideoSP.active = !0;
this.quickBTN.active = !0;
this.DiamondQuickBTN.active = !1;
this.wallQuickBTN.active = !0;
this.wallDiamondQuickBTN.active = !1;
} else {
this.videoSP.active = !1;
this.wallVideoSP.active = !1;
this.quickBTN.active = !1;
this.DiamondQuickBTN.active = !0;
this.wallQuickBTN.active = !1;
this.wallDiamondQuickBTN.active = !0;
} else {
this.videoSP.active = !0;
this.wallVideoSP.active = !0;
this.quickBTN.active = !0;
this.DiamondQuickBTN.active = !1;
this.wallQuickBTN.active = !0;
this.wallDiamondQuickBTN.active = !1;
}
}
},
quickStart: function() {
1 == (!(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0]) && window.Parent.ButtonSounds();
var e = this.playType, t = this;
if (0 == e) {
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "MainUI_FastPlay_NoADClick", 1);
1 == this.topQuick ? this.showModleSelect(null, this.quickBTN) : this.showModleSelect(null, this.wallQuickBTN);
} else if (3 == window.platform) {
if (1 == e) {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "MainUI_FastPlay_ADClick", 1);
var i = function(e) {
if (e) {
1 == t.topQuick ? t.showModleSelect(null, t.quickBTN) : t.showModleSelect(null, t.wallQuickBTN);
window.Parent.setlocalStorage("isUnlock" + window.playID, !0);
t.UpdateMusicPlay();
t.playType = 0;
t.UpdateQuickStartStatus();
window.Home.DealMusicScore(window.playID, !1, 3);
window.watchVideoTimes++;
}
};
window.Parent.showVideo(i);
} else if (2 == e) if (window.DiamonNum > 200) {
window.Diamon.reduceDiamond(200);
1 == t.topQuick ? t.showModleSelect(null, t.quickBTN) : t.showModleSelect(null, t.wallQuickBTN);
window.Parent.setlocalStorage("isUnlock" + window.playID, !0);
t.UpdateMusicPlay();
t.playType = 0;
t.UpdateQuickStartStatus();
window.Home.DealMusicScore(window.playID, !1, 3);
} else window.Diamon.showAddDimondNode();
} else {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "MainUI_FastPlay_ADClick", 1);
i = function(e) {
if (e) {
1 == t.topQuick ? t.showModleSelect(null, t.quickBTN) : t.showModleSelect(null, t.wallQuickBTN);
window.Parent.setlocalStorage("isUnlock" + window.playID, !0);
t.UpdateMusicPlay();
t.playType = 0;
t.UpdateQuickStartStatus();
window.Home.DealMusicScore(window.playID, !1, 3);
window.watchVideoTimes++;
}
};
window.Parent.showVideo(i);
}
},
UpdateGroupActive: function() {
if (0 != this.LoadMusicOk) {
var e = Number(window.Parent.getlocalStorage("favourPageShow"));
if (0 != this.isDealOK || 0 != e) {
if (this.wallCon) {
var t = this.wallCon.parent.convertToWorldSpaceAR(this.wallCon.position), i = window.ParentNode.convertToNodeSpaceAR(t);
i.y < window.screenHight / 2 + this.wallCon.height / 2 && i.y > -(window.screenHight / 2 + this.wallCon.height / 2) ? this.wallCon.opacity = 255 : this.wallCon.opacity = 0;
}
var n = this.SongNameCon.parent.convertToWorldSpaceAR(this.SongNameCon.position);
if (this.quickCon.parent.convertToWorldSpaceAR(this.quickCon.position).y <= n.y) {
this.topQuick = !0;
this.quickCon.opacity = 255;
this.quickBTN.getComponent(cc.Button).interactable = !0;
this.quickBTN.active = !0;
this.topCon.height = 350;
this.wallQuickBTN.getComponent(cc.Button).interactable = !1;
} else {
this.topQuick = !1;
this.quickCon.opacity = 0;
this.quickBTN.getComponent(cc.Button).interactable = !1;
this.quickBTN.active = !1;
this.topCon.height = 200;
this.wallQuickBTN.getComponent(cc.Button).interactable = !0;
}
if (window.CardNode) {
var s = window.CardNode.parent.convertToWorldSpaceAR(window.CardNode.position), a = window.ParentNode.convertToNodeSpaceAR(s);
a.y < window.screenHight / 2 + window.CardNode.height / 2 && a.y > -(window.screenHight / 2 + window.CardNode.height / 2) ? window.CardNode.opacity = 255 : window.CardNode.opacity = 0;
}
if (window.GiftNode) {
var c = window.GiftNode.parent.convertToWorldSpaceAR(window.GiftNode.position), r = window.ParentNode.convertToNodeSpaceAR(c);
r.y < window.screenHight / 2 + window.GiftNode.height / 2 && r.y > -(window.screenHight / 2 + window.GiftNode.height / 2) ? window.GiftNode.opacity = 255 : window.GiftNode.opacity = 0;
}
if (window.LikeNode) {
var l = window.LikeNode.parent.convertToWorldSpaceAR(window.LikeNode.position), d = window.ParentNode.convertToNodeSpaceAR(l);
d.y < window.screenHight / 2 + window.LikeNode.height && d.y > -window.screenHight / 2 ? window.LikeNode.opacity = 255 : window.LikeNode.opacity = 0;
}
if (window.HotNode) {
var h = window.HotNode.parent.convertToWorldSpaceAR(window.HotNode.position), u = window.ParentNode.convertToNodeSpaceAR(h);
if (u.y < window.screenHight / 2 + window.HotNode.height && u.y > -window.screenHight / 2) {
window.HotNode.opacity = 255;
if (0 == this.isShowHot) {
this.isShowHot = !0;
o.default.getInstance().reportAnalytics("View_Show_V2", "HotMusicUI_Show", 1);
}
} else window.HotNode.opacity = 0;
}
if (window.OtherNode) {
var w = window.OtherNode.parent.convertToWorldSpaceAR(window.OtherNode.position), m = window.ParentNode.convertToNodeSpaceAR(w);
if (m.y < window.screenHight / 2 + window.OtherNode.height && m.y > -window.screenHight / 2) {
window.OtherNode.opacity = 255;
if (0 == this.isShowOther) {
this.isShowOther = !0;
o.default.getInstance().reportAnalytics("View_Show_V2", "NewMusicUI_Show", 1);
}
} else window.OtherNode.opacity = 0;
}
}
}
},
getPassword: function() {
var e = this, t = new XMLHttpRequest();
t.onreadystatechange = function() {
if (4 == t.readyState && t.status >= 200 && t.status < 400) {
var i = t.responseText;
e.password = JSON.parse(i)[0].password;
}
};
t.open("GET", "https://tencentcnd.minigame.xplaymobile.com/MusicGames/TestPassword/TestPassWord.json", !0);
t.send();
},
UpdatePlayMusicData: function() {
this.MusicCon.on("scroll-began", this.OnScrollBeganEvent, this);
this.MusicCon.on("scrolling", this.OnScrollingEvent, this);
this.MusicCon.on("scroll-ended", this.OnScrollEndEvent, this);
},
OnScrollBeganEvent: function() {
this.MainScrolling = !0;
this.unschedule(this.AutoPlayMusic);
},
OnScrollingEvent: function() {
this.MainScrolling = !0;
},
OnScrollEndEvent: function(e) {
var t = this;
this.MainScrolling = !1;
this.scheduleOnce(function() {
0 == t.MainScrolling && t.AutoPlayMusic();
}, 2);
},
AutoPlayMusic: function() {
if (1 != this.MainScrolling) if (1 != window.TouchPlayMusic) {
console.log("自动播放歌曲");
var e = window.HotNode.parent.convertToWorldSpaceAR(window.HotNode.position), t = window.OtherNode.parent.convertToWorldSpaceAR(window.OtherNode.position), i = window.LikeNode.parent.convertToWorldSpaceAR(window.LikeNode.position), o = window.GiftNode.parent.convertToWorldSpaceAR(window.GiftNode.position), n = e.y - window.screenHight / 2 - window.HotNode.height, s = t.y - window.screenHight / 2 - window.OtherNode.height, a = i.y - window.screenHight / 2 - window.LikeNode.height, c = o.y - window.screenHight / 2 - window.GiftNode.height;
if (c < 0) {
console.log("AutoPlayMusic 6 ");
if (6 != this.playMusicType) {
this.playMusicListNum6++;
this.playMusic(6);
this.playMusicType = 6;
}
} else if (a < 0 && c > 0) {
console.log("AutoPlayMusic 5 ");
if (5 != this.playMusicType) {
this.playMusicListNum5++;
this.playMusic(5);
this.playMusicType = 5;
}
} else if (n < 0 && a > 0 && c > 0) {
console.log("AutoPlayMusic 3 ");
if (3 != this.playMusicType) {
this.playMusicListNum3++;
this.playMusic(3);
this.playMusicType = 3;
}
} else if (s < 0 && n > 0 && a > 0 && c > 0) {
console.log("AutoPlayMusic 4 ");
if (4 != this.playMusicType) {
this.playMusicListNum4++;
this.playMusic(4);
this.playMusicType = 4;
}
}
} else {
console.log("处于手动播放歌曲的状态中,取消自动播放的定时器");
this.unschedule(this.AutoPlayMusic);
}
},
OnClickShowAll: function() {
console.log("点击显示全部的歌曲");
window.Parent.ButtonSounds();
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "MainUI_AllMusic_NoADClick", 1);
this.showNormalMusic();
},
OnClickMyMusic: function() {
console.log("点击显示我的音乐");
window.Parent.ButtonSounds();
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "MyMusic_NoADClick", 1);
this.ShowMyMusic();
this.ReSetClearList();
this.ResetColectList();
this.ResetUnClearList();
},
OnClickQuickStart: function() {
console.log("点击快速开始游戏");
window.Parent.ButtonSounds();
this.quickStart(!1);
},
OnClickCrown: function() {
console.log("点击显示皇冠的界面");
window.Parent.ButtonSounds();
this.showCrownMusic();
},
OnClickStore: function() {
console.log("点击显示商店的界面");
this.showCrownStore(!0);
},
OnClickEggShell: function() {
console.log("点击显示彩蛋的界面");
window.Parent.ButtonSounds();
console.log("点击彩蛋");
window.Parent.ButtonSounds();
this.LoadingNode.active = !0;
var e = this;
cc.loader.loadRes("PreFab/EggShellNode", cc.Prefab, function(t, i, o) {
var n = Math.floor(t / i * 100);
e.LoadingNode.getComponent("LoadingNodeJS").SetProgress(n);
}, function(t, i) {
if (t) console.log("EggShellNode 加载出错"); else {
console.log("EggShellNode 加载完成");
var o = cc.instantiate(i);
o.setPosition(0, 0);
o.zIndex = 11;
window.ParentNode.addChild(o);
e.closemoreGame();
window.Parent.hideBlockAd();
e.LoadingNode.active = !1;
}
});
},
OnClickConstellation: function() {
console.log("点击显示星座的界面");
window.Parent.ButtonSounds();
this.showXingzuoNode();
},
OnClickGiftCode: function() {
console.log("点击显示兑换礼品码");
window.Parent.ButtonSounds();
this.LoadingNode.active = !0;
var e = this;
cc.loader.loadRes("PreFab/GiftNode", cc.Prefab, function(t, i, o) {
var n = Math.floor(t / i * 100);
e.LoadingNode.getComponent("LoadingNodeJS").SetProgress(n);
}, function(t, i) {
if (t) console.log("GiftNode 加载出错"); else {
console.log("GiftNode 加载完成");
var o = cc.instantiate(i);
o.setPosition(0, 0);
o.zIndex = 13;
window.ParentNode.addChild(o);
e.closemoreGame();
window.Parent.hideBlockAd();
e.LoadingNode.active = !1;
}
});
},
OnClickDouyin: function() {
console.log("点击关注抖音");
window.Parent.ButtonSounds();
if (3 == window.platform) if (window.TestModle) {
this.hasFllowOfficial = 1;
window.Parent.setlocalStorage("hasFllowOfficial", this.hasFllowOfficial);
} else {
var e = this;
tt.openAwemeUserProfile({
success: function(t) {
console.log("---- open success, res: ", t);
if (t.hasFollowed) {
console.log("hasFllowOfficial True", e.hasFllowOfficial);
if (0 == e.hasFllowOfficial) {
e.hasFllowOfficial = 1;
window.Parent.showTips("关注成功");
e.followNode && (e.followNode.active = !1);
e.OnClickEggShell();
}
1 != Number(window.Parent.getlocalStorage("EggShellClock0")) && window.Parent.setlocalStorage("EggShellClock0", 1);
} else {
console.log("hasFllowOfficial Fail", e.hasFllowOfficial);
if (1 == e.hasFllowOfficial) {
e.hasFllowOfficial = 0;
window.Parent.showTips("取消关注");
}
}
window.Parent.setlocalStorage("hasFllowOfficial", e.hasFllowOfficial);
},
fail: function(e) {
console.log("---- open fail, err: ", e);
"openAwemeUserProfile:fail not login" === e.errMsg ? window.Parent.showTips("请先登录账号") : window.Parent.showTips("暂不支持此应用");
},
complete: function(e) {}
});
}
},
OnClickAddTable: function() {
console.log("点击添加桌面快捷方式");
window.Parent.ButtonSounds();
3 != window.platform && 1 != window.platform || (3 == window.platform ? tt.addShortcut({
success: function(e) {
e.status;
var t = e.errMsg;
console.log(e);
console.log("API调用成功结果:    " + t);
},
fail: function(e) {
var t = e.errMsg;
console.log("API调用失败结果:    " + t);
}
}) : 1 == window.platform && window.Parent.addDeskTop());
},
OnClickQQShowmorGame: function() {
console.log("点击显示QQ的更多游戏");
window.Parent.ButtonSounds();
4 == window.platform ? window.Parent.showQQAppBox() : 1 == window.platform && "undefined" != typeof qg && window.Parent.showNavigateBoxPortal();
},
OnClickSetHomeRole: function(e, t) {
t = Number(t);
window.Parent.ButtonSounds();
var i = this.RolePageView.getComponent("NewPageView_Inner").getCurrentPageIndex();
switch (t) {
case 1:
if (++i >= this.maxRoleNum) {
i = 0;
this.RoleContent.x = -540;
}
this.RolePageView.getComponent("NewPageView_Inner").setCurrentPageIndex(i);
break;

case 2:
if (--i < 0) {
i = this.maxRoleNum - 1;
this.RoleContent.x = -5940;
}
this.RolePageView.getComponent("NewPageView_Inner").setCurrentPageIndex(i);
}
},
OnClickOpenMore: function() {
if (1 != this.moreAnim) {
console.log("点击展开更多界面");
window.Parent.ButtonSounds();
o.default.getInstance().reportAnalytics("View_Show_V2", "More_NoADClick", 1);
this.ShowMoreGameAnim();
}
},
OnClickCloseMore: function() {
if (1 != this.moreAnim) {
console.log("点击关闭更多界面");
window.Parent.ButtonSounds();
this.CloseMoreGame();
}
},
OnClickAchieveNode: function() {
window.Parent.ButtonSounds();
this.showAchieveNode();
},
OnClickSign: function() {
window.Parent.ButtonSounds();
this.showCheckNode(!1);
},
OnClickReplayBTN: function() {
window.Parent.ButtonSounds();
this.ShowReplay();
},
OnClickMoreGame: function() {
if (3 == window.platform || 1 == window.platform || 4 == window.platform) {
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "MainUI_MoreGames_NoADClick", 1);
if (3 == window.platform) {
"ios" !== tt.getSystemInfoSync().platform && tt.showMoreGamesModal({
appLaunchOptions: [ {
appId: "ttXXXXXX",
query: "foo=bar&baz=qux",
extraData: {}
} ],
success: function(e) {
console.log("success", e.errMsg);
},
fail: function(e) {
console.log("fail", e.errMsg);
}
});
} else if (1 == window.platform && "undefined" != typeof qg) if (qg.getSystemInfoSync().platformVersionCode >= 1076) window.Parent.showNavigateBoxPortal(); else {
console.log("版本低于1076,无法弹出");
window.Parent.showTips("版本过低,无法使用更多游戏功能");
} else 4 == window.platform && window.Parent.showQQAppBox();
}
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
NewModelSelectJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "95b25UMUI5EUr4QLG1aROYn", "NewModelSelectJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
FaceCamerNode: cc.Node,
FaceBTN: cc.Node,
RolePrefab: cc.Prefab,
ScenePrefab: cc.Prefab
},
onLoad: function() {
this.defination();
this.definePar();
},
onEnable: function() {
o.default.getInstance().reportAnalytics("View_Show_V2", "DifficultyUI_Show", 1);
this.useModel = [];
this.UpdateText(!1);
this.UpdateButtonStatus();
3 == window.platform ? this.BTNNum = 5 : this.BTNNum = 4;
window.isShowSelecting = !0;
},
onDisable: function() {
window.isShowSelecting = !1;
},
defination: function() {
this.douyinBase = this.node.getChildByName("Base_Douyin");
this.normalBase = this.node.getChildByName("Base_Normal");
this.crownSP = this.node.getChildByName("SP_Crown");
this.crownNum = this.crownSP.getChildByName("LB_Num");
this.scoreSP = this.node.getChildByName("SP_Score");
this.scoreNum = this.scoreSP.getChildByName("LB_Num");
this.startBTN = this.node.getChildByName("BTN_Start");
this.IntroductionNode = this.node.getChildByName("Introduction");
},
definePar: function() {
this.useModel = [];
this.buttonList = null;
if (3 == window.platform) {
this.douyinBase.active = !0;
this.normalBase.active = !1;
this.buttonList = this.douyinBase.getChildByName("List");
} else {
this.douyinBase.active = !1;
this.normalBase.active = !0;
this.buttonList = this.normalBase.getChildByName("List");
}
this.isShowRole = !0;
this.UpdateText(!1);
},
close: function() {
console.log("close");
if (this.callBack) {
this.callBack();
this.callBack = void 0;
}
this.node.active = !1;
window.modelSelect = 0;
},
UpdateLock: function() {
if (0 != Number(window.Parent.getlocalStorage("unlockModel" + window.playID))) this.UpdateText(!1); else {
this.crownNum.getComponent(cc.Label).string = " X0 ";
this.scoreNum.getComponent(cc.Label).string = " X1 ";
}
},
UpdateText: function() {
var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], t = this.useModel.length;
this.crownNum.getComponent(cc.Label).string = " X" + t.toString();
this.scoreNum.getComponent(cc.Label).string = " X" + Math.pow(2, t).toString();
if (1 == e) {
this.crownSP.runAction(cc.sequence(cc.scaleTo(.05, 1.3), cc.scaleTo(.05, 1)));
this.scoreSP.runAction(cc.sequence(cc.scaleTo(.05, 1.3), cc.scaleTo(.05, 1)));
}
},
UpdateButtonStatus: function() {
for (var e = 0; e < this.BTNNum; e++) {
var t = this.useModel.indexOf(e);
this.buttonList.children[e].getChildByName("Select").active = -1 != t;
if (4 == e && -1 == t) {
window.FaceModle = !1;
console.log("关闭人脸模式");
window.Home.FaceCamerNode.active = !1;
5 === window.platform && window.Parent.getComponent("IosSDK").stopCaver();
} else if (4 == e && -1 != t) {
console.log("开启人脸模式");
var i = 1;
5 === window.platform && (i = window.Parent.getComponent("IosSDK").getCavInfo());
if (i) {
window.FaceModle = !0;
if (!window.TestModle) {
window.Home.FaceCamerNode.active = !0;
if (5 === window.platform) {
window.isStartCamera = !0;
window.Parent.showTips("摄像头启动中");
this.scheduleOnce(function() {
window.Parent.getComponent("IosSDK").startAVCapture(.95, .07);
}, .5);
}
}
} else window.Parent.showTips("请开启摄像头权限");
if (0 === this.isshowFinger) {
this.isshowFinger = 1;
window.Parent.setlocalStorage("isshowFinger", 1);
this.FaceButton.parent.getChildByName("tip").active = !1;
this.Finger.active = !1;
}
}
}
},
OnClickOther: function() {
window.Parent.ButtonSounds();
this.node.active = !1;
},
OnClickStart: function() {
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "DifficultyUI_Play_NoADClick", 1);
window.Parent.startGameSounds();
var e = this;
if (3 == window.platform) {
window.Power.reduceTili(this.startBTN, function() {
window.highModelList = e.useModel;
console.log("window.highModelList : ", window.highModelList);
window.Home.startGame();
e.close();
});
} else {
window.highModelList = e.useModel;
console.log("window.highModelList : ", window.highModelList);
window.Home.startGame();
e.close();
}
},
OnClickTips: function() {
window.Parent.ButtonSounds();
this.IntroductionNode.active = !0;
},
OnClickOK: function() {
window.Parent.ButtonSounds();
this.IntroductionNode.active = !1;
},
OnClickModel: function(e, t) {
window.Parent.ButtonSounds();
t = Number(t);
var i = this.useModel.indexOf(t);
if (-1 != i) {
this.useModel.splice(i, 1);
this.buttonList.children[t].getChildByName("Select").active = !1;
if (4 == t) {
window.FaceModle = !1;
console.log("关闭人脸模式");
window.Home.FaceCamerNode.active = !1;
5 === window.platform && window.Parent.getComponent("IosSDK").stopCaver();
}
} else {
this.useModel.push(t);
this.buttonList.children[t].getChildByName("Select").active = !0;
switch (t) {
case 0:
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "DifficultyUI_Move_NoADClick", 1);
break;

case 1:
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "DifficultyUI_Hiding_NoADClick", 1);
break;

case 2:
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "DifficultyUI_Discolor_NoADClick", 1);
break;

case 3:
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "DifficultyUI_Rock_NoADClick", 1);
break;

case 4:
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "DifficultyUI_Face_NoADClick", 1);
}
if (4 == t) {
console.log("开启人脸模式");
var n = 1;
5 === window.platform && (n = window.Parent.getComponent("IosSDK").getCavInfo());
if (n) {
window.FaceModle = !0;
if (!window.TestModle) {
window.Home.FaceCamerNode.active = !0;
if (5 === window.platform) {
window.isStartCamera = !0;
window.Parent.showTips("摄像头启动中");
this.scheduleOnce(function() {
window.Parent.getComponent("IosSDK").startAVCapture(.95, .07);
}, .5);
}
}
} else window.Parent.showTips("请开启摄像头权限");
if (0 === this.isshowFinger) {
this.isshowFinger = 1;
window.Parent.setlocalStorage("isshowFinger", 1);
this.FaceButton.parent.getChildByName("tip").active = !1;
this.Finger.active = !1;
}
}
}
this.UpdateText();
},
OnClickBTN: function() {
window.Parent.ButtonSounds();
1 == Number(window.Parent.getlocalStorage("unlockModel" + window.playID)) && this.OnClickStart();
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
NewPageView_Inner: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7dff3x+GRxMm6MB+Seq96B+", "NewPageView_Inner");
cc.Class({
extends: cc.PageView,
properties: {
m_OuterScrollView: {
default: null,
visible: !1
}
},
setOuterScrollView: function(e) {
this.m_OuterScrollView = e;
},
_onTouchMoved: function(e, t) {
if (this.enabledInHierarchy && !this._hasNestedViewGroup(e, t)) {
var i = e.touch, o = i.getLocation().sub(i.getStartLocation());
this.content && (this.m_OuterScrollView.isDifferentBetweenSettingAndPlan(this) || this._handleMoveLogic(i));
if (this.cancelInnerEvents) {
if (o.mag() > 7 && !this._touchMoved && e.target !== this.node) {
var n = new cc.Event.EventTouch(e.getTouches(), e.bubbles);
n.type = cc.Node.EventType.TOUCH_CANCEL;
n.touch = e.touch;
n.simulate = !0;
e.target.dispatchEvent(n);
this._touchMoved = !0;
}
this._stopPropagationIfTargetIsMe(e);
}
}
}
});
cc._RF.pop();
}, {} ],
NewPageView: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "58e09AkZ0RN55rGRa+wwRJ6", "NewPageView");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var c = e.length - 1; c >= 0; c--) (n = e[c]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s, a = cc._decorator, c = a.ccclass, r = a.property;
(function(e) {
e[e.Left = 0] = "Left";
e[e.Right = 1] = "Right";
})(s || (s = {}));
var l = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.directionType = s.Left;
t.scrollView = null;
t.pageTime = 1;
t.turnTime = 1;
t.perNum = .5;
t.indicator = null;
t.indicatorSP = null;
t.pageViewChild = new Array();
t.curPageViewChild = new Array();
t.curItemIdx = 0;
t.curContentX = 0;
t.firstPosX = 0;
t.startPosX = 0;
t.endPosX = 0;
t.isTurning = !1;
t.pageViewType = -1;
t.curLen = 0;
t.compareNum = 0;
t.loadOk = !1;
return t;
}
t.prototype.onLoad = function() {
this.SetScrollEvt();
this.curContentX = this.scrollView.content.x;
for (var e = 0; e < this.scrollView.content.childrenCount; e++) {
this.pageViewChild.push(this.scrollView.content.children[e]);
this.curPageViewChild.push(this.scrollView.content.children[e]);
this.curPageViewChild[e].active = !1;
e == this.scrollView.content.childrenCount - 1 && (this.loadOk = !0);
}
this.firstPosX = this.scrollView.content.x;
this.curLen = this.curPageViewChild.length;
this.curLen >= 5 && (this.curLen = 5);
this.compareNum = 0;
this.curLen >= 5 ? this.compareNum = 2 : this.compareNum = 1;
this.UpdatePageview();
this.AutoCarousel();
};
t.prototype.update = function() {
this.UpdateView();
};
t.prototype.SetScrollEvt = function() {
this.scrollView.node.on("scrolling", this.onScrolling, this);
this.scrollView.node.on("scroll-ended", this.onTouchUp, this);
this.scrollView.node.on("scroll-began", this.onScrollBegan, this);
this.scrollView.node.on(cc.Node.EventType.TOUCH_START, this.CarouselEnd, this);
};
t.prototype.UpdatePageview = function(e) {
void 0 === e && (e = 0);
for (var t = 0, i = 0; i < this.curPageViewChild.length; i++) 1 == this.curPageViewChild[i].active && t++;
var o = this;
if (0 == t) {
if (2 == this.compareNum) {
var n = this.curPageViewChild[this.curPageViewChild.length - 1], s = this.curPageViewChild[this.curPageViewChild.length - 2];
this.curPageViewChild.splice(this.curPageViewChild.length - 2, 2);
this.curPageViewChild.unshift(s, n);
} else {
n = this.curPageViewChild[this.curPageViewChild.length - 1];
this.curPageViewChild.splice(this.curPageViewChild.length - 1, 1);
this.curPageViewChild.unshift(n);
}
for (i = 0; i < this.curLen; i++) {
this.curPageViewChild[i].active = !0;
this.curPageViewChild[i].setSiblingIndex(i);
}
this.curItemIdx = 0;
this.UpdateIndicator();
} else if (1 == e) {
var a = (this.firstPosX + this.curPageViewChild[this.curItemIdx].width - this.scrollView.content.x) / this.curPageViewChild[this.curItemIdx].width;
this.isTurning = !0;
this.pageViewType = 1;
this.scrollView.content.runAction(cc.sequence(cc.moveTo(this.turnTime * a, cc.v2(this.firstPosX + this.curPageViewChild[this.curItemIdx].width, this.scrollView.content.y)), cc.callFunc(function() {
o.scrollView.content.stopAllActions();
o.isTurning = !1;
o.pageViewType = 0;
})));
} else if (2 == e) {
a = (this.scrollView.content.x - this.firstPosX + this.curPageViewChild[this.curItemIdx].width) / this.curPageViewChild[this.curItemIdx].width;
this.isTurning = !0;
this.pageViewType = 2;
this.scrollView.content.runAction(cc.sequence(cc.moveTo(this.turnTime * a, cc.v2(this.firstPosX - this.curPageViewChild[this.curItemIdx].width, this.scrollView.content.y)), cc.callFunc(function() {
o.scrollView.content.stopAllActions();
o.isTurning = !1;
o.pageViewType = 0;
})));
} else if (0 == e) if (2 == this.pageViewType) {
a = (this.firstPosX - this.scrollView.content.x) / this.curPageViewChild[this.curItemIdx].width;
this.isTurning = !0;
this.pageViewType = 2;
this.scrollView.content.runAction(cc.sequence(cc.moveTo(this.turnTime * a, cc.v2(this.firstPosX, this.scrollView.content.y)), cc.callFunc(function() {
o.scrollView.content.stopAllActions();
o.isTurning = !1;
o.pageViewType = 0;
})));
} else if (1 == this.pageViewType) {
a = (this.scrollView.content.x - this.firstPosX) / this.curPageViewChild[this.curItemIdx].width;
this.isTurning = !0;
this.pageViewType = 1;
this.scrollView.content.runAction(cc.sequence(cc.moveTo(this.turnTime * a, cc.v2(this.firstPosX, this.scrollView.content.y)), cc.callFunc(function() {
o.scrollView.content.stopAllActions();
o.isTurning = !1;
o.pageViewType = 0;
})));
}
};
t.prototype.onScrollBegan = function() {
this.startPosX = this.scrollView.content.position.x;
this.scrollView.content.stopAllActions();
this.unschedule(this.AutoTurnPage);
};
t.prototype.onScrolling = function() {
this.curContentX = this.scrollView.content.x;
this.unschedule(this.AutoTurnPage);
};
t.prototype.onTouchUp = function(e) {
this.scrollView.content.stopAllActions();
this.endPosX = this.scrollView.content.position.x;
this.curContentX = this.scrollView.content.x;
this.AutoPage();
this.AutoCarousel();
};
t.prototype.CarouselEnd = function() {
this.unschedule(this.AutoTurnPage);
};
t.prototype.AutoPage = function() {
var e = 0, t = this.startPosX - this.endPosX;
t > 0 ? e = 2 : t < 0 && (e = 1);
this.scrollView.content.stopAllActions();
this.isTurning ? e == this.pageViewType ? this.UpdatePageview(e) : this.UpdatePageview(0) : this.UpdatePageview(e);
};
t.prototype.AutoCarousel = function() {
this.schedule(this.AutoTurnPage, this.pageTime);
};
t.prototype.AutoTurnPage = function() {
var e = this.directionType;
0 == e ? this.UpdatePageview(1) : 1 == e && this.UpdatePageview(2);
};
t.prototype.TurnToPage = function(e) {
var t = this;
if (1 != this.isTurning) {
this.UpdatePageview(e);
this.unschedule(this.AutoTurnPage);
this.scheduleOnce(function() {
t.AutoCarousel();
}, .1);
}
};
t.prototype.UpdateIndicator = function() {
if (this.indicator) {
var e = this.indicator.getComponent(cc.Layout);
if (null == e) {
(e = this.indicator.addComponent(cc.Layout)).type = cc.Layout.Type.HORIZONTAL;
for (var t = 0; t < this.pageViewChild.length; t++) {
var i = (n = new cc.Node(t.toString())).addComponent(cc.Sprite);
this.indicatorSP && (i.spriteFrame = this.indicatorSP);
n.opacity = 128;
n.parent = this.indicator;
}
}
for (var o = 0; o < this.pageViewChild.length; o++) {
var n = this.indicator.children[o];
o != this.curItemIdx ? n.opacity = 128 : n.opacity = 255;
}
}
};
t.prototype.UpdateView = function() {
if (0 != this.loadOk && 0 != this.scrollView.content.childrenCount) {
var e = this.scrollView.content.x;
if (Math.abs(e - this.firstPosX) > this.pageViewChild[0].width - 1) {
if (e - this.firstPosX < 0) {
var t = this.curPageViewChild[0];
this.curPageViewChild.splice(0, 1);
this.curPageViewChild.push(t);
for (var i = 0; i < this.pageViewChild.length; i++) {
if (this.pageViewChild[i] == this.curPageViewChild[this.compareNum]) {
this.curItemIdx = i;
break;
}
}
} else {
t = this.curPageViewChild[this.curPageViewChild.length - 1];
this.curPageViewChild.splice(this.curPageViewChild.length - 1, 1);
this.curPageViewChild.unshift(t);
for (i = 0; i < this.pageViewChild.length; i++) {
if (this.pageViewChild[i] == this.curPageViewChild[this.compareNum]) {
this.curItemIdx = i;
break;
}
}
}
for (var o = 0; o < this.curPageViewChild.length; o++) {
this.curPageViewChild[o].active = !1;
if (o < 5) {
this.curPageViewChild[o].active = !0;
this.curPageViewChild[o].setSiblingIndex(o);
}
}
this.scrollView.content.position = cc.v3(this.firstPosX, this.scrollView.content.y, 0);
this.UpdateIndicator();
}
}
};
n([ r({
type: cc.Enum(s),
displayName: "轮播方向"
}) ], t.prototype, "directionType", void 0);
n([ r({
type: cc.ScrollView,
displayName: "滚动条"
}) ], t.prototype, "scrollView", void 0);
n([ r({
displayName: "轮播间隔"
}) ], t.prototype, "pageTime", void 0);
n([ r({
displayName: "轮播动画时间"
}) ], t.prototype, "turnTime", void 0);
n([ r({
displayName: "页面比例超过多少时进行翻动"
}) ], t.prototype, "perNum", void 0);
n([ r({
type: cc.Node,
displayName: "页图指示器"
}) ], t.prototype, "indicator", void 0);
n([ r({
type: cc.SpriteFrame,
displayName: "页面指示器图片"
}) ], t.prototype, "indicatorSP", void 0);
return t = n([ c ], t);
}(cc.Component);
i.default = l;
cc._RF.pop();
}, {} ],
NewRolebgJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1e6c06fSAFH4qucYsbijJ22", "NewRolebgJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
scenebg: cc.Node,
Title: cc.Node,
scalLight: cc.Node,
crownBTN: cc.Node,
videoBTN: cc.Node,
isUsing: cc.Node,
useBTN: cc.Node,
diamondBTN: cc.Node,
ActivityNode: cc.Node,
CurLB: cc.Node,
LastLB: cc.Node
},
onLoad: function() {
this.scenebg.getComponent(cc.Sprite).spriteFrame = this.RoleSpr;
this.Title.getComponent(cc.Label).string = this.RoleName;
},
UpdateBTNActive: function() {
var e = window.RoleUnlockType[this.Number], t = window.Parent.getlocalStorage("RoleModel");
t = "true" === t;
if ("video" === e) {
this.crownBTN.active = !1;
this.videoBTN.active = !0;
this.isUsing.active = !1;
this.useBTN.active = !1;
this.diamondBTN.active = !1;
var i = Number(window.Parent.getlocalStorage("roleUnlockNum_" + this.Number));
1 == window.isActivity && 1 == this.Number ? this.videoBTN.getChildByName("num").getComponent(cc.Label).string = "0/1" : this.videoBTN.getChildByName("num").getComponent(cc.Label).string = i + "/" + window.RoleUnlockNumber[this.Number];
if (1 == t) {
if (i >= window.RoleUnlockNumber[this.Number] || window.roleIsUnlock[this.Number]) {
if (!window.roleIsUnlock[this.Number]) {
window.roleIsUnlock[this.Number] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + this.Number, !0);
}
this.videoBTN.active = !1;
this.isUsing.active = window.RoleNum == this.Number;
this.useBTN.active = !(window.RoleNum == this.Number);
}
} else if (0 == t && 0 == this.Number) {
this.videoBTN.active = !1;
this.isUsing.active = !0;
this.useBTN.active = !1;
} else if (0 == t && 0 != this.Number && (i >= window.RoleUnlockNumber[this.Number] || window.roleIsUnlock[this.Number])) {
if (!window.roleIsUnlock[this.Number]) {
window.roleIsUnlock[this.Number] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + this.Number, !0);
}
this.videoBTN.active = !1;
this.isUsing.active = !1;
this.useBTN.active = !0;
}
} else if ("crown" === e) {
this.crownBTN.active = !0;
this.videoBTN.active = !1;
this.isUsing.active = !1;
this.useBTN.active = !1;
this.diamondBTN.active = !1;
this.crownBTN.getChildByName("num").getComponent(cc.Label).string = window.RoleUnlockNumber[this.Number];
if (1 == t) {
if (window.roleIsUnlock[this.Number]) {
this.crownBTN.active = !1;
this.isUsing.active = window.RoleNum == this.Number;
this.useBTN.active = !(window.RoleNum == this.Number);
}
} else if (0 == t && 0 == this.Number) {
this.crownBTN.active = !1;
this.isUsing.active = !0;
this.useBTN.active = !1;
} else if (0 == t && 0 != this.Number && window.roleIsUnlock[this.Number]) {
this.crownBTN.active = !1;
this.isUsing.active = !1;
this.useBTN.active = !0;
}
} else if ("diamond" === e) {
this.crownBTN.active = !1;
this.videoBTN.active = !1;
this.isUsing.active = !1;
this.useBTN.active = !1;
this.diamondBTN.active = !0;
this.diamondBTN.getChildByName("num").getComponent(cc.Label).string = window.RoleUnlockNumber[this.Number];
if (1 == t) {
if (window.roleIsUnlock[this.Number]) {
this.diamondBTN.active = !1;
this.isUsing.active = window.RoleNum == this.Number;
this.useBTN.active = !(window.RoleNum == this.Number);
}
} else if (0 == t && 0 == this.Number) {
this.diamondBTN.active = !1;
this.isUsing.active = !0;
this.useBTN.active = !1;
} else if (0 == t && 0 != this.Number && window.roleIsUnlock[this.Number]) {
this.diamondBTN.active = !1;
this.isUsing.active = !1;
this.useBTN.active = !0;
}
}
this.UpdateActivity();
},
OnClickCrown: function() {
window.Parent.ButtonSounds();
var e = window.RoleUnlockNumber[this.Number];
if (window.CrownNum >= e) {
window.Crown.reduceCrown(e);
window.roleIsUnlock[this.Number] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + this.Number, !0);
this.UpdateBTNActive();
} else 0 == window.getCrownNum ? window.Crown.showAddCrownNode() : this.TipNode.active = !0;
},
OnClickVideo: function() {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "ShopUI_Role__ADClick", 1);
window.Parent.ButtonSounds();
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
if (1 == window.isActivity && 1 == e.Number) {
window.roleIsUnlock[e.Number] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + e.Number, !0);
e.UpdateBTNActive();
} else {
var i = Number(window.Parent.getlocalStorage("roleUnlockNum_" + e.Number));
i++;
window.Parent.setlocalStorage("roleUnlockNum_" + e.Number, i);
e.UpdateBTNActive();
}
e.crownStore.getComponent("NewCrownStoreJS").UseRoleButtonclick(e.Number);
window.Home.UpdateHomeRoleList();
}
});
},
OnClickUse: function() {
this.crownStore.getComponent("NewCrownStoreJS").UseRoleButtonclick(this.Number);
window.Home.UpdateHomeRoleList();
},
OnClickDiamond: function() {
window.Parent.ButtonSounds();
var e = window.RoleUnlockNumber[this.Number];
if (window.DiamonNum >= e) {
window.Diamon.reduceDiamond(e);
window.roleIsUnlock[this.Number] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + this.Number, !0);
this.UpdateBTNActive();
} else window.Diamon.showAddDimondNode();
},
UpdateActivity: function() {
var e = window.Parent.getlocalStorage("roleIsUnlock" + this.Number);
e = "true" == e;
this.ActivityNode.active = !1;
}
});
cc._RF.pop();
}, {
"../Help/reportAnalytics": "reportAnalytics"
} ],
NewScenebgJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bdc52MyeglGjaWUqzFUq2hZ", "NewScenebgJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
scenebg: cc.Node,
tips: cc.Node,
Title: cc.Node,
scalLight: cc.Node,
crownBTN: cc.Node,
videoBTN: cc.Node,
isUsing: cc.Node,
useBTN: cc.Node,
pointNode: cc.Node
},
onLoad: function() {
this.tipsLabel = [ "炫酷好玩的节奏世界！", "森林里不止有魔法也有快乐的节奏哦！", "那是遨游在天空的大鱼", "传说那里有一群可爱的蓝精灵！", "夏日炎炎，有你超甜！", "住在这里的神明是一位美丽的仙子！", "去见识一下沙漠里的大骆驼吧！" ];
this.scenebg.getComponent(cc.Sprite).spriteFrame = this.backgroundSpr;
this.Title.getComponent(cc.Label).string = this.ScenName;
},
UpdateBTNActive: function() {
var e = window.SceneUnlockType[this.Number];
if ("video" === e) {
this.crownBTN.active = !1;
this.videoBTN.active = !0;
this.isUsing.active = !1;
this.useBTN.active = !1;
this.pointNode.active = !1;
var t = Number(window.Parent.getlocalStorage("sceneUnlockNum_" + this.Number));
this.videoBTN.getChildByName("num").getComponent(cc.Label).string = t + "/" + window.SceneUnlockNumber[this.Number];
if (t >= window.SceneUnlockNumber[this.Number] || window.sceneIsUnlock[this.Number]) {
if (!window.sceneIsUnlock[this.Number]) {
window.sceneIsUnlock[this.Number] = !0;
window.Parent.setlocalStorage("sceneIsUnlock" + this.Number, !0);
}
this.videoBTN.active = !1;
this.isUsing.active = window.SceneNumber == this.Number;
this.useBTN.active = !(window.SceneNumber == this.Number);
}
} else if ("crown" === e) {
this.crownBTN.active = !0;
this.videoBTN.active = !1;
this.isUsing.active = !1;
this.useBTN.active = !1;
this.pointNode.active = !1;
this.crownBTN.getChildByName("num").getComponent(cc.Label).string = window.SceneUnlockNumber[this.Number];
if (window.sceneIsUnlock[this.Number]) {
this.crownBTN.active = !1;
this.isUsing.active = window.SceneNumber == this.Number;
this.useBTN.active = !(window.SceneNumber == this.Number);
} else this.pointNode.active = !0;
}
},
OnClickCrown: function() {
this.crownStore.getComponent("NewCrownStoreJS").SceneVideoButtnClick(this.Number);
},
OnClickVideo: function() {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "ShopUI_Scene__ADClick", 1);
window.Parent.reportAnalytics("ShopScene_vedio_click");
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
var i = Number(window.Parent.getlocalStorage("sceneUnlockNum_" + e.Number));
i++;
window.Parent.setlocalStorage("sceneUnlockNum_" + e.Number, i);
e.UpdateBTNActive();
}
});
},
OnClickUse: function() {
this.crownStore.getComponent("NewCrownStoreJS").UseSceneButtonclick(this.Number);
}
});
cc._RF.pop();
}, {
"../Help/reportAnalytics": "reportAnalytics"
} ],
NewrecommendJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2c4a1pwTshJC7pXXPJMvSUJ", "NewrecommendJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
SongName: cc.Label,
Loading: cc.Node,
PlayButton: cc.Node,
PauseButton: cc.Node,
loading: cc.Node,
CD: cc.Node,
returnButton: cc.Node,
videoBTN: cc.Node,
startBTN: cc.Node,
NormalNode: cc.Node,
IOSNode: cc.Node,
mp4Node: cc.Node,
videoSpNode: cc.Node,
videoSPList: [ cc.SpriteFrame ],
CircleNode: cc.Node
},
onLoad: function() {
this.node.setContentSize(window.screenWidth, window.screenHight);
window.hasshowNewSong = 1;
this.showLight = !1;
window.TestModle || 3 != window.platform ? this.scheduleOnce(function() {
this.returnButton.active = !0;
}, .1) : this.scheduleOnce(function() {
this.returnButton.active = !0;
}, 3);
},
onEnable: function() {
var e = this;
this.NormalNode.setScale(0);
this.NormalNode.active = !0;
this.IOSNode.active = !1;
if (0 == window.isShowIOS) if (3 == window.platform && "ios" == window.PhoneType) {
if (0 == Number(window.Parent.getlocalStorage("showIOS"))) if (window.Parent.showRecommendNum % 2 == 0) {
this.IOSNode.active = !0;
this.NormalNode.active = !1;
window.Parent.setlocalStorage("showIOS", 1);
} else {
this.IOSNode.active = !1;
this.NormalNode.active = !0;
this.scheduleOnce(function() {
e.playMusic();
}, .5);
} else {
this.IOSNode.active = !1;
this.NormalNode.active = !0;
this.scheduleOnce(function() {
e.playMusic();
}, .5);
}
} else {
this.NormalNode.active = !0;
this.IOSNode.active = !1;
this.scheduleOnce(function() {
e.playMusic();
}, .5);
} else if (1 == window.isShowIOS) {
this.IOSNode.active = !0;
this.NormalNode.active = !1;
window.isShowIOS = !1;
}
cc.tween(this.NormalNode).to(.2, {
scale: 1.3
}).to(.8, {
scale: 1
}, {
easing: cc.easing.elasticOut
}).start();
this.isRecommond = !1;
if (0 != window.Home.newRecommondTable.length) {
window.Home.newRecommondTable = window.Tools.disruptionArr(window.Home.newRecommondTable);
this.isRecommond = !0;
this.SongName.string = window.Home.newRecommondTable[0].musicName;
this.CD.getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[window.Home.newRecommondTable.length % 20];
} else {
this.isRecommond = !1;
if (0 == window.Home.newSongTable.length) {
window.Home.playMusic();
this.node.destroy();
} else {
this.SongName.string = window.Home.newSongTable[0].musicName;
this.CD.getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[window.Home.newSongTable.length % 20];
}
}
this.isShowVideo = !1;
this.videoBTN.active = !0;
this.startBTN.active = !1;
o.default.getInstance().reportAnalytics("View_Show_V2", "YoursRecommendUI_Show", 1);
5 == window.platform && jsb.reflection.callStaticMethod("DJADManagerVC", "videoUIShow:", "YoursRecommendUI_ADClick");
},
onDisable: function() {
0 == this.isShowVideo && (window.Home.newRecommondTable.length > 0 ? window.Home.newRecommondTable[0] && window.Home.RemoveSongTabel(window.Home.newRecommondTable[0].musicId) : window.Home.newSongTable.length > 0 && window.Home.newSongTable[0] && window.Home.RemoveSongTabel(window.Home.newSongTable[0].musicId));
setTimeout(function() {
window.Home.playMusic();
}, .2);
5 == window.platform && window.Parent.showInsertAD("YoursRecommendUI_ADClick");
},
start: function() {},
close: function() {
window.Parent.ButtonSounds();
this.musicplay && this.pauseMusic();
this.node.destroy();
5 == window.platform && window.Parent.hidePushicon();
var e = null;
if (1 == this.isRecommond) for (var t = 0; t < window.Home.newRecommondTable.length; t++) {
var i = window.Home.newRecommondTable[t].musicId;
if (i == window.Home.newRecommondTable[0].musicId) {
e = i;
break;
}
} else for (var o = 0; o < window.Home.musicTable.length; o++) {
var n = window.Home.musicTable[o].musicId;
if (n == window.Home.newSongTable[0].musicId) {
e = n;
break;
}
}
window.Home.DealMusicScore(e, !0, 1);
},
runcrcloe: function(e, t, i, o, n, s) {
if (window.musicisplaying) {
var a = t, c = i, r = 3.1415926 / (700 / n / o);
e.angle += 59.7 * r;
var l = Math.cos(r), d = Math.sin(r), h = e.x - a, u = e.y - c, w = h * l - u * d, m = u * l + h * d;
e.x = a + w;
e.y = c + m;
if (1 == s) {
if (e.x >= 5 && e.x < 10 && e.y < 0) {
e.x = 148.91;
e.y = -81.2;
}
if (e.x >= -10 && e.x < -5 && e.y > 0) {
e.x = -149.48;
e.y = 83;
}
}
}
},
playMusic: function() {
var e = this;
window.Home.stopMusicPlaying();
window.musicisplaying = !1;
this.PlayButton.active = !1;
this.loading.active = !0;
this.loading.stopAllActions();
cc.tween(this.loading).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
var t = null, i = null;
if (1 == this.isRecommond) {
t = window.Home.newRecommondTable[0].musicFile;
i = window.Home.newRecommondTable[0].musicId;
} else {
t = window.Home.newSongTable[0].musicFile;
i = window.Home.newSongTable[0].musicId;
}
window.Parent.LoadMusic(t, i, function(t) {
if (window.videoIsPlay) window.Home.stopMusicPlaying(); else if (e.loading) {
e.loading.active = !1;
e.PauseButton.active = !0;
window.musicisplaying = !0;
e.musicplay = !0;
cc.tween(e.CD).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
cc.tween(e.CircleNode).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
window.Parent.audioEngine.playMusic(t, !0);
1 == e.isRecommond ? window.Parent.audioEngine.setMusicTime(Number(window.Home.newRecommondTable[0].ex_listen)) : window.Parent.audioEngine.setMusicTime(Number(window.Home.newSongTable[0].ex_listen));
}
});
},
pauseMusic: function() {
this.musicplay = !1;
window.musicisplaying = !1;
this.PlayButton.active = !0;
this.loading.active = !1;
this.PauseButton.active = !1;
this.CD.angle = 0;
this.CD.stopAllActions();
this.CircleNode.angle = 0;
this.CircleNode.stopAllActions();
window.Parent.audioEngine.stopAll();
},
videoStartButtonClick: function() {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "YoursRecommendUI_ADClick", 1);
window.Parent.ButtonSounds();
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
5 == window.platform && jsb.reflection.callStaticMethod("DJADManagerVC", "showiOSADWithType:Platform:", "YoursRecommendUI_ADClick", "1");
e.videoBTN.active = !1;
e.startBTN.active = !0;
var i = function() {
e.node.active = !1;
};
if (1 == e.isRecommond) {
window.playName = window.Home.newRecommondTable[0].musicName;
window.playURL = window.Home.newRecommondTable[0].musicFile;
window.playID = window.Home.newRecommondTable[0].musicId;
window.playPoint = window.Home.newRecommondTable[0].json_normal;
} else {
window.playName = window.Home.newSongTable[0].musicName;
window.playURL = window.Home.newSongTable[0].musicFile;
window.playID = window.Home.newSongTable[0].musicId;
window.playPoint = window.Home.newSongTable[0].json_normal;
}
if (1 == e.isRecommond) for (var o = 0; o < window.Home.newRecommondTable.length; o++) {
var n = window.Home.newRecommondTable[o].musicId;
if (n == window.Home.newRecommondTable[0].musicId) {
window.Parent.setlocalStorage("isUnlock" + n, "true");
window.AchieveNumber[1]++;
window.Parent.setlocalStorage("AchieveNumber1", window.AchieveNumber[1]);
window.Home.DealUnlockMusic(n);
window.Home.RemoveSongTabel(n);
window.Home.perviewmusicName = window.Home.curmusicName;
window.Home.curmusicName = window.Home.newRecommondTable[o].musicName;
window.Home.UpdateMusicPlay();
e.isShowVideo = !0;
window.playNum = o;
window.Home.showModleSelect(i, e.startBTN);
5 == window.platform && window.Parent.hidePushicon();
window.Home.DealMusicScore(n, !1, 3);
break;
}
} else for (var s = 0; s < window.Home.musicTable.length; s++) {
var a = window.Home.musicTable[s].musicId;
if (a == window.Home.newSongTable[0].musicId) {
window.Parent.setlocalStorage("isUnlock" + a, "true");
window.AchieveNumber[1]++;
window.Parent.setlocalStorage("AchieveNumber1", window.AchieveNumber[1]);
window.Home.DealUnlockMusic(a);
window.Home.RemoveSongTabel(a);
window.Home.perviewmusicName = window.Home.curmusicName;
window.Home.curmusicName = window.Home.musicTable[s].musicName;
window.Home.UpdateMusicPlay();
e.isShowVideo = !0;
window.playNum = s;
window.Home.showModleSelect(i, e.startBTN);
5 == window.platform && window.Parent.hidePushicon();
window.Home.DealMusicScore(a, !1, 3);
break;
}
}
window.Home.stopMusicPlaying();
window.watchVideoTimes++;
}
});
},
StartButtonClick: function() {
window.Parent.ButtonSounds();
var e = this;
window.Home.showModleSelect(function() {
e.node.active = !1;
}, e.startBTN);
},
PlayMP4Video: function() {
console.log("播放MP4文件");
window.platform;
},
ReplayVideoFunc: function() {
console.log("重新播放MP4文件");
this.mp4Node.getComponent(cc.VideoPlayer).play();
},
IOSAnim: function() {
var e = this;
this.hintImgList = [];
this.videoSpNode.getComponent(cc.Sprite).spriteFrame = this.videoSPList[0];
this.hintImgList[0] = this.IOSNode.getChildByName("IOSAnim").getChildByName("img_hint1");
this.hintImgList[0].active = !1;
this.imgHand = this.IOSNode.getChildByName("IOSAnim").getChildByName("img_hand");
this.imgHand.setPosition(cc.v2(300, 475));
var t = cc.moveTo(1, cc.v2(150, 150));
this.imgHand.runAction(cc.sequence(t, cc.callFunc(function() {
i();
})));
var i = function() {
e.hintImgList[0].active = !0;
e.hintImgList[0].runAction(cc.sequence(cc.repeat(cc.sequence(cc.scaleTo(.1, 1.1), cc.scaleTo(.1, 1)), 3), cc.callFunc(function() {
e.hintImgList[0].active = !1;
}, cc.callFunc(function() {
o();
}))));
}, o = function() {
e.videoSpNode.getComponent(cc.Sprite).spriteFrame = e.videoSPList[0];
var t = cc.moveTo(1, cc.v2(-225, 150));
this.imgHand.runAction(cc.sequence(t, cc.callFunc(function() {
n();
})));
}, n = function() {};
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
NewsBoradJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d324csx7RlENrC0REk9Fjln", "NewsBoradJS");
cc.Class({
extends: cc.Component,
properties: {
CD: [ cc.Node ],
OKButton: cc.Node,
AddButton: cc.Node,
tips1: cc.Node,
tips2: cc.Node,
Headset: cc.Node
},
onLoad: function() {
this.Day = new Date().getTime();
0 == this.Day && (this.Day = 7);
this.perviewSongTable = [];
for (var e = 0; e < window.Home.perViewTable.length; e++) {
var t = new Date(window.Home.perViewTable[e].ex_notice).getTime();
t - this.Day <= 864e5 && this.Day < t && this.perviewSongTable.push(window.Home.perViewTable[e]);
}
if (this.perviewSongTable.length > 0) {
for (e = 0; e < 2; e++) {
this.CD[e].active = !0;
this.CD[e].getChildByName("SongNameMask").getChildByName("SongName").getComponent(cc.Label).string = this.perviewSongTable[e].musicName;
var i = Number(this.perviewSongTable[e].orderNumber) % 20;
this.CD[e].getChildByName("Mask").getChildByName("cd").getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[i];
}
this.tips2.active = !1;
this.Headset.active = !1;
} else {
this.CD[0].active = !1;
this.CD[1].active = !1;
this.tips2.active = !0;
this.Headset.active = !0;
}
},
onEnable: function() {
console.log("是否能添加桌面", window.Parent.getDeskTopFlag());
if (window.Parent.getDeskTopFlag()) {
this.OKButton.x = 0;
this.AddButton.active = !1;
this.tips1.active = !1;
} else if (3 === window.platform || 4 === window.platform || 2 === window.platform || 5 === window.platform) {
this.OKButton.x = 0;
this.AddButton.active = !1;
this.tips1.active = !1;
} else {
this.OKButton.x = -240;
this.AddButton.active = !0;
this.AddButton.x = 186;
this.tips1.active = !0;
}
this.musicisplay = !1;
},
start: function() {},
close: function() {
this.musicisplay && this.pauseMusic();
window.Home.playMusic();
this.node.destroy();
},
playMusic: function(e, t) {
var i = this;
window.Home.stopMusicPlaying();
t = Number(t);
this.pauseMusic();
window.Parent.ButtonSounds();
var o = this.perviewSongTable[t].musicID, n = this.perviewSongTable[t].musicFile;
window.Parent.LoadMusic(n, o, function(e) {
i.musicisplay = !0;
if (!window.isGaming && !window.musicisplaying && !window.videoIsPlay) {
window.musicisplaying = !0;
window.Parent.audioEngine.playMusic(e, !0);
window.Parent.audioEngine.setMusicTime(Number(this.perviewSongTable[t].ex_listen));
window.isShowingVideoInsert && window.Parent.audioEngine.setVolume(0);
}
});
this.CD[t].getChildByName("Mask").getChildByName("cd").runAction(cc.repeatForever(cc.rotateBy(5, 360)));
this.CD[t].getChildByName("play").active = !1;
this.CD[t].getChildByName("pause").active = !0;
},
pauseMusic: function() {
window.musicisplaying = !1;
window.Parent.audioEngine.stopAll();
for (var e = 0; e < 2; e++) {
this.CD[e].getChildByName("Mask").getChildByName("cd").stopAllActions();
this.CD[e].getChildByName("play").active = !0;
this.CD[e].getChildByName("pause").active = !1;
}
},
addDeskTop: function() {
var e = this;
window.Parent.addDeskTop(function() {
e.OKButton.x = 0;
e.AddButton.active = !1;
e.tips1.active = !1;
});
}
});
cc._RF.pop();
}, {} ],
OtherFunctions: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2935evyPdNLzKJ6EvoBbZHV", "OtherFunctions");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../tools/SdkTools"), n = null, s = null, a = function() {
function e() {
this.SW_DesktopSwitch = !1;
this.SW_IntersToDesktop = !1;
this.NUM_DeskAutoMostTimes = 0;
this.NUM_IntersAddDesktopNumber = 0;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.getDeskTopFlag = function(e) {
if (this.SW_DesktopSwitch) switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
qg.hasShortcutInstalled({
success: function(t) {
0 == t && e(!0);
},
fail: function(e) {
console.log("ASCSDK", JSON.stringify(e));
},
complete: function() {}
});
break;

case o.Game_Platform.GP_Vivo:
qg.hasShortcutInstalled({
success: function(t) {
if (t) {
console.log("ASCSDK", "VIVO 已创建桌面图标");
e(!1);
} else {
console.log("ASCSDK", "VIVO 未创建桌面图标");
e(!0);
}
}
});
break;

case o.Game_Platform.GP_Tiktok:
case o.Game_Platform.GP_QQ:
e(!0);
break;

case o.Game_Platform.GP_HW:
hbs.hasInstalled({
success: function(t) {
if (t) {
console.log("ASCSDK", "HW 已创建桌面图标");
e(!1);
} else {
console.log("ASCSDK", "HW 未创建桌面图标");
e(!0);
}
},
fail: function(t) {
console.log("ASCSDK", "未知错误:" + t);
e(!1);
}
});
break;

case o.Game_Platform.GP_Test:
default:
e(!0);
} else {
console.log("ASCSDK", "添加桌面图标开关未开启");
e(!1);
}
};
e.prototype.addDeskTop = function(e) {
if (this.SW_DesktopSwitch) switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
qg.installShortcut({
success: function() {
console.log("ASCSDK", "OPPO 创建桌面图标成功");
e(!0);
},
fail: function(t) {
console.log("ASCSDK", "OPPO 创建桌面图标失败:" + JSON.stringify(t));
e(!1);
},
complete: function() {}
});
break;

case o.Game_Platform.GP_Vivo:
qg.installShortcut({
success: function() {
console.log("ASCSDK", "VIVO 创建桌面图标成功");
e(!0);
},
fail: function(t) {
console.log("ASCSDK", "VIVO 创建桌面图标失败:" + JSON.stringify(t));
e(!1);
},
complete: function() {}
});
break;

case o.Game_Platform.GP_QQ:
qq.saveAppToDesktop({
success: function() {
console.log("ASCSDK", "QQ 创建桌面图标成功");
e(!0);
},
fail: function(t) {
console.log("ASCSDK", "QQ 创建桌面图标失败:" + JSON.stringify(t));
e(!1);
},
complete: function() {}
});
break;

case o.Game_Platform.GP_Tiktok:
tt.addShortcut({
success: function(t) {
console.log("ASCSDK", "添加桌面成功");
e(!0);
},
fail: function(t) {
console.log("ASCSDK", "添加桌面失败:" + JSON.stringify(t));
e(!1);
}
});
break;

case o.Game_Platform.GP_HW:
hbs.install({
success: function(t) {
console.log("ASCSDK", "HW 添加桌面成功");
e(!0);
},
fail: function(t, i) {
console.log("ASCSDK", "HW 添加桌面失败:" + JSON.stringify(t));
e(!1);
}
});
break;

default:
e(!0);
} else {
console.log("ASCSDK", "添加桌面图标开关未开启");
e(!1);
}
};
e.prototype.showToast = function(e) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
if (qg.getSystemInfoSync().platformVersionCode < 1050) {
console.log("ASCSDK", "OPPO 不支持提示框的版本");
return;
}
console.log("ASCSDK", "OPPO showToast：", e);
qg.showToast({
title: e,
duration: 3e3
});
break;

case o.Game_Platform.GP_Vivo:
qg.showToast({
message: e
});
break;

case o.Game_Platform.GP_QQ:
qq.showToast({
title: e,
duration: 3e3
});
break;

case o.Game_Platform.GP_Test:
console.log("ASCSDK", "Test 打包后会有真实效果:", e);
}
};
e.prototype.phoneVibrate = function(e) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
"short" == e && qg.vibrateShort({
success: function(e) {},
fail: function(e) {},
complete: function(e) {}
});
"long" == e && qg.vibrateLong({
success: function(e) {},
fail: function(e) {},
complete: function(e) {}
});
break;

case o.Game_Platform.GP_Vivo:
case o.Game_Platform.GP_XM:
"short" == e && qg.vibrateShort();
"long" == e && qg.vibrateLong();
break;

case o.Game_Platform.GP_Tiktok:
"long" == e ? tt.vibrateLong({
success: function(e) {},
fail: function(e) {
console.log("ASCSDK", "Tiktok vibrateLong调用失败");
}
}) : "short" == e && tt.vibrateShort({
success: function(e) {},
fail: function(e) {
console.log("ASCSDK", "Tiktok vibrateShort调用失败");
}
});
break;

case o.Game_Platform.GP_QQ:
"long" == e ? qq.vibrateLong({
success: function(e) {},
fail: function(e) {
console.log("ASCSDK", "QQ vibrateLong调用失败");
}
}) : "short" == e && qq.vibrateShort({
success: function(e) {},
fail: function(e) {
console.log("ASCSDK", "vibrateShort调用失败");
}
});
break;

case o.Game_Platform.GP_Test:
console.log("ASCSDK", "Test 手机震动，需要在打包后会有真实效果:", e);
break;

case o.Game_Platform.GP_Android:
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"shakePhone","calling_method_params":' + e + "}");
break;

case o.Game_Platform.GP_IOS:
jsb.reflection.callStaticMethod("systemSetting", "shakePhone:", e);
}
};
e.prototype.reportMonitor = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
if (qg.getSystemInfoSync().platformVersionCode < 1060) return;
qg.reportMonitor("game_scene", 0);
}
};
e.prototype.exitTheGame = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Android:
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", "{'calling_method_name':'exit'}");
break;

case o.Game_Platform.GP_IOS:
cc.game.end();
}
};
e.prototype.reportAnalytics = function(e, t) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Tiktok:
tt.reportAnalytics(e, t);
break;

case o.Game_Platform.GP_Android:
var i = JSON.stringify({
calling_method_name: "reportAnalytics",
calling_method_params: {
eventName: e,
data: t
}
});
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", i);
break;

case o.Game_Platform.GP_IOS:
jsb.reflection.callStaticMethod("systemSetting", "showUMWithType:withData:", e, JSON.stringify(t));
}
};
e.prototype.showAuthentication = function(e) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Android:
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"showAuthentication","calling_method_params":0}');
break;

case o.Game_Platform.GP_IOS:
n = e;
jsb.reflection.callStaticMethod("systemSetting", "showAuthentication");
}
};
e.prototype.TouristModel = function(e) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Android:
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"TouristModel","calling_method_params":0}');
break;

case o.Game_Platform.GP_IOS:
}
};
e.prototype.getShowMoreGameFlag = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Android:
return jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "SendMessageGetAdFlag", "(Ljava/lang/String;)Z", "getShowMoreGameFlag");

default:
return !0;
}
};
e.prototype.showOPPOMoreGame = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Android:
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"showOPPOMoreGame","calling_method_params":0}');
}
};
e.prototype.hasNetwork = function(e) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_IOS:
s = e;
jsb.reflection.callStaticMethod("systemSetting", "hasNetwork");

default:
e(!0);
}
};
e.prototype.showReviewAlert = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_IOS:
jsb.reflection.callStaticMethod("systemSetting", "showReviewAlert");
}
};
return e;
}();
i.default = a;
window.showAuthenticationCallback = function(e) {
console.log("ASCSDK", "showAuthenticationCallback", n);
n && n("1" == e);
return "callback suc";
};
window.HasNetworkCallback = function(e) {
console.log("ASCSDK", "hasNetworkCallback", s);
s && s("1" == e);
return "callback suc";
};
cc._RF.pop();
}, {
"../tools/SdkTools": "SdkTools"
} ],
OtherJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5f5a38mt8NIAYW+DksA7K0+", "OtherJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
OtherMusicPrefab: cc.Prefab
},
onLoad: function() {
window.OtherNode = this.node;
window.OtherNodeJS = this;
this.defination();
this.definePar();
this.SetBTNEvent();
this.SetOtherMusic();
},
defination: function() {
this.OtherBG = this.node.getChildByName("SP_BG");
this.OtherContent = this.node.getChildByName("view").getChildByName("content");
this.OtherChange = this.node.getChildByName("BTN_Change");
},
definePar: function() {
this.CanRefreshOther = !0;
},
SetBTNEvent: function() {
this.OtherChange.on(cc.Node.EventType.TOUCH_END, this.OnClickRefreshOther, this);
},
SetOtherMusic: function() {
var e = this, t = this, i = !1;
if (this.OtherContent.childrenCount > 0) {
i = !0;
for (var o = function(t) {
var i = e.OtherContent.children[t], o = .08 * t;
e.scheduleOnce(function() {
i.getComponent("OtherSelectJS").TurnOutAnim();
}, o);
}, n = 0; n < this.OtherContent.childrenCount; n++) o(n);
}
this.otherList = [];
if (window.Home.curOtherListData && window.Home.curOtherListData.length > 0) {
window.Home.OtherMusicTable = window.Home.curOtherListData;
window.Home.curOtherListData = [];
} else {
window.Home.OtherMusicTable = this.DealOtherList();
this.SaveOtherList();
}
if (window.Home.OtherMusicTable) {
this.node.height = 220 * window.Home.OtherMusicTable.length + 180 + 50;
this.OtherBG.height = 220 * window.Home.OtherMusicTable.length + 180;
for (var s = function(o) {
var n = function() {
var e = window.Home.OtherMusicTable[o], n = null, s = (n = 0 == i ? cc.instantiate(t.OtherMusicPrefab) : t.OtherContent.children[o]).getComponent("OtherSelectJS");
s.musicName = e.musicName;
s.musicID = e.musicId;
s.musicURL = e.musicFile;
s.orderNumber = e.orderNumber;
s.singerName = e.singerName;
s.unlockType = e.unlockType;
s.unlockNumber = Number(e.unlockCost);
s.pointURL = e.json_normal;
s.listenNum = Number(e.ex_listen);
s.curType = 1;
t.otherList[o] = s;
0 == i && t.OtherContent.addChild(n);
if (1 == i) {
s.UpdateMusicInfo(!0);
var a = .05 * o + .1;
t.scheduleOnce(function() {
s.TurnInAnim();
}, a);
}
};
if (0 == i) n(); else {
var s = .08 * o + .2;
e.scheduleOnce(function() {
n();
}, s);
}
}, a = 0; a < window.Home.OtherMusicTable.length; a++) s(a);
}
},
DealOtherList: function() {
var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, t = [], i = window.Home.newSongTable, o = window.Home.needPlayTable, n = window.Home.unlockTable, s = window.Home.musicTable;
if (e) for (var a = 0; a < e.length; a++) t.push(e[a]);
if (t.length < 5) {
if (5 - t.length >= i.length) for (var c = 0; c < i.length; c++) {
var r = i[c];
if (-1 == window.Home.HistoryOtherList.indexOf(r) && -1 == window.Home.OtherMusicTable.indexOf(r) && -1 == window.Home.hotTable.indexOf(r) && -1 == window.Home.likeTable.indexOf(r) && -1 == window.Home.DayGiftList.indexOf(r) && -1 == window.Home.dayPlayList.indexOf(r)) {
t.push(r);
window.Home.HistoryOtherList.push(r);
if (t.length >= 5) break;
}
} else for (var l = Math.floor(i.length / 2); l < i.length; l++) {
var d = i[l];
if (-1 == window.Home.HistoryOtherList.indexOf(d) && -1 == window.Home.OtherMusicTable.indexOf(d) && -1 == window.Home.hotTable.indexOf(d) && -1 == window.Home.likeTable.indexOf(d) && -1 == window.Home.DayGiftList.indexOf(d) && -1 == window.Home.dayPlayList.indexOf(d)) {
t.push(d);
window.Home.HistoryOtherList.push(d);
if (t.length >= 5) break;
}
}
}
if (t.length < 5) {
if (5 - t.length >= o.length) for (var h = 0; h < o.length; h++) {
var u = o[h];
if (-1 == window.Home.HistoryOtherList.indexOf(u) && -1 == window.Home.OtherMusicTable.indexOf(u) && -1 == window.Home.hotTable.indexOf(u) && -1 == window.Home.likeTable.indexOf(u) && -1 == window.Home.DayGiftList.indexOf(u) && -1 == window.Home.dayPlayList.indexOf(u)) {
t.push(u);
window.Home.HistoryOtherList.push(u);
if (t.length >= 5) break;
}
} else for (var w = Math.floor(o.length / 2); w < o.length; w++) {
var m = o[w];
if (-1 == window.Home.HistoryOtherList.indexOf(m) && -1 == window.Home.OtherMusicTable.indexOf(m) && -1 == window.Home.hotTable.indexOf(m) && -1 == window.Home.likeTable.indexOf(m) && -1 == window.Home.DayGiftList.indexOf(m) && -1 == window.Home.dayPlayList.indexOf(m)) {
t.push(m);
window.Home.HistoryOtherList.push(m);
if (t.length >= 5) break;
}
}
}
if (t.length < 5) {
if (5 - t.length >= n.length) for (var g = 0; g < n.length; g++) {
var p = n[g];
if (-1 == window.Home.HistoryOtherList.indexOf(p) && -1 == window.Home.OtherMusicTable.indexOf(p) && -1 == window.Home.hotTable.indexOf(p) && -1 == window.Home.likeTable.indexOf(p) && -1 == window.Home.DayGiftList.indexOf(p) && -1 == window.Home.dayPlayList.indexOf(p)) {
t.push(p);
window.Home.HistoryOtherList.push(p);
if (t.length >= 5) break;
}
} else for (var f = Math.floor(n.length / 2); f < n.length; f++) {
var S = n[f];
if (-1 == window.Home.HistoryOtherList.indexOf(S) && -1 == window.Home.OtherMusicTable.indexOf(S) && -1 == window.Home.hotTable.indexOf(S) && -1 == window.Home.likeTable.indexOf(S) && -1 == window.Home.DayGiftList.indexOf(S) && -1 == window.Home.dayPlayList.indexOf(S)) {
t.push(S);
window.Home.HistoryOtherList.push(S);
if (t.length >= 5) break;
}
}
}
if (t.length < 5) {
if (5 - t.length >= s.length) for (var N = 0; N < s.length; N++) {
var v = s[N];
if (-1 == window.Home.HistoryOtherList.indexOf(v) && -1 == window.Home.OtherMusicTable.indexOf(v) && -1 == window.Home.hotTable.indexOf(v) && -1 == window.Home.likeTable.indexOf(v) && -1 == window.Home.DayGiftList.indexOf(v) && -1 == window.Home.dayPlayList.indexOf(v)) {
t.push(v);
window.Home.HistoryOtherList.push(v);
if (t.length >= 5) break;
}
} else for (var C = Math.floor(s.length / 2); C < s.length; C++) {
var y = s[C];
if (-1 == window.Home.HistoryOtherList.indexOf(y) && -1 == window.Home.OtherMusicTable.indexOf(y) && -1 == window.Home.hotTable.indexOf(y) && -1 == window.Home.likeTable.indexOf(y) && -1 == window.Home.DayGiftList.indexOf(y) && -1 == window.Home.dayPlayList.indexOf(y)) {
t.push(y);
window.Home.HistoryOtherList.push(y);
if (t.length >= 5) break;
}
}
}
if (t.length < 5) {
window.Home.HistoryOtherList.splice(0, window.Home.HistoryOtherList.length);
t = this.DealOtherList(t);
}
return t;
},
SaveOtherList: function() {
for (var e = [], t = 0; t < window.Home.OtherMusicTable.length; t++) {
var i = window.Home.OtherMusicTable[t].musicId;
e = "" == e ? i : e + "," + i;
}
window.Parent.setlocalStorage("curOtherIDList", e);
},
OnClickRefreshOther: function() {
if (0 != this.CanRefreshOther && 0 != window.Home.LoadMusicOk) {
window.Home.playMusicListNum4 = -1;
this.CanRefreshOther = !1;
console.log("切换其他歌曲");
window.Parent.ButtonSounds();
o.default.getInstance().reportAnalytics("View_Show_V2", "NewMusicUI_Change", 1);
this.SetOtherMusic();
var e = this;
this.scheduleOnce(function() {
e.CanRefreshOther = !0;
}, 1);
}
}
});
cc._RF.pop();
}, {
"./../Help/reportAnalytics": "reportAnalytics"
} ],
OtherSelectJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "d5e54TnIxlBpKytPQKZ90WW", "OtherSelectJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./../Help/reportAnalytics"));
var n = e("MusicJS");
cc.Class({
extends: n,
properties: {},
defination: function() {
this.animNode = this.node.getChildByName("AnimNode");
this.musicPlay = this.animNode.getChildByName("musicPlay");
this.listBg = this.animNode.getChildByName("listBg");
this.CD = this.listBg.getChildByName("Mask").getChildByName("CD");
this.playButton = this.listBg.getChildByName("playButton");
this.pauseButton = this.listBg.getChildByName("pauseButton");
this.loading = this.listBg.getChildByName("loading");
this.StartButton = this.listBg.getChildByName("StartButton");
this.videoUnlockButton = this.listBg.getChildByName("videoUnlockButton");
this.diamondUnlockButton = this.listBg.getChildByName("DemondUnlockButton");
this.diamondText = this.diamondUnlockButton.getChildByName("num");
this.star = [];
this.star[0] = this.listBg.getChildByName("Star").getChildByName("star0");
this.star[1] = this.listBg.getChildByName("Star").getChildByName("star1");
this.star[2] = this.listBg.getChildByName("Star").getChildByName("star2");
this.songNameMask = this.listBg.getChildByName("SongNameMask");
this.songNameNode = this.songNameMask.getChildByName("SongName");
this.bestScoreLB = this.listBg.getChildByName("ScoreBg").getChildByName("Score");
this.ColectionButton = this.listBg.getChildByName("ColectionButton");
this.like = this.ColectionButton.getChildByName("like");
},
TurnInAnim: function() {
if (this.animNode) {
this.schedule(this.setCDPicture, .1);
this.animNode.setPosition(cc.v2(1080, 0));
this.animNode.stopAllActions();
this.node.active = !0;
this.animNode.runAction(cc.moveTo(.5, cc.v2(0, 0)).easing(cc.easeCubicActionOut()));
}
},
TurnOutAnim: function() {
if (this.animNode) {
this.animNode.stopAllActions();
this.animNode.runAction(cc.moveTo(.5, cc.v2(-1080, 0)).easing(cc.easeCubicActionOut()));
}
},
OnClickVideo: function() {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "MainUI_GamePlay_ADPlay", 1);
if (1 == this.curType) {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "NewMusicUI_ADClick", 1);
window.Home.DealMusicScore(window.playID, !1, 5);
} else if (2 == this.curType) {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "HotMusicUI_ADClick", 1);
window.Home.DealMusicScore(window.playID, !1, 3);
} else if (3 == this.curType) {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "GuessYouLikeUI_ADClick", 1);
window.Home.DealMusicScore(window.playID, !1, 5);
}
n.prototype.OnClickVideo.call(this);
},
OnClickDiamond: function() {
1 == this.curType ? window.Home.DealMusicScore(window.playID, !1, 5) : 2 == this.curType ? window.Home.DealMusicScore(window.playID, !1, 2) : 3 == this.curType && window.Home.DealMusicScore(window.playID, !1, 3);
n.prototype.OnClickDiamond.call(this);
},
OnClickPlay: function() {
1 == this.curType ? o.default.getInstance().reportAnalytics("NoAd_Click_V2", "MainUI_AllPlayMusic_NoADPlay", 1) : 2 == this.curType ? o.default.getInstance().reportAnalytics("NoAd_Click_V2", "MainUI_TikTokMusic_NoADPlay", 1) : 3 == this.curType ? o.default.getInstance().reportAnalytics("NoAd_Click_V2", "GuessYouLikeUI_Play", 1) : 4 == this.curType && o.default.getInstance().reportAnalytics("NoAd_Click_V2", "TodayGiftUI_NoADClick", 1);
n.prototype.OnClickPlay.call(this);
},
OnClickColectMusic: function() {
window.Parent.ButtonSounds();
if (this.isColected) {
this.isColected = !1;
this.like.active = !1;
for (var e = window.ColectTable.split(","), t = "", i = 0; i < e.length; i++) e[i] != this.musicID && (t = "" == t ? e[i] : t + "," + e[i]);
window.ColectTable = t;
window.Home.DealMusicScore(this.musicID, !0, 5);
} else {
this.isColected = !0;
this.like.active = !0;
var o = this.musicID;
"" != window.ColectTable && (o = o + "," + window.ColectTable);
window.ColectTable = o;
window.MissionNumber[6]++;
window.Parent.setlocalStorage("MissionNumber6", window.MissionNumber[6]);
window.Home.DealMusicScore(this.musicID, !1, 5);
}
window.Parent.setlocalStorage("isColected" + this.musicID, this.isColected);
window.Parent.setlocalStorage("ColectTable", window.ColectTable);
window.Home.ResetColectList();
if (4 == Number(window.Parent.getlocalStorage("GuideNum"))) {
this.isCanTouch = !0;
window.Parent.GuideMask.active = !1;
for (var n = 0; n < window.Home.guideList.length; n++) {
window.Home.guideList[n].destroy();
}
for (var s = 0; s < window.GiftNodeJS.GiftContent.childrenCount; s++) {
var a = window.GiftNodeJS.GiftContent.children[s], c = a.getComponent("OtherSelectJS");
a.opacity = 255;
c.UpdateMusicInfo(!0);
}
window.Home.unschedule(window.Home.guideTipsFunc);
window.Home.arrowNode && window.Home.arrowNode.destroy();
window.Home.tipsNode && window.Home.tipsNode.destroy();
if (window.Home.tipsNodeList) for (var r = 0; r < window.Home.tipsNodeList.length; r++) {
window.Home.tipsNodeList[r].destroy();
}
window.Parent.setlocalStorage("GuideNum", 5);
window.Home.AutoGuide();
}
}
});
cc._RF.pop();
}, {
"./../Help/reportAnalytics": "reportAnalytics",
MusicJS: "MusicJS"
} ],
PowerNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "773dekGV09Bhq3TpUeIOMef", "PowerNodeJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
TiliFeb: cc.Prefab,
timeLable: cc.Node
},
onLoad: function() {
this.isShowPower = !1;
window.PowerNode = this.node;
window.Power = this;
this.node.zIndex = 11;
this.node.setContentSize(window.screenWidth, window.screenHight);
this.PowerNum_Lable = this.node.getChildByName("PowerBg").getChildByName("num");
this.powerbg = this.node.getChildByName("PowerBg");
this.RecordButton = this.node.getChildByName("RecordButton");
this.addDimondNum = [ 0, 300, 500 ];
this.PoweraddNum = [ 20, 8, 16 ];
3 != window.platform && (this.node.active = !1);
this.node.zIndex = 30;
this.timecunt = 50;
this.schedule(function() {
if (window.powerNum >= 20) this.timeLable.active = !1; else {
this.timeLable.active = !0;
this.timecunt--;
this.timecunt < 60 && this.timecunt > 9 ? this.timeLable.getComponent(cc.Label).string = "00:" + this.timecunt : this.timecunt <= 9 ? this.timeLable.getComponent(cc.Label).string = "00:0" + this.timecunt : this.timecunt >= 60 && this.timecunt < 70 ? this.timeLable.getComponent(cc.Label).string = "01:0" + (this.timecunt - 60) : this.timecunt >= 70 && (this.timeLable.getComponent(cc.Label).string = "01:" + (this.timecunt - 60));
if (this.timecunt <= 0) {
this.timecunt = 100;
window.powerNum++;
window.powerNum >= 20 && (window.powerNum = 20);
this.PowerNum_Lable.getComponent(cc.Label).string = window.powerNum + "/20";
window.Parent.setlocalStorage("powerNum", window.powerNum);
}
}
}, 1);
this.curNode = void 0;
this.curCall = void 0;
},
onEnable: function() {},
showPowerNode: function() {
if (1 != this.isShowPower) {
this.isShowPower = !0;
o.default.getInstance().reportAnalytics("View_Show_V2", "LifeUI_Show", 1);
var e = this;
e.addPower = cc.instantiate(window.AddPowerFab);
e.addPower.parent = e.node;
e.addPower.setSiblingIndex(0);
e.shareGetbg0 = e.addPower.getChildByName("backBorad").getChildByName("selectbg0");
e.shareGetbg1 = e.addPower.getChildByName("backBorad").getChildByName("selectbg1");
e.shareGetbg2 = e.addPower.getChildByName("backBorad").getChildByName("selectbg2");
e.shareGetbg3 = e.addPower.getChildByName("backBorad").getChildByName("selectbg3");
e.videoButton = e.shareGetbg0.getChildByName("videoButton");
e.videoButton.on(cc.Node.EventType.TOUCH_END, e.videoAdd, e);
e.diamondButton1 = e.shareGetbg1.getChildByName("dinondButton");
e.diamondButton1.on(cc.Node.EventType.TOUCH_END, function() {
e.diamondAdd(null, 1);
}, e);
e.diamondButton2 = e.shareGetbg2.getChildByName("dinondButton");
e.diamondButton2.on(cc.Node.EventType.TOUCH_END, function() {
e.diamondAdd(null, 2);
}, e);
e.shareButton = e.shareGetbg3.getChildByName("shareButton");
e.getButton = e.shareGetbg3.getChildByName("getButton");
e.getButton.on(cc.Node.EventType.TOUCH_END, e.shareAdd, e);
e.closeButton = e.addPower.getChildByName("backBorad").getChildByName("close");
e.closeButton.on(cc.Node.EventType.TOUCH_END, e.OnClickClose, e);
if (window.hasShare) if (window.hasGet) {
cc.log("展示分享按钮2");
e.shareButton.active = !0;
e.shareButton.getChildByName("title").getComponent(cc.Label).string = "今日已领取";
e.getButton.active = !1;
} else {
cc.log("获得按钮");
e.shareButton.active = !1;
e.getButton.active = !0;
} else {
cc.log("展示分享按钮1");
e.shareButton.active = !0;
e.shareButton.getChildByName("title").getComponent(cc.Label).string = "分享视频 (0/1)";
e.getButton.active = !1;
}
}
},
close: function() {
this.addPower.destroy();
this.addPower = void 0;
this.isShowPower = !1;
},
addTili: function(e) {
var t = this;
window.Parent.UIMaskNode.active = !0;
cc.log(e);
for (var i = this, o = function(o) {
var n = cc.instantiate(t.TiliFeb), s = window.Parent.Random(-300, 300), a = window.Parent.Random(-300, 300);
n.setPosition(cc.v2(s, a));
var c;
c = [ cc.v2(-50, 100), cc.v2(-100, 300), cc.v2(i.powerbg.x - 87.2, i.powerbg.y + 4.1) ];
var r = cc.bezierTo(.6, c), l = cc.callFunc(function() {
n.destroy();
window.powerNum++;
window.powerNum <= 0 && (window.powerNum = 0);
i.PowerNum_Lable.getComponent(cc.Label).string = window.powerNum + "/20";
var t = i.powerbg.getChildByName("Tili");
t.stopAllActions();
t.runAction(cc.sequence(cc.scaleTo(.1, 1.4), cc.scaleTo(.1, 1)));
window.Parent.bubleSounds();
if (o == e - 1) {
window.Parent.UIMaskNode.active = !1;
window.Parent.setlocalStorage("powerNum", window.powerNum);
3 == window.platform && void 0 != i.curCall && i.reduceTili(i.curNode, i.curCall);
}
});
t.scheduleOnce(function() {
this.node.addChild(n);
n.runAction(cc.sequence(r, l));
}, .07 * o);
}, n = 0; n < e; n++) o(n);
},
reduceTili: function(e, t) {
var i = this;
if (t) {
this.curNode = e;
this.curCall = t;
}
isNaN(window.powerNum) && (window.powerNum = 20);
if (window.powerNum < 6) this.showPowerNode(); else if (!window.GameStart) {
window.Parent.UIMaskNode.active = !0;
window.GameStart = !0;
window.powerNum = window.powerNum - 6;
this.PowerNum_Lable.getComponent(cc.Label).string = window.powerNum + "/20";
window.Parent.setlocalStorage("powerNum", window.powerNum);
0 == window.powerNum && (this.timecunt = 5);
var o = cc.instantiate(this.TiliFeb), n = window.Parent.getWorldPosition(this.powerbg.getChildByName("Tili")), s = this.node.convertToNodeSpaceAR(n);
o.setPosition(s);
this.node.addChild(o);
var a = this.node.convertToNodeSpaceAR(window.Parent.getWorldPosition(e)), c = [ cc.v2(500, 800), cc.v2(500, 200), a ], r = cc.bezierTo(.8, c), l = cc.callFunc(function() {
o.destroy();
e.runAction(cc.sequence(cc.scaleTo(.1, 1.2), cc.scaleTo(.1, 1)));
window.Parent.bubleSounds();
i.scheduleOnce(function() {
t();
i.curNode = void 0;
i.curCall = void 0;
}, .5);
});
o.runAction(cc.sequence(r, l));
}
},
diamondAdd: function(e, t) {
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "LifeUI_Coin_NoADClick", 1);
if (window.powerNum >= 20) window.Parent.showTips("当前体力超过体力值上限,无法继续获取"); else {
window.Parent.ButtonSounds();
t = Number(t);
var i = Number(this.addDimondNum[t]);
cc.log(window.DiamonNum, i);
if (window.DiamonNum > i) {
window.Diamon.reduceDiamond(i);
this.addTili(this.PoweraddNum[t]);
this.close();
} else window.Diamon.showAddDimondNode();
}
},
videoAdd: function() {
if (window.powerNum >= 20) window.Parent.showTips("当前体力超过体力值上限,无法继续获取"); else {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "LifeUI_ADClick", 1);
window.Parent.ButtonSounds();
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
window.Parent.reportAnalytics("life_vedio_click");
window.Parent.reportCustomEvent("体力事件", {
"广告获得体力": ""
});
e.close();
e.addTili(e.PoweraddNum[0]);
}
});
}
},
shareAdd: function() {
if (window.powerNum >= 20) window.Parent.showTips("当前体力超过体力值上限,无法继续获取"); else {
this.addTili(8);
this.shareButton.active = !0;
this.shareButton.getChildByName("title").getComponent(cc.Label).string = "今日已领取";
this.getButton.active = !1;
window.hasGet = !0;
window.Parent.setlocalStorage("hasGet", window.hasGet);
this.close();
}
},
OnClickClose: function() {
window.Parent.ButtonSounds();
this.curNode = void 0;
this.curCall = void 0;
this.close();
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
RecommondMusicJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7aea7bEP8RDj7l51lJwiN0x", "RecommondMusicJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./../Help/reportAnalytics"));
var n = e("MusicJS");
cc.Class({
extends: n,
properties: {},
defination: function() {
this.musicPlay = this.node.getChildByName("musicPlay");
this.listBg = this.node.getChildByName("listBg");
this.CD = this.listBg.getChildByName("Mask").getChildByName("CD");
this.playButton = this.listBg.getChildByName("playButton");
this.pauseButton = this.listBg.getChildByName("pauseButton");
this.loading = this.listBg.getChildByName("loading");
this.StartButton = this.listBg.getChildByName("StartButton");
this.videoUnlockButton = this.listBg.getChildByName("VideoUnlockButton");
this.star = [];
this.star[0] = this.listBg.getChildByName("Star").getChildByName("star0");
this.star[1] = this.listBg.getChildByName("Star").getChildByName("star1");
this.star[2] = this.listBg.getChildByName("Star").getChildByName("star2");
this.songNameMask = this.listBg.getChildByName("SongNameMask");
this.songNameNode = this.songNameMask.getChildByName("SongName");
this.bestScoreLB = this.listBg.getChildByName("ScoreBg").getChildByName("Score");
this.ColectionButton = this.listBg.getChildByName("ColectionButton");
this.like = this.ColectionButton.getChildByName("like");
},
definePar: function() {
this.StarNum = Number(window.Parent.getlocalStorage("StarNum" + this.musicID));
this.relashStar();
this.BestScore = Number(window.Parent.getlocalStorage("BestScore" + this.musicID));
this.bestScoreLB.getComponent(cc.Label).string = this.BestScore;
this.isUnlock = window.Parent.getlocalStorage("isUnlock" + this.musicID);
"true" == this.isUnlock ? this.isUnlock = !0 : this.isUnlock = !1;
if (1 == this.isUnlock) {
this.StartButton.active = !0;
this.videoUnlockButton.active = !1;
} else {
this.StartButton.active = !1;
this.videoUnlockButton.active = !0;
}
this.isColected = window.Parent.getlocalStorage("isColected" + this.musicID);
"true" === this.isColected ? this.isColected = !0 : this.isColected = !1;
1 == this.isColected ? this.like.active = !0 : this.like.active = !1;
this.isPlaying = !1;
this.isCanTouch = !0;
},
unlocksong: function() {
this.isUnlock = !0;
window.Parent.setlocalStorage("isUnlock" + this.musicID, this.isUnlock);
this.videoUnlockButton.active = !1;
this.StartButton.active = !0;
window.AchieveNumber[1]++;
window.Parent.setlocalStorage("AchieveNumber1", window.AchieveNumber[1]);
this.startGame();
},
OnClickListen: function() {
window.PlayOtherMusic = !1;
n.prototype.OnClickListen.call(this);
},
OnClickVideo: function() {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "MainUI_GamePlay_ADPlay", 1);
o.default.getInstance().reportAnalytics("Ad_Click_V2", "MainUI_EveryWeekMusic_ADPlay", 1);
window.Home.unschedule(window.Home.LimitFunc);
window.Home.DealMusicScore(window.playID, !1, 2);
n.prototype.OnClickVideo.call(this);
},
OnClickDiamond: function() {
window.Home.DealMusicScore(window.playID, !1, 2);
n.prototype.OnClickDiamond.call(this);
},
OnClickPlay: function() {
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "MainUI_EveryWeekMusic_NoADPlay", 1);
n.prototype.OnClickPlay.call(this);
}
});
cc._RF.pop();
}, {
"./../Help/reportAnalytics": "reportAnalytics",
MusicJS: "MusicJS"
} ],
RecordAndShare: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "56652YGCCtHaLucHR65iSiN", "RecordAndShare");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../tools/SdkTools"), n = e("../ui/CocosUI"), s = function() {
function e() {
this.videoPath = null;
this.shareVideoCallback = null;
this.isAutoStop = !1;
this.gameRecorder = null;
this.moreGameButton = null;
this.isShowMoreGames = !1;
this.nativeIcon = null;
this.moreGamesBanner = null;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.share = function(e) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Tiktok:
tt.shareAppMessage({
templateId: e,
query: "",
success: function() {
console.log("ASCSDK", "Tiktok 分享成功");
},
fail: function(e) {
console.log("ASCSDK", "Tiktok 分享失败");
}
});
}
};
e.prototype.startGameVideo = function(e) {
var t = this;
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Tiktok:
this.videoPath = null;
e || (e = 10);
this.gameRecorder = tt.getGameRecorderManager();
this.gameRecorder.onStart(function(e) {
console.log("ASCSDK", "Tiktok 录屏开始");
});
this.gameRecorder.onStop(function(e) {
console.log("ASCSDK", "Tiktok 录屏结束", e.videoPath);
t.videoPath = e.videoPath;
if (t.shareVideoCallback) {
t.shareVideoCallback(t.videoPath);
t.shareVideoCallback = null;
} else t.isAutoStop = !0;
});
this.gameRecorder.onError(function(e) {
console.log("ASCSDK", "Tiktok 录屏错误:" + JSON.stringify(e));
});
this.gameRecorder.start({
duration: e
});
break;

case o.Game_Platform.GP_KS:
this.videoPath = null;
this.gameRecorder = kwaigame.createMediaRecorder();
if (null === this.gameRecorder) {
console.log("ASCSDK", "当前版本App不支持录屏");
return;
}
this.gameRecorder.onStart(function(e) {
console.log("ASCSDK", "KS 录屏开始");
});
this.gameRecorder.onStop(function(e) {
console.log("ASCSDK", "KS 录屏结束", JSON.stringify(e));
t.videoPath = e.videoID;
t.shareVideoCallback(t.videoPath);
});
this.gameRecorder.onError(function(e) {
console.log("ASCSDK", "发生录屏错误", JSON.stringify(e));
});
this.gameRecorder.start();
}
};
e.prototype.pauseGameVideo = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Tiktok:
console.log("ASCSDK", "Tiktok 暂停录屏==================");
this.gameRecorder && this.gameRecorder.pause();
break;

case o.Game_Platform.GP_KS:
console.log("ASCSDK", "KS 暂停录屏==================");
this.gameRecorder && this.gameRecorder.pause();
}
};
e.prototype.resumeGameVideo = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Tiktok:
console.log("ASCSDK", "Tiktok 继续录屏==================");
this.gameRecorder && this.gameRecorder.resume();
break;

case o.Game_Platform.GP_KS:
console.log("ASCSDK", "KS 继续录屏==================");
this.gameRecorder && this.gameRecorder.resume();
}
};
e.prototype.stopGameVideo = function(e) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Tiktok:
this.shareVideoCallback = e;
console.log("ASCSDK", "Tiktok stopGameVideo=======================");
if (this.isAutoStop) {
this.shareVideoCallback(this.videoPath);
this.shareVideoCallback = null;
this.isAutoStop = !1;
return;
}
this.gameRecorder && this.gameRecorder.stop();
break;

case o.Game_Platform.GP_KS:
this.shareVideoCallback = e;
console.log("ASCSDK", "KS stopGameVideo==================");
this.gameRecorder && this.gameRecorder.stop();
break;

case o.Game_Platform.GP_Test:
e("0");
}
};
e.prototype.shareVideo = function(e, t, i, n, s) {
console.log("ASCSDK", "Tiktok 分享录屏", n);
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Tiktok:
if (!n) {
console.log("ASCSDK", "视频地址为空 return");
return;
}
tt.shareAppMessage({
channel: "video",
title: e,
desc: t,
extra: {
videoPath: n,
videoTopics: [ i ],
hashtag_list: [ i ]
},
success: function() {
console.log("ASCSDK", "Tiktok 分享视频成功");
s(!0);
},
fail: function(e) {
console.log("ASCSDK", "Tiktok 分享视频失败:" + JSON.stringify(e));
s(!1);
}
});
break;

case o.Game_Platform.GP_Test:
console.log("ASCSDK", "Test 分享视频成功");
s(!0);
break;

case o.Game_Platform.GP_KS:
this.gameRecorder && this.gameRecorder.publishVideo({
mouldId: e,
video: n,
callback: function(e) {
if (null == e || void 0 == e) {
console.log("ASCSDK", "分享录屏成功");
s(!0);
} else {
console.log("ASCSDK", "分享录屏失败: " + JSON.stringify(e));
-10014 == e.code && console.log("ASCSDK", "录屏时间过短");
s(!1);
}
}
});
}
};
e.prototype.recordClip = function(e, t) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Tiktok:
this.gameRecorder && this.gameRecorder.recordClip({
timeRange: [ e, t ],
success: function(e) {
console.log("ASCSDK", "Tiktok 裁剪唯一索引", e.index);
}
});
}
};
e.prototype.clipVideo = function(e, t) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Tiktok:
this.gameRecorder && this.gameRecorder.clipVideo({
path: e,
success: function(e) {
console.log("ASCSDK", "Tiktok 录屏地址", e.videoPath);
t(!0, e.videoPath);
},
fail: function(i) {
console.error("剪辑失败", i);
t(!1, e);
}
});
}
};
e.prototype.showMoreGames = function(e, t, i, s, a) {
var c = this;
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Tiktok:
if ("android" != tt.getSystemInfoSync().platform) {
console.log("ASCSDK", "非安卓手机,不能展示更多游戏按钮 return");
return;
}
if (!o.default.getInstance().isversionNewThanEngineVersion("1.23.0")) {
console.log("ASCSDK", "平台版本过低,不能展示更多游戏按钮,当前版本:" + tt.getSystemInfoSync().SDKVersion);
return;
}
if (this.isShowMoreGames) {
console.log("ASCSDK", "正在展示更多游戏按钮 return");
return;
}
this.isShowMoreGames = !0;
console.log("ASCSDK", "showMoreGames=====================");
var r = Number(tt.getSystemInfoSync().windowWidth), l = Number(tt.getSystemInfoSync().windowHeight);
t *= r / cc.winSize.width;
i *= l / cc.winSize.height;
s *= r / cc.winSize.width;
a = (cc.winSize.height - a) * (l / cc.winSize.height);
this.moreGameButton = tt.createMoreGamesButton({
type: "image",
image: e,
style: {
left: s,
top: a,
width: t,
height: i,
lineHeight: 40,
backgroundColor: "#ff0000",
textColor: "#ffffff",
textAlign: "center",
fontSize: 16,
borderRadius: 4,
borderWidth: 0,
borderColor: "#ff0000"
},
appLaunchOptions: [ {
appId: "ttXXXXXX",
query: "foo=bar&baz=qux",
extraData: {}
} ],
onNavigateToMiniGameBox: function(e) {
console.log("跳转到小游戏盒子", e);
}
});
this.moreGameButton.onTap(function() {
console.log("ASCSDK", "点击更多游戏");
});
break;

case o.Game_Platform.GP_Test:
var d = cc.director.getScene();
if (this.nativeIcon) {
console.log("ASCSDK", "已存在测试更多游戏自定义按钮 return");
return;
}
console.log("ASCSDK", "Test showMoreGames=====================");
cc.loader.load(e, function(e, o) {
c.nativeIcon = new cc.Node("nativeIcon");
c.nativeIcon.addComponent(cc.Sprite);
c.nativeIcon.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(o);
setTimeout(function() {
c.nativeIcon.width = t;
c.nativeIcon.height = i;
c.nativeIcon.x = s + c.nativeIcon.width / 2;
c.nativeIcon.y = a - c.nativeIcon.height / 2;
}, 1);
c.nativeIcon.zIndex = 29999;
d.addChild(c.nativeIcon);
"" != n.default.getInstance().cocosGroup && (c.nativeIcon.group = n.default.getInstance().cocosGroup);
});
}
};
e.prototype.hideMoreGames = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Test:
if (!this.nativeIcon) {
console.log("ASCSDK", "Test 不存在更多游戏 return");
return;
}
console.log("ASCSDK", "Test hideMoreGames=====================");
this.nativeIcon.removeFromParent();
this.nativeIcon = null;
break;

case o.Game_Platform.GP_Tiktok:
if (!this.moreGameButton) {
console.log("ASCSDK", "不存在更多游戏 return");
return;
}
console.log("ASCSDK", "hideMoreGames=====================");
this.isShowMoreGames = !1;
this.moreGameButton.destroy();
this.moreGameButton = null;
}
};
e.prototype.showMoreGamesModal = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Tiktok:
if ("android" != tt.getSystemInfoSync().platform) {
console.log("ASCSDK", "非安卓手机,请隐藏更多游戏按钮 return");
return;
}
if (!o.default.getInstance().isversionNewThanEngineVersion("1.33.0")) {
console.log("ASCSDK", "平台版本过低,无法跳入游戏中心,当前版本:" + tt.getSystemInfoSync().SDKVersion);
return;
}
console.log("ASCSDK", "showMoreGamesModal=====================");
tt.showMoreGamesModal({
appLaunchOptions: [ {
appId: "ttXXXXXX",
query: "foo=bar&baz=qux",
extraData: {}
} ],
success: function(e) {
console.log("success", e.errMsg);
},
fail: function(e) {
console.log("fail", e.errMsg);
}
});
break;

case o.Game_Platform.GP_Test:
console.log("ASCSDK", "showMoreGamesModal=====测试点击更多游戏");
}
};
e.prototype.showFavoriteGuide = function(e, t, i) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Tiktok:
tt.showFavoriteGuide({
type: e,
content: t,
position: i,
success: function(e) {
console.log("ASCSDK", "引导组件展示成功");
},
fail: function(e) {
console.log("ASCSDK", "引导组件展示失败:" + JSON.stringify(e));
}
});
}
};
e.prototype.showMoreGamesBanner = function() {
var e = this;
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Test:
console.log("ASCSDK", "Test showMoreGamesBanner===============");
cc.loader.load("https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/TestRes/TestMoreGamesBanner.png", function(t, i) {
e.moreGamesBanner = new cc.Node("moreGamesBanner");
e.moreGamesBanner.addComponent(cc.Sprite);
e.moreGamesBanner.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(i);
setTimeout(function() {
e.moreGamesBanner.width = 900;
e.moreGamesBanner.height = 312;
e.moreGamesBanner.x = cc.winSize.width / 2;
e.moreGamesBanner.y = e.moreGamesBanner.height / 2;
}, 1);
e.moreGamesBanner.zIndex = 3e4;
cc.director.getScene().addChild(e.moreGamesBanner);
"" != n.default.getInstance().cocosGroup && (e.moreGamesBanner.group = n.default.getInstance().cocosGroup);
});
break;

case o.Game_Platform.GP_Tiktok:
if ("android" != tt.getSystemInfoSync().platform) {
console.log("ASCSDK", "非安卓手机,不能展示更多游戏横幅");
return;
}
if (!o.default.getInstance().isversionNewThanEngineVersion("1.67.0")) {
console.log("ASCSDK", "平台版本过低,不能展示更多游戏横幅,当前版本:" + tt.getSystemInfoSync().SDKVersion);
return;
}
console.log("ASCSDK", "Tiktok showMoreGamesBanner===============");
this.moreGamesBanner = tt.createMoreGamesBanner({
style: {
left: 0,
top: 0,
width: 150,
height: 40,
verticalAlign: "bottom",
horizontalAlign: "center"
},
appLaunchOptions: [ {
appId: "ttXXXXXX",
query: "foo=bar&baz=qux",
extraData: {}
} ]
});
this.moreGamesBanner.onError(function(e) {
console.log("ASCSDK", "Tiktok 更多游戏横幅出错:", JSON.stringify(e));
});
this.moreGamesBanner.show();
}
};
e.prototype.hideMoreGamesBanner = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Test:
console.log("ASCSDK", "Test hideMoreGamesBanner===============");
if (this.moreGamesBanner) {
this.moreGamesBanner.removeFromParent();
this.moreGamesBanner = null;
}
break;

case o.Game_Platform.GP_Tiktok:
console.log("ASCSDK", "Tiktok hideMoreGamesBanner===============");
this.moreGamesBanner && this.moreGamesBanner.hide();
}
};
return e;
}();
i.default = s;
cc._RF.pop();
}, {
"../tools/SdkTools": "SdkTools",
"../ui/CocosUI": "CocosUI"
} ],
RecordNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ed4e38rhAxDGq8reOqbWaOb", "RecordNodeJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
RecordButton: cc.Node,
button_Spr: [ cc.SpriteFrame ]
},
onLoad: function() {
3 != window.platform && (this.node.active = !1);
this.node.setContentSize(window.screenWidth, window.screenHight);
this.RecordButton = this.node.getChildByName("RecordButton");
this.RecordLable = this.RecordButton.getChildByName("RecordLable");
this.RecordTime = this.RecordButton.getChildByName("RecordTime");
window.Record = this;
window.RecordNode = this.node;
window.isCustomRecord = !1;
this.node.zIndex = 12;
this.timeCunt = 0;
this.buttonStartMove = !1;
window.RecordState = Number(window.Parent.getlocalStorage("showRecord"));
},
start: function() {
this.recordcallback = function() {
window.Parent.stopRecord();
console.log("时间到,停止录屏");
this.RecordButton.getComponent(cc.Sprite).spriteFrame = this.button_Spr[0];
this.showShareNode();
window.isCustomRecord = !1;
this.RecordLable.active = !0;
this.RecordTime.active = !1;
};
},
update: function(e) {
this.timeCunt += e;
var t = Math.floor(this.timeCunt % 60);
t < 10 && (t = "0" + t);
var i = Math.floor(this.timeCunt / 60);
this.RecordTime.getComponent(cc.Label).string = "0" + i + ":" + t;
},
touchStart: function() {
this.buttonStartMove = !0;
},
touchmove: function(e) {
this.RecordButton.getComponent(cc.Button).interactable = !1;
this.RecordButton.setPosition(e.getLocation().x - window.screenWidth / 2, e.getLocation().y - window.screenHight / 2);
},
touchend: function() {
this.RecordButton.getComponent(cc.Button).interactable = !0;
this.buttonStartMove = !1;
},
matchHomeNode: function() {
var e = window.Parent.getWorldPosition(window.Home.recordPositon), t = this.node.convertToNodeSpaceAR(e);
this.RecordButton.setPosition(t);
},
matchGameNode: function() {
console.log("适配游戏页");
var e = window.Parent.getWorldPosition(window.Game.recordPositon), t = this.node.convertToNodeSpaceAR(e);
this.RecordButton.setPosition(t);
},
matchWinNode: function() {
console.log("适配胜利页");
var e = window.Parent.getWorldPosition(window.Win.recordPositon), t = this.node.convertToNodeSpaceAR(e);
this.RecordButton.setPosition(t);
},
matchFaillNode: function() {
console.log("适配失败页");
var e = window.Parent.getWorldPosition(window.Faill.recordPositon), t = this.node.convertToNodeSpaceAR(e);
this.RecordButton.setPosition(t);
},
stopCustomRecord: function() {
console.log("停止录屏");
this.RecordButton.getComponent(cc.Sprite).spriteFrame = this.button_Spr[0];
window.isCustomRecord = !1;
this.RecordLable.active = !0;
this.RecordTime.active = !1;
window.Parent.stopRecord();
this.unschedule(this.recordcallback);
},
RecordButtonClick: function(e, t) {
if (window.isCustomRecord) {
if (this.timeCunt < 3) {
window.Parent.showTips("录屏时间过短");
return;
}
console.log("停止录屏");
this.showShareNode();
this.RecordButton.getComponent(cc.Sprite).spriteFrame = this.button_Spr[0];
window.isCustomRecord = !1;
this.RecordLable.active = !0;
this.RecordTime.active = !1;
window.Parent.stopRecord();
this.unschedule(this.recordcallback);
} else {
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "MainUI_Share_NoADClick", 1);
window.isCustomRecord = !0;
this.timeCunt = 0;
this.RecordButton.getComponent(cc.Sprite).spriteFrame = this.button_Spr[1];
this.RecordLable.active = !1;
this.RecordTime.active = !0;
window.Parent.startRecord();
this.scheduleOnce(this.recordcallback, 290);
}
},
closeShareNode: function() {
this.ShareNode.destroy();
this.ShareNode = void 0;
window.Parent.reportAnalytics("ShareVedio_cancel_click");
},
shareRecord: function(e, t) {
window.Parent.reportAnalytics("ShareVedio_share_click");
var i = this;
console.log("MusicName: ", window.MusicName);
window.Parent.shareRecord(null, function() {
window.Diamon.addDiamond(Math.floor(10), 50);
i.ShareNode.destroy();
i.ShareNode = void 0;
}, window.MusicName);
},
showShareNode: function(e) {
console.log("展示录屏分享");
if (3 == window.platform) {
console.log("window.showShare : ", window.showShare);
if (1 != window.showShare || 0 != window.isCustomRecord) {
0 == window.isCustomRecord && (window.showShare = !0);
o.default.getInstance().reportAnalytics("View_Show_V2", "ShareUI_Show", 1);
this.ShareNode = cc.instantiate(window.ShareNodeFab);
this.ShareNode.parent = window.ParentNode;
this.ShareNode.zIndex = 9999;
this.getButton = this.ShareNode.getChildByName("Recording_bg").getChildByName("getButton");
this.getButton.on(cc.Node.EventType.TOUCH_END, this.shareRecord, this);
this.giveupButton = this.ShareNode.getChildByName("Recording_bg").getChildByName("giveupButton");
this.giveupButton.on(cc.Node.EventType.TOUCH_END, this.closeShareNode, this);
this.shareTips = this.ShareNode.getChildByName("Recording_bg").getChildByName("shareTips");
this.shareTips.on(cc.Node.EventType.TOUCH_END, this.checkShare, this);
this.shareTitle = this.ShareNode.getChildByName("Recording_bg").getChildByName("Title");
this.getButton.active = !0;
this.giveupButton.active = !1;
this.shareTips.getChildByName("img_share_1").active = !0;
cc.log("分享类容", e);
e || (e = "分享有礼");
this.shareTitle.string = e;
window.Parent.reportAnalytics("ShareVedio_page_access");
}
}
},
checkShare: function() {
if (this.shareTips.getChildByName("img_share_1").active) {
this.getButton.active = !1;
this.giveupButton.active = !0;
this.shareTips.getChildByName("img_share_1").active = !1;
} else {
this.getButton.active = !0;
this.giveupButton.active = !1;
this.shareTips.getChildByName("img_share_1").active = !0;
}
},
closeShareAppNode: function() {
this.ShareAppNode.destroy();
this.ShareAppNode = void 0;
},
showShareAppNode: function() {
console.log("展示app分享");
if (3 == window.platform) {
o.default.getInstance().reportAnalytics("View_Show_V2", "ShareUI_Show", 1);
this.ShareAppNode = cc.instantiate(window.ShareAppNodeFab);
this.ShareAppNode.parent = this.node;
this.AppGetBTN = this.ShareAppNode.getChildByName("Recording_bg").getChildByName("getButton");
this.AppGetBTN.on(cc.Node.EventType.TOUCH_END, this.OnClickShareApp, this);
this.AppGiveUpBTN = this.ShareAppNode.getChildByName("Recording_bg").getChildByName("giveupButton");
this.AppGiveUpBTN.on(cc.Node.EventType.TOUCH_END, this.closeShareAppNode, this);
this.AppShareTipsBTN = this.ShareAppNode.getChildByName("Recording_bg").getChildByName("shareTips");
this.AppShareTipsBTN.on(cc.Node.EventType.TOUCH_END, this.OnClickAppSelect, this);
this.AppGetBTN.active = !0;
this.AppGiveUpBTN.active = !1;
this.AppShareTipsBTN.getChildByName("img_share_1").active = !0;
}
},
OnClickShareApp: function() {
console.log("app分享");
if (3 == window.platform) {
window.Parent.reportAnalytics("shareGame_Click");
var e = this;
tt.shareAppMessage({
templated: "",
query: "",
success: function() {
console.log("分享成功");
window.Diamon.addDiamond(Math.floor(10), 50);
e.ShareAppNode.destroy();
e.ShareAppNode = void 0;
},
fail: function(e) {
console.log("分享失败");
}
});
}
},
OnClickAppSelect: function() {
if (this.AppShareTipsBTN.getChildByName("img_share_1").active) {
this.AppGetBTN.active = !1;
this.AppGiveUpBTN.active = !0;
this.AppShareTipsBTN.getChildByName("img_share_1").active = !1;
} else {
this.AppGetBTN.active = !0;
this.AppGiveUpBTN.active = !1;
this.AppShareTipsBTN.getChildByName("img_share_1").active = !0;
}
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
ReliveNode: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "44da1uJz/BLtIznuTpUoE08", "ReliveNode");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
DimondReliveButton: cc.Node,
reliveDimondLable: cc.Node,
giveUpButton: cc.Node,
danmu: cc.Prefab,
bgNode: cc.Node,
bgStrNode: cc.Node,
curNumNode: cc.Node,
LbListNode: cc.Node
},
onLoad: function() {
this.node.setContentSize(window.screenWidth, window.screenHight);
this.bgNode = this.node.getChildByName("background");
this.FirstNode = this.node.getChildByName("FirstNode");
this.progressBar = this.FirstNode.getChildByName("progressBar");
this.progressNum = this.progressBar.getChildByName("ProgressNum");
this.reliveButton = this.FirstNode.getChildByName("reliveButton");
this.giveupButton = this.FirstNode.getChildByName("giveupButton");
this.progressBar.zIndex = 1;
this.progressBarY = this.progressBar.y;
this.reliveButtonY = this.reliveButton.y;
this.DimondReliveButtonY = this.DimondReliveButton.y;
this.giveupButtonY = this.giveupButton.y;
window.reliveNode = this.node;
this.reliveDimondLable.getComponent(cc.Label).string = 200;
this.SecNode = this.node.getChildByName("SecNode");
this.baseNode = this.SecNode.getChildByName("SP_Base");
this.secGiveUpNode = this.baseNode.getChildByName("BTN_GiveUp");
this.LBConfig = this.baseNode.getChildByName("LB_Config");
this.LBConfig2 = this.baseNode.getChildByName("LB_Config2");
this.powerSP = this.baseNode.getChildByName("SP_Power");
if (3 == window.platform) {
this.powerSP.active = !0;
this.LBConfig.active = !0;
this.LBConfig2.active = !1;
} else {
this.powerSP.active = !1;
this.LBConfig.active = !1;
this.LBConfig2.active = !0;
}
this.stringLable = [ "就差一点点通关了，就要放弃了吗？", "马上就要到达终点了，不要放弃呀！", "坚持就是胜利,加油 ! 奥利给!", "别人行你也行,加油!", "好多人都通关了这首歌,你也可以!", "点击复活你就是爸爸!" ];
this.isEnd = !1;
this.danmuPool = new cc.NodePool();
},
onEnable: function() {
var e = this;
this.DimondReliveButton.getComponent(cc.Button).interactable = !0;
window.DiamondNode.active = !0;
window.Parent.reportAnalytics("resurgence_page_access");
window.Parent.reportCustomEvent("游戏事件", {
"展示复活页面": ""
});
window.Parent.reportCustomEvent("歌单事件", {
"游戏复活界面": window.MusicName,
"游戏复活次数": window.Game.reliveTimes
});
window.Parent.timeSounds();
this.shedulePause = !1;
this.releaseTime = 1095;
this.progressNum.getComponent(cc.Label).string = parseInt(e.releaseTime / 100);
this.progressBar.getComponent(cc.ProgressBar).progress = 1;
this.cuntTime = function() {
if (!this.shedulePause) {
this.releaseTime -= 5;
this.progressBar.getComponent(cc.ProgressBar).progress -= .005;
1e3 != this.releaseTime && 900 != this.releaseTime && 800 != this.releaseTime && 700 != this.releaseTime && 600 != this.releaseTime && 500 != this.releaseTime && 400 != this.releaseTime && 300 != this.releaseTime && 200 != this.releaseTime && 100 != this.releaseTime || this.progressNum.runAction(cc.sequence(cc.scaleTo(.1, 2), cc.callFunc(function() {
e.progressNum.getComponent(cc.Label).string = parseInt(e.releaseTime / 100);
}), cc.scaleTo(.1, 1)));
if (this.releaseTime < 100) {
this.unschedule(this.cuntTime);
this.showGameOver();
}
}
};
this.schedule(this.cuntTime, .05);
this.giveUpButton.active = !1;
if (3 == window.platform) this.scheduleOnce(function() {
this.giveUpButton.active = !0;
this.giveUpButton.getComponent(cc.Button).interactable = !0;
}, 2); else {
this.giveUpButton.active = !0;
this.giveUpButton.getComponent(cc.Button).interactable = !0;
}
this.progressBar.y = this.progressBarY;
this.reliveButton.y = this.reliveButtonY;
this.giveupButton.y = this.giveupButtonY;
if (window.Parent.hasvideoinsert()) {
window.isShowingVideoInsert = !0;
this.shedulePause = !0;
console.log("Onenable Timesounds");
window.Parent.audioEngine.stopEffect(window.Parent.audioSourcesMgr.Timesound);
window.videoInsertCallBack = function() {
console.log("-----------------视频插屏回调");
window.isShowingVideoInsert = !1;
e.shedulePause = !1;
window.Parent.timeSounds();
};
}
if (window.FaceModle) {
window.Parent.reportAnalytics("camera_resurgence_page_access");
window.Parent.reportCustomEvent("游戏事件", {
"人脸模式复活界面展示": ""
});
}
if (window.ConstellationNum < 12) {
window.Parent.reportAnalytics("constellation_resurgence_page_access");
window.Parent.reportCustomEvent("星座事件", {
"星座模式复活页展示": ""
});
}
1 == window.platform && window.Parent.showPushicon(256, 256, 200, 500);
this.ResetAllNode();
console.log("window.playName : ", window.playName);
o.default.getInstance().reportAnalytics("Song_Message", "ReviveUI_Show", window.playName);
o.default.getInstance().reportAnalytics("View_Show_V2", "ReviveUI_Show", 1);
5 == window.platform && jsb.reflection.callStaticMethod("DJADManagerVC", "videoUIShow:", "Relive_ADClick");
},
onDisable: function() {
5 == window.platform && window.Parent.showInsertAD("Relive_ADClick");
},
reliveButtonClick: function() {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "ReviveUI_ADClick", 1);
console.log("window.playName : ", window.playName);
o.default.getInstance().reportAnalytics("Song_Message", "ReviveUI_Vclick", window.playName);
window.Parent.ButtonSounds();
if (!0 === window.Parent.hasVideo() || 6 === window.platform) {
window.Parent.audioEngine.stopEffect(window.Parent.audioSourcesMgr.Timesound);
this.shedulePause = !0;
}
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
5 == window.platform && jsb.reflection.callStaticMethod("DJADManagerVC", "showiOSADWithType:Platform:", "Relive_ADClick", "1");
window.Home.DealMusicScore(window.playID, !1, 3);
e.GameRelive();
window.watchVideoTimes++;
} else {
e.shedulePause = !1;
window.Parent.timeSounds();
}
});
},
DimondRelive: function() {
console.log("window.playName : ", window.playName);
o.default.getInstance().reportAnalytics("Song_Message", "ReviveUI_CoinClick", window.playName);
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "ReviveUI_Coin_NoADClick", 1);
var e = this;
window.Parent.ButtonSounds();
if (window.DiamonNum >= 200) {
this.DimondReliveButton.getComponent(cc.Button).interactable = !1;
this.shedulePause = !0;
console.log(" DimondRelive Up Timesounds ");
window.Parent.audioEngine.stopEffect(window.Parent.audioSourcesMgr.Timesound);
window.Parent.reportAnalytics("resurgence_coin_click");
window.Parent.reportCustomEvent("游戏事件", {
"钻石复活": ""
});
window.Diamon.reduceDiamond(200);
this.scheduleOnce(function() {
this.GameRelive();
}, .3);
} else {
this.shedulePause = !0;
console.log(" DimondRelive Down Timesounds ");
window.Parent.audioEngine.stopEffect(window.Parent.audioSourcesMgr.Timesound);
window.Diamon.showAddDimondNode(function() {
e.shedulePause = !1;
window.Parent.timeSounds();
});
}
},
GameRelive: function() {
console.log("GameRelive  ++++++++++++++++++++ ");
window.Parent.hidePushicon();
window.DiamondNode.active = !1;
window.Game.GameRelive();
this.unschedule(this.cuntTime);
this.node.active = !1;
window.Game.isShowRelive = !1;
if (0 == window.isReliveTimes) {
window.isReliveTimes = !0;
var e = window.gameHardModel;
(e -= 2) <= 1 && (e = 1);
window.gameHardModel = e;
}
console.log("复活完毕");
},
showGameOver: function() {
this.giveUpButton.getComponent(cc.Button).interactable = !1;
window.Parent.ButtonSounds();
window.Parent.audioEngine.stopEffect(window.Parent.audioSourcesMgr.Timesound);
this.shedulePause = !0;
var e = this;
this.isEnd = !0;
(function() {
window.Parent.ButtonSounds();
window.Parent.audioEngine.stopAll();
if (window.FaillNode) window.FaillNode.active = !0; else {
var t = cc.instantiate(window.FiallNodeFab);
t.setPosition(0, 0);
t.zIndex = 11;
window.ParentNode.addChild(t);
window.Parent.setlocalStorage("isFirstTips", 1);
}
e.node.destroy();
window.Game.isShowRelive = !1;
})();
},
creatDanmu: function() {
if (6 !== window.platform) {
var e = this;
if (this.danmuPool.size() > 0) var t = this.danmuPool.get(); else t = cc.instantiate(this.danmu);
var i = window.Parent.Random(window.screenHight / 2 - 50, 0);
t.setPosition(550, i);
t.getComponent(cc.Label).string = this.stringLable[window.Parent.Random(0, 5)];
t.zIndex = 0;
this.node.addChild(t);
t.runAction(cc.sequence(cc.moveTo(5, -1700, t.y), cc.callFunc(function() {
e.danmuPool.put(t);
})));
}
},
SetScreenType: function() {
for (var e = window.videoTimes, t = null, i = null, o = 0; o < window.SceneUnlockNumber.length; o++) {
var n = window.SceneUnlockNumber[o];
console.log(n);
if (n > e && null == t) {
t = o;
i = n;
break;
}
}
var s = this.bgNode.getChildByName("SceneNode");
if (null == t) {
this.bgNode.active = !1;
this.LbListNode.active = !1;
} else {
this.bgNode.active = !0;
s.getComponent(cc.Sprite).spriteFrame = window.sceneStorebg_Sprit[t];
this.bgStrNode.getComponent(cc.Label).string = window.scenName[t];
this.curNumNode.getComponent(cc.Label).string = e.toString() + " / " + i.toString();
this.progressNum.active = !1;
this.LbListNode.active = !0;
var a = (i - e).toString() + "次", c = window.scenName[t];
this.LbListNode.getChildByName("New_Label").getComponent(cc.RichText).string = "<color=#B086F4>再看</c><color=#FBD202>" + a + "</c><color=#B086F4>视频就能解锁</c><color=#EF31CE>" + c + "</c><color=#B086F4>了哦！</c></color>";
}
},
OnClickGiveUp: function() {
window.Parent.ButtonSounds();
window.Parent.audioEngine.stopAll();
if (window.FaillNode) window.FaillNode.active = !0; else {
var e = cc.instantiate(window.FiallNodeFab);
e.setPosition(0, 0);
e.zIndex = 11;
window.ParentNode.addChild(e);
window.Parent.setlocalStorage("isFirstTips", 1);
}
this.node.destroy();
window.Game.isShowRelive = !1;
if (0 == window.highModelList.length) {
var t = Number(window.Parent.getlocalStorage("gameModel"));
--t <= 1 && (t = 1);
window.Parent.setlocalStorage("gameModel", t);
window.gameHardModel = t;
}
},
OnClickContinue: function() {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "TwoReviveUI_Life_ADClick", 1);
window.Parent.ButtonSounds();
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
console.log("播放视频成功,获得奖励");
5 == window.platform && jsb.reflection.callStaticMethod("DJADManagerVC", "showiOSADWithType:Platform:", "Relive_ADClick", "1");
window.Home.DealMusicScore(window.playID, !1, 1);
e.GameRelive();
window.watchVideoTimes++;
} else {
console.log("播放视频失败,无法获取奖励");
window.Parent.audioEngine.stopAll();
if (window.FaillNode) window.FaillNode.active = !0; else {
var i = cc.instantiate(window.FiallNodeFab);
i.setPosition(0, 0);
i.zIndex = 11;
window.ParentNode.addChild(i);
window.Parent.setlocalStorage("isFirstTips", 1);
}
e.node.destroy();
window.Game.isShowRelive = !1;
}
});
},
ShowSecNode: function() {
var e = this;
this.SecNode.active = !0;
var t = cc.scaleTo(.05, 1);
this.baseNode.runAction(t);
3 == window.platform ? this.scheduleOnce(function() {
e.secGiveUpNode.active = !0;
}, 2) : e.secGiveUpNode.active = !0;
},
ResetAllNode: function() {
this.FirstNode.active = !0;
this.SecNode.active = !1;
this.secGiveUpNode.active = !1;
this.baseNode.setScale(.4);
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
RoadJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c57feb5ex1NuoQ9ec8bqaV3", "RoadJS");
cc.Class({
extends: cc.Component,
properties: {
Number: 0
},
onLoad: function() {},
start: function() {},
update: function(e) {
this.Game.gameStart && (this.node.z += e * this.Game.palyerSpeed);
}
});
cc._RF.pop();
}, {} ],
RoafLightJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6257cSiiOFLjIcrCdRXJsXw", "RoafLightJS");
cc.Class({
extends: cc.Component,
properties: {},
onDisable: function() {
this.node.destroy();
},
start: function() {},
update: function(e) {
if (window.Game && window.Game.gameStart) {
this.node.y -= e * window.Game.palyerSpeed;
this.node.y < -300 && this.node.destroy();
}
if (window.GuideGame && window.GuideGame.gameStart) {
this.node.y -= e * window.GuideGame.playerSpeed;
this.node.y < -300 && this.node.destroy();
}
}
});
cc._RF.pop();
}, {} ],
RoleBgJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3b2b6aKUk9KD4LuV/hYlb6x", "RoleBgJS");
cc.Class({
extends: cc.Component,
properties: {
RoleSP: cc.Node,
NameLabel: cc.Node,
SelectLight: cc.Node
},
onLoad: function() {
this.NameLabel.getComponent(cc.Label).string = this.RoleName;
this.RoleSP.getComponent(cc.Sprite).spriteFrame = this.RoleSprit;
},
SelectRole: function() {
console.log("SelectRole");
window.Parent.ButtonSounds();
this.SceceSelect.selectScene(this.Number);
}
});
cc._RF.pop();
}, {} ],
RoleDataJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "44877RXpF5ICYQDJ9kzZ0Nj", "RoleDataJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.defination();
},
defination: function() {
this.roleSPNode = this.node.getChildByName("SP_Role");
this.roleName = this.node.getChildByName("SP_RoleName").getChildByName("LB_RoleName");
this.usingBTN = this.node.getChildByName("BTN_Using");
this.useBTN = this.node.getChildByName("BTN_Use");
this.videoBTN = this.node.getChildByName("BTN_Video");
this.videoLB = this.videoBTN.getChildByName("LB_Video");
},
UpdateCurInfo: function() {
this.roleSPNode.getComponent(cc.Sprite).spriteFrame = window.HomeRole_Sprit[this.curNum];
this.roleName.getComponent(cc.Label).string = window.roleName[this.curNum];
this.UpdateBTN();
this.roleSPNode.setScale(.75);
},
UpdateBTN: function() {
var e = window.RoleUnlockType[this.curNum];
this.usingBTN.active = !1;
this.useBTN.active = !1;
this.videoBTN.active = !1;
if ("video" == e) {
this.videoBTN.active = !0;
if ((Number(window.Parent.getlocalStorage("roleUnlockNum_" + this.curNum)) >= window.RoleUnlockNumber[this.curNum] || window.roleIsUnlock[this.curNum]) && !window.roleIsUnlock[this.curNum]) {
window.roleIsUnlock[this.curNum] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + this.curNum, !0);
}
if (0 == window.roleIsUnlock[this.curNum]) {
this.videoBTN.active = !0;
var t = Number(window.Parent.getlocalStorage("roleUnlockNum_" + this.curNum));
this.videoLB.getComponent(cc.Label).string = "获取(" + t + "/ " + window.RoleUnlockNumber[this.curNum] + ")";
} else if (0 == window.RoleModel && 0 == this.curNum) {
this.videoBTN.active = !1;
this.usingBTN.active = !0;
this.useBTN.active = !1;
} else if (0 == window.RoleModel && 0 != this.curNum) {
this.videoBTN.active = !1;
this.usingBTN.active = !1;
this.useBTN.active = !0;
} else {
this.videoBTN.active = !1;
this.usingBTN.active = window.RoleNum == this.curNum;
this.useBTN.active = window.RoleNum != this.curNum;
}
}
},
OnClickUse: function() {
window.Parent.ButtonSounds();
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "MainUI_Role_NoADClick", 1);
console.log("使用角色: ", this.curNum);
this.parentJS.UseSkin(this.curNum);
},
OnClickVideo: function() {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "MainUI_Role_ADClick", 1);
window.Parent.ButtonSounds();
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
var i = Number(window.Parent.getlocalStorage("roleUnlockNum_" + e.curNum));
i++;
window.Parent.setlocalStorage("roleUnlockNum_" + e.curNum, i);
e.parentJS.UseSkin(e.curNum);
e.UpdateBTN();
3 == window.platform && window.Home.ShowGetRoleAnim();
}
});
},
OnClickRole: function() {
var e = window.RoleUnlockType[this.curNum], t = window.roleIsUnlock[this.curNum], i = this;
if (1 == t) {
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "MainUI_Role_NoADClick", 1);
console.log("使用角色: ", this.curNum);
this.parentJS.UseSkin(this.curNum);
} else if (0 == t && "video" == e) {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "MainUI_Role_ADClick", 1);
window.Parent.showVideo(function(e) {
if (e) {
var t = Number(window.Parent.getlocalStorage("roleUnlockNum_" + i.curNum));
t++;
window.Parent.setlocalStorage("roleUnlockNum_" + i.curNum, t);
i.parentJS.UseSkin(i.curNum);
i.UpdateBTN();
3 == window.platform && window.Home.ShowGetRoleAnim();
}
});
}
}
});
cc._RF.pop();
}, {
"./../Help/reportAnalytics": "reportAnalytics"
} ],
RoleSelectConJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "e7d25ezbA5DS4GcvMdDcA8w", "RoleSelectConJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
SelectPrefab: cc.Prefab
},
onLoad: function() {
window.RoleSelectNode = this.node;
window.RoleSelectNodeJS = this;
this.defination();
this.definePar();
this.SetBTNEvent();
this.SetCurMaskType(!1);
this.SetRoleData();
},
defination: function() {
this.roleSelectBase = this.node.getChildByName("BTN_More").getChildByName("RoleSelectMask").getChildByName("RoleBaseMask");
this.roleBase = this.roleSelectBase.getChildByName("RoleBase");
this.moreBTN = this.node.getChildByName("BTN_More");
this.arrowSP = this.moreBTN.getChildByName("BTN_Arrow");
this.closeSP = this.moreBTN.getChildByName("BTN_Close");
this.shadowSP = this.moreBTN.getChildByName("SP_Shadow");
},
definePar: function() {
this.isHide = !0;
this.isShowAnim = !1;
},
SetBTNEvent: function() {
this.moreBTN.on(cc.Node.EventType.TOUCH_END, this.OnClickShow, this);
},
SetRoleData: function() {
for (var e = 0; e < window.roleName.length; e++) {
var t = cc.instantiate(this.SelectPrefab), i = t.getComponent("RoleSelectJS");
i.Number = e;
i.RoleName = window.roleName[e];
i.ParentJS = this;
this.roleBase.addChild(t);
}
this.roleBase.width = 405 * (window.roleName.length + 1) + 10 * (window.roleName.length - 1) + 100;
},
SetCurMaskType: function() {
var e = this;
if (1 == (!(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0])) if (1 == this.isHide) {
cc.tween(this.moreBTN).call(function() {
e.shadowSP.active = !1;
}).to(.2, {
width: 73
}, {
easing: "cubicIn"
}).start();
cc.tween(this.roleSelectBase).to(.2, {
x: 820
}, {
easing: "cubicIn"
}).call(function() {
e.arrowSP.scaleX = -1;
e.roleBase.getComponent(cc.ScrollView).stopAutoScroll();
e.roleBase.x = 0;
e.isShowAnim = !1;
}).start();
} else {
cc.tween(this.moreBTN).call(function() {
e.shadowSP.active = !0;
}).to(.3, {
width: 950
}, {
easing: "cubicOut"
}).start();
cc.tween(this.roleSelectBase).to(.3, {
x: -680
}, {
easing: "cubicOut"
}).call(function() {
e.arrowSP.scaleX = 1;
e.isShowAnim = !1;
}).start();
o.default.getInstance().reportAnalytics("View_Show_V2", "GameUI_Role_Show", 1);
} else if (1 == this.isHide) {
this.roleSelectBase.x = 820;
this.arrowSP.scaleX = -1;
this.roleBase.getComponent(cc.ScrollView).stopAutoScroll();
this.roleBase.x = 0;
this.moreBTN.width = 73;
this.shadowSP.active = !1;
} else {
this.roleSelectBase.x = -680;
this.arrowSP.scaleX = 1;
this.moreBTN.width = 950;
this.shadowSP.active = !0;
o.default.getInstance().reportAnalytics("View_Show_V2", "GameUI_Role_Show", 1);
}
},
ReflashRoleType: function() {
for (var e = 0; e < this.roleBase.childrenCount; e++) {
this.roleBase.children[e].getComponent("RoleSelectJS").UpdateBTNActive();
}
},
OnClickShow: function() {
window.Parent.ButtonSounds();
if (1 != this.isShowAnim) {
this.isShowAnim = !0;
if (1 == this.isHide) {
this.isHide = !1;
console.log("点击进行展开");
} else {
this.isHide = !0;
console.log("点击进行隐藏");
}
this.SetCurMaskType();
}
}
});
cc._RF.pop();
}, {
"./../Help/reportAnalytics": "reportAnalytics"
} ],
RoleSelectJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "927cbTG98xKyZys+LmRPgqH", "RoleSelectJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.defination();
this.definePar();
this.SetRoleDate();
this.SetBTNEvent();
},
onEnable: function() {
this.UpdateBTNActive();
},
defination: function() {
this.titleNode = this.node.getChildByName("Title");
this.titleLB = this.titleNode.getChildByName("title");
this.RoleSP = this.node.getChildByName("Mask").getChildByName("SP_Role");
this.CrownBTN = this.node.getChildByName("CrownButton");
this.DiamondBTN = this.node.getChildByName("DiamondButton");
this.VideoBTN = this.node.getChildByName("VideoButton");
this.UseBTN = this.node.getChildByName("UseButton");
this.UsingSP = this.node.getChildByName("isUsing");
},
definePar: function() {},
SetBTNEvent: function() {
this.CrownBTN.on(cc.Node.EventType.TOUCH_END, this.OnClickCrown, this);
this.DiamondBTN.on(cc.Node.EventType.TOUCH_END, this.OnClickDiamond, this);
this.VideoBTN.on(cc.Node.EventType.TOUCH_END, this.OnClickVideo, this);
this.UseBTN.on(cc.Node.EventType.TOUCH_END, this.OnClickUse, this);
},
SetRoleDate: function() {
this.titleLB.getComponent(cc.Label).string = this.RoleName;
this.schedule(this.SetRoleSP, .1);
},
SetRoleSP: function() {
if (window.Home.RoleloadOk && this.ParentJS) {
this.RoleSP.getComponent(cc.Sprite).spriteFrame = window.Role_Sprit[this.Number];
this.unschedule(this.SetRoleSP);
}
},
UpdateBTNActive: function() {
var e = window.RoleUnlockType[this.Number], t = window.RoleUnlockNumber[this.Number], i = window.Parent.getlocalStorage("RoleModel");
i = "true" === i;
this.CrownBTN.active = !1;
this.DiamondBTN.active = !1;
this.VideoBTN.active = !1;
this.UseBTN.active = !1;
this.UsingSP.active = !1;
if ("video" == e) {
var o = Number(window.Parent.getlocalStorage("roleUnlockNum_" + this.Number));
this.VideoBTN.getChildByName("num").getComponent(cc.Label).string = o + " / " + t;
if (0 != this.Number) if (window.RoleNum == this.Number && 1 == window.RoleModel) this.UsingSP.active = !0; else if (o >= window.RoleUnlockNumber[this.Number] || window.roleIsUnlock[this.Number]) {
if (!window.roleIsUnlock[this.Number]) {
window.roleIsUnlock[this.Number] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + this.Number, !0);
}
this.UseBTN.active = !0;
} else this.VideoBTN.active = !0; else {
0 == window.RoleModel ? this.UsingSP.active = !0 : this.UseBTN.active = !0;
"true" != window.Parent.getlocalStorage("roleIsUnlock" + this.Number) && window.Parent.setlocalStorage("roleIsUnlock" + this.Number, !0);
}
} else if ("crown" === e) {
this.CrownBTN.getChildByName("num").getComponent(cc.Label).string = t;
0 != this.Number ? window.RoleNum == this.Number && 1 == window.RoleModel ? this.UsingSP.active = !0 : window.roleIsUnlock[this.Number] ? this.UseBTN.active = !0 : this.CrownBTN.active = !0 : 0 == window.RoleModel ? this.UsingSP.active = !0 : this.UseBTN.active = !0;
} else if ("diamond" === e) {
this.DiamondBTN.getChildByName("num").getComponent(cc.Label).string = t;
0 != this.Number ? window.RoleNum == this.Number && 1 == window.RoleModel ? this.UsingSP.active = !0 : window.roleIsUnlock[this.Number] ? this.UseBTN.active = !0 : this.DiamondBTN.active = !0 : 0 == window.RoleModel ? this.UsingSP.active = !0 : this.UseBTN.active = !0;
}
},
UnLockCurRole: function() {
window.roleIsUnlock[this.Number] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + this.Number, !0);
this.UseCurRole();
},
UseCurRole: function() {
var e = 0 != this.Number;
window.Parent.setlocalStorage("RoleModel", e);
window.RoleModel = e;
if (1 == e) {
window.RoleNum = this.Number;
window.Parent.setlocalStorage("RoleNum", window.RoleNum);
}
this.UpdateBTNActive();
window.Home.UpdateHomeRoleList();
window.GameNode && 1 == window.GameNode.active && window.Game.UpdateModel();
},
OnClickCrown: function() {
console.log("点击进行皇冠解锁");
window.Parent.ButtonSounds();
var e = window.RoleUnlockNumber[this.Number];
if (window.CrownNum >= e) {
window.Crown.reduceCrown(e);
this.UnLockCurRole();
} else {
window.needCloseCrown = !0;
window.CrownNode.active = !0;
0 == window.getCrownNum && window.Crown.showAddCrownNode();
}
},
OnClickDiamond: function() {
console.log("点击进行钻石解锁");
window.Parent.ButtonSounds();
var e = window.RoleUnlockNumber[this.Number];
if (window.DiamonNum >= e) {
window.Diamon.reduceDiamond(e);
this.UnLockCurRole();
} else window.Diamon.showAddDimondNode();
},
OnClickVideo: function() {
console.log("点击进行视频解锁");
window.Parent.ButtonSounds();
o.default.getInstance().reportAnalytics("Ad_Click_V2", "GameUI_Role_ADClick", 1);
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
var i = Number(window.Parent.getlocalStorage("roleUnlockNum_" + e.Number));
i++;
window.Parent.setlocalStorage("roleUnlockNum_" + e.Number, i);
i >= window.RoleUnlockNumber[e.Number] ? e.UnLockCurRole() : e.UpdateBTNActive();
}
});
},
OnClickUse: function() {
console.log("点击进行使用当前的角色");
window.Parent.ButtonSounds();
this.UseCurRole();
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "GameUI_Role_Use", 1);
},
OnClickRole: function() {
if ("true" == window.Parent.getlocalStorage("roleIsUnlock" + this.Number)) this.OnClickUse(); else {
var e = window.RoleUnlockType[this.Number];
"video" == e ? this.OnClickVideo() : "crown" == e ? this.OnClickCrown() : "diamond" == e && this.OnClickDiamond();
}
}
});
cc._RF.pop();
}, {
"./../Help/reportAnalytics": "reportAnalytics"
} ],
RoleTipsBgJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "23a419sdsRK9bsBz3X/Xvch", "RoleTipsBgJS");
(function(e) {
e && e.__esModule;
})(e("../Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
scenebg: cc.Node,
Title: cc.Node,
scalLight: cc.Node,
crownBTN: cc.Node,
videoBTN: cc.Node,
isUsing: cc.Node,
useBTN: cc.Node,
diamondBTN: cc.Node,
ActivityNode: cc.Node,
CurLB: cc.Node,
LastLB: cc.Node
},
onLoad: function() {},
onEnable: function() {
this.scenebg.getComponent(cc.Sprite).spriteFrame = this.RoleSpr;
this.Title.getComponent(cc.Label).string = this.RoleName;
this.UpdateBTNActive();
},
OnClickCrown: function() {
window.Parent.ButtonSounds();
var e = window.RoleUnlockNumber[this.Number];
if (window.CrownNum >= e) {
window.Crown.reduceCrown(e);
window.roleIsUnlock[this.Number] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + this.Number, !0);
this.UpdateBTNActive();
} else {
window.needCloseCrown = !0;
window.CrownNode.active = !0;
0 == window.getCrownNum ? window.Crown.showAddCrownNode() : this.TipNode.active = !0;
}
},
OnClickDiamond: function() {
window.Parent.ButtonSounds();
var e = window.RoleUnlockNumber[this.Number];
if (window.DiamonNum >= e) {
window.Diamon.reduceDiamond(e);
window.roleIsUnlock[this.Number] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + this.Number, !0);
this.UpdateBTNActive();
} else window.Diamon.showAddDimondNode();
},
OnClickVideo: function() {
window.Parent.ButtonSounds();
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
if (1 == window.isActivity && 1 == e.Number) {
window.roleIsUnlock[e.Number] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + e.Number, !0);
e.UpdateBTNActive();
} else {
var i = Number(window.Parent.getlocalStorage("roleUnlockNum_" + e.Number));
i++;
window.Parent.setlocalStorage("roleUnlockNum_" + e.Number, i);
e.UpdateBTNActive();
}
window.Parent.setlocalStorage("RoleModel", !0);
window.RoleModel = !0;
window.RoleNum = e.Number;
window.Parent.setlocalStorage("RoleNum", window.RoleNum);
e.GameJS.ReflashRoleTips();
window.Home.UpdateHomeRoleList();
}
});
},
OnClickUse: function() {
window.Parent.ButtonSounds();
if (0 != this.Number) {
window.Parent.setlocalStorage("RoleModel", !0);
window.RoleModel = !0;
window.RoleNum = this.Number;
window.Parent.setlocalStorage("RoleNum", window.RoleNum);
} else {
window.Parent.setlocalStorage("RoleModel", !1);
window.RoleModel = !1;
}
this.GameJS.ReflashRoleTips();
window.Home.UpdateHomeRoleList();
},
UpdateBTNActive: function() {
var e = window.RoleUnlockType[this.Number], t = window.Parent.getlocalStorage("RoleModel");
t = "true" === t;
if ("video" === e) {
this.crownBTN.active = !1;
this.videoBTN.active = !0;
this.isUsing.active = !1;
this.useBTN.active = !1;
this.diamondBTN.active = !1;
var i = Number(window.Parent.getlocalStorage("roleUnlockNum_" + this.Number));
1 == window.isActivity && 1 == this.Number ? this.videoBTN.getChildByName("num").getComponent(cc.Label).string = "0/1" : this.videoBTN.getChildByName("num").getComponent(cc.Label).string = i + "/" + window.RoleUnlockNumber[this.Number];
if (1 == t) {
if (i >= window.RoleUnlockNumber[this.Number] || window.roleIsUnlock[this.Number]) {
if (!window.roleIsUnlock[this.Number]) {
window.roleIsUnlock[this.Number] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + this.Number, !0);
}
this.videoBTN.active = !1;
this.isUsing.active = window.RoleNum == this.Number;
this.useBTN.active = !(window.RoleNum == this.Number);
}
} else if (0 == t && 0 == this.Number) {
this.videoBTN.active = !1;
this.isUsing.active = !0;
this.useBTN.active = !1;
} else if (0 == t && 0 != this.Number && (i >= window.RoleUnlockNumber[this.Number] || window.roleIsUnlock[this.Number])) {
if (!window.roleIsUnlock[this.Number]) {
window.roleIsUnlock[this.Number] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + this.Number, !0);
}
this.videoBTN.active = !1;
this.isUsing.active = !1;
this.useBTN.active = !0;
}
} else if ("crown" === e) {
this.crownBTN.active = !0;
this.videoBTN.active = !1;
this.isUsing.active = !1;
this.useBTN.active = !1;
this.diamondBTN.active = !1;
this.crownBTN.getChildByName("num").getComponent(cc.Label).string = window.RoleUnlockNumber[this.Number];
if (1 == t) {
if (window.roleIsUnlock[this.Number]) {
this.crownBTN.active = !1;
this.isUsing.active = window.RoleNum == this.Number;
this.useBTN.active = !(window.RoleNum == this.Number);
}
} else if (0 == t && 0 == this.Number) {
this.crownBTN.active = !1;
this.isUsing.active = !0;
this.useBTN.active = !1;
} else if (0 == t && 0 != this.Number && window.roleIsUnlock[this.Number]) {
this.crownBTN.active = !1;
this.isUsing.active = !1;
this.useBTN.active = !0;
}
} else if ("diamond" === e) {
this.crownBTN.active = !1;
this.videoBTN.active = !1;
this.isUsing.active = !1;
this.useBTN.active = !1;
this.diamondBTN.active = !0;
this.diamondBTN.getChildByName("num").getComponent(cc.Label).string = window.RoleUnlockNumber[this.Number];
if (1 == t) {
if (window.roleIsUnlock[this.Number]) {
this.diamondBTN.active = !1;
this.isUsing.active = window.RoleNum == this.Number;
this.useBTN.active = !(window.RoleNum == this.Number);
}
} else if (0 == t && 0 == this.Number) {
this.diamondBTN.active = !1;
this.isUsing.active = !0;
this.useBTN.active = !1;
} else if (0 == t && 0 != this.Number && window.roleIsUnlock[this.Number]) {
this.diamondBTN.active = !1;
this.isUsing.active = !1;
this.useBTN.active = !0;
}
}
this.UpdateActivity();
},
UpdateActivity: function() {
var e = window.Parent.getlocalStorage("roleIsUnlock" + this.Number);
e = "true" == e;
this.ActivityNode.active = !1;
}
});
cc._RF.pop();
}, {
"../Help/reportAnalytics": "reportAnalytics"
} ],
SceneFabJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "05d7b4RzqFC1IoRjZpP9DFD", "SceneFabJS");
cc.Class({
extends: cc.Component,
properties: {
fabnode: [ cc.Node ]
},
onLoad: function() {},
onEnable: function() {
this.isFadeIn = [];
this.isOut = [];
for (var e = 0; e < this.fabnode.length; e++) {
this.isOut[e] = !1;
if (this.fabnode[e].y + this.node.y < 7e3) {
this.fabnode[e].opacity = 255;
this.isFadeIn[e] = !0;
} else {
this.fabnode[e].opacity = 0;
this.isFadeIn[e] = !1;
}
}
},
start: function() {},
update: function(e) {
if (window.Game.gameStart) {
this.node.y -= e * window.Game.palyerSpeed;
if (this.node.y < -7e3) {
this.node.y = 14e3;
this.node.zIndex -= 4;
this.node.active = !1;
this.node.active = !0;
}
if (this.node.y < 7e3 && this.node.y > 0) for (var t = 0; t < this.fabnode.length; t++) {
if (this.fabnode[t].y + this.node.y < 7e3 && !this.isFadeIn[t]) {
this.fabnode[t].runAction(cc.fadeIn(1));
this.isFadeIn[t] = !0;
}
if (this.fabnode[t].y + this.node.y < 500 && !this.isOut[t]) {
this.fabnode[t].opacity = 0;
this.isOut[t] = !0;
}
}
}
}
});
cc._RF.pop();
}, {} ],
Scenebg2JS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6cc4aN898JN3YwxTu6Gu5J3", "Scenebg2JS");
cc.Class({
extends: cc.Component,
properties: {
selectLight: cc.Node,
scenebg: cc.Node,
Title: cc.Node
},
onLoad: function() {
this.scenebg.getComponent(cc.Sprite).spriteFrame = this.backgroundSpr;
this.Title.getComponent(cc.Label).string = this.ScenName;
},
start: function() {},
selectScene: function() {
window.Parent.ButtonSounds();
this.SceceSelect.selectScene(this.Number);
}
});
cc._RF.pop();
}, {} ],
ScenebgJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "6a712owFYJBrKpQAIQmspUo", "ScenebgJS");
cc.Class({
extends: cc.Component,
properties: {
scenebg: cc.Node,
tips: cc.Node,
Title: cc.Node,
scalLight: cc.Node,
new: cc.Node
},
onLoad: function() {
this.tipsLabel = [ "炫酷好玩的节奏世界！", "森林里不止有魔法也有快乐的节奏哦！", "那是遨游在天空的大鱼", "传说那里有一群可爱的蓝精灵！", "夏日炎炎，有你超甜！", "住在这里的神明是一位美丽的仙子！", "去见识一下沙漠里的大骆驼吧！" ];
this.scenebg.getComponent(cc.Sprite).spriteFrame = this.backgroundSpr;
this.Title.getComponent(cc.Label).string = this.ScenName;
this.tips.getComponent(cc.Label).string = this.tipsLabel[this.Number];
var e = Number(new Date().getTime());
this.new.active = !(e >= 1596546156e3);
},
start: function() {},
update: function(e) {
var t = 2.3 - Math.abs(this.CrownStore.Scenecontent.x + this.node.x) / 800, i = 255 - Math.abs(this.CrownStore.Scenecontent.x + this.node.x) / 1200 * 255;
Math.abs(this.CrownStore.Scenecontent.x + this.node.x) < 100 ? this.node.zIndex = 2 : this.node.zIndex = 1;
this.node.setScale(t);
this.node.opacity = i;
this.Number == this.CrownStore.ScenePageNumber ? this.scalLight.active = !0 : this.scalLight.active = !1;
}
});
cc._RF.pop();
}, {} ],
SdkTools: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "0c321TdMQNPx4JpxnUkHXHR", "SdkTools");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o, n = e("../sdkConfig").default.getInstance();
(function(e) {
e[e.GP_Oppo = 0] = "GP_Oppo";
e[e.GP_Vivo = 1] = "GP_Vivo";
e[e.GP_Tiktok = 2] = "GP_Tiktok";
e[e.GP_QQ = 3] = "GP_QQ";
e[e.GP_Test = 4] = "GP_Test";
e[e.GP_Android = 5] = "GP_Android";
e[e.GP_IOS = 6] = "GP_IOS";
e[e.GP_WX = 7] = "GP_WX";
e[e.GP_KS = 8] = "GP_KS";
e[e.GP_HW = 9] = "GP_HW";
e[e.GP_XM = 10] = "GP_XM";
})(o = i.Game_Platform || (i.Game_Platform = {}));
var s = function() {
return function() {
this.screenWidth = 0;
this.screenHeight = 0;
};
}(), a = function() {
function e() {
this.systemInfo = null;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.saveData = function(e, t) {
cc.sys.localStorage.setItem(e, t);
};
e.getData = function(e, t) {
var i = cc.sys.localStorage.getItem(e);
null == i && (i = t);
return i;
};
e.getPlatform = function() {
if (!n.channelId || n.channelId.length < 3) return o.GP_Test;
var e = n.channelId.substring(4, 7);
return "142" == e ? o.GP_Oppo : "108" == e ? o.GP_Vivo : "154" == e ? o.GP_Tiktok : "155" == e ? o.GP_QQ : "666" == e ? o.GP_Android : "888" == e ? o.GP_IOS : "161" == e ? o.GP_WX : "162" == e ? o.GP_KS : "163" == e ? o.GP_HW : "164" == e ? o.GP_XM : o.GP_Test;
};
e.loadImage = function(e, t) {
for (var i = new Array(), o = 0, n = function(n) {
cc.loader.load(e[n], function(s, a) {
i[n] = a;
if (null == s && null != i[n]) ++o >= e.length && t(!1, i); else {
console.log("ASCSDK", "资源加载错误:" + JSON.stringify(s));
t(!0, null);
}
});
}, s = 0; s < e.length; s++) n(s);
};
e.sdklog = function(e) {
for (var t = [], i = 1; i < arguments.length; i++) t[i - 1] = arguments[i];
console.log(e, t);
};
e.prototype.initSystemInfo = function(t) {
var i = this;
this.systemInfo = new s();
switch (e.getPlatform()) {
case o.GP_Oppo:
case o.GP_Vivo:
qg.getSystemInfo({
success: function(e) {
console.log("ASCSDK", "获取设备信息成功， screenWidth = " + e.screenWidth + ",handling success， screenHeight = " + e.screenHeight + ", " + cc.winSize.height + "," + JSON.stringify(cc.view.getResolutionPolicy()));
i.systemInfo.screenWidth = e.screenWidth;
i.systemInfo.screenHeight = e.screenHeight;
},
complete: function() {
t && t(!0);
}
});
break;

default:
t && t(!0);
}
};
e.prototype.getSystemInfo = function() {
return this.systemInfo;
};
e.prototype.isversionNewThanEngineVersion = function(t) {
switch (e.getPlatform()) {
case o.GP_QQ:
var i = t.split("."), n = 100 * Number(i[0]) + 10 * Number(i[1]) + Number(i[2]), s = qq.getSystemInfoSync().SDKVersion.split(".");
return n <= 100 * Number(s[0]) + 10 * Number(s[1]) + Number(s[2]);

case o.GP_Tiktok:
i = t.split("."), n = 100 * Number(i[0]) + 10 * Number(i[1]) + Number(i[2]), s = tt.getSystemInfoSync().SDKVersion.split(".");
return n <= 100 * Number(s[0]) + 10 * Number(s[1]) + Number(s[2]);

case o.GP_WX:
i = t.split("."), n = 100 * Number(i[0]) + 10 * Number(i[1]) + Number(i[2]), s = wx.getSystemInfoSync().SDKVersion.split(".");
return n <= 100 * Number(s[0]) + 10 * Number(s[1]) + Number(s[2]);

default:
return !0;
}
};
return e;
}();
i.default = a;
cc._RF.pop();
}, {
"../sdkConfig": "sdkConfig"
} ],
SearchListJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "32d9d1uOrZP6pOIBPdvSb+U", "SearchListJS");
var o = e("MusicJS");
cc.Class({
extends: o,
properties: {},
defination: function() {
this.musicPlay = this.node.getChildByName("musicPlay");
this.listBg = this.node.getChildByName("listBg");
this.New = this.listBg.getChildByName("New");
this.CD = this.listBg.getChildByName("Mask").getChildByName("CD");
this.playButton = this.listBg.getChildByName("playButton");
this.pauseButton = this.listBg.getChildByName("pauseButton");
this.loading = this.listBg.getChildByName("loading");
this.unclockNode = this.listBg.getChildByName("UnClock");
this.star = [];
this.star[0] = this.unclockNode.getChildByName("Star").getChildByName("star0");
this.star[1] = this.unclockNode.getChildByName("Star").getChildByName("star1");
this.star[2] = this.unclockNode.getChildByName("Star").getChildByName("star2");
this.diamondUnlockButton = this.unclockNode.getChildByName("DemondUnlockButton");
this.diamondText = this.diamondUnlockButton.getChildByName("num");
this.StartButton = this.unclockNode.getChildByName("StartButton");
this.videoUnlockButton = this.unclockNode.getChildByName("videoUnlockButton");
this.songNameMask = this.listBg.getChildByName("SongNameMask");
this.songNameNode = this.songNameMask.getChildByName("SongName");
this.bestScoreLB = this.unclockNode.getChildByName("ScoreBg").getChildByName("Score");
this.ColectionButton = this.unclockNode.getChildByName("ColectionButton");
this.like = this.ColectionButton.getChildByName("like");
this.clockNode = this.listBg.getChildByName("Clock");
},
UpdateMusicInfo: function() {
var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
o.prototype.UpdateMusicInfo.call(this, e);
if (this.exBag && "当前热门" != this.exBag) {
if (-1 != window.unlockCrownMusicName.indexOf(this.exBag)) {
this.clockNode.active = !1;
this.unclockNode.active = !0;
} else {
this.clockNode.active = !0;
this.unclockNode.active = !1;
}
} else {
this.clockNode.active = !1;
this.unclockNode.active = !0;
}
},
OnClickVideo: function() {
window.Home.DealMusicScore(window.playID, !1, 7);
o.prototype.OnClickVideo.call(this);
},
OnClickDiamond: function() {
window.Home.DealMusicScore(window.playID, !1, 7);
o.prototype.OnClickDiamond.call(this);
},
OnClickFollow: function() {
window.Parent.ButtonSounds();
window.MusicListNode && (window.MusicListNode.active = !1);
window.MyMusicNode && (window.MyMusicNode.active = !1);
window.Home.showCrownMusic();
},
OnClickStartGame: function() {
window.Parent.ButtonSounds();
this.startGame();
}
});
cc._RF.pop();
}, {
MusicJS: "MusicJS"
} ],
SearchNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ae97db9PhxA67A7XR2CrJNA", "SearchNodeJS");
cc.Class({
extends: cc.Component,
properties: {
TextNode: cc.Node,
LoadingNode: cc.Node,
UnFindTopNode: cc.Node,
ListNode: cc.Node,
UnFindListNode: cc.Node,
UnFindText: cc.Node,
SearchCon: cc.Node,
SearchPrefab: cc.Prefab
},
onLoad: function() {
window.SearchNode = this.node;
window.SearchList = this;
this.EditorBox = this.TextNode.getChildByName("EditBox");
this.FindSp = this.LoadingNode.getChildByName("SP_Find");
this.ListView = this.ListNode.getChildByName("view");
this.ListContent = this.ListView.getChildByName("content");
this.unfindListView = this.UnFindListNode.getChildByName("view");
this.unfindListContent = this.unfindListView.getChildByName("content");
this.node.setContentSize(window.screenWidth, window.screenHight);
this.saveSelectNum = -1;
},
SearchTextChange: function() {
var e = this.EditorBox.getComponent(cc.EditBox).string.toUpperCase();
console.log("inputStr : ", e);
if ("" != e) this.NewSearchMusic(); else {
this.SearchCon.setScale(0);
var t = this.saveSelectNum;
console.log("curNum : ", t);
window.MusicList.NormalScroll.setScale(1);
window.Home.curSelectList = this.saveSelectNum;
window.MusicList.ShowTypeList(t, !0);
}
},
OnClickSearch: function() {
this.SearchTextChange();
},
NewSearchMusic: function() {
if (-1 != window.Home.curSelectList) {
this.saveSelectNum = window.Home.curSelectList;
window.Home.curSelectList = -1;
}
this.ListNode.active = !1;
this.LoadingNode.active = !0;
this.FindSp.stopAllActions();
cc.tween(this.FindSp).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
for (var e = [], t = 0, i = [], o = 0, n = 0; n < window.Home.AllTable.length; n++) {
i[o] = window.Home.AllTable[n];
o++;
}
for (var s = 0; s < window.Home.CrownMusicTable.length; s++) {
i[o] = window.Home.CrownMusicTable[s];
o++;
}
for (var a = this.EditorBox.getComponent(cc.EditBox), c = a.string.toUpperCase(), r = 0; r < i.length; r++) {
var l = i[r];
if (-1 != l.musicName.toUpperCase().indexOf(c)) {
e[t] = l;
t++;
}
}
window.MusicList.NormalScroll.setScale(0);
this.ListContent.destroyAllChildren();
this.unfindListContent.destroyAllChildren();
this.UnFindTopNode.active = !1;
this.ListNode.active = !1;
this.UnFindListNode.active = !1;
this.SearchCon.setScale(1);
if (0 == e.length) {
this.UnFindListNode.active = !0;
this.unfindListContent.height = 1710;
this.UnFindTopNode.active = !0;
this.UnFindText.getComponent(cc.RichText).string = "<color=#9e56af>暂无</c><color=#ff19c7>“" + a.string + "”</color><color=#9e56af>这首歌</c>";
for (var d = window.Tools.disruptionArr(i), h = 0; h < 5; h++) {
var u = d[h], w = cc.instantiate(this.SearchPrefab), m = w.getComponent("SearchListJS");
w.setPosition(0, -120 - 222 * h);
m.musicName = u.musicName;
m.singerName = u.singerName;
m.orderNumber = u.orderNumber;
m.unlockType = u.unlockType;
m.unlockNumber = Number(u.unlockCost);
m.musicID = u.musicId;
m.NewFlag = u.ex_new;
m.musicURL = u.musicFile;
m.pointURL = u.json_normal;
m.musicStyle = u.style;
m.musicNumber = window.Home.GetMusicNumber(u.musicId);
m.listenNum = u.ex_listen;
m.exBag = u.ex_bag;
this.unfindListContent.addChild(w);
if (2 == h) {
this.LoadingNode.active = !1;
this.UnFindListNode.active = !0;
}
}
} else {
this.ListNode.active = !0;
this.ListContent.height = 222 * e.length + 600;
for (var g = 0; g < e.length; g++) {
var p = e[g], f = cc.instantiate(this.SearchPrefab), S = f.getComponent("SearchListJS");
f.setPosition(0, -120 - 222 * g);
S.musicName = p.musicName;
S.singerName = p.singerName;
S.orderNumber = p.orderNumber;
S.unlockType = p.unlockType;
S.unlockNumber = Number(p.unlockCost);
S.musicID = p.musicId;
S.NewFlag = p.ex_new;
S.musicURL = p.musicFile;
S.pointURL = p.json_normal;
S.musicStyle = p.style;
S.musicNumber = window.Home.GetMusicNumber(p.musicId);
S.listenNum = p.ex_listen;
S.exBag = p.ex_bag;
this.ListContent.addChild(f);
if (g == e.length - 1) {
this.LoadingNode.active = !1;
this.ListNode.active = !0;
}
}
}
},
OnClickPush: function() {
this.EditorBox.getComponent(cc.EditBox).string = "";
window.Parent.showTips("提交反馈成功");
var e = this.saveSelectNum;
console.log("curNum : ", e);
this.SearchCon.setScale(0);
window.MusicList.NormalScroll.setScale(1);
window.Home.curSelectList = this.saveSelectNum;
window.MusicList.ShowTypeList(e, !0);
}
});
cc._RF.pop();
}, {} ],
SelectSenceJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ce122QqOz1OgYyue1fYsuXp", "SelectSenceJS");
cc.Class({
extends: cc.Component,
properties: {
SceneBgFab: cc.Prefab,
RoleBgFab: cc.Prefab,
BuyButton: cc.Node,
UseButton: cc.Node,
isUsing: cc.Node,
SceneView: cc.Node,
RoleView: cc.Node,
SelectSP1: cc.Node,
SelectSP2: cc.Node
},
onLoad: function() {
this.defineData();
this.CreatScene();
},
onEnable: function() {
this.selectScene(window.SceneNumber);
},
start: function() {},
defineData: function() {
this.SceneArr = [];
this.RoleArr = [];
this.curType = 0;
this.sceneCreate = !1;
this.roleCreate = !1;
this.SceneContent = this.SceneView.getChildByName("view").getChildByName("content");
this.RoleContent = this.RoleView.getChildByName("view").getChildByName("content");
this.SceneBTN = this.node.getChildByName("selectbg").getChildByName("BTN_Scene");
this.RoleBTN = this.node.getChildByName("selectbg").getChildByName("BTN_Role");
this.curNum = 0;
},
CreatScene: function() {
if (0 == this.curType) {
this.SceneView.active = !0;
this.RoleView.active = !1;
this.SelectSP1.active = !0;
this.SelectSP2.active = !1;
this.SceneBTN.getChildByName("SP_Base").opacity = 255;
this.RoleBTN.getChildByName("SP_Base").opacity = 100;
if (0 == this.sceneCreate) {
this.sceneCreate = !0;
for (var e = 0; e < window.scenName.length; e++) {
(o = cc.instantiate(this.SceneBgFab)).getComponent("Scenebg2JS").SceceSelect = this;
o.getComponent("Scenebg2JS").Number = e;
o.getComponent("Scenebg2JS").ScenName = window.scenName[e];
o.getComponent("Scenebg2JS").backgroundSpr = window.sceneStorebg_Sprit[e];
var t = e % 3 * 250 - 250, i = -137 - 263 * Math.floor(e / 3);
o.setPosition(t, i);
this.SceneContent.addChild(o);
this.SceneArr[e] = o;
}
}
} else if (1 == this.curType) {
this.SceneView.active = !1;
this.RoleView.active = !0;
this.SelectSP1.active = !1;
this.SelectSP2.active = !0;
this.SceneBTN.getChildByName("SP_Base").opacity = 100;
this.RoleBTN.getChildByName("SP_Base").opacity = 255;
if (0 == this.roleCreate) {
this.roleCreate = !0;
this.RoleContent.height = 263 * Math.floor(window.roleName.length / 3) + 300;
for (e = 0; e < window.roleName.length; e++) {
var o;
(o = cc.instantiate(this.RoleBgFab)).getComponent("RoleBgJS").SceceSelect = this;
o.getComponent("RoleBgJS").Number = e;
o.getComponent("RoleBgJS").RoleName = window.roleName[e];
o.getComponent("RoleBgJS").RoleSprit = window.Role_Sprit[e];
t = e % 3 * 250 - 250, i = -137 - 263 * Math.floor(e / 3);
o.setPosition(t, i);
this.RoleContent.addChild(o);
this.RoleArr[e] = o;
}
}
}
},
close: function() {
this.node.active = !1;
},
selectScene: function(e) {
var t = window.Parent.getlocalStorage("RoleModel");
t = "true" === t;
if (0 == this.curType) for (var i = 0; i < this.SceneArr.length; i++) {
var o = this.SceneArr[i].getChildByName("selectLight");
if (i === e) {
this.curNum = e;
this.SceneNumber = i;
o.active = !0;
if ("video" === window.SceneUnlockType[this.SceneNumber]) {
var n = Number(window.Parent.getlocalStorage("sceneUnlockNum_" + this.SceneNumber));
if (1 == t) if (n >= window.SceneUnlockNumber[this.SceneNumber] || window.sceneIsUnlock[this.SceneNumber]) {
if (!window.sceneIsUnlock[this.SceneNumber]) {
window.sceneIsUnlock[this.SceneNumber] = !0;
window.Parent.setlocalStorage("sceneIsUnlock" + this.SceneNumber, !0);
}
this.BuyButton.active = !1;
this.isUsing.active = window.SceneNumber == this.SceneNumber;
this.UseButton.active = !(window.SceneNumber == this.SceneNumber);
} else {
this.BuyButton.getChildByName("video").active = !0;
this.BuyButton.getChildByName("crown").active = !1;
this.BuyButton.getChildByName("diamond").active = !1;
this.BuyButton.active = !0;
this.isUsing.active = !1;
this.UseButton.active = !1;
this.BuyButton.getChildByName("num").getComponent(cc.Label).string = n + "/" + window.SceneUnlockNumber[this.SceneNumber];
} else if (0 == t && 0 == this.SceneNumber) {
this.BuyButton.active = !1;
this.isUsing.active = !0;
this.UseButton.active = !1;
} else if (0 == t && 0 != this.SceneNumber) if (n >= window.SceneUnlockNumber[this.SceneNumber] || window.sceneIsUnlock[this.SceneNumber]) {
if (!window.sceneIsUnlock[this.SceneNumber]) {
window.sceneIsUnlock[this.SceneNumber] = !0;
window.Parent.setlocalStorage("sceneIsUnlock" + this.SceneNumber, !0);
}
this.BuyButton.active = !1;
this.isUsing.active = window.SceneNumber == this.SceneNumber;
this.UseButton.active = !(window.SceneNumber == this.SceneNumber);
} else {
this.BuyButton.getChildByName("video").active = !0;
this.BuyButton.getChildByName("crown").active = !1;
this.BuyButton.getChildByName("diamond").active = !1;
this.BuyButton.active = !0;
this.isUsing.active = !1;
this.UseButton.active = !1;
this.BuyButton.getChildByName("num").getComponent(cc.Label).string = n + "/" + window.SceneUnlockNumber[this.SceneNumber];
}
} else if ("crown" === window.SceneUnlockType[this.SceneNumber]) {
var s = window.sceneIsUnlock[this.SceneNumber];
if (1 == t) if (1 == s) {
this.BuyButton.active = !1;
this.isUsing.active = window.SceneNumber == this.SceneNumber;
this.UseButton.active = !(window.SceneNumber == this.SceneNumber);
} else {
this.BuyButton.getChildByName("video").active = !1;
this.BuyButton.getChildByName("crown").active = !0;
this.BuyButton.getChildByName("diamond").active = !1;
this.BuyButton.active = !0;
this.isUsing.active = !1;
this.UseButton.active = !1;
this.BuyButton.getChildByName("num").getComponent(cc.Label).string = window.SceneUnlockNumber[this.SceneNumber];
} else if (0 == t && 0 == this.SceneNumber) {
this.BuyButton.active = !1;
this.isUsing.active = !0;
this.UseButton.active = !1;
} else if (0 == t && 0 != this.SceneNumber) if (1 == s) {
this.BuyButton.active = !1;
this.isUsing.active = window.SceneNumber == this.SceneNumber;
this.UseButton.active = !(window.SceneNumber == this.SceneNumber);
} else {
this.BuyButton.getChildByName("video").active = !1;
this.BuyButton.getChildByName("crown").active = !0;
this.BuyButton.getChildByName("diamond").active = !1;
this.BuyButton.active = !0;
this.isUsing.active = !1;
this.UseButton.active = !1;
this.BuyButton.getChildByName("num").getComponent(cc.Label).string = window.SceneUnlockNumber[this.SceneNumber];
}
}
} else o.active = !1;
} else for (i = 0; i < this.RoleArr.length; i++) {
o = this.RoleArr[i].getChildByName("selectLight");
if (i === e) {
this.curNum = e;
this.RoleNumber = i;
o.active = !0;
if ("video" === window.RoleUnlockType[this.RoleNumber]) {
var a = Number(window.Parent.getlocalStorage("roleUnlockNum_" + this.RoleNumber));
if (1 == t) if (a >= window.RoleUnlockNumber[this.RoleNumber] || window.roleIsUnlock[this.RoleNumber]) {
if (!window.roleIsUnlock[this.RoleNumber]) {
window.roleIsUnlock[this.RoleNumber] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + this.RoleNumber, !0);
}
this.BuyButton.active = !1;
this.isUsing.active = window.RoleNum == this.RoleNumber;
this.UseButton.active = !(window.RoleNum == this.RoleNumber);
} else {
this.BuyButton.getChildByName("video").active = !0;
this.BuyButton.getChildByName("crown").active = !1;
this.BuyButton.getChildByName("diamond").active = !1;
this.BuyButton.active = !0;
this.isUsing.active = !1;
this.UseButton.active = !1;
this.BuyButton.getChildByName("num").getComponent(cc.Label).string = a + "/" + window.RoleUnlockNumber[this.RoleNumber];
} else if (0 == t && 0 == this.RoleNumber) {
this.BuyButton.active = !1;
this.isUsing.active = !0;
this.UseButton.active = !1;
} else if (0 == t && 0 != this.RoleNumber) if (a >= window.RoleUnlockNumber[this.RoleNumber] || window.roleIsUnlock[this.RoleNumber]) {
this.BuyButton.active = !1;
this.isUsing.active = !1;
this.UseButton.active = !0;
} else {
this.BuyButton.getChildByName("video").active = !0;
this.BuyButton.getChildByName("crown").active = !1;
this.BuyButton.getChildByName("diamond").active = !1;
this.BuyButton.active = !0;
this.isUsing.active = !1;
this.UseButton.active = !1;
this.BuyButton.getChildByName("num").getComponent(cc.Label).string = a + "/" + window.RoleUnlockNumber[this.RoleNumber];
}
} else if ("crown" === window.RoleUnlockType[this.RoleNumber]) {
var c = window.roleIsUnlock[this.RoleNumber];
if (1 == t) if (1 == c) {
this.BuyButton.active = !1;
this.isUsing.active = window.RoleNum == this.RoleNumber;
this.UseButton.active = !(window.RoleNum == this.RoleNumber);
} else {
this.BuyButton.getChildByName("video").active = !1;
this.BuyButton.getChildByName("crown").active = !0;
this.BuyButton.getChildByName("diamond").active = !1;
this.BuyButton.active = !0;
this.isUsing.active = !1;
this.UseButton.active = !1;
this.BuyButton.getChildByName("num").getComponent(cc.Label).string = window.RoleUnlockNumber[this.RoleNumber];
} else if (0 == t && 0 == this.RoleNumber) {
this.BuyButton.active = !1;
this.isUsing.active = !0;
this.UseButton.active = !1;
} else if (0 == t && 0 != this.RoleNumber) if (1 == c) {
this.BuyButton.active = !1;
this.isUsing.active = !1;
this.UseButton.active = !0;
} else {
this.BuyButton.getChildByName("video").active = !1;
this.BuyButton.getChildByName("crown").active = !0;
this.BuyButton.getChildByName("diamond").active = !1;
this.BuyButton.active = !0;
this.isUsing.active = !1;
this.UseButton.active = !1;
this.BuyButton.getChildByName("num").getComponent(cc.Label).string = window.RoleUnlockNumber[this.RoleNumber];
}
} else if ("diamond" === window.RoleUnlockType[this.RoleNumber]) {
var r = window.roleIsUnlock[this.RoleNumber];
if (1 == t) if (1 == r) {
if (!window.roleIsUnlock[this.RoleNumber]) {
window.roleIsUnlock[this.RoleNumber] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + this.RoleNumber, !0);
}
this.BuyButton.active = !1;
this.isUsing.active = window.RoleNum == this.RoleNumber;
this.UseButton.active = !(window.RoleNum == this.RoleNumber);
} else {
this.BuyButton.getChildByName("video").active = !1;
this.BuyButton.getChildByName("crown").active = !1;
this.BuyButton.getChildByName("diamond").active = !0;
this.BuyButton.active = !0;
this.isUsing.active = !1;
this.UseButton.active = !1;
this.BuyButton.getChildByName("num").getComponent(cc.Label).string = window.RoleUnlockNumber[this.RoleNumber];
} else if (0 == t && 0 == this.RoleNumber) {
this.BuyButton.active = !1;
this.isUsing.active = !0;
this.UseButton.active = !1;
} else if (0 == t && 0 != this.RoleNumber) if (1 == r) {
this.BuyButton.active = !1;
this.isUsing.active = !1;
this.UseButton.active = !0;
} else {
this.BuyButton.getChildByName("video").active = !1;
this.BuyButton.getChildByName("crown").active = !1;
this.BuyButton.getChildByName("diamond").active = !0;
this.BuyButton.active = !0;
this.isUsing.active = !1;
this.UseButton.active = !1;
this.BuyButton.getChildByName("num").getComponent(cc.Label).string = window.RoleUnlockNumber[this.RoleNumber];
}
}
} else o.active = !1;
}
},
UseSceneButtonclick: function() {
window.Parent.ButtonSounds();
this.isUsing.active = !0;
this.UseButton.active = !1;
this.node.active = !1;
if (0 == this.curType) {
window.Parent.reportAnalytics("SelectScene_use_click");
window.SceneNumber = this.SceneNumber;
window.Parent.setlocalStorage("SceneNumber", window.SceneNumber);
} else if (1 == this.curType) {
window.RoleNum = this.RoleNumber;
window.Parent.setlocalStorage("RoleNum", window.RoleNum);
if (0 == this.RoleNumber) {
window.Parent.setlocalStorage("RoleModel", !1);
window.RoleModel = !1;
} else {
window.Parent.setlocalStorage("RoleModel", !0);
window.RoleModel = !0;
}
}
},
SceneVideoButtnClick: function() {
var e = this;
window.Parent.ButtonSounds();
if (0 == this.curType) {
if ("video" === window.SceneUnlockType[this.SceneNumber]) {
window.Parent.reportAnalytics("SelectScene_vedio_click");
var t = function(t) {
if (t) {
var i = Number(window.Parent.getlocalStorage("sceneUnlockNum_" + e.SceneNumber));
i++;
window.Parent.setlocalStorage("sceneUnlockNum_" + e.SceneNumber, i);
e.selectScene(e.SceneNumber);
}
};
window.Parent.showVideo(t);
} else if ("crown" === window.SceneUnlockType[this.SceneNumber]) {
window.Parent.reportAnalytics("SelectScene_diadema_click");
if (window.CrownNum >= window.SceneUnlockNumber[this.SceneNumber]) {
window.Crown.reduceCrown(window.SceneUnlockNumber[this.SceneNumber]);
window.sceneIsUnlock[this.SceneNumber] = !0;
window.Parent.setlocalStorage("sceneIsUnlock" + this.SceneNumber, !0);
this.selectScene(e.SceneNumber);
} else 0 == window.getCrownNum ? window.Crown.showAddCrownNode() : window.Parent.showTips("皇冠不足");
}
} else if (1 == this.curType) if ("video" === window.RoleUnlockType[this.RoleNumber]) {
t = function(t) {
if (t) {
var i = Number(window.Parent.getlocalStorage("roleUnlockNum_" + e.RoleNumber));
i++;
window.Parent.setlocalStorage("roleUnlockNum_" + e.RoleNumber, i);
e.selectScene(e.RoleNumber);
}
};
window.Parent.showVideo(t);
} else if ("crown" === window.RoleUnlockType[this.RoleNumber]) if (window.CrownNum >= window.RoleUnlockNumber[this.RoleNumber]) {
window.Crown.reduceCrown(window.RoleUnlockNumber[this.RoleNumber]);
window.roleIsUnlock[this.RoleNumber] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + this.RoleNumber, !0);
this.selectScene(e.RoleNumber);
} else 0 == window.getCrownNum ? window.Crown.showAddCrownNode() : window.Parent.showTips("皇冠不足"); else if ("diamond" === window.RoleUnlockType[this.RoleNumber]) if (window.DiamonNum >= window.RoleUnlockNumber[this.RoleNumber]) {
window.Diamon.reduceDiamond(window.RoleUnlockNumber[this.RoleNumber]);
window.roleIsUnlock[this.RoleNumber] = !0;
window.Parent.setlocalStorage("roleIsUnlock" + this.RoleNumber, !0);
this.selectScene(e.RoleNumber);
} else window.Diamon.showAddDimondNode();
},
OnClickSelectType: function(e, t) {
1 == t ? this.curType = 0 : 2 == t && (this.curType = 1);
this.CreatScene();
}
});
cc._RF.pop();
}, {} ],
SetAnim: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c95a3wYKyJGzaJ+beyLfa2b", "SetAnim");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.SetRoleAnim(4, 3);
this.GetRoleAnimTime();
},
SetRoleAnim: function(e) {
var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, i = this.node.getComponent(cc.SkeletonAnimation), o = i.getClips()[e], n = t / o.duration;
o.speed = o.speed / n;
console.log("speed : ", o.speed);
i.play(o.name, 0);
},
GetRoleAnimTime: function() {
for (var e = this.node.getComponent(cc.SkeletonAnimation).getClips(), t = 0; t < e.length; t++) {
var i = e[t];
console.log("sample Time : ", i.duration);
}
}
});
cc._RF.pop();
}, {} ],
SignNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "441656vaxRIHKiDilulDOfE", "SignNodeJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
rewardBgLight: [ cc.SpriteFrame ]
},
onLoad: function() {
this.node.setContentSize(window.screenWidth, window.screenHight);
this.takeButton = this.node.getChildByName("getButton");
this.videoButton = this.node.getChildByName("TreeButton");
this.hasCheck = this.node.getChildByName("hasCheck");
this.rewardBg = [];
for (var e = 0; e < 7; e++) this.rewardBg[e] = this.node.getChildByName("Day".concat(e));
this.coinNum = [ 25, 35, 50, 70, 100, 150, 300 ];
window.signTimes > 6 && (window.signTimes = 0);
this.reflash();
this.closeButton = this.node.getChildByName("close");
},
onEnable: function() {
this.HideCloseBTN(!0);
o.default.getInstance().reportAnalytics("View_Show_V2", "SignUI_Show", 1);
},
reflash: function() {
this.beishu = 1;
this.lastday = window.Parent.getlocalStorage("singlastday");
console.log("上次登录星期:星期", this.lastday);
this.curnday = String(new Date().getDay());
console.log("当前登录星期:星期", this.curnday);
for (var e = 0; e < 7; e++) {
var t = this.rewardBg[e].getChildByName("signday"), i = this.rewardBg[e].getChildByName("hasSignd");
this.rewardBg[e].getChildByName("num").getComponent(cc.Label).string = this.coinNum[e];
if (this.curnday != this.lastday) {
if (e < window.signTimes) {
i.active = !0;
t.active = !1;
this.rewardBg[e].getComponent(cc.Sprite).spriteFrame = this.rewardBgLight[2];
}
e == window.signTimes && (this.rewardBg[e].getComponent(cc.Sprite).spriteFrame = this.rewardBgLight[1]);
} else {
if (e < window.signTimes - 1) {
i.active = !0;
t.active = !1;
this.rewardBg[e].getComponent(cc.Sprite).spriteFrame = this.rewardBgLight[2];
}
if (e == window.signTimes - 1) {
this.rewardBg[e].getComponent(cc.Sprite).spriteFrame = this.rewardBgLight[2];
i.active = !0;
t.active = !1;
this.takeButton.active = !1;
this.videoButton.active = !1;
this.hasCheck.active = !0;
}
}
}
},
close: function(e) {
console.log("close");
0 != e && window.Parent.ButtonSounds();
window.Home.isshowBlockAd = !1;
this.node.active = !1;
this.node.destroy();
},
close2: function(e) {
console.log("close2");
window.Parent.ButtonSounds();
window.Home.isshowBlockAd = !1;
this.node.active = !1;
this.node.destroy();
if (2 == window.platform) window.Home.showNewSong(); else if (window.isFirstSign) window.Home.showNewSong(); else {
window.Home.ShowFavourPage();
window.isFirstSign = !0;
}
},
DoubleGetRewardClick: function() {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "SignUI_Double_ADClick", 1);
window.Parent.ButtonSounds();
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
window.Parent.reportAnalytics("registration_vedio_click");
window.Parent.reportCustomEvent("游戏事件", {
"签到界面广告点击": ""
});
e.beishu = 3;
e.getReward();
}
});
},
getReward: function() {
3 != this.beishu && window.Parent.ButtonSounds();
window.Diamon.addDiamond(this.coinNum[window.signTimes] * this.beishu / 5, this.coinNum[window.signTimes] * this.beishu);
this.lastday = this.curnday;
window.signTimes++;
window.Parent.setlocalStorage("signTimes", window.signTimes);
window.Parent.setlocalStorage("singlastday", this.lastday);
if (window.Parent.hasvideoinsert()) {
window.Parent.audioEngine.setVolume(0);
window.isShowingVideoInsert = !0;
window.videoInsertCallBack = function() {
window.Parent.audioEngine.setVolume(1);
window.isShowingVideoInsert = !1;
};
}
window.Parent.showInsertAD();
this.close2(!1);
},
HideCloseBTN: function(e) {
this.closeButton.active = e;
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
SineWave: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "4f490IH/wxBZ4QxZjS6wg1/", "SineWave");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var c = e.length - 1; c >= 0; c--) (n = e[c]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
}, s = this && this.__awaiter || function(e, t, i, o) {
return new (i || (i = Promise))(function(n, s) {
function a(e) {
try {
r(o.next(e));
} catch (e) {
s(e);
}
}
function c(e) {
try {
r(o.throw(e));
} catch (e) {
s(e);
}
}
function r(e) {
e.done ? n(e.value) : new i(function(t) {
t(e.value);
}).then(a, c);
}
r((o = o.apply(e, t || [])).next());
});
}, a = this && this.__generator || function(e, t) {
var i, o, n, s, a = {
label: 0,
sent: function() {
if (1 & n[0]) throw n[1];
return n[1];
},
trys: [],
ops: []
};
return s = {
next: c(0),
throw: c(1),
return: c(2)
}, "function" == typeof Symbol && (s[Symbol.iterator] = function() {
return this;
}), s;
function c(e) {
return function(t) {
return r([ e, t ]);
};
}
function r(s) {
if (i) throw new TypeError("Generator is already executing.");
for (;a; ) try {
if (i = 1, o && (n = 2 & s[0] ? o.return : s[0] ? o.throw || ((n = o.return) && n.call(o), 
0) : o.next) && !(n = n.call(o, s[1])).done) return n;
(o = 0, n) && (s = [ 2 & s[0], n.value ]);
switch (s[0]) {
case 0:
case 1:
n = s;
break;

case 4:
a.label++;
return {
value: s[1],
done: !1
};

case 5:
a.label++;
o = s[1];
s = [ 0 ];
continue;

case 7:
s = a.ops.pop();
a.trys.pop();
continue;

default:
if (!(n = a.trys, n = n.length > 0 && n[n.length - 1]) && (6 === s[0] || 2 === s[0])) {
a = 0;
continue;
}
if (3 === s[0] && (!n || s[1] > n[0] && s[1] < n[3])) {
a.label = s[1];
break;
}
if (6 === s[0] && a.label < n[1]) {
a.label = n[1];
n = s;
break;
}
if (n && a.label < n[2]) {
a.label = n[2];
a.ops.push(s);
break;
}
n[2] && a.ops.pop();
a.trys.pop();
continue;
}
s = t.call(e, a);
} catch (e) {
s = [ 6, e ];
o = 0;
} finally {
i = n = 0;
}
if (5 & s[0]) throw s[1];
return {
value: s[0] ? s[1] : void 0,
done: !0
};
}
};
Object.defineProperty(i, "__esModule", {
value: !0
});
e("../../misc/EditorAsset");
var c, r = cc._decorator, l = r.ccclass, d = r.property, h = r.requireComponent, u = r.executeInEditMode, w = r.disallowMultiple, m = r.executionOrder;
(function(e) {
e[e.Left = 1] = "Left";
e[e.Right = 2] = "Right";
})(c = i.SineWaveDirection || (i.SineWaveDirection = {}));
var g = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t._effect = null;
t._amplitude = .05;
t._angularVelocity = 10;
t._frequency = 10;
t._height = .5;
t._direction = c.Left;
t.sprite = null;
t.material = null;
return t;
}
Object.defineProperty(t.prototype, "effect", {
get: function() {
return this._effect;
},
set: function(e) {
this._effect = e;
this.init();
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "amplitude", {
get: function() {
return this._amplitude;
},
set: function(e) {
this._amplitude = e;
this.updateProperties();
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "angularVelocity", {
get: function() {
return this._angularVelocity;
},
set: function(e) {
this._angularVelocity = e;
this.updateProperties();
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "frequency", {
get: function() {
return this._frequency;
},
set: function(e) {
this._frequency = e;
this.updateProperties();
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "height", {
get: function() {
return this._height;
},
set: function(e) {
this._height = e;
this.updateProperties();
},
enumerable: !0,
configurable: !0
});
Object.defineProperty(t.prototype, "direction", {
get: function() {
return this._direction;
},
set: function(e) {
this._direction = e;
this.updateProperties();
},
enumerable: !0,
configurable: !0
});
t.prototype.onLoad = function() {
this.init();
};
t.prototype.resetInEditor = function() {
this.init();
};
t.prototype.init = function() {
return s(this, void 0, void 0, function() {
return a(this, function(e) {
switch (e.label) {
case 0:
return [ 3, 2 ];

case 1:
e.sent();
e.label = 2;

case 2:
if (!this._effect) return [ 2 ];
this.sprite = this.node.getComponent(cc.Sprite);
this.sprite.spriteFrame && (this.sprite.spriteFrame.getTexture().packable = !1);
this.material = cc.Material.create(this._effect);
this.sprite.setMaterial(0, this.material);
this.updateProperties();
return [ 2 ];
}
});
});
};
t.prototype.setSpriteFrame = function(e) {
this.sprite.spriteFrame = e;
this.sprite.spriteFrame.getTexture().packable = !1;
this.updateProperties();
};
t.prototype.updateProperties = function() {
if (!this.effect) return cc.warn("[SineWave]", "请指定 Effect 资源！");
this.material.setProperty("amplitude", this._amplitude);
this.material.setProperty("angularVelocity", this._angularVelocity);
this.material.setProperty("frequency", this._frequency);
this.material.setProperty("offset", 1 - this._height + this._amplitude);
this.material.setProperty("toLeft", this._direction === c.Left);
};
n([ d ], t.prototype, "_effect", void 0);
n([ d({
type: cc.EffectAsset,
tooltip: !1,
readonly: !0
}) ], t.prototype, "effect", null);
n([ d ], t.prototype, "_amplitude", void 0);
n([ d({
tooltip: !1
}) ], t.prototype, "amplitude", null);
n([ d ], t.prototype, "_angularVelocity", void 0);
n([ d({
tooltip: !1
}) ], t.prototype, "angularVelocity", null);
n([ d ], t.prototype, "_frequency", void 0);
n([ d({
tooltip: !1
}) ], t.prototype, "frequency", null);
n([ d ], t.prototype, "_height", void 0);
n([ d({
tooltip: !1
}) ], t.prototype, "height", null);
n([ d ], t.prototype, "_direction", void 0);
n([ d({
type: cc.Enum(c),
tooltip: !1
}) ], t.prototype, "direction", null);
return t = n([ l, h(cc.Sprite), u, w, m(-100) ], t);
}(cc.Component);
i.default = g;
cc._RF.pop();
}, {
"../../misc/EditorAsset": "EditorAsset"
} ],
SuperTipsNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f0d2aerBIhJ+JuGMK9s6LYD", "SuperTipsNodeJS");
cc.Class({
extends: cc.Component,
properties: {},
start: function() {
window.Home.closemoreGame();
},
close: function() {
window.Parent.ButtonSounds();
window.Home.tips.active = !1;
window.Home.finger.stopAllActions();
window.Home.finger.active = !1;
window.Home.showTipsAction2();
this.node.destroy();
}
});
cc._RF.pop();
}, {} ],
TestCocos: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "1cfceeiZglIqobwEF7m1oF1", "TestCocos");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var c = e.length - 1; c >= 0; c--) (n = e[c]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = e("./ASCAd"), a = cc._decorator, c = a.ccclass, r = (a.property, function(e) {
o(t, e);
function t() {
return null !== e && e.apply(this, arguments) || this;
}
t.prototype.start = function() {
s.default.getInstance().initAd();
};
t.prototype.getUserInfo = function() {
s.default.getInstance().getUserInfo(function(e) {
console.log("ASCSDK", "getUserInfo", JSON.stringify(e));
});
};
t.prototype.getUserData = function() {
s.default.getInstance().getUserData(function(e) {
console.log(e);
});
};
t.prototype.showMoreGamesBanner = function() {
s.default.getInstance().showMoreGamesBanner();
};
t.prototype.hideMoreGamesBanner = function() {
s.default.getInstance().hideMoreGamesBanner();
};
t.prototype.startGameVideo = function() {
s.default.getInstance().startGameVideo(60);
};
t.prototype.stopGameVideo = function() {
var e = this;
s.default.getInstance().stopGameVideo(function(t) {
console.log("视频录制成功");
e.videoPath = t;
});
};
t.prototype.shareVideo = function() {
s.default.getInstance().shareVideo("这是抖音分享视频的标题", "这是头条分享视频的描述", "这是抖音分享视频的话题", this.videoPath, function(e) {
e ? console.log("分享成功") : console.log("分享失败");
});
};
t.prototype.showMoreGames = function() {
s.default.getInstance().showMoreGamesModal();
};
t.prototype.hideMoreGames = function() {
s.default.getInstance().hideMoreGames();
};
t.prototype.showBlock = function() {
s.default.getInstance().getBlockFlag() && s.default.getInstance().showBlock("black", 0, 600, 8);
};
t.prototype.hideBlock = function() {
s.default.getInstance().hideBlock();
};
t.prototype.showAppBox = function() {
s.default.getInstance().getBoxFlag() && s.default.getInstance().showAppBox();
};
t.prototype.showBanner = function() {
s.default.getInstance().showBanner();
};
t.prototype.hideBanner = function() {
s.default.getInstance().hideBanner();
};
t.prototype.showVideo = function() {
s.default.getInstance().getVideoFlag() && s.default.getInstance().showVideo(function(e) {
e ? console.log("视频播放完成") : console.log("视频取消播放");
});
};
t.prototype.showVideoInters = function() {
s.default.getInstance().getVideoIntersFlag() && s.default.getInstance().showVideoInters(function() {});
};
t.prototype.showInters = function() {
s.default.getInstance().getIntersFlag() && s.default.getInstance().showInters();
};
t.prototype.showNativeIcon = function() {
s.default.getInstance().getNativeIconFlag() && s.default.getInstance().showNativeIcon(200, 200, 300, 300);
};
t.prototype.hideNativeIcon = function() {
s.default.getInstance().hideNativeIcon();
};
t.prototype.showNativeImage = function() {
s.default.getInstance().getImageNativeFlag() && s.default.getInstance().showNativeImage(628, 314, 500, 300);
};
t.prototype.hideNativeImage = function() {
s.default.getInstance().hideNativeImage();
};
t.prototype.getNativeInfo = function() {
s.default.getInstance().getNativeInfo();
};
t.prototype.showNavigateIcon = function() {
s.default.getInstance().getNavigateIconFlag() && s.default.getInstance().showNavigateIcon(120, 120, 200, 200);
};
t.prototype.hideNavigateIcon = function() {
s.default.getInstance().hideNavigateIcon();
};
t.prototype.showNavigateGroup = function() {
s.default.getInstance().showNavigateGroup("horizontal", "right");
};
t.prototype.hideNavigateGroup = function() {
s.default.getInstance().hideNavigateGroup();
};
t.prototype.showNavigateSettle1 = function() {
s.default.getInstance().showNavigateSettle(1, cc.winSize.width / 2, cc.winSize.height / 2);
};
t.prototype.showNavigateSettle2 = function() {
s.default.getInstance().showNavigateSettle(2, cc.winSize.width / 2, cc.winSize.height / 2);
};
t.prototype.showNavigateSettle3 = function() {
s.default.getInstance().showNavigateSettle(3, cc.winSize.width / 2, cc.winSize.height / 2);
};
t.prototype.showNavigateSettle4 = function() {
s.default.getInstance().showNavigateSettle(4, 0, 0);
};
t.prototype.hideSettleNavigate = function() {
s.default.getInstance().hideNavigateSettle();
};
t.prototype.showNavigateBoxBanner = function() {
s.default.getInstance().getNavigateBoxBannerFlag() && s.default.getInstance().showNavigateBoxBanner();
};
t.prototype.hideNavigateBoxBanner = function() {
s.default.getInstance().hideNavigateBoxBanner();
};
t.prototype.showNavigateBoxPortal = function() {
s.default.getInstance().getNavigateBoxPortalFlag() && s.default.getInstance().showNavigateBoxPortal();
};
t.prototype.addDesktop = function() {
s.default.getInstance().getDeskTopFlag(function(e) {
e ? s.default.getInstance().addDeskTop(function(e) {
e ? console.log("添加桌面接口调用成功") : console.log("添加桌面接口调用失败");
}) : console.log("已存在桌面图标");
});
};
t.prototype.showToast = function() {
s.default.getInstance().showToast("暂无视频广告");
};
t.prototype.phoneVibrateShort = function() {
s.default.getInstance().phoneVibrate("short");
};
t.prototype.phoneVibrateLong = function() {
s.default.getInstance().phoneVibrate("long");
};
t.prototype.reportMonitor = function() {
s.default.getInstance().reportMonitor();
};
return t = n([ c ], t);
}(cc.Component));
i.default = r;
cc._RF.pop();
}, {
"./ASCAd": "ASCAd"
} ],
Tools: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "7cc9e0NQVtCD7P7QhHmSVAO", "Tools");
var o = {
CutStringByLength: function(e, t) {
for (var i = [], o = 0, n = e.length; o < n / t; o++) {
var s = e.slice(t * o, t * (o + 1));
i.push(s);
}
return i;
},
unique: function(e) {
for (var t = 0; t < e.length; t++) for (var i = t + 1; i < e.length; i++) if (e[t] == e[i]) {
e.splice(i, 1);
i--;
}
return e;
},
disruptionArr: function(e) {
for (var t = 0, i = e.length; t < i; t++) {
var o = parseInt(Math.random() * (i - 1)), n = e[t];
e[t] = e[o];
e[o] = n;
}
return e;
},
setlocalStorage: function(e, t) {
var i = String(t);
cc.sys.localStorage.setItem(e, i);
},
getlocalStorage: function(e) {
return cc.sys.localStorage.getItem(e);
},
Random: function(e, t) {
return Math.floor(Math.random() * (t - e + 1) + e);
},
get3DWorldPosition: function(e, t) {
var i = cc.v3(0, 0, 0), o = e.convertToWorldSpaceAR(cc.v3(0, 0, 0));
t.getComponent(cc.Camera).getWorldToScreenPoint(o, i);
return i;
},
getWorldPosition: function(e) {
return e.parent.convertToWorldSpaceAR(e.position);
},
getLocalPosition: function(e, t) {
cc.v3(0, 0, 0);
return e.convertToNodeSpaceAR(t);
},
getDistance: function(e, t) {
return e.position.sub(t).mag();
},
selectelement: function(e, t) {
for (var i = [], o = 0; o < t; o++) {
var n = Math.floor(Math.random() * e.length);
i.push(e[n]);
e.splice(n, 1);
}
return i;
},
PlaceFabNode: function(e, t, i, o) {
var n = cc.instantiate(e);
n.setPosition(t);
i.addChild(n);
o && (n.zIndex = o);
return n;
},
flyNodeBybezier: function(e, t, i, o, n, s) {
var a = [ o, n, t ], c = cc.bezierTo(i, a), r = cc.callFunc(function() {
s && s();
});
e.runAction(cc.sequence(c, r));
},
changeTime: function(e) {
var t = parseInt(e / 864e5), i = parseInt((e - 864e5 * t) / 36e5), o = parseInt((e - 864e5 * t - 36e5 * i) / 6e4);
return t + "天" + i + "时" + o + "分" + parseInt((e - 864e5 * t - 36e5 * i - 6e4 * o) / 1e3) + "秒";
}
};
t.exports = o;
cc._RF.pop();
}, {} ],
TopJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "dd75aC1yGtAPa+QfRKFbLdK", "TopJS");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {
this.node.zIndex = 11;
this.node.setContentSize(window.screenWidth, window.screenHight);
}
});
cc._RF.pop();
}, {} ],
TuijianBgJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "94cb9GDSUZGUqpEQXL7Bu+m", "TuijianBgJS");
cc.Class({
extends: cc.Component,
properties: {
Number: 0
},
onLoad: function() {
this.defination();
},
onEnable: function() {
this.Num = this.orderNumber % 20;
this.SentName = this.musicName;
this.SongName.getComponent(cc.Label).string = this.musicName;
this.CD.getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[this.Num];
if (this.isUnlock) {
this.DimondUnlockButton.active = !1;
this.VideoUnlockButton.active = !1;
this.playButton.active = !0;
} else {
this.playButton.active = !1;
if ("coin" === this.unlockType) {
this.DimondUnlockButton.active = !0;
this.DimondUnlockButton.getChildByName("num").getComponent(cc.Label).string = this.unlockNumber;
this.VideoUnlockButton.active = !1;
} else {
this.DimondUnlockButton.active = !1;
this.VideoUnlockButton.active = !0;
}
}
this.isColected ? this.like.active = !0 : this.like.active = !1;
this.score.getComponent(cc.Label).string = this.BestScore;
this.relashStar();
},
start: function() {},
update: function(e) {
var t = 1.8 - Math.abs(window.Lottery.content.x + this.node.x) / 2e3, i = 255 - Math.abs(window.Lottery.content.x + this.node.x) / 800 * 255;
Math.abs(window.Lottery.content.x + this.node.x) < 100 ? this.node.zIndex = 2 : this.node.zIndex = 1;
this.node.setScale(t);
this.node.opacity = i;
},
defination: function() {
this.star = [];
this.star[0] = this.node.getChildByName("Star").getChildByName("star0");
this.star[1] = this.node.getChildByName("Star").getChildByName("star1");
this.star[2] = this.node.getChildByName("Star").getChildByName("star2");
this.CD = this.node.getChildByName("Mask").getChildByName("CD");
this.SongName = this.node.getChildByName("nameBg").getChildByName("SongName");
this.pauseButton = this.node.getChildByName("pause");
this.play = this.node.getChildByName("play");
this.score = this.node.getChildByName("scorebg").getChildByName("score");
this.like = this.node.getChildByName("ColoectionBG").getChildByName("like");
this.playButton = this.node.getChildByName("playButton");
this.DimondUnlockButton = this.node.getChildByName("DimondUnlockButton");
this.VideoUnlockButton = this.node.getChildByName("VideoUnlockButton");
this.StarNum = Number(window.Parent.getlocalStorage("StarNum" + this.musicID));
this.BestScore = Number(window.Parent.getlocalStorage("BestScore" + this.musicID));
this.isColected = window.Parent.getlocalStorage("isColected" + this.musicID);
"true" === this.isColected ? this.isColected = !0 : this.isColected = !1;
this.isUnlock = window.Parent.getlocalStorage("isUnlock" + this.musicID);
if ("coin" === this.unlockType && 0 == this.unlockNumber) {
this.isUnlock = !0;
window.Parent.setlocalStorage("isUnlock" + this.musicID, !0);
} else "true" == this.isUnlock ? this.isUnlock = !0 : this.isUnlock = !1;
},
relashStar: function() {
this.star[0].active = !1;
this.star[1].active = !1;
this.star[2].active = !1;
for (var e = 0; e <= this.StarNum - 1; e++) this.star[e].active = !0;
},
playMusic: function() {
var e = this;
window.Home.stopMusicPlaying();
window.Lottery.stopMusic();
this.play.active = !1;
window.Parent.LoadMusic(this.musicURL, this.musicID, function(t) {
console.log("是否游戏中", window.isGaming);
if (!window.isGaming && !window.musicisplaying) if (window.videoIsPlay) window.Home.stopMusicPlaying(); else {
e.pauseButton.active = !0;
window.musicisplaying = !0;
console.log("播放音乐");
window.Parent.audioEngine.playMusic(t, !0);
window.isShowingVideoInsert && window.Parent.audioEngine.setVolume(0);
}
});
},
stopMusic: function() {
window.musicisplaying = !1;
this.play.active = !0;
this.pauseButton.active = !1;
window.Parent.audioEngine.stopAll();
},
DimondUnlock: function() {
window.Parent.ButtonSounds();
if (window.DiamonNum >= this.unlockNumber) {
window.Parent.reportCustomEvent("游戏事件", {
"转盘推荐音乐钻石解锁": ""
});
window.Diamon.reduceDiamond(this.unlockNumber);
this.unlocksong();
} else window.Diamon.showAddDimondNode();
},
videoUnlockButtonClick: function() {
var e = this;
window.Parent.ButtonSounds();
window.Parent.showVideo(function(t) {
if (t) {
window.Parent.reportCustomEvent("游戏事件", {
"转盘推荐音乐广告解锁": ""
});
e.playMusic();
e.unlocksong();
}
});
},
unlocksong: function() {
this.isUnlock = !0;
window.playNum = this.musicNumber;
window.playName = this.musicName;
window.playURL = this.musicURL;
window.playID = this.musicID;
window.playPoint = this.pointURL;
window.Parent.setlocalStorage("isUnlock" + this.musicID, !0);
this.DimondUnlockButton.active = !1;
this.VideoUnlockButton.active = !1;
this.playButton.active = !0;
window.AchieveNumber[1]++;
window.Parent.setlocalStorage("AchieveNumber1", window.AchieveNumber[1]);
},
ColectMusic: function() {
window.Parent.ButtonSounds();
window.Home.musicArr[this.musicNumber].getComponent("musicSelectJS").ColectMusic();
if (this.isColected) {
console.log("从喜欢中移除");
console.log(window.ColectTable);
this.isColected = !1;
this.like.active = !1;
for (var e = window.ColectTable.split(","), t = "", i = 0; i < e.length; i++) e[i] != this.musicID && (t = "" == t ? e[i] : t + "," + e[i]);
window.ColectTable = t;
console.log(window.ColectTable);
} else {
console.log("添加到喜欢");
this.isColected = !0;
this.like.active = !0;
"" == window.ColectTable ? window.ColectTable = this.musicID : window.ColectTable = window.ColectTable + "," + this.musicID;
}
window.Parent.setlocalStorage("isColected" + this.musicID, this.isColected);
window.Parent.setlocalStorage("ColectTable", window.ColectTable);
},
startGame: function() {
window.playNum = this.musicNumber;
window.playName = this.musicName;
window.playURL = this.musicURL;
window.playID = this.musicID;
window.playPoint = this.pointURL;
window.Parent.ButtonSounds();
if (3 == window.platform) {
window.Power.reduceTili(this.playButton, function() {
window.Lottery.close();
window.Home.startGame();
});
} else {
window.Home.startGame();
window.Lottery.close();
}
}
});
cc._RF.pop();
}, {} ],
VideoBgJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "c6451gv7txKwJ6AeMw+mTZM", "VideoBgJS");
cc.Class({
extends: cc.Component,
properties: {
videoSpr: cc.Node,
videoId: null,
cover_url: null
},
onLoad: function() {},
onEnable: function() {
var e = this;
cc.loader.load({
url: this.cover_url,
type: "jpeg"
}, function(t, i) {
t || (e.videoSpr.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(i));
});
},
start: function() {},
showVideo: function() {
if ("Like" === this.nodeType) {
window.Parent.reportAnalytics("HotVideo_vedio_click");
window.Parent.reportCustomEvent("视频排行事件", {
"热门视频播放点击数": ""
});
}
if ("Time" === this.nodeType) {
window.Parent.reportAnalytics("NewVideo_vedio_click");
window.Parent.reportCustomEvent("视频排行事件", {
"最新视频播放点击数": ""
});
}
tt.navigateToVideoView({
videoId: this.videoId
});
}
});
cc._RF.pop();
}, {} ],
VideoController: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "2c2c1LPSwdBHK1PCfPKRnx5", "VideoController");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../tools/SdkTools"), n = e("./VideoOppo"), s = e("./VideoTest"), a = e("./VideoVivo"), c = e("./VideoTiktok"), r = e("./VideoQQ"), l = e("./VideoWX"), d = e("./VideoKS"), h = e("./VideoHW"), u = e("./VideoXM"), w = null, m = null, g = function() {
function e() {
this.ID_VideoID = "";
this.SW_VideoSwitch = !1;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createVideoAd = function() {
if (this.SW_VideoSwitch) switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
n.default.getInstance().createVideoAd(this.ID_VideoID);
break;

case o.Game_Platform.GP_Vivo:
a.default.getInstance().createVideoAd(this.ID_VideoID);
break;

case o.Game_Platform.GP_Tiktok:
c.default.getInstance().createVideoAd(this.ID_VideoID);
break;

case o.Game_Platform.GP_QQ:
r.default.getInstance().createVideoAd(this.ID_VideoID);
break;

case o.Game_Platform.GP_WX:
l.default.getInstance().createVideoAd(this.ID_VideoID);
break;

case o.Game_Platform.GP_KS:
d.default.getInstance().createVideoAd(this.ID_VideoID);
break;

case o.Game_Platform.GP_HW:
h.default.getInstance().createVideoAd(this.ID_VideoID);
break;

case o.Game_Platform.GP_XM:
u.default.getInstance().createVideoAd(this.ID_VideoID);
} else console.log("ASCSDK", "视频开关没有开启");
};
e.prototype.getVideoFlag = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
return n.default.getInstance().getVideoFlag();

case o.Game_Platform.GP_Vivo:
return a.default.getInstance().getVideoFlag();

case o.Game_Platform.GP_Tiktok:
return c.default.getInstance().getVideoFlag();

case o.Game_Platform.GP_QQ:
return r.default.getInstance().getVideoFlag();

case o.Game_Platform.GP_WX:
return l.default.getInstance().getVideoFlag();

case o.Game_Platform.GP_KS:
return d.default.getInstance().getVideoFlag();

case o.Game_Platform.GP_HW:
return h.default.getInstance().getVideoFlag();

case o.Game_Platform.GP_XM:
return u.default.getInstance().getVideoFlag();

case o.Game_Platform.GP_Android:
return jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "SendMessageGetAdFlag", "(Ljava/lang/String;)Z", "getVideoFlag");

case o.Game_Platform.GP_IOS:
return "1" == jsb.reflection.callStaticMethod("DJADManagerVC", "getVideoFlag");

case o.Game_Platform.GP_Test:
return !0;

default:
return !1;
}
};
e.prototype.showVideo = function(e) {
if (o.default.getPlatform() != o.Game_Platform.GP_Test) if (o.default.getPlatform() != o.Game_Platform.GP_Android) if (o.default.getPlatform() != o.Game_Platform.GP_IOS) if (this.SW_VideoSwitch) switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Oppo:
n.default.getInstance().showVideo(e);
break;

case o.Game_Platform.GP_Vivo:
a.default.getInstance().showVideo(e);
break;

case o.Game_Platform.GP_Tiktok:
c.default.getInstance().showVideo(e);
break;

case o.Game_Platform.GP_QQ:
r.default.getInstance().showVideo(e);
break;

case o.Game_Platform.GP_WX:
l.default.getInstance().showVideo(e);
break;

case o.Game_Platform.GP_KS:
d.default.getInstance().showVideo(e);
break;

case o.Game_Platform.GP_HW:
h.default.getInstance().showVideo(e);
break;

case o.Game_Platform.GP_XM:
u.default.getInstance().showVideo(e);
} else console.log("ASCSDK", "视频开关未开启"); else {
w = e;
jsb.reflection.callStaticMethod("DJADManagerVC", "showVideo");
} else {
w = e;
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"showVideo","calling_method_params":0}');
} else s.default.getInstance().showVideo(e);
};
e.prototype.getVideoIntersFlag = function() {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Android:
return jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "SendMessageGetAdFlag", "(Ljava/lang/String;)Z", "getVideoIntersFlag");

case o.Game_Platform.GP_IOS:
return "1" == jsb.reflection.callStaticMethod("DJADManagerVC", "getIntersVideoFlag");

default:
return !1;
}
};
e.prototype.showVideoInters = function(e) {
switch (o.default.getPlatform()) {
case o.Game_Platform.GP_Android:
m = e;
jsb.reflection.callStaticMethod("com/asc/sdk/ndk/AndroidNDKHelper", "ReceiveCppMessage", "(Ljava/lang/String;)V", '{"calling_method_name":"showVideoInters","calling_method_params":0}');
break;

case o.Game_Platform.GP_IOS:
m = e;
jsb.reflection.callStaticMethod("DJADManagerVC", "showIntersVideo");
}
};
return e;
}();
i.default = g;
window.VideoCallback = function(e) {
console.log("ASCSDK", "视频是否播放完成?", "1" == e);
w && w("1" == e);
return "callback suc";
};
window.VideoIntersCallBack = function() {
console.log("ASCSDK", "videoInsertCallBack");
m && m();
return "callback suc";
};
cc._RF.pop();
}, {
"../../tools/SdkTools": "SdkTools",
"./VideoHW": "VideoHW",
"./VideoKS": "VideoKS",
"./VideoOppo": "VideoOppo",
"./VideoQQ": "VideoQQ",
"./VideoTest": "VideoTest",
"./VideoTiktok": "VideoTiktok",
"./VideoVivo": "VideoVivo",
"./VideoWX": "VideoWX",
"./VideoXM": "VideoXM"
} ],
VideoHW: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "bd847hJ6YJJ0IC2AgymP2nv", "VideoHW");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function e() {
this.isLoadVideo = !1;
this.videoAd = null;
this.videoCallBack = null;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.getVideoFlag = function() {
return this.isLoadVideo;
};
e.prototype.createVideoAd = function(e) {
var t = this;
console.log("ASCSDK", "HW 视频广告初始化", e);
var i = this;
this.videoAd = hbs.createRewardedVideoAd({
adUnitId: e
});
this.videoAd.onLoad(function() {
console.log("ASCSDK", "HW 视频广告加载完成");
t.isLoadVideo = !0;
});
this.videoAd.onError(function(e) {
console.log("ASCSDK", "HW 视频加载失败 ：" + JSON.stringify(e));
t.isLoadVideo = !1;
t.videoAd && setTimeout(function() {
i.videoAd && i.videoAd.load();
}, 3e4);
});
this.videoAd.onClose(function(e) {
if (e.isEnded) {
console.log("ASCSDK", "HW 激励视频广告完成，发放奖励");
if (t.videoCallBack) {
t.videoCallBack(!0);
t.videoAd.load();
}
} else {
console.log("ASCSDK", "HW 激励视频广告取消关闭，不发放奖励");
if (t.videoCallBack) {
t.videoCallBack(!1);
t.videoAd.load();
}
}
});
this.videoAd.load();
};
e.prototype.showVideo = function(e) {
if (this.videoAd) {
this.videoCallBack = e;
console.log("ASCSDK", "HW showVideo========================");
this.videoAd.show();
} else console.log("ASCSDK", "不存在视频广告===============");
};
return e;
}();
i.default = o;
cc._RF.pop();
}, {} ],
VideoKS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a7701MXxlpIaJOHR66ZNMQ0", "VideoKS");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function e() {
this.isLoadVideo = !1;
this.videoAd = null;
this.videoCallBack = null;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.getVideoFlag = function() {
return this.isLoadVideo;
};
e.prototype.createVideoAd = function(e) {
var t = this;
console.log("ASCSDK", "KS 视频广告初始化", e);
this.videoAd = kwaigame.createRewardedVideoAd({
adUnitId: e
});
if (this.videoAd) {
this.isLoadVideo = !0;
this.videoAd.onClose(function(e) {
console.log("ASCSDK", "激励视频取消播放");
t.videoCallBack(!1);
});
this.videoAd.onReward(function(e) {
console.log("ASCSDK", "激励视频播放完成");
t.videoCallBack(!0);
});
}
};
e.prototype.showVideo = function(e) {
if (this.videoAd) {
this.videoCallBack = e;
console.log("ASCSDK", "KS showVideo========================");
this.videoAd.show({
success: function() {},
fail: function(e) {
console.log("ASCSDK", "激励视频播放失败: " + JSON.stringify(e));
}
});
} else console.log("ASCSDK", "不存在视频广告===============");
};
return e;
}();
i.default = o;
cc._RF.pop();
}, {} ],
VideoOppo: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "ad548KryxpKqb8fzbuFhtLf", "VideoOppo");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function e() {
this.isLoadVideo = !1;
this.videoAd = null;
this.videoCallBack = null;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createVideoAd = function(e) {
var t = this;
this.videoAd = qg.createRewardedVideoAd({
posId: e
});
this.videoAd.onLoad(function() {
console.log("ASCSDK", "OPPO 视频广告加载完成");
t.isLoadVideo = !0;
});
this.videoAd.onError(function(e) {
console.log("ASCSDK", "OPPO 视频加载失败：" + JSON.stringify(e));
t.videoAd && setTimeout(function() {
t.videoAd && t.videoAd.load();
}, 3e4);
});
this.videoAd.onVideoStart(function() {
console.log("ASCSDK", "OPPO 激励视频开始播放");
});
this.videoAd.onClose(function(e) {
if (e.isEnded) {
console.log("ASCSDK", "OPPO 激励视频广告完成，发放奖励");
if (t.videoCallBack) {
t.videoCallBack(!0);
t.videoAd.load();
}
} else {
console.log("ASCSDK", "OPPO 激励视频广告取消关闭，不发放奖励");
if (t.videoCallBack) {
t.videoCallBack(!1);
t.videoAd.load();
}
}
});
this.videoAd.load();
};
e.prototype.getVideoFlag = function() {
return this.isLoadVideo;
};
e.prototype.showVideo = function(e) {
this.videoCallBack = e;
if (this.videoAd) {
console.log("ASCSDK", "OPPO 展示视频===========================");
this.videoAd.show();
this.isLoadVideo = !1;
}
};
return e;
}();
i.default = o;
cc._RF.pop();
}, {} ],
VideoQQ: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "3d866GZo0hC2ItsR/DiN4E2", "VideoQQ");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function e() {
this.isLoadVideo = !1;
this.videoAd = null;
this.videoCallBack = null;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.getVideoFlag = function() {
!this.isLoadVideo && this.videoAd && this.videoAd.load();
return this.isLoadVideo;
};
e.prototype.createVideoAd = function(e) {
var t = this;
console.log("ASCSDK", "QQ 视频广告初始化", e);
var i = this;
this.videoAd = qq.createRewardedVideoAd({
adUnitId: e
});
this.videoAd.onLoad(function() {
console.log("ASCSDK", "QQ 视屏广告加载完成");
i.isLoadVideo = !0;
});
this.videoAd.onError(function(e) {
console.log("ASCSDK", "QQ 视屏加载失败 ：" + JSON.stringify(e));
i.isLoadVideo = !1;
t.videoAd && setTimeout(function() {
i.videoAd && i.videoAd.load();
}, 3e4);
});
this.videoAd.onClose(function(e) {
setTimeout(function() {
if (e.isEnded) {
console.log("ASCSDK", "QQ 激励视频广告完成，发放奖励");
if (t.videoCallBack) {
t.videoCallBack(!0);
t.videoAd.load();
}
} else {
console.log("ASCSDK", "QQ 激励视频广告取消关闭，不发放奖励");
if (t.videoCallBack) {
t.videoCallBack(!1);
t.videoAd.load();
}
}
}, 500);
});
this.videoAd.load();
};
e.prototype.showVideo = function(e) {
if (this.videoAd) {
this.videoCallBack = e;
console.log("ASCSDK", "QQ showVideo ========================");
this.videoAd.show();
this.isLoadVideo = !1;
} else console.log("ASCSDK", "不存在视频广告===============");
};
return e;
}();
i.default = o;
cc._RF.pop();
}, {} ],
VideoRankNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "836b5faLY9DhKZ8TuizFFkW", "VideoRankNodeJS");
cc.Class({
extends: cc.Component,
properties: {
likeButton: cc.Node,
TimeButton: cc.Node,
Likescrollview: cc.Node,
Likecontent: cc.Node,
Timescrollview: cc.Node,
Timecontent: cc.Node,
videobgfab: cc.Prefab
},
onLoad: function() {
this.LikeArr = [];
this.TimeArr = [];
this.reflashFalg = !0;
this.LikeButtonClick();
},
onEnable: function() {
window.Record.stopCustomRecord();
window.Parent.hideBanner();
},
start: function() {},
update: function(e) {},
close: function() {
window.Parent.ButtonSounds();
window.Parent.showBanner();
this.node.active = !1;
},
LikeButtonClick: function() {
window.Parent.reportAnalytics("HotVideo_page_access");
window.Parent.reportCustomEvent("视频排行事件", {
"视频热门榜展示数": ""
});
var e = this;
window.Parent.ButtonSounds();
this.likeButton.opacity = 255;
this.TimeButton.opacity = 100;
this.Likescrollview.active = !0;
this.Timescrollview.active = !1;
this.getToken(function(t) {
e.getVideoList(t, "http://gate.snssdk.com/developer/api/get_top_video_ids_by_like", function(t) {
e.getvideoCoverurl(t, function(t) {
console.log("点赞视频列表", t);
for (var i = [], o = 0; o < e.tempTable.length; o++) for (var n = 0; n < t.length; n++) if (t[n].alias_id == e.tempTable[o].video_id) {
i.push(t[n]);
break;
}
e.creatVideo(e.Likescrollview, i, e.LikeArr);
});
});
});
},
TimeButtonClick: function() {
window.Parent.reportAnalytics("NewVideo_page_access");
window.Parent.reportCustomEvent("视频排行事件", {
"最新视频榜展示数": ""
});
var e = this;
window.Parent.ButtonSounds();
this.likeButton.opacity = 100;
this.TimeButton.opacity = 255;
this.Likescrollview.active = !1;
this.Timescrollview.active = !0;
this.getToken(function(t) {
e.getVideoList(t, "http://gate.snssdk.com/developer/api/get_top_video_ids_by_time", function(t) {
e.getvideoCoverurl(t, function(t) {
for (var i = [], o = 0; o < e.tempTable.length; o++) for (var n = 0; n < t.length; n++) if (t[n].alias_id == e.tempTable[o].video_id) {
i.push(t[n]);
break;
}
e.creatVideo(e.Timescrollview, i, e.TimeArr);
});
});
});
},
getToken: function(e) {
this.appid = "tt115b67e68e717960";
var t = "https://www.ascmob.com/fastgameserver/tiktok/cloud/getAccessToken?appid=" + this.appid + "&secret=c0892e4994b3fe3a8c1f6d652be1efb55ee9f166", i = new XMLHttpRequest();
i.onreadystatechange = function() {
if (4 == i.readyState && i.status >= 200 && i.status < 400) {
var t = JSON.parse(i.responseText);
cc.log(t);
return e(t.data.access_token);
}
4 == i.readyState && i.status >= 400 && window.Parent.showTips("获取视频列表失败");
};
i.open("GET", t, !0);
i.send();
},
getVideoList: function(e, t, i) {
var o = this, n = {
app_id: this.appid,
number_of_top: 50,
access_token: e
}, s = new XMLHttpRequest();
s.open("POST", t, !0);
s.setRequestHeader("Content-type", "application/json");
s.send(n);
s.onreadystatechange = function() {
if (4 == s.readyState && s.status >= 200 && s.status < 400) {
for (var e = JSON.parse(s.responseText).data, t = [], n = 0; n < e.length; n++) t.push(e[n].video_id);
o.tempTable = e;
return i(t);
}
};
},
getvideoCoverurl: function(e, t) {
var i = {
alias_ids: e
}, o = new XMLHttpRequest();
o.open("POST", "http://gate.snssdk.com/developer/api/get_cover_urls_by_video_ids", !0);
o.setRequestHeader("Content-type", "application/json");
o.send(i);
o.onreadystatechange = function() {
if (4 == o.readyState && o.status >= 200 && o.status < 400) {
var e = JSON.parse(o.responseText).data;
return t(e);
}
};
},
creatVideo: function(e, t, i) {
var o = e.getChildByName("view").getChildByName("content"), n = Math.floor(t.length / 3) + 1, s = "";
o === this.Likecontent && (s = "Like");
o === this.Timecontent && (s = "Time");
o.height = 458 * n + 600;
for (var a = 0; a < t.length; a++) if (i[a]) {
i[a].getComponent("VideoBgJS").videoId = t[a].alias_id;
i[a].getComponent("VideoBgJS").cover_url = t[a].cover_url;
c.getComponent("VideoBgJS").nodeType = s;
i[a].active = !1;
i[a].active = !0;
} else {
var c = cc.instantiate(this.videobgfab), r = a % 3 * 330 - 330, l = -220 - 458 * Math.floor(a / 3);
c.setPosition(r, l);
c.getComponent("VideoBgJS").videoId = t[a].alias_id;
c.getComponent("VideoBgJS").cover_url = t[a].cover_url;
c.getComponent("VideoBgJS").nodeType = s;
o.addChild(c);
i[a] = c;
}
},
Likescrollviewback: function() {
if (this.Likecontent.y < this.Likecontent.parent.height / 2 - 500 && this.reflashFalg) {
console.log("刷新页面");
this.reflashFalg = !1;
this.scheduleOnce(function() {
this.reflashFalg = !0;
}, 3);
this.LikeButtonClick();
}
},
Timescrollviewback: function() {
if (this.Timecontent.y < this.Timecontent.parent.height / 2 - 500 && this.reflashFalg) {
console.log("刷新页面");
this.reflashFalg = !1;
this.scheduleOnce(function() {
this.reflashFalg = !0;
}, 3);
this.TimeButtonClick();
}
},
shareVideo: function() {
window.Parent.reportAnalytics("VedioList_share_click");
window.Parent.reportCustomEvent("视频排行事件", {
"排行榜分享视频点击数": ""
});
window.Parent.ButtonSounds();
window.isCustomRecord ? window.Parent.shareRecord(null, 0, window.MusicName) : window.Game.musicTime > 3 ? window.Parent.shareRecord(null, 0, window.MusicName) : window.Parent.showTips("请先录制视频");
}
});
cc._RF.pop();
}, {} ],
VideoTest: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "77a7cNdv7tPULQ3Ttji4sDO", "VideoTest");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = e("../../ui/CocosUI"), n = function() {
function e() {}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.showVideo = function(e) {
console.log("ASCSDK", "Test 展示测试视频====================");
var t = new cc.Node("layerBg");
"" != o.default.getInstance().cocosGroup && (t.group = o.default.getInstance().cocosGroup);
setTimeout(function() {
t.width = 2560;
t.height = 2560;
t.x = cc.winSize.width / 2;
t.y = cc.winSize.height / 2;
}, 1);
t.addComponent(cc.Sprite);
t.opacity = 200;
cc.loader.load("https://tencentcnd.minigame.xplaymobile.com/Other/SDK/SDKImage_3_0/NativeIntersRes/layerBg.png", function(e, i) {
t.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(i);
setTimeout(function() {
t.width = 2560;
t.height = 2560;
}, 1);
});
var i = cc.director.getScene();
i.addChild(t);
t.zIndex = 3e4;
t.on(cc.Node.EventType.TOUCH_START, function(e) {});
var n = new cc.Node("titleLabel");
n.addComponent(cc.Label);
n.getComponent(cc.Label).fontSize = 30;
n.getComponent(cc.Label).enableWrapText = !0;
n.width = cc.winSize.width - 200;
n.getComponent(cc.Label).string = "视频播放回调的测试";
n.x = 0;
n.y = 100;
t.addChild(n);
var s = new cc.Node("buttonSuccess");
s.addComponent(cc.Label);
s.getComponent(cc.Label).fontSize = 30;
s.getComponent(cc.Label).string = "播放成功";
s.x = -100;
s.y = -100;
t.addChild(s);
s.on(cc.Node.EventType.TOUCH_START, function(o) {
i.removeChild(t);
e(!0);
});
var a = new cc.Node("buttonFailed");
a.addComponent(cc.Label);
a.getComponent(cc.Label).fontSize = 30;
a.getComponent(cc.Label).string = "播放失败";
a.x = 100;
a.y = -100;
t.addChild(a);
a.on(cc.Node.EventType.TOUCH_START, function(o) {
i.removeChild(t);
e(!1);
});
};
return e;
}();
i.default = n;
cc._RF.pop();
}, {
"../../ui/CocosUI": "CocosUI"
} ],
VideoTiktok: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "76679nuxJhHX55EgfoUIthH", "VideoTiktok");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function e() {
this.isLoadVideo = !1;
this.videoAd = null;
this.videoCallBack = null;
this.videoOnShow = !1;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.getVideoFlag = function() {
return this.isLoadVideo;
};
e.prototype.createVideoAd = function(e) {
var t = this;
console.log("ASCSDK", "Tiktok 视频广告初始化", e);
this.videoAd = tt.createRewardedVideoAd({
adUnitId: e
});
this.videoAd.onLoad(function() {
console.log("ASCSDK", "Tiktok 视频广告加载完成");
t.isLoadVideo = !0;
});
this.videoAd.onError(function(e) {
console.log("ASCSDK", "Tiktok 视频广告加载失败 ：" + JSON.stringify(e));
t.isLoadVideo = !1;
t.videoAd && setTimeout(function() {
t.videoAd && t.videoAd.load();
}, 3e4);
});
this.videoAd.onClose(function(e) {
setTimeout(function() {
if (e.isEnded) {
console.log("ASCSDK", "Tiktok 激励视频广告完成，发放奖励");
if (t.videoCallBack) {
t.videoCallBack(!0);
t.isLoadVideo = !1;
t.videoAd.load();
}
} else {
console.log("ASCSDK", "Tiktok 激励视频广告取消关闭，不发放奖励");
if (t.videoCallBack) {
t.videoCallBack(!1);
t.isLoadVideo = !1;
t.videoAd.load();
}
}
t.videoOnShow = !1;
}, 500);
});
};
e.prototype.showVideo = function(e) {
var t = this;
if (this.videoOnShow) console.log("ASCSDK", "视频正在播放中,请勿多次点击！"); else {
this.videoOnShow = !0;
this.videoCallBack = e;
if (this.videoAd) t.videoAd.show().then(function() {
console.log("ASCSDK", "Tiktok 激励视频广告显示成功");
}).catch(function(i) {
console.log("ASCSDK", "Tiktok 激励视频广告组件出现问题", JSON.stringify(i));
t.videoAd.load().then(function() {
console.log("ASCSDK", "Tiktok 激励视频广告手动加载成功");
t.videoAd.show().catch(function(i) {
console.log("ASCSDK", "Tiktok 激励视频广告播放失败", JSON.stringify(i));
t.videoOnShow = !1;
e(!1);
});
});
}); else {
t.videoOnShow = !1;
e(!1);
}
}
};
return e;
}();
i.default = o;
cc._RF.pop();
}, {} ],
VideoVivo: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f61ceFZH8xM6Z5pUnElW7sn", "VideoVivo");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function e() {
this.isLoadVideo = !1;
this.videoAd = null;
this.videoCallBack = null;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.createVideoAd = function(e) {
var t = this;
console.log("ASCSDK", "VIVO 视频广告初始化", e);
this.videoAd = qg.createRewardedVideoAd({
posId: e
});
this.videoAd.onLoad(function() {
console.log("ASCSDK", "VIVO 视频广告加载完成");
t.isLoadVideo = !0;
});
this.videoAd.onError(function(e) {
console.log("ASCSDK", "VIVO 视频加载失败 ：" + JSON.stringify(e));
t.isLoadVideo = !1;
t.videoAd && setTimeout(function() {
t.videoAd.load();
}, 1e4);
});
this.videoAd.onClose(function(e) {
if (e.isEnded) {
console.log("ASCSDK", "VIVO 激励视频广告完成，发放奖励");
if (t.videoCallBack) {
t.videoCallBack(!0);
t.videoCallBack = null;
}
} else {
console.log("ASCSDK", "VIVO 激励视频广告取消关闭，不发放奖励");
if (t.videoCallBack) {
t.videoCallBack(!1);
t.videoCallBack = null;
}
}
t.isLoadVideo = !1;
setTimeout(function() {
t.videoAd.load();
}, 1e4);
});
};
e.prototype.getVideoFlag = function() {
return this.isLoadVideo;
};
e.prototype.showVideo = function(e) {
this.videoCallBack = e;
if (this.videoAd) {
console.log("ASCSDK", "VIVO showVideo ===========================");
this.videoAd.show();
this.isLoadVideo = !1;
} else console.log("ASCSDK", "VIVO 不存在视频广告对象");
};
return e;
}();
i.default = o;
cc._RF.pop();
}, {} ],
VideoWX: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "600adnAdqRDtL+ubjqpDDmE", "VideoWX");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function e() {
this.isLoadVideo = !1;
this.videoAd = null;
this.videoCallBack = null;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.getVideoFlag = function() {
!this.isLoadVideo && this.videoAd && this.videoAd.load();
return this.isLoadVideo;
};
e.prototype.createVideoAd = function(e) {
var t = this;
console.log("ASCSDK", "WX 视频广告初始化", e);
var i = this;
this.videoAd = wx.createRewardedVideoAd({
adUnitId: e
});
this.videoAd.onLoad(function() {
console.log("ASCSDK", "WX 视频广告加载完成");
i.isLoadVideo = !0;
});
this.videoAd.onError(function(e) {
console.log("ASCSDK", "WX 视频广告加载失败：" + JSON.stringify(e));
i.isLoadVideo = !1;
t.videoAd && setTimeout(function() {
i.videoAd && i.videoAd.load();
}, 3e4);
});
this.videoAd.onClose(function(e) {
setTimeout(function() {
if (e.isEnded) {
console.log("ASCSDK", "WX 激励视频广告完成,发放奖励");
if (t.videoCallBack) {
t.videoCallBack(!0);
t.videoAd.load();
}
} else {
console.log("ASCSDK", "WX 激励视频广告取消关闭,不发放奖励");
if (t.videoCallBack) {
t.videoCallBack(!1);
t.videoAd.load();
}
}
}, 500);
});
this.videoAd.load();
};
e.prototype.showVideo = function(e) {
var t = this;
if (this.videoAd) {
this.videoCallBack = e;
console.log("ASCSDK", "WX showVideo========================");
this.videoAd.show().then(function() {
console.log("ASCSDK", "WX 激励视频广告显示成功");
}).catch(function(i) {
console.log("ASCSDK", "WX 激励视频广告播放出错", JSON.stringify(i));
t.videoAd.load().then(function() {
console.log("ASCSDK", "WX 激励视频广告手动加载成功");
t.videoAd.show().catch(function(i) {
console.log("ASCSDK", "WX 激励视频广告播放失败", JSON.stringify(i));
t.isLoadVideo = !1;
e(!1);
});
});
});
} else console.log("ASCSDK", "WX 不存在视频广告实例===============");
};
return e;
}();
i.default = o;
cc._RF.pop();
}, {} ],
VideoXM: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5c9e2Jy2V1PypP6soOE8DIy", "VideoXM");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function e() {
this.isLoadVideo = !1;
this.videoAd = null;
this.videoCallBack = null;
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.getVideoFlag = function() {
!this.isLoadVideo && this.videoAd && this.videoAd.load();
return this.isLoadVideo;
};
e.prototype.createVideoAd = function(e) {
var t = this;
console.log("ASCSDK XM 视频广告初始化 " + e);
var i = this;
this.videoAd = qg.createRewardedVideoAd({
adUnitId: e
});
this.videoAd.onLoad(function() {
console.log("ASCSDK XM 视频广告加载完成");
i.isLoadVideo = !0;
});
this.videoAd.onError(function(e) {
console.log("ASCSDK XM 视频广告加载失败：" + JSON.stringify(e));
i.isLoadVideo = !1;
t.videoAd && setTimeout(function() {
i.videoAd && i.videoAd.load();
}, 3e4);
});
this.videoAd.onClose(function(e) {
setTimeout(function() {
if (e.isEnded) {
console.log("ASCSDK XM 激励视频广告完成,发放奖励");
if (t.videoCallBack) {
t.videoCallBack(!0);
t.videoAd.load();
}
} else {
console.log("ASCSDK XM 激励视频广告取消关闭,不发放奖励");
if (t.videoCallBack) {
t.videoCallBack(!1);
t.videoAd.load();
}
}
}, 500);
});
this.videoAd.load();
};
e.prototype.showVideo = function(e) {
if (this.videoAd) {
this.videoCallBack = e;
console.log("ASCSDK", "XM showVideo========================");
this.videoAd.show();
} else console.log("ASCSDK", "XM 不存在视频广告实例===============");
};
return e;
}();
i.default = o;
cc._RF.pop();
}, {} ],
"WinNodeJS ": [ function(e, t, i) {
"use strict";
cc._RF.push(t, "5639dsE2SdOabfLZA4cppQl", "WinNodeJS ");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
DimondNum: cc.Label,
tips: cc.Node,
Star: [ cc.Node ],
endType: 0,
PushList: cc.Node,
IconSPList: [ cc.SpriteFrame ]
},
onLoad: function() {
window.Win = this;
window.WinNode = this.node;
this.node.setContentSize(window.screenWidth, window.screenHight);
this.WinNode = this.node.getChildByName("Win");
this.morgamePosition = this.WinNode.getChildByName("morgamePosition");
this.morgamePosition2 = this.WinNode.getChildByName("morgamePosition2");
this.recordPositon = this.WinNode.getChildByName("recordPositon");
this.goonButton = this.WinNode.getChildByName("goonButton");
this.returnButton = this.WinNode.getChildByName("returnButton");
this.challengeButton = this.WinNode.getChildByName("challengeButton");
this.videoStartButton = this.WinNode.getChildByName("videoStartButton");
this.startButton = this.WinNode.getChildByName("startButton");
this.videoRankButton = this.WinNode.getChildByName("videoRankButton");
this.videoButton = this.WinNode.getChildByName("double");
this.shareButton = this.WinNode.getChildByName("shareButton");
this.hasgetButton = this.WinNode.getChildByName("hasget");
this.Particle = this.node.getChildByName("Particle");
this.musicSelect0 = this.WinNode.getChildByName("musicSelect0");
this.Starbg = this.WinNode.getChildByName("Starbg");
this.Coinbg = this.WinNode.getChildByName("Coinbg");
this.Scorebg = this.WinNode.getChildByName("Scorebg");
this.qq_box = this.WinNode.getChildByName("qq_box");
this.blockAdPositon = this.WinNode.getChildByName("blockAdPositon");
this.score_Lable = this.Scorebg.getChildByName("score");
this.Coinnum = this.Coinbg.getChildByName("Coinnum");
this.WinNodeY = this.WinNode.y;
if (4 === window.platform) {
this.schedule(function() {
this.checkQQBox();
}, 5);
this.schedule(function() {
if (4 === window.platform && !this.isshowBlockAd && window.Parent.getBlockAdFlag()) {
var e = window.Tools.getWorldPosition(this.blockAdPositon);
window.Parent.showBlockAd("landscape", e.x, e.y, 5);
this.isshowBlockAd = !0;
}
}, 1, 99999, .1);
}
window.Parent.showReviewAlert();
},
onEnable: function() {
window.Parent.hidePushicon();
window.Parent.showBanner();
this.musicNumber = window.playNum;
window.GameStart = !1;
window.DiamondNode.active = !0;
window.CrownNode.active = !0;
switch (window.platform) {
case 0:
case 1:
case 2:
case 5:
if (window.Parent.hasvideoinsert()) {
window.Parent.audioEngine.setVolume(0);
window.isShowingVideoInsert = !0;
window.videoInsertCallBack = function() {
window.Parent.audioEngine.setVolume(1);
window.isShowingVideoInsert = !1;
};
}
window.Parent.showInsertAD("Win_ADClick");
break;

case 3:
window.Parent.showInsertAD();
window.PowerNode.active = !0;
this.scheduleOnce(function() {
window.Record.matchWinNode();
}, .01);
this.scheduleOnce(function() {}, 1);
if (window.isCustomRecord) this.shareButton.active = !1; else {
this.shareButton.stopAllActions();
this.shareButton.runAction(cc.repeatForever(cc.sequence(cc.scaleTo(.2, 1.2), cc.rotateTo(.1, 30), cc.rotateTo(.1, -25), cc.rotateTo(.1, 20), cc.rotateTo(.1, 0), cc.scaleTo(.2, 1), cc.delayTime(1))));
}
break;

case 4:
this.checkQQBox();
}
this.videoButton.active = !1;
this.hasgetButton.active = !1;
this.Particle.getComponent(cc.ParticleSystem).resetSystem();
this.showStar();
this.cuntDomond();
window.isGaming = !1;
window.musicisplaying = !1;
this.musicSelect0.x = -990;
this.newFindNextMusic();
if (1 == window.platform) if (window.Parent.hasNavigateSettle()) {
this.WinNode.y = this.WinNodeY + 100;
window.Parent.showNavigateSettle(4, 0);
} else this.WinNode.y = this.WinNodeY;
this.tips.active = !1;
this.tips.opacity = 0;
this.tips.stopAllActions();
this.tips.runAction(cc.repeatForever(cc.sequence(cc.moveTo(.5, this.tips.x, 220), cc.moveTo(.5, this.tips.x, 170))));
window.AchieveNumber[4] += Math.floor(window.Game.gameTime / 6e4);
window.Parent.setlocalStorage("AchieveNumber4", window.AchieveNumber[4]);
window.MissionNumber[0]++;
window.Parent.setlocalStorage("MissionNumber0", window.MissionNumber[0]);
window.MissionNumber[2] += Math.floor(window.Game.gameTime / 6e4);
window.Parent.setlocalStorage("MissionNumber2", window.MissionNumber[2]);
this.SetCrownAnim();
3 == window.platform && "ios" != window.PhoneType ? this.ShowPushList() : this.PushList && (this.PushList.active = !1);
1 == window.platform && window.Parent.showPushicon(256, 256, 200, 1500);
this.isWatchVideo = !1;
console.log("window.playName : ", window.playName);
o.default.getInstance().reportAnalytics("Song_Message", "WinUI_Show", window.playName);
this.isShowVideo = !1;
this.savePlayNum = window.playNum;
this.savePlayName = window.playName;
this.savePlayURL = window.playURL;
this.savePlayID = window.playID;
this.savePlayPoint = window.playPoint;
o.default.getInstance().reportAnalytics("View_Show_V2", "WinUI_Show", 1);
5 == window.platform && jsb.reflection.callStaticMethod("DJADManagerVC", "videoUIShow:", "Win_ADClick");
this.shareButton.active = !1;
},
onDisable: function() {
window.musicisplaying = !1;
window.Parent.audioEngine.stopAll();
window.Parent.hideNavigateSettle();
window.Parent.hideNavigateBoxBanner();
window.Parent.showBanner();
if (window.btn) {
window.btn.destroy();
window.btn = void 0;
}
if (window.btn2) {
window.btn2.destroy();
window.btn2 = void 0;
}
if (4 === window.platform && this.isshowBlockAd) {
window.Parent.hideBlockAd();
this.isshowBlockAd = !1;
}
0 == this.isShowVideo && window.Home.musicTable[this.nextMusicNum] && window.Home.RemoveSongTabel(window.Home.musicTable[this.nextMusicNum].musicId);
},
start: function() {},
newFindNextMusic: function() {
this.musicSelect0.active = !0;
this.goonButton.active = !0;
this.nextMusicNum = 0;
for (var e = window.Home.needPlayTable, t = window.Home.newSongTable, i = window.Home.unlockTable, o = [], n = 0; n < window.Home.curSelectTable.length; n++) o.push(window.Home.curSelectTable[n]);
o = window.Tools.disruptionArr(o);
this.startButton.active = !1;
if (e.length > 0) {
this.startButton.active = !0;
this.nextMusicId = e[0].musicId;
} else t.length > 0 ? this.nextMusicId = t[0].musicId : i.length > 0 ? this.nextMusicId = i[0].musicId : o.length > 0 && (this.nextMusicId = o[0].musicId);
console.log("下一首编号ID: ", this.nextMusicId);
var s = window.Parent.getlocalStorage("isUnlock" + this.nextMusicId);
console.log("isUnlock : ", s);
if (s) {
this.startButton.active = !0;
this.videoStartButton.active = !1;
} else {
this.startButton.active = !1;
this.videoStartButton.active = !0;
}
for (var a = 0; a < window.Home.musicTable.length; a++) {
if (window.Home.musicTable[a].musicId == this.nextMusicId) {
this.nextMusicNum = a;
break;
}
}
console.log("下一首编号: ", this.nextMusicNum);
window.Home.perviewmusicNum = this.nextMusicNum;
window.Parent.setlocalStorage("perviewmusicNum", window.Home.perviewmusicNum);
if (void 0 != this.nextMusicNum) {
this.musicSelect0.getChildByName("Mask").getChildByName("CD").getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[this.nextMusicNum % 20];
this.musicSelect0.getChildByName("SongName").getComponent(cc.Label).string = window.Home.musicTable[this.nextMusicNum].musicName;
1 == this.videoStartButton.active ? this.musicSelect0.getChildByName("Title").active = !0 : this.musicSelect0.getChildByName("Title").active = !1;
this.musicSelect0.runAction(cc.sequence(cc.moveTo(.2, 100, this.musicSelect0.y), cc.moveTo(.1, 0, this.musicSelect0.y)));
cc.tween(this.musicSelect0.getChildByName("Mask").getChildByName("CD")).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
var c = this;
window.Parent.LoadMusic(window.Home.musicTable[this.nextMusicNum].musicFile, window.Home.musicTable[this.nextMusicNum].musicId, function(e) {
if (!window.isGaming && !window.musicisplaying && !window.videoIsPlay) {
window.Parent.audioEngine.playMusic(e, !0);
window.Parent.audioEngine.setMusicTime(Number(window.Home.musicTable[c.nextMusicNum].ex_listen));
window.isShowingVideoInsert && window.Parent.audioEngine.setVolume(0);
}
});
}
this.scheduleOnce(function() {
this.videoStartButton.getComponent(cc.Animation).play();
}, .2);
},
replay: function() {
window.Parent.ButtonSounds();
window.MusicLoadingNode.active = !0;
window.GameNode.active = !1;
this.node.active = !1;
},
showHome: function() {
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "WinUI_Return_NoADClick", 1);
window.Parent.ButtonSounds();
window.musicisplaying = !1;
window.GameNode.active = !1;
window.HomeNode.active = !0;
this.node.active = !1;
},
startNextSong: function() {
window.highModelList = [];
var e = this;
window.playNum = e.nextMusicNum;
window.playName = window.Home.musicTable[e.nextMusicNum].musicName;
window.playURL = window.Home.musicTable[e.nextMusicNum].musicFile;
window.playID = window.Home.musicTable[e.nextMusicNum].musicId;
window.playPoint = window.Home.musicTable[e.nextMusicNum].json_normal;
var t = function() {
window.MusicLoadingNode.active = !0;
window.Game.ClearAll();
window.GameNode.active = !1;
e.node.active = !1;
};
this.endType = 1;
1 == this.videoStartButton.active ? window.Home.showModleSelect(t, this.videoStartButton) : window.Home.showModleSelect(t, this.startButton);
},
GoonChanlenge: function() {
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "WinUI_Continue_NoADClick", 1);
var e = this;
window.playNum = this.savePlayNum;
window.playName = this.savePlayName;
window.playURL = this.savePlayURL;
window.playID = this.savePlayID;
window.playPoint = this.savePlayPoint;
this.tips.active = !1;
this.endType = 2;
window.Home.showModleSelect(function() {
window.MusicLoadingNode.active = !0;
window.Game.ClearAll();
window.GameNode.active = !1;
e.node.active = !1;
window.Home.DealMusicScore(window.playID, !1, 5);
}, this.goonButton);
},
showStar: function() {
this.Star[0].active = !1;
this.Star[1].active = !1;
this.Star[2].active = !1;
if (1 == window.Game.StarNum) {
this.Star[0].setScale(0);
this.Star[0].active = !0;
window.Parent.StarSounds();
this.Star[0].runAction(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)));
}
if (2 == window.Game.StarNum) {
this.Star[0].setScale(0);
this.Star[0].active = !0;
window.Parent.StarSounds();
this.Star[0].runAction(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)));
this.scheduleOnce(function() {
this.Star[1].setScale(0);
this.Star[1].active = !0;
window.Parent.StarSounds();
this.Star[1].runAction(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)));
}, .4);
}
if (3 == window.Game.StarNum) {
this.Star[0].setScale(0);
this.Star[0].active = !0;
window.Parent.StarSounds();
this.Star[0].runAction(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)));
this.scheduleOnce(function() {
this.Star[1].setScale(0);
this.Star[1].active = !0;
window.Parent.StarSounds();
this.Star[1].runAction(cc.sequence(cc.scaleTo(.2, 1.2), cc.scaleTo(.2, 1)));
}, .4);
this.scheduleOnce(function() {
this.Star[2].setScale(0);
this.Star[2].active = !0;
window.Parent.StarSounds();
this.Star[2].runAction(cc.sequence(cc.scaleTo(.2, 1.2, 1.2), cc.scaleTo(.2, 1, 1)));
}, .8);
window.AchieveNumber[0]++;
window.Parent.setlocalStorage("AchieveNumber0", window.AchieveNumber[0]);
window.MissionNumber[1]++;
window.Parent.setlocalStorage("MissionNumber1", window.MissionNumber[1]);
}
var e = window.playID, t = Number(window.Parent.getlocalStorage("StarNum" + e));
window.Game.StarNum > t && window.Parent.setlocalStorage("StarNum" + e, window.Game.StarNum);
},
cuntDomond: function() {
this.diamondNum = Math.floor(100 * window.Game.progress * .5);
this.DimondNum.string = "+" + this.diamondNum;
window.Diamon.addDiamond(Math.floor(this.diamondNum / 5), this.diamondNum);
this.score_Lable.getComponent(cc.Label).string = window.Game.score * window.Home.beishu;
var e = Number(window.Parent.getlocalStorage("BestScore" + window.playID));
if (isNaN(e)) {
e = 0;
window.Parent.setlocalStorage("BestScore" + window.playID, 0);
}
window.Game.score * Math.pow(2, window.highModelList.length) > e && window.Parent.setlocalStorage("BestScore" + window.playID, window.Game.score * window.Home.beishu * Math.pow(2, window.highModelList.length));
},
videoButtonClick: function() {
window.Parent.ButtonSounds();
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
e.videoButton.active = !1;
e.hasgetButton.active = !0;
window.Diamon.addDiamond(Math.floor(3 * e.diamondNum / 5), 3 * e.diamondNum);
}
});
},
shareVideo: function() {
window.Parent.shareRecord(null, 0, window.MusicName);
},
qqshowmorGame: function() {
window.Parent.showQQAppBox();
},
checkQQBox: function() {
4 == window.platform && (window.Parent.getQQBoxFlag() ? this.qq_box.active = !0 : this.qq_box.active = !1);
},
videoStartButtonClick: function() {
o.default.getInstance().reportAnalytics("Ad_Click_V2", "WinUI_NewMusic_ADClick", 1);
window.Parent.ButtonSounds();
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
5 == window.platform && jsb.reflection.callStaticMethod("DJADManagerVC", "showiOSADWithType:Platform:", "Win_ADClick", "1");
e.isWatchVideo = !0;
var i = window.Home.musicTable[e.nextMusicNum].musicId;
window.Parent.setlocalStorage("isUnlock" + i, !0);
window.AchieveNumber[1]++;
window.Parent.setlocalStorage("AchieveNumber1", window.AchieveNumber[1]);
window.Home.DealUnlockMusic(i);
window.Home.RemoveSongTabel(i);
window.Home.perviewmusicName = window.Home.curmusicName;
window.Home.curmusicName = window.Home.musicTable[e.nextMusicNum].musicName;
window.Home.UpdateMusicPlay();
e.isShowVideo = !0;
e.startButton.active = !0;
e.videoStartButton.active = !1;
e.startNextSong();
window.Home.DealMusicScore(i, !1, 3);
window.watchVideoTimes++;
}
});
},
challengeStart: function() {
window.Parent.ButtonSounds();
this.startNextSong();
},
showVideoRank: function() {
window.Parent.ButtonSounds();
window.Home.showVideoRank();
},
SetCrownAnim: function() {
var e = window.highModelList.length;
console.log("游戏胜利,根据模式勾选,将获得 " + window.highModelList.length + " 个皇冠");
if (0 != e) for (var t = 0; t < e; t++) {
var i = .1 + .2 * t;
this.scheduleOnce(function() {
window.Crown.addCrown();
}, i);
}
},
ShowPushList: function() {
this.PushList.active = !0;
for (var e = this.PushList.getChildByName("AppList"), t = 0; t < e.childrenCount; t++) {
var i = e.children[t];
i.stopAllActions();
i.setPosition(cc.v2(180 * t - 265, 0));
var o = i.getComponent("AppNodeJS"), n = 0;
n = this.IconSPList.length > t ? t : t - this.IconSPList.length;
o.isWin = !0;
o.curAppSp = this.IconSPList[n];
o.UpdateSP();
}
this.LastSpNum = 1;
this.schedule(this.SetPushListAnim, 5);
},
SetPushListAnim: function() {
for (var e = this, t = this.PushList.getChildByName("AppList"), i = Math.floor(Math.random() * (t.childrenCount - 1)) + 1, o = function(o) {
var n = t.children[o], s = cc.moveBy(1, cc.v2(-180, 0));
if (0 != o && o != i) n.runAction(s); else if (0 != o && o == i) {
var a = cc.scaleTo(.3, .8), c = cc.scaleTo(.3, 1);
n.runAction(cc.sequence(s, a, c));
} else 0 == o && n.runAction(cc.sequence(s, cc.callFunc(function() {
n.setPosition(cc.v2(n.position.x + 900, n.position.y));
n.setSiblingIndex(t.childrenCount - 1);
var i = n.getComponent("AppNodeJS");
i.curAppSp = e.IconSPList[e.LastSpNum];
i.UpdateSP();
e.LastSpNum++;
e.LastSpNum >= 4 && (e.LastSpNum = 0);
})));
}, n = 0; n < t.childrenCount; n++) o(n);
},
OnClickStart: function() {
o.default.getInstance().reportAnalytics("NoAd_Click_V2", "WinUI_PlayNew_NoADClick", 1);
window.Parent.ButtonSounds();
this.startNextSong();
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
XingZuoTipsJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "cdbbdACtudOXbMlIzJeg8Sa", "XingZuoTipsJS");
cc.Class({
extends: cc.Component,
properties: {},
onLoad: function() {},
start: function() {},
showXingzuoNode: function() {
window.Parent.ButtonSounds();
window.Home.showXingzuoNode();
window.Home.XingzuoTips = void 0;
this.node.destroy();
},
close: function() {
window.Parent.ButtonSounds();
window.Home.XingzuoTips = void 0;
window.Home.newSongTable.length > 0 && window.Home.showNewSong();
this.scheduleOnce(function() {
this.node.destroy();
cc.loader.releaseRes("PreFab/XingZuoTipsNode", cc.Prefab);
}, 2);
}
});
cc._RF.pop();
}, {} ],
XuanChuanNodeJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "57683GIxgdOvKZBhO20Zxxc", "XuanChuanNodeJS");
cc.Class({
extends: cc.Component,
properties: {},
start: function() {
window.Home.closemoreGame();
},
close: function() {
window.Parent.ButtonSounds();
window.Home.showTipsAction();
this.node.destroy();
}
});
cc._RF.pop();
}, {} ],
achievebgJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f69ed2GU5VPM5ikfO3lOYES", "achievebgJS");
(function(e) {
e && e.__esModule;
})(e("./Help/reportAnalytics"));
cc.Class({
extends: cc.Component,
properties: {
Number: 0,
GreadNum: cc.Node,
DiamonNum: cc.Node,
progressBar: cc.Node,
progressNum: cc.Node
},
onLoad: function() {
this.AchieveName = this.node.getChildByName("achieveName");
this.getButton = this.node.getChildByName("getButton");
this.videoButton = this.node.getChildByName("videoButton");
this.finishiButton = this.node.getChildByName("finishiButton");
this.progress = this.node.getChildByName("progress");
this.diamondNum = Number(window.AchieveTable[this.Number].coinnum);
this.levelnum = [];
this.title = [];
this.levelnum[0] = Number(window.AchieveTable[this.Number].Number0);
this.levelnum[1] = Number(window.AchieveTable[this.Number].Number1);
this.levelnum[2] = Number(window.AchieveTable[this.Number].Number2);
this.levelnum[3] = Number(window.AchieveTable[this.Number].Number3);
this.levelnum[4] = Number(window.AchieveTable[this.Number].Number4);
this.levelnum[5] = Number(window.AchieveTable[this.Number].Number5);
this.title[0] = window.AchieveTable[this.Number].AchieveName0;
this.title[1] = window.AchieveTable[this.Number].AchieveName1;
this.title[2] = window.AchieveTable[this.Number].AchieveName2;
this.title[3] = window.AchieveTable[this.Number].AchieveName3;
this.title[4] = window.AchieveTable[this.Number].AchieveName4;
this.title[5] = window.AchieveTable[this.Number].AchieveName5;
},
onEnable: function() {
if (window.AchieveLevel[this.Number] < 6) {
this.GreadNum.getComponent(cc.Label).string = window.AchieveLevel[this.Number] + 1;
this.DiamonNum.getComponent(cc.Label).string = this.diamondNum * (window.AchieveLevel[this.Number] + 1);
this.AchieveName.getComponent(cc.Label).string = this.title[window.AchieveLevel[this.Number]];
var e = window.AchieveNumber[this.Number] / this.levelnum[window.AchieveLevel[this.Number]];
this.progressBar.x = 614 * e - 614;
this.progressNum.getComponent(cc.Label).string = Math.floor(window.AchieveNumber[this.Number]) + "/" + Math.floor(this.levelnum[window.AchieveLevel[this.Number]]);
if (this.progressBar.x >= 0) {
this.progressBar.x = 0;
this.progress.active = !1;
this.progressNum.active = !1;
this.getButton.active = !0;
this.videoButton.active = !0;
} else {
this.progress.active = !0;
this.progressNum.active = !0;
this.getButton.active = !1;
this.videoButton.active = !1;
}
} else {
this.GreadNum.getComponent(cc.Label).string = window.AchieveLevel[this.Number];
this.DiamonNum.getComponent(cc.Label).string = this.diamondNum * window.AchieveLevel[this.Number];
this.AchieveName.getComponent(cc.Label).string = this.title[window.AchieveLevel[this.Number] - 1];
this.progress.active = !1;
this.progressNum.active = !1;
this.getButton.active = !1;
this.videoButton.active = !1;
this.finishiButton.active = !0;
}
},
start: function() {},
getDiamond: function() {
window.Parent.ButtonSounds();
var e = this.diamondNum * (window.AchieveLevel[this.Number] + 1);
window.Diamon.addDiamond(Math.floor(e), e);
window.AchieveLevel[this.Number]++;
window.Parent.setlocalStorage("AchieveLevel" + this.Number, window.AchieveLevel[this.Number]);
this.Achieve.reFlash();
},
videoButtonClick: function() {
window.Parent.ButtonSounds();
var e = this;
window.Parent.showVideo(function(t) {
if (t) {
var i = e.diamondNum * (window.AchieveLevel[e.Number] + 1);
window.Diamon.addDiamond(Math.floor(i / 5 * 3), 3 * i);
window.AchieveLevel[e.Number]++;
window.Parent.setlocalStorage("AchieveLevel" + e.Number, window.AchieveLevel[e.Number]);
e.Achieve.reFlash();
}
});
}
});
cc._RF.pop();
}, {
"./Help/reportAnalytics": "reportAnalytics"
} ],
audioEngineMamager: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "306974RioFNzImB6yTf3Niu", "audioEngineMamager");
var o = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var c = e.length - 1; c >= 0; c--) (n = e[c]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, s = n.ccclass, a = (n.property, function() {
function e() {
this.MusicAudioManager = null;
this.EffectAudioManager = [];
this.lastCallFunc = null;
}
t = e;
e.getInstance = function() {
t.instance || (t.instance = new t());
return t.instance;
};
e.prototype.initaudioEngine = function() {
if (cc.sys.platform === cc.sys.VIVO_GAME) {
console.log("VIVO音频接口初始化");
this.MusicAudioManager = qg.createInnerAudioContext();
} else if (cc.sys.platform === cc.sys.OPPO_GAME) {
console.log("OPPO音频接口初始化");
this.MusicAudioManager = qg.createInnerAudioContext();
} else if ("undefined" != typeof qq) {
console.log("QQ音频接口初始化");
this.MusicAudioManager = qq.createInnerAudioContext();
} else if ("undefined" != typeof tt) {
console.log("抖音音频接口初始化");
this.MusicAudioManager = tt.createInnerAudioContext();
} else console.log("音频接口初始化");
};
e.prototype.playMusic = function(e, t, i) {
if (cc.sys.platform === cc.sys.VIVO_GAME || cc.sys.platform === cc.sys.OPPO_GAME || "undefined" != typeof qq || "undefined" != typeof tt) {
if (this.lastCallFunc) {
console.log("取消音乐播放回调");
this.MusicAudioManager.offEnded(this.lastCallFunc);
this.lastCallFunc = null;
}
this.MusicAudioManager.src = e;
this.MusicAudioManager.loop = t;
this.MusicAudioManager.play();
if (i) {
console.log("使用音乐播放回调");
this.MusicAudioManager.onEnded(i);
this.lastCallFunc = i;
}
} else {
if (this.lastCallFunc) {
console.log("取消音乐播放回调");
this.MusicAudioManager.offEnded(this.lastCallFunc);
this.lastCallFunc = null;
}
this.MusicAudioManager = cc.audioEngine.playMusic(e, t);
if (i) {
console.log("使用音乐播放回调");
cc.audioEngine.setFinishCallback(this.MusicAudioManager, i);
}
}
};
e.prototype.pauseMusic = function() {
console.log("暂停音乐");
cc.sys.platform === cc.sys.VIVO_GAME || cc.sys.platform === cc.sys.OPPO_GAME || "undefined" != typeof qq || "undefined" != typeof tt ? this.MusicAudioManager.paused || this.MusicAudioManager.pause() : cc.audioEngine.pauseMusic();
};
e.prototype.resumeMusic = function() {
console.log("恢复音乐");
console.log("resumeMusic ++++++++++++++++++++++++ ");
if (cc.sys.platform === cc.sys.VIVO_GAME || cc.sys.platform === cc.sys.OPPO_GAME || "undefined" != typeof qq || "undefined" != typeof tt) this.MusicAudioManager.play(); else {
console.log("resumeMusic Down ++++++++++++++++++++++++ ");
cc.audioEngine.resumeMusic();
}
};
e.prototype.stopMusic = function() {
console.log("停止音乐");
cc.sys.platform === cc.sys.VIVO_GAME || cc.sys.platform === cc.sys.OPPO_GAME || "undefined" != typeof qq || "undefined" != typeof tt ? this.MusicAudioManager.stop() : cc.audioEngine.stopMusic();
};
e.prototype.getCurrentTime = function() {
if (cc.sys.platform === cc.sys.VIVO_GAME || cc.sys.platform === cc.sys.OPPO_GAME || "undefined" != typeof qq || "undefined" != typeof tt) {
return this.MusicAudioManager.currentTime;
}
return cc.audioEngine.getCurrentTime(this.MusicAudioManager);
};
e.prototype.getMusicDritionTime = function() {
if (cc.sys.platform === cc.sys.VIVO_GAME || cc.sys.platform === cc.sys.OPPO_GAME || "undefined" != typeof qq || "undefined" != typeof tt) {
return this.MusicAudioManager.duration;
}
return cc.audioEngine.getDuration(this.MusicAudioManager);
};
e.prototype.setMusicTime = function(e) {
var t = e / 1e3;
console.log("从指定位置播放 : ", t);
if (cc.sys.platform === cc.sys.VIVO_GAME || cc.sys.platform === cc.sys.OPPO_GAME || "undefined" != typeof qq || "undefined" != typeof tt) {
console.log("setMusicTime UP");
this.MusicAudioManager.seek(t);
} else {
console.log("setMusicTime Down");
cc.audioEngine.setCurrentTime(this.MusicAudioManager, t);
}
};
e.prototype.setMusicVolume = function(e) {
console.log("设置音乐音量", e);
cc.sys.platform === cc.sys.VIVO_GAME || cc.sys.platform === cc.sys.OPPO_GAME || "undefined" != typeof qq || "undefined" != typeof tt ? this.MusicAudioManager.volume = e : cc.audioEngine.setMusicVolume(e);
};
e.prototype.playEffect = function(e, t, i) {
var o = this, n = null;
if (this.EffectAudioManager.length > 0) for (var s = 0; s < this.EffectAudioManager.length; s++) {
if (null === this.EffectAudioManager[s]) {
n = s;
break;
}
s === this.EffectAudioManager.length - 1 && null === n && (n = s + 1);
} else n = 0;
cc.sys.platform === cc.sys.VIVO_GAME ? this.EffectAudioManager[n] = qg.createInnerAudioContext() : cc.sys.platform === cc.sys.OPPO_GAME ? this.EffectAudioManager[n] = qg.createInnerAudioContext() : "undefined" != typeof qq ? this.EffectAudioManager[n] = qq.createInnerAudioContext() : "undefined" != typeof tt && (this.EffectAudioManager[n] = tt.createInnerAudioContext());
if (cc.sys.platform === cc.sys.VIVO_GAME || cc.sys.platform === cc.sys.OPPO_GAME || "undefined" != typeof qq || "undefined" != typeof tt) {
this.EffectAudioManager[n].src = e;
this.EffectAudioManager[n].loop = i;
this.EffectAudioManager[n].volume = t;
this.EffectAudioManager[n].play();
this.EffectAudioManager[n].onEnded(function() {
console.log("音效播放完毕,销毁音频组件");
o.EffectAudioManager[n].destroy();
o.EffectAudioManager[n] = null;
});
} else n = cc.audioEngine.playEffect(e, i);
return n;
};
e.prototype.stopEffect = function(e) {
console.log(" stopEffect managerNum : ", e);
if (cc.sys.platform === cc.sys.VIVO_GAME || cc.sys.platform === cc.sys.OPPO_GAME || "undefined" != typeof qq || "undefined" != typeof tt) {
this.EffectAudioManager[e].stop();
this.EffectAudioManager[e].destroy();
this.EffectAudioManager[e] = null;
} else cc.audioEngine.stop(e);
};
e.prototype.stopAllEffect = function() {
if (cc.sys.platform === cc.sys.VIVO_GAME || cc.sys.platform === cc.sys.OPPO_GAME || "undefined" != typeof qq || "undefined" != typeof tt) {
for (var e = 0; e < this.EffectAudioManager.length; e++) if (null != this.EffectAudioManager[e]) {
this.EffectAudioManager[e].stop();
this.EffectAudioManager[e].destroy();
this.EffectAudioManager[e] = null;
}
} else cc.audioEngine.stopAllEffects();
};
var t;
return e = t = o([ s ], e);
}());
i.default = a;
cc._RF.pop();
}, {} ],
messgaeTS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "dd6c0Af9mtEQ7Tfw0yHW7rz", "messgaeTS");
var o = this && this.__extends || function() {
var e = function(t, i) {
return (e = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(e, t) {
e.__proto__ = t;
} || function(e, t) {
for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
})(t, i);
};
return function(t, i) {
e(t, i);
function o() {
this.constructor = t;
}
t.prototype = null === i ? Object.create(i) : (o.prototype = i.prototype, new o());
};
}(), n = this && this.__decorate || function(e, t, i, o) {
var n, s = arguments.length, a = s < 3 ? t : null === o ? o = Object.getOwnPropertyDescriptor(t, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, i, o); else for (var c = e.length - 1; c >= 0; c--) (n = e[c]) && (a = (s < 3 ? n(a) : s > 3 ? n(t, i, a) : n(t, i)) || a);
return s > 3 && a && Object.defineProperty(t, i, a), a;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var s = cc._decorator, a = s.ccclass, c = s.property, r = function(e) {
o(t, e);
function t() {
var t = null !== e && e.apply(this, arguments) || this;
t.TableURL = null;
t.InputNode = null;
t.BTNListNode = null;
t.InputText = null;
t.unlockBool = !1;
t.lockStr = "XCJZTEST";
return t;
}
t.prototype.onLoad = function() {
var e = this;
this.TableURL.getComponent(cc.Label).string = "歌单地址:" + window.TableURL;
cc.loader.load({
url: "https://tencentcnd.minigame.xplaymobile.com/Twogos/LOGO.png",
type: "png"
}, function(t, i) {
if (t) ; else {
var o = new cc.SpriteFrame(i);
e.node.getChildByName("GRP_BTN").getChildByName("LOGO").getComponent(cc.Sprite).spriteFrame = o;
}
});
this.unlockBool = window.Parent.getlocalStorage("unlockBool");
"true" != this.unlockBool ? this.unlockBool = !1 : this.unlockBool = !0;
this.InputNode.active = !this.unlockBool;
this.BTNListNode.active = this.unlockBool;
window.Home.password && (this.lockStr = window.Home.password);
};
t.prototype.start = function() {};
t.prototype.close = function() {
this.node.destroy();
};
t.prototype.addDimond = function() {
window.Diamon.addDiamond(20, 500);
};
t.prototype.addPower = function() {
window.Power.addTili(20);
};
t.prototype.addCrown = function() {
window.Crown.addCrown();
};
t.prototype.clearData = function() {
cc.sys.localStorage.clear();
console.log("清除数据");
};
t.prototype.CheckCode = function() {
if (this.InputText.getComponent(cc.EditBox).string.toUpperCase() == this.lockStr.toUpperCase()) {
window.Parent.showTips("测试功能开启成功");
this.unlockBool = !0;
this.InputNode.active = !this.unlockBool;
this.BTNListNode.active = this.unlockBool;
window.Parent.setlocalStorage("unlockBool", !0);
} else {
this.InputText.getComponent(cc.EditBox).string = "";
window.Parent.showTips("测试码有误");
}
};
t.prototype.CheckData = function() {
var e = this.BTNListNode.getChildByName("Time").getChildByName("GRP_Year").getChildByName("LB_Editor"), t = this.BTNListNode.getChildByName("Time").getChildByName("GRP_Month").getChildByName("LB_Editor"), i = this.BTNListNode.getChildByName("Time").getChildByName("GRP_Day").getChildByName("LB_Editor"), o = e.getComponent(cc.EditBox).string, n = t.getComponent(cc.EditBox).string, s = i.getComponent(cc.EditBox).string;
"" == o && (o = "2020");
"" == n && (n = "1");
"" == s && (s = "1");
var a = o + "-" + n + "-" + s;
console.log("dataStr : ", a);
window.curTime = a;
var c = "时间设置成功" + a;
window.Parent.showTips(c);
console.log("设置当前时间为 : ", window.curTime);
e.getComponent(cc.EditBox).string = "";
t.getComponent(cc.EditBox).string = "";
i.getComponent(cc.EditBox).string = "";
window.Home.SetRecommomdTime();
window.Home.SetRecommondMusic();
};
n([ c(cc.Label) ], t.prototype, "TableURL", void 0);
n([ c(cc.Node) ], t.prototype, "InputNode", void 0);
n([ c(cc.Node) ], t.prototype, "BTNListNode", void 0);
n([ c(cc.Node) ], t.prototype, "InputText", void 0);
return t = n([ a ], t);
}(cc.Component);
i.default = r;
cc._RF.pop();
}, {} ],
missionSelectJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "731a3NhLH1CqIlupxABf8q0", "missionSelectJS");
cc.Class({
extends: cc.Component,
properties: {
Title1: cc.Node,
Title2: cc.Node,
missionNumber: cc.Node,
yinfuNumber: cc.Node,
progressBg: cc.Node,
progressNum: cc.Node,
progress: cc.Node,
getButton: cc.Node,
goButton: cc.Node,
finishiButton: cc.Node,
selectBgSpr: [ cc.SpriteFrame ]
},
onLoad: function() {
this.Title1.getComponent(cc.Label).string = this.title1;
this.Title2.getComponent(cc.Label).string = this.title2;
this.missionNumber.getComponent(cc.Label).string = this.missionNum;
this.yinfuNumber.getComponent(cc.Label).string = this.yinfuNum;
},
onEnable: function() {
var e = window.MissionNumber[this.Number] / this.missionNum;
e >= 1 && (e = 1);
this.progress.width = 418 * e;
window.MissionNumber[this.Number] <= this.missionNum ? this.progressNum.getComponent(cc.Label).string = window.MissionNumber[this.Number] + "/" + this.missionNum : this.progressNum.getComponent(cc.Label).string = this.missionNum + "/" + this.missionNum;
if (window.MissionHasget[this.Number]) {
this.progressBg.active = !1;
this.Title1.y = 0;
this.yinfuNumber.parent.y = 0;
this.goButton.active = !1;
this.getButton.active = !1;
this.finishiButton.active = !0;
this.node.getChildByName("Light").active = !1;
} else {
this.node.getChildByName("Light").active = !0;
this.progressBg.active = !0;
this.Title1.y = 19;
this.finishiButton.active = !1;
if (e >= 1) {
this.node.getChildByName("Light").getComponent(cc.Sprite).spriteFrame = this.selectBgSpr[1];
this.goButton.active = !1;
this.getButton.active = !0;
} else {
this.node.getChildByName("Light").getComponent(cc.Sprite).spriteFrame = this.selectBgSpr[0];
this.goButton.active = !0;
this.getButton.active = !1;
}
}
},
start: function() {},
getButtonClick: function() {
window.Parent.ButtonSounds();
var e = this;
this.DayliNode.FlyYinfu(this.yinfuNumber.parent, function() {
window.yinfuNumber += e.yinfuNum;
window.Parent.setlocalStorage("yinfuNumber", window.yinfuNumber);
e.DayliNode.reflashProgressBar();
});
window.MissionHasget[this.Number] = !0;
window.Parent.setlocalStorage("MissionHasget" + this.Number, !0);
this.node.active = !1;
this.node.active = !0;
this.DayliNode.sortBygetButton();
this.DayliNode.sortByfinishButton();
},
goButtonClick: function() {
this.DayliNode.close();
}
});
cc._RF.pop();
}, {} ],
musicSelectJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "145fb4vjTtFkJc1KZLuXleR", "musicSelectJS");
var o = function(e) {
return e && e.__esModule ? e : {
default: e
};
}(e("../Help/reportAnalytics"));
var n = e("MusicJS");
cc.Class({
extends: n,
properties: {},
update: function(e) {
var t = this.node.y + this.node.parent.y;
if (t != this.LastPosition) {
this.LastPosition = t;
t > this.node.parent.parent.height / 2 + 100 || t < -this.node.parent.parent.height / 2 - 100 ? this.node.opacity = 0 : this.node.opacity = 255;
}
},
defination: function() {
this.animNode = this.node.getChildByName("AnimNode");
this.musicPlay = this.animNode.getChildByName("musicPlay");
this.listBg = this.animNode.getChildByName("listBg");
this.CD = this.listBg.getChildByName("Mask").getChildByName("CD");
this.playButton = this.listBg.getChildByName("playButton");
this.pauseButton = this.listBg.getChildByName("pauseButton");
this.loading = this.listBg.getChildByName("loading");
this.StartButton = this.listBg.getChildByName("StartButton");
this.videoUnlockButton = this.listBg.getChildByName("videoUnlockButton");
this.diamondUnlockButton = this.listBg.getChildByName("DemondUnlockButton");
this.diamondText = this.diamondUnlockButton.getChildByName("num");
this.star = [];
this.star[0] = this.listBg.getChildByName("Star").getChildByName("star0");
this.star[1] = this.listBg.getChildByName("Star").getChildByName("star1");
this.star[2] = this.listBg.getChildByName("Star").getChildByName("star2");
this.songNameMask = this.listBg.getChildByName("SongNameMask");
this.songNameNode = this.songNameMask.getChildByName("SongName");
this.bestScoreLB = this.listBg.getChildByName("ScoreBg").getChildByName("Score");
this.ColectionButton = this.listBg.getChildByName("ColectionButton");
this.like = this.ColectionButton.getChildByName("like");
},
TurnInAnim: function() {
var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
if (this.animNode) {
this.animNode.active = !0;
this.schedule(this.setCDPicture, .1);
this.animNode.stopAllActions();
1 == e ? this.animNode.setPosition(1080, 0) : this.animNode.setPosition(-1080, 0);
this.animNode.runAction(cc.moveTo(.3, cc.v2(0, 0)).easing(cc.easeCubicActionOut()));
}
},
TurnOutAnim: function() {
var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
if (this.animNode) {
this.animNode.stopAllActions();
1 == e ? this.animNode.runAction(cc.moveTo(.3, cc.v2(-1080, 0)).easing(cc.easeCubicActionOut())) : this.animNode.runAction(cc.moveTo(.3, cc.v2(1080, 0)).easing(cc.easeCubicActionOut()));
}
},
playMusic: function() {
"CrownMusic" == this.musicType && (window.PlayOtherMusic = !0);
o.default.getInstance().reportAnalytics("Song_Message", "Song_Listen", this.musicName);
n.prototype.playMusic.call(this);
},
startGame: function() {
"CrownMusic" == this.musicType ? o.default.getInstance().reportAnalytics("NoAd_Click_V2", "MusicBagUI_NoADPlay", 1) : "HomeMusic" == this.musicType && o.default.getInstance().reportAnalytics("NoAd_Click_V2", "MainUI_AllMusic_NoADClick", 1);
n.prototype.startGame.call(this);
},
OnClickVideo: function() {
"HomeMusic" == this.musicType ? o.default.getInstance().reportAnalytics("Ad_Click_V2", "MainUI_GamePlay_ADPlay", 1) : "MyMusic3" == this.musicType && o.default.getInstance().reportAnalytics("Ad_Click_V2", "CollectMusicUI_ADClick", 1);
window.Home.DealMusicScore(window.playID, !1, 2);
n.prototype.OnClickVideo.call(this);
},
OnClickDiamond: function() {
window.Home.DealMusicScore(window.playID, !1, 2);
n.prototype.OnClickDiamond.call(this);
},
OnClickPlay: function() {
"MyMusic2" == this.musicType ? o.default.getInstance().reportAnalytics("NoAd_Click_V2", "PassMusicUI_NoADClick", 1) : "MyMusic3" == this.musicType && o.default.getInstance().reportAnalytics("NoAd_Click_V2", "CollectMusicUI_NoADClick", 1);
n.prototype.OnClickPlay.call(this);
}
});
cc._RF.pop();
}, {
"../Help/reportAnalytics": "reportAnalytics",
MusicJS: "MusicJS"
} ],
perviewCDJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "05dd9uBNTpAs6hGtHbWhkuD", "perviewCDJS");
cc.Class({
extends: cc.Component,
properties: {
CD: cc.Node,
SongName: cc.Node,
playbutton: cc.Node,
LoadingCircle: cc.Node,
pauseButton: cc.Node
},
onLoad: function() {
this.Num = this.musicNumber % 20;
this.SentName = this.musicName;
this.SongName.getComponent(cc.Label).string = this.musicName;
this.CD.getComponent(cc.Sprite).spriteFrame = window.Home.CD_Sprit[this.Num];
},
start: function() {
if (this.SongName.width > this.SongName.parent.width) {
var e = (this.SongName.width - this.SongName.parent.width) / 2;
this.SongName.x = e;
} else this.SongName.x = 0;
},
playMusic: function() {
var e = this;
window.Home.stopMusicPlaying();
this.CrownStore.stopMusic();
window.Parent.ButtonSounds();
var t = this.musicID, i = this.MusicURL;
this.playbutton.active = !1;
this.LoadingCircle.active = !0;
this.LoadingCircle.stopAllActions();
cc.tween(this.LoadingCircle).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
window.Parent.LoadMusic(i, t, function(t) {
e.musicisplay = !0;
if (!window.isGaming && !window.videoIsPlay) {
e.pauseButton.active = !0;
e.LoadingCircle.active = !1;
e.CD.stopAllActions();
cc.tween(e.CD).repeatForever(cc.tween().by(5, {
angle: -360
})).start();
e.SomgNameMove();
window.musicisplaying = !0;
window.Parent.audioEngine.playMusic(t, !0);
window.isShowingVideoInsert && window.Parent.audioEngine.setVolume(0);
if (e.musicName != window.Home.curmusicName) {
window.Home.perviewmusicNum = e.musicNumber;
window.Home.perviewmusicName = window.Home.curmusicName;
window.Home.curmusicName = e.musicName;
}
window.Home.UpdateMusicPlay();
}
});
},
pauseMusic: function() {
window.musicisplaying = !1;
this.pauseButton.active = !1;
this.LoadingCircle.active = !1;
this.playbutton.active = !0;
this.CD.stopAllActions();
this.StopSomgNameMove();
window.Parent.audioEngine.stopAll();
},
SomgNameMove: function() {
var e = this;
this.SongName.width > this.SongName.parent.width && this.SongName.runAction(cc.repeatForever(cc.sequence(cc.moveTo(4, -this.SongName.width, 0), cc.callFunc(function() {
var t = (e.SongName.parent.width - e.SongName.width) / 2;
e.SongName.x = e.SongName.width + t;
}), cc.moveTo(4, 0, 0))));
},
StopSomgNameMove: function() {
this.SongName.stopAllActions();
if (this.SongName.width > this.SongName.parent.width) {
var e = (this.SongName.width - this.SongName.parent.width) / 2;
this.SongName.x = e;
} else this.SongName.x = 0;
}
});
cc._RF.pop();
}, {} ],
recordButtonJS: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "8751ewFnH5BfL056FyHIX8S", "recordButtonJS");
cc.Class({
extends: cc.Component,
properties: {
button_Spr: [ cc.SpriteFrame ]
},
onLoad: function() {
cc.log(111111);
this.node.setContentSize(window.screenWidth, window.screenHight);
this.RecordButton = this.node.getChildByName("RecordButton");
window.Record = this;
},
start: function() {},
matchHomeNode: function() {
cc.log(111111);
var e = window.Parent.getWorldPosition(window.Home.recordPositon), t = this.node.convertToNodeSpaceAR(e);
this.RecordButton.setPosition(t);
},
matchGameNode: function() {}
});
cc._RF.pop();
}, {} ],
reportAnalytics: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "a8e75/8cx1EU6pcHI3Ena1l", "reportAnalytics");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = cc._decorator, n = (o.ccclass, o.property, e("./../../SDK/ASCAd")), s = function() {
function e() {}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.prototype.reportAnalytics = function(e, t, i) {
var o = {};
switch (e) {
case "Song_Message":
o = {
Song_Click: "0",
Song_Listen: "0",
WinUI_Show: "0",
ReviveUI_Vclick: "0",
ReviveUI_CoinClick: "0",
GameOver_Show: "0",
ReviveUI_Show: "0"
};
break;

case "View_Show_V2":
o = {
MainUI_Show: "0",
AchievementUI_Show: "0",
ConversionUI_Show: "0",
MoreGamesUI_Show: "0",
AllMusicUI_Show: "0",
ConstellationUI_Show: "0",
MusicBagUI_Show: "0",
ShopUI_Show: "0",
ShopUI_Role__Show: "0",
ShopUI_MusicBag__Show: "0",
ShopUI_Scene__Show: "0",
ColorEggsUI_Show: "0",
DifficultyUI_Show: "0",
GamesPageUI_Show: "0",
GamesPageUI_Normal_Show: "0",
GamesPageUI_Extremity_Show: "0",
GamesPageUI_Constellation_Show: "0",
ReviveUI_Show: "0",
TwoReviveUI_DailyReward_Show: "0",
TwoReviveUI_Life_Show: "0",
ShareUI_Show: "0",
LoseUI_Show: "0",
BeforWinUI_Difficulty_Show: "0",
WinUI_Show: "0",
YoursRecommendUI_Show: "0",
CoinUI_Show: "0",
LifeUI_Show: "0",
DiademaUI_Show: "0",
SignUI_Show: "0",
MyMusicUI_Show: "0",
DailyMusicUI_Show: "0",
Card1UI_Show: "0",
Card2UI_Show: "0",
Card3UI_Show: "0",
Card4UI_Show: "0",
HotMusicUI_Show: "0",
NewMusicUI_Show: "0",
TodayGiftUI_Show: "0",
GameUI_Role_Show: "0",
HomeLoding_First_Show: "0",
GameLoding_First_Show: "0"
};
break;

case "NoAd_Click_V2":
o = {
MainUI_Share_NoADClick: "0",
MainUI_Role_NoADClick: "0",
MainUI_FastPlay_NoADClick: "0",
MainUI_MoreGames_NoADClick: "0",
MainUI_EveryDayMusic_NoADPlay: "0",
MainUI_EveryWeekMusic_NoADPlay: "0",
MainUI_TikTokMusic_NoADPlay: "0",
MainUI_GamePlay_NoADPlay: "0",
MainUI_AllMusic_NoADClick: "0",
LifeUI_Coin_NoADClick: "0",
ConstellationUI_NoADClick: "0",
MusicBagUI_Diadema_NoADClick: "0",
MusicBagUI_NoADPlay: "0",
MainUI_AllPlayMusic_NoADPlay: "0",
DifficultyUI_Play_NoADClick: "0",
DifficultyUI_Move_NoADClick: "0",
DifficultyUI_Hiding_NoADClick: "0",
DifficultyUI_Discolor_NoADClick: "0",
DifficultyUI_Rock_NoADClick: "0",
DifficultyUI_Face_NoADClick: "0",
ReviveUI_Coin_NoADClick: "0",
LoseUI_Again_NoADClick: "0",
LoseUI_Return_NoADClick: "0",
WinUI_Continue_NoADClick: "0",
WinUI_Return_NoADClick: "0",
WinUI_PlayNew_NoADClick: "0",
ColorEggsUI_Play_NoADClick: "0",
ColorEggsUI_Check_NoADClick: "0",
MyMusic_NoADClick: "0",
DailyMusic_NoADClick: "0",
Card1UI_NoADClick: "0",
Card2UI_NoADClick: "0",
Card3UI_NoADClick: "0",
Card4UI_NoADClick: "0",
More_NoADClick: "0",
GuessYouLikeUI_Change: "0",
HotMusicUI_Change: "0",
NewMusicUI_Change: "0",
GuessYouLikeUI_Play: "0",
PassMusicUI_NoADClick: "0",
CollectMusicUI_NoADClick: "0",
TodayGiftUI_NoADClick: "0",
GameUI_Role_Use: "0"
};
break;

case "Ad_Click_V2":
o = {
MainUI_Role_ADClick: "0",
MainUI_FastPlay_ADClick: "0",
MainUI_EveryDayMusic_ADPlay: "0",
MainUI_EveryWeekMusic_ADPlay: "0",
MainUI_TikTokMusic_ADPlay: "0",
MainUI_AllPlayMusic_ADPlay: "0",
MainUI_GamePlay_ADPlay: "0",
LifeUI_ADClick: "0",
ConstellationUI_ADClick: "0",
ReviveUI_ADClick: "0",
TwoReviveUI_Daily_ADClick: "0",
TwoReviveUI_Life_ADClick: "0",
LoseUI_NewMusic_ADClick: "0",
WinUI_NewMusic_ADClick: "0",
ColorEggsUI_Check_ADClick: "0",
CoinUI_ADClick: "0",
DiademaUI_ADClick: "0",
ShopUI_Role__ADClick: "0",
ShopUI_Scene__ADClick: "0",
SignUI_Double_ADClick: "0",
YoursRecommendUI_ADClick: "0",
CollectMusicUI_ADClick: "0",
DailyMusic_ADClick: "0",
Card1UI_ADClick: "0",
Card2UI_ADClick: "0",
Card3UI_ADClick: "0",
Card4UI_ADClick: "0",
GuessYouLikeUI_ADClick: "0",
HotMusicUI_ADClick: "0",
NewMusicUI_ADClick: "0",
TodayGiftUI_ADClick: "0",
GameUI_Role_ADClick: "0"
};
}
o[t] = i;
console.log("事件分析     " + e, t);
"undefined" != typeof tt ? tt.reportAnalytics(e, o) : 5 == window.platform && n.default.getInstance().reportAnalytics(e, o);
};
return e;
}();
i.default = s;
cc._RF.pop();
}, {
"./../../SDK/ASCAd": "ASCAd"
} ],
sdkConfig: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "f390cS558lJB50EXdSRkDXT", "sdkConfig");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function e() {
this.channelId = "1234666";
}
e.getInstance = function() {
e.instance || (e.instance = new e());
return e.instance;
};
e.SDKVersion = "version_333_2";
e.APPID = "0";
return e;
}();
i.default = o;
cc._RF.pop();
}, {} ],
use_reversed_rotateBy: [ function(e, t, i) {
"use strict";
cc._RF.push(t, "b336bkH+OFMdaUqjeYEkvwx", "use_reversed_rotateBy");
cc.RotateBy._reverse = !0;
cc._RF.pop();
}, {} ],
"use_v2.1-2.2.1_cc.Toggle_event": [ function(e, t, i) {
"use strict";
cc._RF.push(t, "275adz3L3ZFV79AgorrPVGE", "use_v2.1-2.2.1_cc.Toggle_event");
cc.Toggle && (cc.Toggle._triggerEventInScript_isChecked = !0);
cc._RF.pop();
}, {} ]
}, {}, [ "ASCAd", "TestCocos", "IntersController", "IntersOppo", "IntersQQ", "IntersTest", "IntersTiktok", "IntersVivo", "IntersWX", "IntersXM", "BannerController", "BannerOppo", "BannerQQ", "BannerTest", "BannerTiktok", "BannerVivo", "BannerWX", "BlockController", "BlockQQ", "BlockTest", "BlockWX", "BoxController", "NativeController", "NativeHW", "NativeOppo", "NativeTest", "NativeVivo", "NativeWX", "VideoController", "VideoHW", "VideoKS", "VideoOppo", "VideoQQ", "VideoTest", "VideoTiktok", "VideoVivo", "VideoWX", "VideoXM", "NavigateController", "NavigateTest", "NavigateWX", "Network", "RecordAndShare", "sdkConfig", "OtherFunctions", "SdkTools", "CocosUI", "AchieveNodeJS", "MusicJS", "CamerNodeJS", "CanvasJS", "ColectMusicJS", "ConstellationJS", "CrownListNodeJS", "CrownMusicJS", "CrownNodeJS", "CrownStoreJS", "CustomButtonJS", "DailyMissonJS", "DiamondNodeJS", "FaceTipsJS", "FaillNodeJS", "FavourPageJS", "FollwNodeJS", "GameNodeJS", "GetRoleAnimJS", "GuideBlockJS", "GuideGameJS", "GuideMainConJS", "GuideModelSelectJS", "GuideTipsJS", "AudioSourcesMamager", "CustomPageView", "DonaldManager", "GuideSourcesManager", "NewPageView", "NestableScrollView_Inner", "NestableScrollView_Outer", "NewPageView_Inner", "audioEngineMamager", "reportAnalytics", "CardJS", "EndJS", "GiftJS", "HotJS", "LikeJS", "OtherJS", "HomeNode", "LimitNodeJS", "LoadingJS", "ModelSelectJS", "MusicListNodeJS", "MusicLoadingNode", "MyMusicJS", "NewCrownStoreJS", "NewHomeNodeJS", "NewModelSelectJS", "NewrecommendJS", "NewsBoradJS", "PowerNodeJS", "AppNodeJS", "BlockJS", "CDJS", "CardPrefabJS", "CardRecommendJS", "CardSelectJS", "ChangeHighNodeJS", "CrownJS", "CrownMusicListJS", "DateGiftJS", "EffectMoveJS", "EggShellBaseJS", "EggShellNodeJS", "EndMaskNodeJS", "FirstTipsNodeJS", "GetVideoNodeJS", "GiftCodeJS", "LineJS", "LoadingNodeJS", "LogoFabJS", "ModelRolebgJS", "ModelScenebgJS", "MusicNodeJS", "NewCDJS", "NewChangeHighNodeJS", "NewRolebgJS", "NewScenebgJS", "OtherSelectJS", "RecommondMusicJS", "RoadJS", "RoafLightJS", "RoleBgJS", "RoleDataJS", "RoleSelectConJS", "RoleTipsBgJS", "SceneFabJS", "Scenebg2JS", "ScenebgJS", "SearchListJS", "TuijianBgJS", "VideoBgJS", "missionSelectJS", "musicSelectJS", "perviewCDJS", "RecordNodeJS", "ReliveNode", "RoleSelectJS", "AndroidSDK", "IosSDK", "Tools", "SearchNodeJS", "SelectSenceJS", "SignNodeJS", "SuperTipsNodeJS", "TopJS", "VideoRankNodeJS", "WinNodeJS ", "XingZuoTipsJS", "XuanChuanNodeJS", "achievebgJS", "recordButtonJS", "GaussianBlur", "HollowOut", "SineWave", "EditorAsset", "use_reversed_rotateBy", "use_v2.1-2.2.1_cc.Toggle_event", "messgaeTS", "SetAnim" ]);