import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

android {
    compileSdkVersion PROP_COMPILE_SDK_VERSION.toInteger()
    buildToolsVersion PROP_BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "com.xplaygame.xuancaijiezousand.nearme.gamecenter"
        minSdkVersion PROP_MIN_SDK_VERSION
        targetSdkVersion PROP_TARGET_SDK_VERSION
        versionCode 13
        versionName "1.1.2"
        multiDexEnabled true
        useLibrary 'org.apache.http.legacy'

        externalNativeBuild {
            ndkBuild {
                if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                    // skip the NDK Build step if PROP_NDK_MODE is none
                    targets 'cocos2djs'
                    arguments 'NDK_TOOLCHAIN_VERSION=clang'
                    
                    def module_paths = [project.file("C:/CocosDashboard_1.0.8/Creator/2.3.4/resources/cocos2d-x"),
                                        project.file("C:/CocosDashboard_1.0.8/Creator/2.3.4/resources/cocos2d-x/cocos"),
                                        project.file("C:/CocosDashboard_1.0.8/Creator/2.3.4/resources/cocos2d-x/external")]
                    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(";")
                    }
                    else {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(':')
                    }

                    arguments '-j' + Runtime.runtime.availableProcessors()
                    abiFilters.addAll(PROP_APP_ABI.split(':').collect{it as String})
                }
            }
        }
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi-v7a' //,'x86', 'armeabi', 'x86_64','arm64-v8a'
        }
    }

    sourceSets.main {
        assets.srcDirs =['assets']
        java.srcDirs "../src", "src"
        res.srcDirs "../res", 'res'
        jniLibs.srcDirs "../libs", 'libs'
        manifest.srcFile "AndroidManifest.xml"
    }

    externalNativeBuild {
        ndkBuild {
            if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                // skip the NDK Build step if PROP_NDK_MODE is none
                path "jni/Android.mk"
            }
        }
    }

    signingConfigs {

       release {
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
        debug {
            storeFile file('D:\\YuXin\\博文签名\\Sg3.keystore')
            storePassword 'morefuntek'
            keyPassword 'morefuntek'
            keyAlias 'Sg3.keystore'
        }
    }

    dexOptions {
        preDexLibraries = false
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }

            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=0'
                }
            }
        }

        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=1'
                }
            }
        }
    }
}

android.applicationVariants.all { variant ->
    // delete previous files first
    delete "${buildDir}/intermediates/merged_assets/${variant.dirName}"

    variant.mergeAssets.doLast {
        def sourceDir = "${buildDir}/../../../../.."

        copy {
            from "${sourceDir}/res"
            into "${outputDir}/res"
        }

        copy {
            from "${sourceDir}/subpackages"
            into "${outputDir}/subpackages"
        }

        copy {
            from "${sourceDir}/src"
            into "${outputDir}/src"
        }

        copy {
            from "${sourceDir}/jsb-adapter"
            into "${outputDir}/jsb-adapter"
        }

        copy {
            from "${sourceDir}/main.js"
            from "${sourceDir}/project.json"
            into outputDir
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    //implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
    implementation fileTree(dir: "C:/CocosDashboard_1.0.8/Creator/2.3.4/resources/cocos2d-x/cocos/platform/android/java/libs", include: ['*.jar'])
    implementation project(':libcocos2dx')

    implementation project(':xgame_ad')

//    /**sdk**/
//    implementation 'com.github.bumptech.glide:glide:4.9.0'
//    implementation files('libs\\okio-1.15.0.jar')
//    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
//    implementation 'com.android.support:multidex:1.0.3'
//    implementation files('libs\\gson-2.7.jar')
//    // Oppo 广告sdk
//    implementation files('libs\\wire-runtime-2.2.0.jar')
//    implementation files('libs\\android-query-full.0.26.7.jar')
//    implementation(name: 'mobad_normal_pub_351_2020_05_14', ext: 'aar')
//
//    implementation 'com.android.support:appcompat-v7:26+'
//
//    // oppo 单机sdk
//    implementation (name: 'gamesdk-20200610', ext: 'aar')
//
//    // umeng
//    //implementation files('libs\\lenovo-opendeviceid.jar')
//    implementation files('libs\\mi-deviceid.jar')
//    //implementation files('libs\\oppo-openid-sdk-1.0.4.jar')
//    implementation files('libs\\umeng-common-9.1.3.jar')
//    implementation files('libs\\utdid4all-1.5.2-proguard.jar')
//    implementation files('libs\\vivoId-1.0.0.1.jar')
//    implementation(name: 'umeng-crash-armeabi-v0.0.5', ext: 'aar')
//    implementation(name: 'umeng-asms-armeabi-v1.1.3', ext: 'aar')
}
